

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 06 16:25:06 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	_HEFregion_text,global,class=STRCODE,delta=2,noexec
    13                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	text19,local,class=CODE,merge=1,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2
    51                           	psect	text21,local,class=CODE,merge=1,delta=2
    52                           	psect	text22,local,class=CODE,merge=1,delta=2
    53                           	psect	text23,local,class=CODE,merge=1,delta=2
    54                           	psect	text24,local,class=CODE,merge=1,delta=2
    55                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text28,local,class=CODE,merge=1,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,delta=2
    61                           	psect	text31,local,class=CODE,merge=1,delta=2
    62                           	psect	text32,local,class=CODE,merge=1,delta=2
    63                           	psect	text33,local,class=CODE,merge=1,delta=2
    64                           	psect	text34,local,class=CODE,merge=1,delta=2
    65                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text36,local,class=CODE,merge=1,delta=2
    67                           	psect	text37,local,class=CODE,merge=1,delta=2
    68                           	psect	text38,local,class=CODE,merge=1,delta=2
    69                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text41,local,class=CODE,merge=1,delta=2
    72                           	psect	text42,local,class=CODE,merge=1,delta=2
    73                           	psect	text43,local,class=CODE,merge=1,delta=2
    74                           	psect	text44,local,class=CODE,merge=1,delta=2
    75                           	psect	text45,local,class=CODE,merge=1,delta=2
    76                           	psect	text46,local,class=CODE,merge=1,delta=2
    77                           	psect	text47,local,class=CODE,merge=1,delta=2
    78                           	psect	text48,local,class=CODE,merge=1,delta=2
    79                           	psect	text49,local,class=CODE,merge=1,delta=2
    80                           	psect	text50,local,class=CODE,merge=1,delta=2
    81                           	psect	text51,local,class=CODE,merge=1,delta=2
    82                           	psect	text52,local,class=CODE,merge=1,delta=2
    83                           	psect	text53,local,class=CODE,merge=1,delta=2
    84                           	psect	text54,local,class=CODE,merge=1,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text64,local,class=CODE,merge=1,delta=2
    95                           	psect	text65,local,class=CODE,merge=1,delta=2
    96                           	psect	text66,local,class=CODE,merge=1,delta=2
    97                           	psect	text67,local,class=CODE,merge=1,delta=2
    98                           	psect	text68,local,class=CODE,merge=1,delta=2
    99                           	psect	text69,local,class=CODE,merge=1,delta=2
   100                           	psect	text70,local,class=CODE,merge=1,delta=2
   101                           	psect	text71,local,class=CODE,merge=1,delta=2
   102                           	psect	text72,local,class=CODE,merge=1,delta=2
   103                           	psect	text73,local,class=CODE,merge=1,delta=2
   104                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text77,local,class=CODE,merge=1,delta=2
   108                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text81,local,class=CODE,merge=1,delta=2
   112                           	psect	text82,local,class=CODE,merge=1,delta=2
   113                           	psect	text83,local,class=CODE,merge=1,delta=2
   114                           	psect	text84,local,class=CODE,merge=1,delta=2
   115                           	psect	intentry,global,class=CODE,delta=2
   116                           	psect	text86,local,class=CODE,merge=1,delta=2
   117                           	psect	text87,local,class=CODE,merge=1,delta=2
   118                           	psect	text88,local,class=CODE,merge=1,delta=2
   119                           	psect	text89,local,class=CODE,merge=1,delta=2
   120                           	psect	text90,local,class=CODE,merge=1,delta=2
   121                           	psect	text91,local,class=CODE,merge=1,delta=2
   122                           	psect	text92,local,class=CODE,merge=1,delta=2
   123                           	psect	text93,local,class=CODE,merge=1,delta=2
   124                           	psect	text94,local,class=CODE,merge=1,delta=2
   125                           	psect	text95,local,class=CODE,merge=1,delta=2
   126                           	psect	text96,local,class=CODE,merge=1,delta=2
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   129                           	dabs	1,0x7E,2
   130  0000                     
   131                           ; Version 2.40
   132                           ; Generated 17/11/2021 GMT
   133                           ; 
   134                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   135                           ; All rights reserved.
   136                           ; 
   137                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   138                           ; 
   139                           ; Redistribution and use in source and binary forms, with or without modification, are
   140                           ; permitted provided that the following conditions are met:
   141                           ; 
   142                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   143                           ;        conditions and the following disclaimer.
   144                           ; 
   145                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   146                           ;        of conditions and the following disclaimer in the documentation and/or other
   147                           ;        materials provided with the distribution. Publication is not required when
   148                           ;        this file is used in an embedded application.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC16F1509 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  0111                     	;# 
   214  0112                     	;# 
   215  0113                     	;# 
   216  0114                     	;# 
   217  0115                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0118                     	;# 
   221  0119                     	;# 
   222  011D                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  020D                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0391                     	;# 
   261  0392                     	;# 
   262  0393                     	;# 
   263  0394                     	;# 
   264  0395                     	;# 
   265  0396                     	;# 
   266  0498                     	;# 
   267  0498                     	;# 
   268  0499                     	;# 
   269  049A                     	;# 
   270  049B                     	;# 
   271  049B                     	;# 
   272  049C                     	;# 
   273  049D                     	;# 
   274  049E                     	;# 
   275  049F                     	;# 
   276  0611                     	;# 
   277  0612                     	;# 
   278  0613                     	;# 
   279  0613                     	;# 
   280  0614                     	;# 
   281  0615                     	;# 
   282  0616                     	;# 
   283  0616                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061B                     	;# 
   290  061C                     	;# 
   291  061C                     	;# 
   292  0691                     	;# 
   293  0692                     	;# 
   294  0693                     	;# 
   295  0694                     	;# 
   296  0695                     	;# 
   297  0F0F                     	;# 
   298  0F10                     	;# 
   299  0F11                     	;# 
   300  0F12                     	;# 
   301  0F13                     	;# 
   302  0F14                     	;# 
   303  0F15                     	;# 
   304  0F16                     	;# 
   305  0F17                     	;# 
   306  0F18                     	;# 
   307  0F19                     	;# 
   308  0F1A                     	;# 
   309  0F1B                     	;# 
   310  0F1C                     	;# 
   311  0F1D                     	;# 
   312  0F1E                     	;# 
   313  0F1F                     	;# 
   314  0F20                     	;# 
   315  0F21                     	;# 
   316  0F22                     	;# 
   317  0F23                     	;# 
   318  0F24                     	;# 
   319  0F25                     	;# 
   320  0F26                     	;# 
   321  0F27                     	;# 
   322  0F28                     	;# 
   323  0F29                     	;# 
   324  0F2A                     	;# 
   325  0F2B                     	;# 
   326  0F2C                     	;# 
   327  0F2D                     	;# 
   328  0F2E                     	;# 
   329  0F2F                     	;# 
   330  0F8C                     	;# 
   331  0F8D                     	;# 
   332  0F91                     	;# 
   333  0F95                     	;# 
   334  0F96                     	;# 
   335  0F97                     	;# 
   336  0F9C                     	;# 
   337  0F9D                     	;# 
   338  0F9E                     	;# 
   339  0FE3                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0095                     	;# 
   385  0096                     	;# 
   386  0097                     	;# 
   387  0099                     	;# 
   388  009A                     	;# 
   389  009B                     	;# 
   390  009B                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  0111                     	;# 
   399  0112                     	;# 
   400  0113                     	;# 
   401  0114                     	;# 
   402  0115                     	;# 
   403  0116                     	;# 
   404  0117                     	;# 
   405  0118                     	;# 
   406  0119                     	;# 
   407  011D                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  018E                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  019A                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019C                     	;# 
   425  019D                     	;# 
   426  019E                     	;# 
   427  019F                     	;# 
   428  020C                     	;# 
   429  020D                     	;# 
   430  0211                     	;# 
   431  0211                     	;# 
   432  0212                     	;# 
   433  0212                     	;# 
   434  0213                     	;# 
   435  0213                     	;# 
   436  0214                     	;# 
   437  0214                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0216                     	;# 
   442  0216                     	;# 
   443  0217                     	;# 
   444  0217                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0394                     	;# 
   449  0395                     	;# 
   450  0396                     	;# 
   451  0498                     	;# 
   452  0498                     	;# 
   453  0499                     	;# 
   454  049A                     	;# 
   455  049B                     	;# 
   456  049B                     	;# 
   457  049C                     	;# 
   458  049D                     	;# 
   459  049E                     	;# 
   460  049F                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0617                     	;# 
   470  0618                     	;# 
   471  0619                     	;# 
   472  0619                     	;# 
   473  061A                     	;# 
   474  061B                     	;# 
   475  061C                     	;# 
   476  061C                     	;# 
   477  0691                     	;# 
   478  0692                     	;# 
   479  0693                     	;# 
   480  0694                     	;# 
   481  0695                     	;# 
   482  0F0F                     	;# 
   483  0F10                     	;# 
   484  0F11                     	;# 
   485  0F12                     	;# 
   486  0F13                     	;# 
   487  0F14                     	;# 
   488  0F15                     	;# 
   489  0F16                     	;# 
   490  0F17                     	;# 
   491  0F18                     	;# 
   492  0F19                     	;# 
   493  0F1A                     	;# 
   494  0F1B                     	;# 
   495  0F1C                     	;# 
   496  0F1D                     	;# 
   497  0F1E                     	;# 
   498  0F1F                     	;# 
   499  0F20                     	;# 
   500  0F21                     	;# 
   501  0F22                     	;# 
   502  0F23                     	;# 
   503  0F24                     	;# 
   504  0F25                     	;# 
   505  0F26                     	;# 
   506  0F27                     	;# 
   507  0F28                     	;# 
   508  0F29                     	;# 
   509  0F2A                     	;# 
   510  0F2B                     	;# 
   511  0F2C                     	;# 
   512  0F2D                     	;# 
   513  0F2E                     	;# 
   514  0F2F                     	;# 
   515  0F8C                     	;# 
   516  0F8D                     	;# 
   517  0F91                     	;# 
   518  0F95                     	;# 
   519  0F96                     	;# 
   520  0F97                     	;# 
   521  0F9C                     	;# 
   522  0F9D                     	;# 
   523  0F9E                     	;# 
   524  0FE3                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  010E                     	;# 
   583  0111                     	;# 
   584  0112                     	;# 
   585  0113                     	;# 
   586  0114                     	;# 
   587  0115                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  0118                     	;# 
   591  0119                     	;# 
   592  011D                     	;# 
   593  018C                     	;# 
   594  018D                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  0211                     	;# 
   616  0211                     	;# 
   617  0212                     	;# 
   618  0212                     	;# 
   619  0213                     	;# 
   620  0213                     	;# 
   621  0214                     	;# 
   622  0214                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0216                     	;# 
   627  0216                     	;# 
   628  0217                     	;# 
   629  0217                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  0498                     	;# 
   637  0498                     	;# 
   638  0499                     	;# 
   639  049A                     	;# 
   640  049B                     	;# 
   641  049B                     	;# 
   642  049C                     	;# 
   643  049D                     	;# 
   644  049E                     	;# 
   645  049F                     	;# 
   646  0611                     	;# 
   647  0612                     	;# 
   648  0613                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0615                     	;# 
   652  0616                     	;# 
   653  0616                     	;# 
   654  0617                     	;# 
   655  0618                     	;# 
   656  0619                     	;# 
   657  0619                     	;# 
   658  061A                     	;# 
   659  061B                     	;# 
   660  061C                     	;# 
   661  061C                     	;# 
   662  0691                     	;# 
   663  0692                     	;# 
   664  0693                     	;# 
   665  0694                     	;# 
   666  0695                     	;# 
   667  0F0F                     	;# 
   668  0F10                     	;# 
   669  0F11                     	;# 
   670  0F12                     	;# 
   671  0F13                     	;# 
   672  0F14                     	;# 
   673  0F15                     	;# 
   674  0F16                     	;# 
   675  0F17                     	;# 
   676  0F18                     	;# 
   677  0F19                     	;# 
   678  0F1A                     	;# 
   679  0F1B                     	;# 
   680  0F1C                     	;# 
   681  0F1D                     	;# 
   682  0F1E                     	;# 
   683  0F1F                     	;# 
   684  0F20                     	;# 
   685  0F21                     	;# 
   686  0F22                     	;# 
   687  0F23                     	;# 
   688  0F24                     	;# 
   689  0F25                     	;# 
   690  0F26                     	;# 
   691  0F27                     	;# 
   692  0F28                     	;# 
   693  0F29                     	;# 
   694  0F2A                     	;# 
   695  0F2B                     	;# 
   696  0F2C                     	;# 
   697  0F2D                     	;# 
   698  0F2E                     	;# 
   699  0F2F                     	;# 
   700  0F8C                     	;# 
   701  0F8D                     	;# 
   702  0F91                     	;# 
   703  0F95                     	;# 
   704  0F96                     	;# 
   705  0F97                     	;# 
   706  0F9C                     	;# 
   707  0F9D                     	;# 
   708  0F9E                     	;# 
   709  0FE3                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0099                     	;# 
   758  009A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  0111                     	;# 
   769  0112                     	;# 
   770  0113                     	;# 
   771  0114                     	;# 
   772  0115                     	;# 
   773  0116                     	;# 
   774  0117                     	;# 
   775  0118                     	;# 
   776  0119                     	;# 
   777  011D                     	;# 
   778  018C                     	;# 
   779  018D                     	;# 
   780  018E                     	;# 
   781  0191                     	;# 
   782  0191                     	;# 
   783  0192                     	;# 
   784  0193                     	;# 
   785  0193                     	;# 
   786  0194                     	;# 
   787  0195                     	;# 
   788  0196                     	;# 
   789  0197                     	;# 
   790  0199                     	;# 
   791  019A                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0216                     	;# 
   812  0216                     	;# 
   813  0217                     	;# 
   814  0217                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  0498                     	;# 
   822  0498                     	;# 
   823  0499                     	;# 
   824  049A                     	;# 
   825  049B                     	;# 
   826  049B                     	;# 
   827  049C                     	;# 
   828  049D                     	;# 
   829  049E                     	;# 
   830  049F                     	;# 
   831  0611                     	;# 
   832  0612                     	;# 
   833  0613                     	;# 
   834  0613                     	;# 
   835  0614                     	;# 
   836  0615                     	;# 
   837  0616                     	;# 
   838  0616                     	;# 
   839  0617                     	;# 
   840  0618                     	;# 
   841  0619                     	;# 
   842  0619                     	;# 
   843  061A                     	;# 
   844  061B                     	;# 
   845  061C                     	;# 
   846  061C                     	;# 
   847  0691                     	;# 
   848  0692                     	;# 
   849  0693                     	;# 
   850  0694                     	;# 
   851  0695                     	;# 
   852  0F0F                     	;# 
   853  0F10                     	;# 
   854  0F11                     	;# 
   855  0F12                     	;# 
   856  0F13                     	;# 
   857  0F14                     	;# 
   858  0F15                     	;# 
   859  0F16                     	;# 
   860  0F17                     	;# 
   861  0F18                     	;# 
   862  0F19                     	;# 
   863  0F1A                     	;# 
   864  0F1B                     	;# 
   865  0F1C                     	;# 
   866  0F1D                     	;# 
   867  0F1E                     	;# 
   868  0F1F                     	;# 
   869  0F20                     	;# 
   870  0F21                     	;# 
   871  0F22                     	;# 
   872  0F23                     	;# 
   873  0F24                     	;# 
   874  0F25                     	;# 
   875  0F26                     	;# 
   876  0F27                     	;# 
   877  0F28                     	;# 
   878  0F29                     	;# 
   879  0F2A                     	;# 
   880  0F2B                     	;# 
   881  0F2C                     	;# 
   882  0F2D                     	;# 
   883  0F2E                     	;# 
   884  0F2F                     	;# 
   885  0F8C                     	;# 
   886  0F8D                     	;# 
   887  0F91                     	;# 
   888  0F95                     	;# 
   889  0F96                     	;# 
   890  0F97                     	;# 
   891  0F9C                     	;# 
   892  0F9D                     	;# 
   893  0F9E                     	;# 
   894  0FE3                     	;# 
   895  0FE4                     	;# 
   896  0FE5                     	;# 
   897  0FE6                     	;# 
   898  0FE7                     	;# 
   899  0FE8                     	;# 
   900  0FE9                     	;# 
   901  0FEA                     	;# 
   902  0FEB                     	;# 
   903  0FED                     	;# 
   904  0FEE                     	;# 
   905  0FEF                     	;# 
   906  0000                     	;# 
   907  0001                     	;# 
   908  0002                     	;# 
   909  0003                     	;# 
   910  0004                     	;# 
   911  0005                     	;# 
   912  0006                     	;# 
   913  0007                     	;# 
   914  0008                     	;# 
   915  0009                     	;# 
   916  000A                     	;# 
   917  000B                     	;# 
   918  000C                     	;# 
   919  000D                     	;# 
   920  000E                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0015                     	;# 
   925  0016                     	;# 
   926  0016                     	;# 
   927  0017                     	;# 
   928  0018                     	;# 
   929  0019                     	;# 
   930  001A                     	;# 
   931  001B                     	;# 
   932  001C                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  008E                     	;# 
   936  0091                     	;# 
   937  0092                     	;# 
   938  0093                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0099                     	;# 
   943  009A                     	;# 
   944  009B                     	;# 
   945  009B                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  009F                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  010E                     	;# 
   953  0111                     	;# 
   954  0112                     	;# 
   955  0113                     	;# 
   956  0114                     	;# 
   957  0115                     	;# 
   958  0116                     	;# 
   959  0117                     	;# 
   960  0118                     	;# 
   961  0119                     	;# 
   962  011D                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  018E                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019D                     	;# 
   981  019E                     	;# 
   982  019F                     	;# 
   983  020C                     	;# 
   984  020D                     	;# 
   985  0211                     	;# 
   986  0211                     	;# 
   987  0212                     	;# 
   988  0212                     	;# 
   989  0213                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0214                     	;# 
   993  0215                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0216                     	;# 
   997  0216                     	;# 
   998  0217                     	;# 
   999  0217                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0498                     	;# 
  1007  0498                     	;# 
  1008  0499                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  0611                     	;# 
  1017  0612                     	;# 
  1018  0613                     	;# 
  1019  0613                     	;# 
  1020  0614                     	;# 
  1021  0615                     	;# 
  1022  0616                     	;# 
  1023  0616                     	;# 
  1024  0617                     	;# 
  1025  0618                     	;# 
  1026  0619                     	;# 
  1027  0619                     	;# 
  1028  061A                     	;# 
  1029  061B                     	;# 
  1030  061C                     	;# 
  1031  061C                     	;# 
  1032  0691                     	;# 
  1033  0692                     	;# 
  1034  0693                     	;# 
  1035  0694                     	;# 
  1036  0695                     	;# 
  1037  0F0F                     	;# 
  1038  0F10                     	;# 
  1039  0F11                     	;# 
  1040  0F12                     	;# 
  1041  0F13                     	;# 
  1042  0F14                     	;# 
  1043  0F15                     	;# 
  1044  0F16                     	;# 
  1045  0F17                     	;# 
  1046  0F18                     	;# 
  1047  0F19                     	;# 
  1048  0F1A                     	;# 
  1049  0F1B                     	;# 
  1050  0F1C                     	;# 
  1051  0F1D                     	;# 
  1052  0F1E                     	;# 
  1053  0F1F                     	;# 
  1054  0F20                     	;# 
  1055  0F21                     	;# 
  1056  0F22                     	;# 
  1057  0F23                     	;# 
  1058  0F24                     	;# 
  1059  0F25                     	;# 
  1060  0F26                     	;# 
  1061  0F27                     	;# 
  1062  0F28                     	;# 
  1063  0F29                     	;# 
  1064  0F2A                     	;# 
  1065  0F2B                     	;# 
  1066  0F2C                     	;# 
  1067  0F2D                     	;# 
  1068  0F2E                     	;# 
  1069  0F2F                     	;# 
  1070  0F8C                     	;# 
  1071  0F8D                     	;# 
  1072  0F91                     	;# 
  1073  0F95                     	;# 
  1074  0F96                     	;# 
  1075  0F97                     	;# 
  1076  0F9C                     	;# 
  1077  0F9D                     	;# 
  1078  0F9E                     	;# 
  1079  0FE3                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0011                     	;# 
  1107  0012                     	;# 
  1108  0013                     	;# 
  1109  0015                     	;# 
  1110  0016                     	;# 
  1111  0016                     	;# 
  1112  0017                     	;# 
  1113  0018                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  0091                     	;# 
  1122  0092                     	;# 
  1123  0093                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0099                     	;# 
  1128  009A                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  009F                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0115                     	;# 
  1143  0116                     	;# 
  1144  0117                     	;# 
  1145  0118                     	;# 
  1146  0119                     	;# 
  1147  011D                     	;# 
  1148  018C                     	;# 
  1149  018D                     	;# 
  1150  018E                     	;# 
  1151  0191                     	;# 
  1152  0191                     	;# 
  1153  0192                     	;# 
  1154  0193                     	;# 
  1155  0193                     	;# 
  1156  0194                     	;# 
  1157  0195                     	;# 
  1158  0196                     	;# 
  1159  0197                     	;# 
  1160  0199                     	;# 
  1161  019A                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019C                     	;# 
  1165  019D                     	;# 
  1166  019E                     	;# 
  1167  019F                     	;# 
  1168  020C                     	;# 
  1169  020D                     	;# 
  1170  0211                     	;# 
  1171  0211                     	;# 
  1172  0212                     	;# 
  1173  0212                     	;# 
  1174  0213                     	;# 
  1175  0213                     	;# 
  1176  0214                     	;# 
  1177  0214                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0391                     	;# 
  1186  0392                     	;# 
  1187  0393                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  0498                     	;# 
  1192  0498                     	;# 
  1193  0499                     	;# 
  1194  049A                     	;# 
  1195  049B                     	;# 
  1196  049B                     	;# 
  1197  049C                     	;# 
  1198  049D                     	;# 
  1199  049E                     	;# 
  1200  049F                     	;# 
  1201  0611                     	;# 
  1202  0612                     	;# 
  1203  0613                     	;# 
  1204  0613                     	;# 
  1205  0614                     	;# 
  1206  0615                     	;# 
  1207  0616                     	;# 
  1208  0616                     	;# 
  1209  0617                     	;# 
  1210  0618                     	;# 
  1211  0619                     	;# 
  1212  0619                     	;# 
  1213  061A                     	;# 
  1214  061B                     	;# 
  1215  061C                     	;# 
  1216  061C                     	;# 
  1217  0691                     	;# 
  1218  0692                     	;# 
  1219  0693                     	;# 
  1220  0694                     	;# 
  1221  0695                     	;# 
  1222  0F0F                     	;# 
  1223  0F10                     	;# 
  1224  0F11                     	;# 
  1225  0F12                     	;# 
  1226  0F13                     	;# 
  1227  0F14                     	;# 
  1228  0F15                     	;# 
  1229  0F16                     	;# 
  1230  0F17                     	;# 
  1231  0F18                     	;# 
  1232  0F19                     	;# 
  1233  0F1A                     	;# 
  1234  0F1B                     	;# 
  1235  0F1C                     	;# 
  1236  0F1D                     	;# 
  1237  0F1E                     	;# 
  1238  0F1F                     	;# 
  1239  0F20                     	;# 
  1240  0F21                     	;# 
  1241  0F22                     	;# 
  1242  0F23                     	;# 
  1243  0F24                     	;# 
  1244  0F25                     	;# 
  1245  0F26                     	;# 
  1246  0F27                     	;# 
  1247  0F28                     	;# 
  1248  0F29                     	;# 
  1249  0F2A                     	;# 
  1250  0F2B                     	;# 
  1251  0F2C                     	;# 
  1252  0F2D                     	;# 
  1253  0F2E                     	;# 
  1254  0F2F                     	;# 
  1255  0F8C                     	;# 
  1256  0F8D                     	;# 
  1257  0F91                     	;# 
  1258  0F95                     	;# 
  1259  0F96                     	;# 
  1260  0F97                     	;# 
  1261  0F9C                     	;# 
  1262  0F9D                     	;# 
  1263  0F9E                     	;# 
  1264  0FE3                     	;# 
  1265  0FE4                     	;# 
  1266  0FE5                     	;# 
  1267  0FE6                     	;# 
  1268  0FE7                     	;# 
  1269  0FE8                     	;# 
  1270  0FE9                     	;# 
  1271  0FEA                     	;# 
  1272  0FEB                     	;# 
  1273  0FED                     	;# 
  1274  0FEE                     	;# 
  1275  0FEF                     	;# 
  1276  0000                     	;# 
  1277  0001                     	;# 
  1278  0002                     	;# 
  1279  0003                     	;# 
  1280  0004                     	;# 
  1281  0005                     	;# 
  1282  0006                     	;# 
  1283  0007                     	;# 
  1284  0008                     	;# 
  1285  0009                     	;# 
  1286  000A                     	;# 
  1287  000B                     	;# 
  1288  000C                     	;# 
  1289  000D                     	;# 
  1290  000E                     	;# 
  1291  0011                     	;# 
  1292  0012                     	;# 
  1293  0013                     	;# 
  1294  0015                     	;# 
  1295  0016                     	;# 
  1296  0016                     	;# 
  1297  0017                     	;# 
  1298  0018                     	;# 
  1299  0019                     	;# 
  1300  001A                     	;# 
  1301  001B                     	;# 
  1302  001C                     	;# 
  1303  008C                     	;# 
  1304  008D                     	;# 
  1305  008E                     	;# 
  1306  0091                     	;# 
  1307  0092                     	;# 
  1308  0093                     	;# 
  1309  0095                     	;# 
  1310  0096                     	;# 
  1311  0097                     	;# 
  1312  0099                     	;# 
  1313  009A                     	;# 
  1314  009B                     	;# 
  1315  009B                     	;# 
  1316  009C                     	;# 
  1317  009D                     	;# 
  1318  009E                     	;# 
  1319  009F                     	;# 
  1320  010C                     	;# 
  1321  010D                     	;# 
  1322  010E                     	;# 
  1323  0111                     	;# 
  1324  0112                     	;# 
  1325  0113                     	;# 
  1326  0114                     	;# 
  1327  0115                     	;# 
  1328  0116                     	;# 
  1329  0117                     	;# 
  1330  0118                     	;# 
  1331  0119                     	;# 
  1332  011D                     	;# 
  1333  018C                     	;# 
  1334  018D                     	;# 
  1335  018E                     	;# 
  1336  0191                     	;# 
  1337  0191                     	;# 
  1338  0192                     	;# 
  1339  0193                     	;# 
  1340  0193                     	;# 
  1341  0194                     	;# 
  1342  0195                     	;# 
  1343  0196                     	;# 
  1344  0197                     	;# 
  1345  0199                     	;# 
  1346  019A                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019C                     	;# 
  1350  019D                     	;# 
  1351  019E                     	;# 
  1352  019F                     	;# 
  1353  020C                     	;# 
  1354  020D                     	;# 
  1355  0211                     	;# 
  1356  0211                     	;# 
  1357  0212                     	;# 
  1358  0212                     	;# 
  1359  0213                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0216                     	;# 
  1367  0216                     	;# 
  1368  0217                     	;# 
  1369  0217                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0498                     	;# 
  1377  0498                     	;# 
  1378  0499                     	;# 
  1379  049A                     	;# 
  1380  049B                     	;# 
  1381  049B                     	;# 
  1382  049C                     	;# 
  1383  049D                     	;# 
  1384  049E                     	;# 
  1385  049F                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  0615                     	;# 
  1392  0616                     	;# 
  1393  0616                     	;# 
  1394  0617                     	;# 
  1395  0618                     	;# 
  1396  0619                     	;# 
  1397  0619                     	;# 
  1398  061A                     	;# 
  1399  061B                     	;# 
  1400  061C                     	;# 
  1401  061C                     	;# 
  1402  0691                     	;# 
  1403  0692                     	;# 
  1404  0693                     	;# 
  1405  0694                     	;# 
  1406  0695                     	;# 
  1407  0F0F                     	;# 
  1408  0F10                     	;# 
  1409  0F11                     	;# 
  1410  0F12                     	;# 
  1411  0F13                     	;# 
  1412  0F14                     	;# 
  1413  0F15                     	;# 
  1414  0F16                     	;# 
  1415  0F17                     	;# 
  1416  0F18                     	;# 
  1417  0F19                     	;# 
  1418  0F1A                     	;# 
  1419  0F1B                     	;# 
  1420  0F1C                     	;# 
  1421  0F1D                     	;# 
  1422  0F1E                     	;# 
  1423  0F1F                     	;# 
  1424  0F20                     	;# 
  1425  0F21                     	;# 
  1426  0F22                     	;# 
  1427  0F23                     	;# 
  1428  0F24                     	;# 
  1429  0F25                     	;# 
  1430  0F26                     	;# 
  1431  0F27                     	;# 
  1432  0F28                     	;# 
  1433  0F29                     	;# 
  1434  0F2A                     	;# 
  1435  0F2B                     	;# 
  1436  0F2C                     	;# 
  1437  0F2D                     	;# 
  1438  0F2E                     	;# 
  1439  0F2F                     	;# 
  1440  0F8C                     	;# 
  1441  0F8D                     	;# 
  1442  0F91                     	;# 
  1443  0F95                     	;# 
  1444  0F96                     	;# 
  1445  0F97                     	;# 
  1446  0F9C                     	;# 
  1447  0F9D                     	;# 
  1448  0F9E                     	;# 
  1449  0FE3                     	;# 
  1450  0FE4                     	;# 
  1451  0FE5                     	;# 
  1452  0FE6                     	;# 
  1453  0FE7                     	;# 
  1454  0FE8                     	;# 
  1455  0FE9                     	;# 
  1456  0FEA                     	;# 
  1457  0FEB                     	;# 
  1458  0FED                     	;# 
  1459  0FEE                     	;# 
  1460  0FEF                     	;# 
  1461  0000                     	;# 
  1462  0001                     	;# 
  1463  0002                     	;# 
  1464  0003                     	;# 
  1465  0004                     	;# 
  1466  0005                     	;# 
  1467  0006                     	;# 
  1468  0007                     	;# 
  1469  0008                     	;# 
  1470  0009                     	;# 
  1471  000A                     	;# 
  1472  000B                     	;# 
  1473  000C                     	;# 
  1474  000D                     	;# 
  1475  000E                     	;# 
  1476  0011                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  001A                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  008C                     	;# 
  1489  008D                     	;# 
  1490  008E                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0093                     	;# 
  1494  0095                     	;# 
  1495  0096                     	;# 
  1496  0097                     	;# 
  1497  0099                     	;# 
  1498  009A                     	;# 
  1499  009B                     	;# 
  1500  009B                     	;# 
  1501  009C                     	;# 
  1502  009D                     	;# 
  1503  009E                     	;# 
  1504  009F                     	;# 
  1505  010C                     	;# 
  1506  010D                     	;# 
  1507  010E                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  011D                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  018E                     	;# 
  1521  0191                     	;# 
  1522  0191                     	;# 
  1523  0192                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0197                     	;# 
  1530  0199                     	;# 
  1531  019A                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019D                     	;# 
  1536  019E                     	;# 
  1537  019F                     	;# 
  1538  020C                     	;# 
  1539  020D                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0216                     	;# 
  1552  0216                     	;# 
  1553  0217                     	;# 
  1554  0217                     	;# 
  1555  0391                     	;# 
  1556  0392                     	;# 
  1557  0393                     	;# 
  1558  0394                     	;# 
  1559  0395                     	;# 
  1560  0396                     	;# 
  1561  0498                     	;# 
  1562  0498                     	;# 
  1563  0499                     	;# 
  1564  049A                     	;# 
  1565  049B                     	;# 
  1566  049B                     	;# 
  1567  049C                     	;# 
  1568  049D                     	;# 
  1569  049E                     	;# 
  1570  049F                     	;# 
  1571  0611                     	;# 
  1572  0612                     	;# 
  1573  0613                     	;# 
  1574  0613                     	;# 
  1575  0614                     	;# 
  1576  0615                     	;# 
  1577  0616                     	;# 
  1578  0616                     	;# 
  1579  0617                     	;# 
  1580  0618                     	;# 
  1581  0619                     	;# 
  1582  0619                     	;# 
  1583  061A                     	;# 
  1584  061B                     	;# 
  1585  061C                     	;# 
  1586  061C                     	;# 
  1587  0691                     	;# 
  1588  0692                     	;# 
  1589  0693                     	;# 
  1590  0694                     	;# 
  1591  0695                     	;# 
  1592  0F0F                     	;# 
  1593  0F10                     	;# 
  1594  0F11                     	;# 
  1595  0F12                     	;# 
  1596  0F13                     	;# 
  1597  0F14                     	;# 
  1598  0F15                     	;# 
  1599  0F16                     	;# 
  1600  0F17                     	;# 
  1601  0F18                     	;# 
  1602  0F19                     	;# 
  1603  0F1A                     	;# 
  1604  0F1B                     	;# 
  1605  0F1C                     	;# 
  1606  0F1D                     	;# 
  1607  0F1E                     	;# 
  1608  0F1F                     	;# 
  1609  0F20                     	;# 
  1610  0F21                     	;# 
  1611  0F22                     	;# 
  1612  0F23                     	;# 
  1613  0F24                     	;# 
  1614  0F25                     	;# 
  1615  0F26                     	;# 
  1616  0F27                     	;# 
  1617  0F28                     	;# 
  1618  0F29                     	;# 
  1619  0F2A                     	;# 
  1620  0F2B                     	;# 
  1621  0F2C                     	;# 
  1622  0F2D                     	;# 
  1623  0F2E                     	;# 
  1624  0F2F                     	;# 
  1625  0F8C                     	;# 
  1626  0F8D                     	;# 
  1627  0F91                     	;# 
  1628  0F95                     	;# 
  1629  0F96                     	;# 
  1630  0F97                     	;# 
  1631  0F9C                     	;# 
  1632  0F9D                     	;# 
  1633  0F9E                     	;# 
  1634  0FE3                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0015                     	;# 
  1665  0016                     	;# 
  1666  0016                     	;# 
  1667  0017                     	;# 
  1668  0018                     	;# 
  1669  0019                     	;# 
  1670  001A                     	;# 
  1671  001B                     	;# 
  1672  001C                     	;# 
  1673  008C                     	;# 
  1674  008D                     	;# 
  1675  008E                     	;# 
  1676  0091                     	;# 
  1677  0092                     	;# 
  1678  0093                     	;# 
  1679  0095                     	;# 
  1680  0096                     	;# 
  1681  0097                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  009F                     	;# 
  1690  010C                     	;# 
  1691  010D                     	;# 
  1692  010E                     	;# 
  1693  0111                     	;# 
  1694  0112                     	;# 
  1695  0113                     	;# 
  1696  0114                     	;# 
  1697  0115                     	;# 
  1698  0116                     	;# 
  1699  0117                     	;# 
  1700  0118                     	;# 
  1701  0119                     	;# 
  1702  011D                     	;# 
  1703  018C                     	;# 
  1704  018D                     	;# 
  1705  018E                     	;# 
  1706  0191                     	;# 
  1707  0191                     	;# 
  1708  0192                     	;# 
  1709  0193                     	;# 
  1710  0193                     	;# 
  1711  0194                     	;# 
  1712  0195                     	;# 
  1713  0196                     	;# 
  1714  0197                     	;# 
  1715  0199                     	;# 
  1716  019A                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019C                     	;# 
  1720  019D                     	;# 
  1721  019E                     	;# 
  1722  019F                     	;# 
  1723  020C                     	;# 
  1724  020D                     	;# 
  1725  0211                     	;# 
  1726  0211                     	;# 
  1727  0212                     	;# 
  1728  0212                     	;# 
  1729  0213                     	;# 
  1730  0213                     	;# 
  1731  0214                     	;# 
  1732  0214                     	;# 
  1733  0215                     	;# 
  1734  0215                     	;# 
  1735  0215                     	;# 
  1736  0216                     	;# 
  1737  0216                     	;# 
  1738  0217                     	;# 
  1739  0217                     	;# 
  1740  0391                     	;# 
  1741  0392                     	;# 
  1742  0393                     	;# 
  1743  0394                     	;# 
  1744  0395                     	;# 
  1745  0396                     	;# 
  1746  0498                     	;# 
  1747  0498                     	;# 
  1748  0499                     	;# 
  1749  049A                     	;# 
  1750  049B                     	;# 
  1751  049B                     	;# 
  1752  049C                     	;# 
  1753  049D                     	;# 
  1754  049E                     	;# 
  1755  049F                     	;# 
  1756  0611                     	;# 
  1757  0612                     	;# 
  1758  0613                     	;# 
  1759  0613                     	;# 
  1760  0614                     	;# 
  1761  0615                     	;# 
  1762  0616                     	;# 
  1763  0616                     	;# 
  1764  0617                     	;# 
  1765  0618                     	;# 
  1766  0619                     	;# 
  1767  0619                     	;# 
  1768  061A                     	;# 
  1769  061B                     	;# 
  1770  061C                     	;# 
  1771  061C                     	;# 
  1772  0691                     	;# 
  1773  0692                     	;# 
  1774  0693                     	;# 
  1775  0694                     	;# 
  1776  0695                     	;# 
  1777  0F0F                     	;# 
  1778  0F10                     	;# 
  1779  0F11                     	;# 
  1780  0F12                     	;# 
  1781  0F13                     	;# 
  1782  0F14                     	;# 
  1783  0F15                     	;# 
  1784  0F16                     	;# 
  1785  0F17                     	;# 
  1786  0F18                     	;# 
  1787  0F19                     	;# 
  1788  0F1A                     	;# 
  1789  0F1B                     	;# 
  1790  0F1C                     	;# 
  1791  0F1D                     	;# 
  1792  0F1E                     	;# 
  1793  0F1F                     	;# 
  1794  0F20                     	;# 
  1795  0F21                     	;# 
  1796  0F22                     	;# 
  1797  0F23                     	;# 
  1798  0F24                     	;# 
  1799  0F25                     	;# 
  1800  0F26                     	;# 
  1801  0F27                     	;# 
  1802  0F28                     	;# 
  1803  0F29                     	;# 
  1804  0F2A                     	;# 
  1805  0F2B                     	;# 
  1806  0F2C                     	;# 
  1807  0F2D                     	;# 
  1808  0F2E                     	;# 
  1809  0F2F                     	;# 
  1810  0F8C                     	;# 
  1811  0F8D                     	;# 
  1812  0F91                     	;# 
  1813  0F95                     	;# 
  1814  0F96                     	;# 
  1815  0F97                     	;# 
  1816  0F9C                     	;# 
  1817  0F9D                     	;# 
  1818  0F9E                     	;# 
  1819  0FE3                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  008C                     	;# 
  1859  008D                     	;# 
  1860  008E                     	;# 
  1861  0091                     	;# 
  1862  0092                     	;# 
  1863  0093                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0099                     	;# 
  1868  009A                     	;# 
  1869  009B                     	;# 
  1870  009B                     	;# 
  1871  009C                     	;# 
  1872  009D                     	;# 
  1873  009E                     	;# 
  1874  009F                     	;# 
  1875  010C                     	;# 
  1876  010D                     	;# 
  1877  010E                     	;# 
  1878  0111                     	;# 
  1879  0112                     	;# 
  1880  0113                     	;# 
  1881  0114                     	;# 
  1882  0115                     	;# 
  1883  0116                     	;# 
  1884  0117                     	;# 
  1885  0118                     	;# 
  1886  0119                     	;# 
  1887  011D                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  0191                     	;# 
  1892  0191                     	;# 
  1893  0192                     	;# 
  1894  0193                     	;# 
  1895  0193                     	;# 
  1896  0194                     	;# 
  1897  0195                     	;# 
  1898  0196                     	;# 
  1899  0197                     	;# 
  1900  0199                     	;# 
  1901  019A                     	;# 
  1902  019B                     	;# 
  1903  019B                     	;# 
  1904  019C                     	;# 
  1905  019D                     	;# 
  1906  019E                     	;# 
  1907  019F                     	;# 
  1908  020C                     	;# 
  1909  020D                     	;# 
  1910  0211                     	;# 
  1911  0211                     	;# 
  1912  0212                     	;# 
  1913  0212                     	;# 
  1914  0213                     	;# 
  1915  0213                     	;# 
  1916  0214                     	;# 
  1917  0214                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0215                     	;# 
  1921  0216                     	;# 
  1922  0216                     	;# 
  1923  0217                     	;# 
  1924  0217                     	;# 
  1925  0391                     	;# 
  1926  0392                     	;# 
  1927  0393                     	;# 
  1928  0394                     	;# 
  1929  0395                     	;# 
  1930  0396                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0611                     	;# 
  1942  0612                     	;# 
  1943  0613                     	;# 
  1944  0613                     	;# 
  1945  0614                     	;# 
  1946  0615                     	;# 
  1947  0616                     	;# 
  1948  0616                     	;# 
  1949  0617                     	;# 
  1950  0618                     	;# 
  1951  0619                     	;# 
  1952  0619                     	;# 
  1953  061A                     	;# 
  1954  061B                     	;# 
  1955  061C                     	;# 
  1956  061C                     	;# 
  1957  0691                     	;# 
  1958  0692                     	;# 
  1959  0693                     	;# 
  1960  0694                     	;# 
  1961  0695                     	;# 
  1962  0F0F                     	;# 
  1963  0F10                     	;# 
  1964  0F11                     	;# 
  1965  0F12                     	;# 
  1966  0F13                     	;# 
  1967  0F14                     	;# 
  1968  0F15                     	;# 
  1969  0F16                     	;# 
  1970  0F17                     	;# 
  1971  0F18                     	;# 
  1972  0F19                     	;# 
  1973  0F1A                     	;# 
  1974  0F1B                     	;# 
  1975  0F1C                     	;# 
  1976  0F1D                     	;# 
  1977  0F1E                     	;# 
  1978  0F1F                     	;# 
  1979  0F20                     	;# 
  1980  0F21                     	;# 
  1981  0F22                     	;# 
  1982  0F23                     	;# 
  1983  0F24                     	;# 
  1984  0F25                     	;# 
  1985  0F26                     	;# 
  1986  0F27                     	;# 
  1987  0F28                     	;# 
  1988  0F29                     	;# 
  1989  0F2A                     	;# 
  1990  0F2B                     	;# 
  1991  0F2C                     	;# 
  1992  0F2D                     	;# 
  1993  0F2E                     	;# 
  1994  0F2F                     	;# 
  1995  0F8C                     	;# 
  1996  0F8D                     	;# 
  1997  0F91                     	;# 
  1998  0F95                     	;# 
  1999  0F96                     	;# 
  2000  0F97                     	;# 
  2001  0F9C                     	;# 
  2002  0F9D                     	;# 
  2003  0F9E                     	;# 
  2004  0FE3                     	;# 
  2005  0FE4                     	;# 
  2006  0FE5                     	;# 
  2007  0FE6                     	;# 
  2008  0FE7                     	;# 
  2009  0FE8                     	;# 
  2010  0FE9                     	;# 
  2011  0FEA                     	;# 
  2012  0FEB                     	;# 
  2013  0FED                     	;# 
  2014  0FEE                     	;# 
  2015  0FEF                     	;# 
  2016                           
  2017 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2018  0000                     
  2019 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2020  0000                     
  2021 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2022  0000                     
  2023                           	psect	idataBANK0
  2024  0002                     __pidataBANK0:
  2025                           
  2026                           ;initializer for _crcModbusSlave
  2027  0002  34FF               	retlw	255
  2028  0003  34FF               	retlw	255
  2029  1FE0                     _HEFregion_absaddr	set	8160
  2030                           
  2031                           	psect	stringtext1
  2032  1800                     __pstringtext1:
  2033  1800                     _i2c_fsmStateTable:
  2034  1800  34D9               	retlw	low _I2C_DO_IDLE
  2035  1801  341C               	retlw	high _I2C_DO_IDLE
  2036  1802  341B               	retlw	low _I2C_DO_SEND_ADR_READ
  2037  1803  341D               	retlw	high _I2C_DO_SEND_ADR_READ
  2038  1804  3414               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2039  1805  341D               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2040  1806  34C6               	retlw	low _I2C_DO_TX
  2041  1807  3411               	retlw	high _I2C_DO_TX
  2042  1808  347F               	retlw	low _I2C_DO_RX
  2043  1809  3411               	retlw	high _I2C_DO_RX
  2044  180A  34EF               	retlw	low _I2C_DO_RCEN
  2045  180B  341C               	retlw	high _I2C_DO_RCEN
  2046  180C  346B               	retlw	low _I2C_DO_TX_EMPTY
  2047  180D  3410               	retlw	high _I2C_DO_TX_EMPTY
  2048  180E  34AD               	retlw	low _I2C_DO_SEND_RESTART_READ
  2049  180F  341C               	retlw	high _I2C_DO_SEND_RESTART_READ
  2050  1810  34B1               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2051  1811  341C               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2052  1812  34B5               	retlw	low _I2C_DO_SEND_RESTART
  2053  1813  341C               	retlw	high _I2C_DO_SEND_RESTART
  2054  1814  34B9               	retlw	low _I2C_DO_SEND_STOP
  2055  1815  341C               	retlw	high _I2C_DO_SEND_STOP
  2056  1816  34BD               	retlw	low _I2C_DO_RX_ACK
  2057  1817  341C               	retlw	high _I2C_DO_RX_ACK
  2058  1818  34C1               	retlw	low _I2C_DO_RX_NACK_STOP
  2059  1819  341C               	retlw	high _I2C_DO_RX_NACK_STOP
  2060  181A  34C5               	retlw	low _I2C_DO_RX_NACK_RESTART
  2061  181B  341C               	retlw	high _I2C_DO_RX_NACK_RESTART
  2062  181C  34DE               	retlw	low _I2C_DO_RESET
  2063  181D  341C               	retlw	high _I2C_DO_RESET
  2064  181E  349A               	retlw	low _I2C_DO_ADDRESS_NACK
  2065  181F  3410               	retlw	high _I2C_DO_ADDRESS_NACK
  2066  1820                     __end_of_i2c_fsmStateTable:
  2067                           
  2068                           	psect	stringtext2
  2069  1820                     __pstringtext2:
  2070  1820                     _Lg4:
  2071  1820  3426               	retlw	38
  2072  1821  349E               	retlw	158
  2073  1822  3478               	retlw	120
  2074  1823  343E               	retlw	62
  2075  1824                     __end_of_Lg4:
  2076                           
  2077                           	psect	stringtext3
  2078  1824                     __pstringtext3:
  2079  1824                     _Lg3:
  2080  1824  34EE               	retlw	238
  2081  1825  34E9               	retlw	233
  2082  1826  3491               	retlw	145
  2083  1827  343E               	retlw	62
  2084  1828                     __end_of_Lg3:
  2085                           
  2086                           	psect	stringtext4
  2087  1828                     __pstringtext4:
  2088  1828                     _Lg2:
  2089  1828  3413               	retlw	19
  2090  1829  34CE               	retlw	206
  2091  182A  34CC               	retlw	204
  2092  182B  343E               	retlw	62
  2093  182C                     __end_of_Lg2:
  2094                           
  2095                           	psect	stringtext5
  2096  182C                     __pstringtext5:
  2097  182C                     _Lg1:
  2098  182C  34AA               	retlw	170
  2099  182D  34AA               	retlw	170
  2100  182E  342A               	retlw	42
  2101  182F  343F               	retlw	63
  2102  1830                     __end_of_Lg1:
  2103                           
  2104                           	psect	stringtext6
  2105  1830                     __pstringtext6:
  2106  1830                     _ln2_lo:
  2107  1830  34D1               	retlw	209
  2108  1831  34F7               	retlw	247
  2109  1832  3417               	retlw	23
  2110  1833  3437               	retlw	55
  2111  1834                     __end_of_ln2_lo:
  2112                           
  2113                           	psect	stringtext7
  2114  1834                     __pstringtext7:
  2115  1834                     _ln2_hi:
  2116  1834  3480               	retlw	128
  2117  1835  3471               	retlw	113
  2118  1836  3431               	retlw	49
  2119  1837  343F               	retlw	63
  2120  1838                     __end_of_ln2_hi:
  2121  1FE0                     _HEFregion_absaddr	set	8160
  2122                           
  2123                           	psect	_HEFregion_text
  2124  1FE0                     __p_HEFregion_text:
  2125  1FE0                     _HEFregion:
  2126  1FE0  3400               	retlw	0
  2127  1FE1  3400               	retlw	0
  2128  1FE2  3400               	retlw	0
  2129  1FE3  3400               	retlw	0
  2130  1FE4  3400               	retlw	0
  2131  1FE5  3400               	retlw	0
  2132  1FE6  3400               	retlw	0
  2133  1FE7  3400               	retlw	0
  2134  1FE8  3400               	retlw	0
  2135  1FE9  3400               	retlw	0
  2136  1FEA  3400               	retlw	0
  2137  1FEB  3400               	retlw	0
  2138  1FEC  3400               	retlw	0
  2139  1FED  3400               	retlw	0
  2140  1FEE  3400               	retlw	0
  2141  1FEF  3400               	retlw	0
  2142  1FF0  3400               	retlw	0
  2143  1FF1  3400               	retlw	0
  2144  1FF2  3400               	retlw	0
  2145  1FF3  3400               	retlw	0
  2146  1FF4  3400               	retlw	0
  2147  1FF5  3400               	retlw	0
  2148  1FF6  3400               	retlw	0
  2149  1FF7  3400               	retlw	0
  2150  1FF8  3400               	retlw	0
  2151  1FF9  3400               	retlw	0
  2152  1FFA  3400               	retlw	0
  2153  1FFB  3400               	retlw	0
  2154  1FFC  3400               	retlw	0
  2155  1FFD  3400               	retlw	0
  2156  1FFE  3400               	retlw	0
  2157  1FFF  3400               	retlw	0
  2158  2000  3400               	retlw	0
  2159  2001  3400               	retlw	0
  2160  2002  3400               	retlw	0
  2161  2003  3400               	retlw	0
  2162  2004  3400               	retlw	0
  2163  2005  3400               	retlw	0
  2164  2006  3400               	retlw	0
  2165  2007  3400               	retlw	0
  2166  2008  3400               	retlw	0
  2167  2009  3400               	retlw	0
  2168  200A  3400               	retlw	0
  2169  200B  3400               	retlw	0
  2170  200C  3400               	retlw	0
  2171  200D  3400               	retlw	0
  2172  200E  3400               	retlw	0
  2173  200F  3400               	retlw	0
  2174  2010  3400               	retlw	0
  2175  2011  3400               	retlw	0
  2176  2012  3400               	retlw	0
  2177  2013  3400               	retlw	0
  2178  2014  3400               	retlw	0
  2179  2015  3400               	retlw	0
  2180  2016  3400               	retlw	0
  2181  2017  3400               	retlw	0
  2182  2018  3400               	retlw	0
  2183  2019  3400               	retlw	0
  2184  201A  3400               	retlw	0
  2185  201B  3400               	retlw	0
  2186  201C  3400               	retlw	0
  2187  201D  3400               	retlw	0
  2188  201E  3400               	retlw	0
  2189  201F  3400               	retlw	0
  2190  2020                     __end_of_HEFregion:
  2191                           
  2192                           	psect	nvBANK0
  2193  005C                     __pnvBANK0:
  2194  005C                     _TMR0_InterruptHandler:
  2195  005C                     	ds	2
  2196  005E                     _TMR1_InterruptHandler:
  2197  005E                     	ds	2
  2198  0060                     _timer1ReloadVal:
  2199  0060                     	ds	2
  2200  0062                     _timer0ReloadVal:
  2201  0062                     	ds	1
  2202  0063                     _eusartTxBufferRemaining:
  2203  0063                     	ds	1
  2204                           
  2205                           	psect	nvBANK3
  2206  01EC                     __pnvBANK3:
  2207  01EC                     _EUSART_RxDefaultInterruptHandler:
  2208  01EC                     	ds	2
  2209  01EE                     _EUSART_TxDefaultInterruptHandler:
  2210  01EE                     	ds	2
  2211                           
  2212                           	psect	nvBANK4
  2213  025D                     __pnvBANK4:
  2214  025D                     _EUSART_ErrorHandler:
  2215  025D                     	ds	2
  2216  025F                     _EUSART_OverrunErrorHandler:
  2217  025F                     	ds	2
  2218  0261                     _EUSART_FramingErrorHandler:
  2219  0261                     	ds	2
  2220  0015                     _TMR0	set	21
  2221  0019                     _T1GCONbits	set	25
  2222  0018                     _T1CONbits	set	24
  2223  0018                     _T1CON	set	24
  2224  0016                     _TMR1L	set	22
  2225  0017                     _TMR1H	set	23
  2226  0019                     _T1GCON	set	25
  2227  0012                     _PIR2bits	set	18
  2228  0011                     _PIR1bits	set	17
  2229  000B                     _INTCONbits	set	11
  2230  0095                     _OPTION_REG	set	149
  2231  0097                     _WDTCON	set	151
  2232  0099                     _OSCCON	set	153
  2233  0095                     _OPTION_REGbits	set	149
  2234  008E                     _TRISC	set	142
  2235  008D                     _TRISB	set	141
  2236  008C                     _TRISA	set	140
  2237  0091                     _PIE1bits	set	145
  2238  010E                     _LATCbits	set	270
  2239  0116                     _BORCON	set	278
  2240  011D                     _APFCON	set	285
  2241  010E                     _LATC	set	270
  2242  010D                     _LATB	set	269
  2243  010C                     _LATA	set	268
  2244  0196                     _PMCON2	set	406
  2245  0193                     _PMDATL	set	403
  2246  0194                     _PMDATH	set	404
  2247  0195                     _PMCON1bits	set	405
  2248  0192                     _PMADRH	set	402
  2249  0191                     _PMADRL	set	401
  2250  0199                     _RCREG	set	409
  2251  019D                     _RCSTAbits	set	413
  2252  019A                     _TXREG	set	410
  2253  019E                     _TXSTAbits	set	414
  2254  019C                     _SPBRGH	set	412
  2255  019B                     _SPBRGL	set	411
  2256  019E                     _TXSTA	set	414
  2257  019D                     _RCSTA	set	413
  2258  019F                     _BAUDCON	set	415
  2259  018C                     _ANSELA	set	396
  2260  018D                     _ANSELB	set	397
  2261  018E                     _ANSELC	set	398
  2262  0214                     _SSP1STATbits	set	532
  2263  0216                     _SSP1CON2bits	set	534
  2264  0211                     _SSP1BUF	set	529
  2265  0215                     _SSP1CON1bits	set	533
  2266  0212                     _SSP1ADD	set	530
  2267  0216                     _SSP1CON2	set	534
  2268  0215                     _SSP1CON1	set	533
  2269  0214                     _SSP1STAT	set	532
  2270  020C                     _WPUA	set	524
  2271  020D                     _WPUB	set	525
  2272                           
  2273                           	psect	cinit
  2274  0035                     start_initialization:	
  2275                           ; #config settings
  2276                           
  2277  0035                     __initialization:
  2278                           
  2279                           ; Initialize objects allocated to BANK0
  2280  0035  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  2281  0038  00E4               	movwf	__pdataBANK0& (0+127)
  2282  0039  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2283  003C  00E5               	movwf	(__pdataBANK0+1)& (0+127)
  2284                           
  2285                           ; Clear objects allocated to COMMON
  2286  003D  01FC               	clrf	__pbssCOMMON& (0+127)
  2287  003E  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2288                           
  2289                           ; Clear objects allocated to BANK0
  2290  003F  3051               	movlw	low __pbssBANK0
  2291  0040  0084               	movwf	4
  2292  0041  3000               	movlw	high __pbssBANK0
  2293  0042  0085               	movwf	5
  2294  0043  300B               	movlw	11
  2295  0044  319D  2507  3180   	fcall	clear_ram0
  2296                           
  2297                           ; Clear objects allocated to BANK2
  2298  0047  0022               	movlb	2	; select bank2
  2299  0048  01EE               	clrf	__pbssBANK2& (0+127)
  2300  0049  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  2301                           
  2302                           ; Clear objects allocated to BANK3
  2303  004A  30A0               	movlw	low __pbssBANK3
  2304  004B  0084               	movwf	4
  2305  004C  3001               	movlw	high __pbssBANK3
  2306  004D  0085               	movwf	5
  2307  004E  3032               	movlw	50
  2308  004F  319D  2507  3180   	fcall	clear_ram0
  2309                           
  2310                           ; Clear objects allocated to BANK4
  2311  0052  3020               	movlw	low __pbssBANK4
  2312  0053  0084               	movwf	4
  2313  0054  3002               	movlw	high __pbssBANK4
  2314  0055  0085               	movwf	5
  2315  0056  303D               	movlw	61
  2316  0057  319D  2507  3180   	fcall	clear_ram0
  2317                           
  2318                           ; Clear objects allocated to BANK5
  2319  005A  30A0               	movlw	low __pbssBANK5
  2320  005B  0084               	movwf	4
  2321  005C  3002               	movlw	high __pbssBANK5
  2322  005D  0085               	movwf	5
  2323  005E  3050               	movlw	80
  2324  005F  319D  2507         	fcall	clear_ram0
  2325  0061                     end_of_initialization:	
  2326                           ;End of C runtime variable initialization code
  2327                           
  2328  0061                     __end_of__initialization:
  2329  0061  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2330  0062  0020               	movlb	0
  2331  0063  318D  2D0F         	ljmp	_main	;jump to C main() function
  2332                           
  2333                           	psect	bssCOMMON
  2334  007C                     __pbssCOMMON:
  2335  007C                     _eusartRxCount:
  2336  007C                     	ds	1
  2337  007D                     _eusartRxTail:
  2338  007D                     	ds	1
  2339                           
  2340                           	psect	bssBANK0
  2341  0051                     __pbssBANK0:
  2342  0051                     logf@F472:
  2343  0051                     	ds	4
  2344  0055                     MCP3422_ReadVoltage@F4487:
  2345  0055                     	ds	3
  2346  0058                     _eusartRxLastError:
  2347  0058                     	ds	1
  2348  0059                     _eusartRxHead:
  2349  0059                     	ds	1
  2350  005A                     _eusartTxTail:
  2351  005A                     	ds	1
  2352  005B                     _eusartTxHead:
  2353  005B                     	ds	1
  2354                           
  2355                           	psect	dataBANK0
  2356  0064                     __pdataBANK0:
  2357  0064                     _crcModbusSlave:
  2358  0064                     	ds	2
  2359                           
  2360                           	psect	bssBANK2
  2361  016E                     __pbssBANK2:
  2362  016E                     _errno:
  2363  016E                     	ds	2
  2364                           
  2365                           	psect	bssBANK3
  2366  01A0                     __pbssBANK3:
  2367  01A0                     _modbusSlaveData:
  2368  01A0                     	ds	45
  2369  01CD                     _tempNTC:
  2370  01CD                     	ds	4
  2371  01D1                     _bCalMode:
  2372  01D1                     	ds	1
  2373                           
  2374                           	psect	bssBANK4
  2375  0220                     __pbssBANK4:
  2376  0220                     _I2C_Status:
  2377  0220                     	ds	29
  2378  023D                     _eusartRxStatusBuffer:
  2379  023D                     	ds	16
  2380  024D                     _eusartRxBuffer:
  2381  024D                     	ds	16
  2382                           
  2383                           	psect	bssBANK5
  2384  02A0                     __pbssBANK5:
  2385  02A0                     _eusartTxBuffer:
  2386  02A0                     	ds	64
  2387  02E0                     main@F4497:
  2388  02E0                     	ds	16
  2389                           
  2390                           	psect	clrtext
  2391  1D07                     clear_ram0:	
  2392                           ;	Called with FSR0 containing the base address, and
  2393                           ;	WREG with the size to clear
  2394                           
  2395  1D07  0064               	clrwdt	;clear the watchdog before getting into this loop
  2396  1D08                     clrloop0:
  2397  1D08  0180               	clrf	0	;clear RAM location pointed to by FSR
  2398  1D09  3101               	addfsr 0,1
  2399  1D0A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2400  1D0B  2D08               	goto	clrloop0	;have we reached the end yet?
  2401  1D0C  3400               	retlw	0	;all done for this memory range, return
  2402                           
  2403                           	psect	cstackBANK3
  2404  01D2                     __pcstackBANK3:
  2405  01D2                     main@u16TdVal:
  2406                           
  2407                           ; 2 bytes @ 0x0
  2408  01D2                     	ds	2
  2409  01D4                     main@fNtcVoltage:
  2410                           
  2411                           ; 4 bytes @ 0x2
  2412  01D4                     	ds	4
  2413  01D8                     main@u16CalBuffer:
  2414                           
  2415                           ; 16 bytes @ 0x6
  2416  01D8                     	ds	16
  2417  01E8                     main@fTdVoltage:
  2418                           
  2419                           ; 4 bytes @ 0x16
  2420  01E8                     	ds	4
  2421                           
  2422                           	psect	cstackBANK2
  2423  0120                     __pcstackBANK2:
  2424  0120                     ?_map:
  2425  0120                     map@x:	
  2426                           ; 4 bytes @ 0x0
  2427                           
  2428  0120                     logf@R:	
  2429                           ; 4 bytes @ 0x0
  2430                           
  2431                           
  2432                           ; 4 bytes @ 0x0
  2433  0120                     	ds	4
  2434  0124                     map@in_min:
  2435  0124                     logf@t1:	
  2436                           ; 4 bytes @ 0x4
  2437                           
  2438                           
  2439                           ; 4 bytes @ 0x4
  2440  0124                     	ds	4
  2441  0128                     map@in_max:
  2442  0128                     logf@t2:	
  2443                           ; 4 bytes @ 0x8
  2444                           
  2445                           
  2446                           ; 4 bytes @ 0x8
  2447  0128                     	ds	4
  2448  012C                     map@out_min:
  2449  012C                     _logf$2278:	
  2450                           ; 4 bytes @ 0xC
  2451                           
  2452                           
  2453                           ; 4 bytes @ 0xC
  2454  012C                     	ds	4
  2455  0130                     map@out_max:
  2456  0130                     _logf$2279:	
  2457                           ; 4 bytes @ 0x10
  2458                           
  2459                           
  2460                           ; 4 bytes @ 0x10
  2461  0130                     	ds	4
  2462  0134                     _logf$2280:
  2463                           
  2464                           ; 4 bytes @ 0x14
  2465  0134                     	ds	4
  2466  0138                     _logf$2281:
  2467                           
  2468                           ; 4 bytes @ 0x18
  2469  0138                     	ds	4
  2470  013C                     logf@k:
  2471                           
  2472                           ; 2 bytes @ 0x1C
  2473  013C                     	ds	2
  2474  013E                     logf@hfsq:
  2475                           
  2476                           ; 4 bytes @ 0x1E
  2477  013E                     	ds	4
  2478  0142                     logf@dk:
  2479                           
  2480                           ; 4 bytes @ 0x22
  2481  0142                     	ds	4
  2482  0146                     logf@s:
  2483                           
  2484                           ; 4 bytes @ 0x26
  2485  0146                     	ds	4
  2486  014A                     logf@z:
  2487                           
  2488                           ; 4 bytes @ 0x2A
  2489  014A                     	ds	4
  2490  014E                     logf@w:
  2491                           
  2492                           ; 4 bytes @ 0x2E
  2493  014E                     	ds	4
  2494  0152                     _logf$2277:
  2495                           
  2496                           ; 4 bytes @ 0x32
  2497  0152                     	ds	4
  2498  0156                     logf@u:
  2499                           
  2500                           ; 4 bytes @ 0x36
  2501  0156                     	ds	4
  2502  015A                     logf@f:
  2503                           
  2504                           ; 4 bytes @ 0x3A
  2505  015A                     	ds	4
  2506  015E                     logf@ix:
  2507                           
  2508                           ; 4 bytes @ 0x3E
  2509  015E                     	ds	4
  2510  0162                     get_ntc_temperature@rntc:
  2511                           
  2512                           ; 4 bytes @ 0x42
  2513  0162                     	ds	4
  2514  0166                     _get_ntc_temperature$2276:
  2515                           
  2516                           ; 4 bytes @ 0x46
  2517  0166                     	ds	4
  2518  016A                     get_ntc_temperature@temp:
  2519                           
  2520                           ; 4 bytes @ 0x4A
  2521  016A                     	ds	4
  2522                           
  2523                           	psect	cstackBANK1
  2524  00A0                     __pcstackBANK1:
  2525  00A0                     ?___flsub:
  2526  00A0                     ___flsub@a:	
  2527                           ; 4 bytes @ 0x0
  2528                           
  2529                           
  2530                           ; 4 bytes @ 0x0
  2531  00A0                     	ds	4
  2532  00A4                     ___flsub@b:
  2533                           
  2534                           ; 4 bytes @ 0x4
  2535  00A4                     	ds	4
  2536  00A8                     ?___flmul:
  2537  00A8                     ___flmul@b:	
  2538                           ; 4 bytes @ 0x8
  2539                           
  2540                           
  2541                           ; 4 bytes @ 0x8
  2542  00A8                     	ds	4
  2543  00AC                     ___flmul@a:
  2544                           
  2545                           ; 4 bytes @ 0xC
  2546  00AC                     	ds	4
  2547  00B0                     ___flmul@sign:
  2548                           
  2549                           ; 1 bytes @ 0x10
  2550  00B0                     	ds	1
  2551  00B1                     ___flmul@aexp:
  2552                           
  2553                           ; 1 bytes @ 0x11
  2554  00B1                     	ds	1
  2555  00B2                     ___flmul@grs:
  2556                           
  2557                           ; 4 bytes @ 0x12
  2558  00B2                     	ds	4
  2559  00B6                     ___flmul@bexp:
  2560                           
  2561                           ; 1 bytes @ 0x16
  2562  00B6                     	ds	1
  2563  00B7                     ___flmul@prod:
  2564                           
  2565                           ; 4 bytes @ 0x17
  2566  00B7                     	ds	4
  2567  00BB                     ___flmul@temp:
  2568                           
  2569                           ; 2 bytes @ 0x1B
  2570  00BB                     	ds	2
  2571  00BD                     ?_MCP3422_ReadVoltage:
  2572  00BD                     ?___fldiv:	
  2573                           ; 4 bytes @ 0x1D
  2574                           
  2575  00BD                     ___fldiv@a:	
  2576                           ; 4 bytes @ 0x1D
  2577                           
  2578                           
  2579                           ; 4 bytes @ 0x1D
  2580  00BD                     	ds	4
  2581  00C1                     ??_MCP3422_ReadVoltage:
  2582  00C1                     ___fldiv@b:	
  2583                           ; 1 bytes @ 0x21
  2584                           
  2585                           
  2586                           ; 4 bytes @ 0x21
  2587  00C1                     	ds	4
  2588  00C5                     ??___fldiv:
  2589  00C5                     MCP3422_ReadVoltage@channel:	
  2590                           ; 1 bytes @ 0x25
  2591                           
  2592                           
  2593                           ; 1 bytes @ 0x25
  2594  00C5                     	ds	1
  2595  00C6                     MCP3422_ReadVoltage@data:
  2596                           
  2597                           ; 3 bytes @ 0x26
  2598  00C6                     	ds	3
  2599  00C9                     MCP3422_ReadVoltage@adc_value:
  2600                           
  2601                           ; 4 bytes @ 0x29
  2602  00C9                     	ds	1
  2603  00CA                     ___fldiv@rem:
  2604                           
  2605                           ; 4 bytes @ 0x2A
  2606  00CA                     	ds	4
  2607  00CE                     ___fldiv@sign:
  2608                           
  2609                           ; 1 bytes @ 0x2E
  2610  00CE                     	ds	1
  2611  00CF                     ___fldiv@new_exp:
  2612                           
  2613                           ; 2 bytes @ 0x2F
  2614  00CF                     	ds	2
  2615  00D1                     ___fldiv@grs:
  2616                           
  2617                           ; 4 bytes @ 0x31
  2618  00D1                     	ds	4
  2619  00D5                     ___fldiv@bexp:
  2620                           
  2621                           ; 1 bytes @ 0x35
  2622  00D5                     	ds	1
  2623  00D6                     ___fldiv@aexp:
  2624                           
  2625                           ; 1 bytes @ 0x36
  2626  00D6                     	ds	1
  2627  00D7                     ?_logf:
  2628  00D7                     ?___fltol:	
  2629                           ; 4 bytes @ 0x37
  2630                           
  2631  00D7                     ___fltol@f1:	
  2632                           ; 4 bytes @ 0x37
  2633                           
  2634  00D7                     logf@x:	
  2635                           ; 4 bytes @ 0x37
  2636                           
  2637                           
  2638                           ; 4 bytes @ 0x37
  2639  00D7                     	ds	4
  2640  00DB                     ??_logf:
  2641  00DB                     ??___fltol:	
  2642                           ; 1 bytes @ 0x3B
  2643                           
  2644                           
  2645                           ; 1 bytes @ 0x3B
  2646  00DB                     	ds	5
  2647  00E0                     ___fltol@sign1:
  2648                           
  2649                           ; 1 bytes @ 0x40
  2650  00E0                     	ds	1
  2651  00E1                     ___fltol@exp1:
  2652                           
  2653                           ; 1 bytes @ 0x41
  2654  00E1                     	ds	1
  2655  00E2                     ??_map:
  2656                           
  2657                           ; 1 bytes @ 0x42
  2658  00E2                     	ds	1
  2659  00E3                     ?_get_ntc_temperature:
  2660  00E3                     get_ntc_temperature@adcVoltage:	
  2661                           ; 1 bytes @ 0x43
  2662                           
  2663                           
  2664                           ; 4 bytes @ 0x43
  2665  00E3                     	ds	7
  2666  00EA                     _map$2275:
  2667                           
  2668                           ; 4 bytes @ 0x4A
  2669  00EA                     	ds	4
  2670  00EE                     ??_main:
  2671                           
  2672                           ; 1 bytes @ 0x4E
  2673  00EE                     	ds	1
  2674                           
  2675                           	psect	cstackCOMMON
  2676  0070                     __pcstackCOMMON:
  2677  0070                     ?_I2C_Open:
  2678  0070                     ?_I2C_MasterWrite:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0070                     ?_I2C_Close:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0070                     ?_I2C_MasterRead:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0070                     ?_TMR0_ISR:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0070                     ??_TMR0_ISR:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693  0070                     ?_TMR1_ISR:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696  0070                     ?_I2C_Initialize:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     ?_OSCILLATOR_Initialize:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702  0070                     ?_WDT_Initialize:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705  0070                     ?_TMR1_Initialize:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708  0070                     ?_TMR0_Initialize:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0070                     ?_EUSART_Initialize:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0070                     ?_I2C_DO_IDLE:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0070                     ?_I2C_DO_TX:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0070                     ?_I2C_DO_RX:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0070                     ?_I2C_DO_RCEN:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0070                     ?_I2C_DO_TX_EMPTY:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0070                     ?_I2C_DO_SEND_RESTART:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0070                     ?_I2C_DO_SEND_STOP:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0070                     ?_I2C_DO_RX_ACK:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756  0070                     ?_I2C_DO_RESET:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762  0070                     ?_I2C_MasterClearIrq:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765  0070                     ?_I2C_MasterOpen:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768  0070                     ?_I2C_MasterDisableIrq:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  0070                     ?_I2C_MasterClose:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774  0070                     ?_I2C_MasterStart:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777  0070                     ?_I2C_Poller:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780  0070                     ?_I2C_MasterWaitForEvent:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  0070                     ?_I2C_MasterFsm:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  0070                     ?_I2C_MasterIsNack:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  0070                     ?_I2C_MasterSendTxData:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  0070                     ?_I2C_MasterGetRxData:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  0070                     ?_I2C_MasterSendAck:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  0070                     ?_I2C_MasterStartRx:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  0070                     ?_I2C_MasterSetIrq:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  0070                     ?_I2C_MasterEnableRestart:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  0070                     ?_I2C_MasterStop:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  0070                     ?_I2C_MasterSendNack:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  0070                     ?_mbus_rx_handler:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     ?_mbus_tx_handler:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     ??_mbus_tx_handler:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     ?_mbus_timer_handler:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     ??_mbus_timer_handler:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     ?_TMR1_CallBack:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     ?_TMR0_DefaultInterruptHandler:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0070                     ??_TMR0_DefaultInterruptHandler:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0070                     ?_TMR0_CallBack:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0070                     ??_TMR0_CallBack:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0070                     ?_InitModbusSlave:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_ModbusSlaveProcessReceivedQuery:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_INTERRUPT_InterruptManager:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_PIN_MANAGER_Initialize:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ?_SYSTEM_Initialize:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ?_I2C_MasterOperation:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ?_TMR1_WriteTimer:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ?_MCP3422_Write:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ?_main:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_calculate_crc:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ??_calculate_crc:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     TMR1_WriteTimer@timerVal:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879                           
  2880                           ; 2 bytes @ 0x0
  2881  0070                     	ds	1
  2882  0071                     ??_TMR1_CallBack:
  2883                           
  2884                           ; 1 bytes @ 0x1
  2885  0071                     	ds	1
  2886  0072                     ??_TMR1_ISR:
  2887  0072                     ??_TMR1_WriteTimer:	
  2888                           ; 1 bytes @ 0x2
  2889                           
  2890  0072                     calculate_crc@crcreg:	
  2891                           ; 1 bytes @ 0x2
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0x2
  2895  0072                     	ds	1
  2896  0073                     calculate_crc@crcbit:
  2897                           
  2898                           ; 2 bytes @ 0x3
  2899  0073                     	ds	2
  2900  0075                     calculate_crc@i:
  2901                           
  2902                           ; 1 bytes @ 0x5
  2903  0075                     	ds	1
  2904  0076                     ??_ModbusSlaveProcessReceivedQuery:
  2905                           
  2906                           ; 1 bytes @ 0x6
  2907  0076                     	ds	6
  2908  007C                     ??_INTERRUPT_InterruptManager:
  2909                           
  2910                           	psect	cstackBANK0
  2911  0020                     __pcstackBANK0:	
  2912                           ; 1 bytes @ 0xC
  2913                           
  2914  0020                     ModbusSlaveProcessReceivedQuery@u8ReadReg:
  2915                           
  2916                           ; 1 bytes @ 0x0
  2917  0020                     	ds	1
  2918  0021                     ModbusSlaveProcessReceivedQuery@k:
  2919                           
  2920                           ; 2 bytes @ 0x1
  2921  0021                     	ds	2
  2922  0023                     ModbusSlaveProcessReceivedQuery@u16Data:
  2923                           
  2924                           ; 2 bytes @ 0x3
  2925  0023                     	ds	2
  2926  0025                     ModbusSlaveProcessReceivedQuery@j:
  2927                           
  2928                           ; 2 bytes @ 0x5
  2929  0025                     	ds	2
  2930  0027                     ModbusSlaveProcessReceivedQuery@i:
  2931                           
  2932                           ; 2 bytes @ 0x7
  2933  0027                     	ds	2
  2934  0029                     ??_mbus_rx_handler:
  2935                           
  2936                           ; 1 bytes @ 0x9
  2937  0029                     	ds	1
  2938  002A                     ??_I2C_Open:
  2939  002A                     ?_I2C_SetBuffer:	
  2940                           ; 1 bytes @ 0xA
  2941                           
  2942  002A                     ??_I2C_Close:	
  2943                           ; 1 bytes @ 0xA
  2944                           
  2945  002A                     ??_I2C_Initialize:	
  2946                           ; 1 bytes @ 0xA
  2947                           
  2948  002A                     ??_OSCILLATOR_Initialize:	
  2949                           ; 1 bytes @ 0xA
  2950                           
  2951  002A                     ??_WDT_Initialize:	
  2952                           ; 1 bytes @ 0xA
  2953                           
  2954  002A                     ??_I2C_DO_IDLE:	
  2955                           ; 1 bytes @ 0xA
  2956                           
  2957  002A                     ??_I2C_DO_SEND_ADR_READ:	
  2958                           ; 1 bytes @ 0xA
  2959                           
  2960  002A                     ??_I2C_DO_RCEN:	
  2961                           ; 1 bytes @ 0xA
  2962                           
  2963  002A                     ??_I2C_DO_SEND_RESTART_READ:	
  2964                           ; 1 bytes @ 0xA
  2965                           
  2966  002A                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2967                           ; 1 bytes @ 0xA
  2968                           
  2969  002A                     ??_I2C_DO_SEND_RESTART:	
  2970                           ; 1 bytes @ 0xA
  2971                           
  2972  002A                     ??_I2C_DO_SEND_STOP:	
  2973                           ; 1 bytes @ 0xA
  2974                           
  2975  002A                     ??_I2C_DO_RX_ACK:	
  2976                           ; 1 bytes @ 0xA
  2977                           
  2978  002A                     ??_I2C_DO_RX_NACK_STOP:	
  2979                           ; 1 bytes @ 0xA
  2980                           
  2981  002A                     ??_I2C_DO_RX_NACK_RESTART:	
  2982                           ; 1 bytes @ 0xA
  2983                           
  2984  002A                     ??_I2C_DO_RESET:	
  2985                           ; 1 bytes @ 0xA
  2986                           
  2987  002A                     ??_I2C_MasterClearIrq:	
  2988                           ; 1 bytes @ 0xA
  2989                           
  2990  002A                     ??_I2C_MasterOpen:	
  2991                           ; 1 bytes @ 0xA
  2992                           
  2993  002A                     ??_I2C_MasterDisableIrq:	
  2994                           ; 1 bytes @ 0xA
  2995                           
  2996  002A                     ??_I2C_MasterClose:	
  2997                           ; 1 bytes @ 0xA
  2998                           
  2999  002A                     ??_I2C_MasterStart:	
  3000                           ; 1 bytes @ 0xA
  3001                           
  3002  002A                     ?_I2C_SetCallback:	
  3003                           ; 1 bytes @ 0xA
  3004                           
  3005  002A                     ??_I2C_MasterWaitForEvent:	
  3006                           ; 1 bytes @ 0xA
  3007                           
  3008  002A                     ??_I2C_MasterIsNack:	
  3009                           ; 1 bytes @ 0xA
  3010                           
  3011  002A                     ??_I2C_MasterSendTxData:	
  3012                           ; 1 bytes @ 0xA
  3013                           
  3014  002A                     ??_I2C_MasterGetRxData:	
  3015                           ; 1 bytes @ 0xA
  3016                           
  3017  002A                     ??_I2C_MasterSendAck:	
  3018                           ; 1 bytes @ 0xA
  3019                           
  3020  002A                     ??_I2C_MasterStartRx:	
  3021                           ; 1 bytes @ 0xA
  3022                           
  3023  002A                     ??_I2C_MasterSetIrq:	
  3024                           ; 1 bytes @ 0xA
  3025                           
  3026  002A                     ??_I2C_MasterEnableRestart:	
  3027                           ; 1 bytes @ 0xA
  3028                           
  3029  002A                     ??_I2C_MasterStop:	
  3030                           ; 1 bytes @ 0xA
  3031                           
  3032  002A                     ??_I2C_MasterSendNack:	
  3033                           ; 1 bytes @ 0xA
  3034                           
  3035  002A                     ?_EUSART_SetRxInterruptHandler:	
  3036                           ; 1 bytes @ 0xA
  3037                           
  3038  002A                     ?_EUSART_SetTxInterruptHandler:	
  3039                           ; 1 bytes @ 0xA
  3040                           
  3041  002A                     ?_EUSART_SetFramingErrorHandler:	
  3042                           ; 1 bytes @ 0xA
  3043                           
  3044  002A                     ?_EUSART_SetOverrunErrorHandler:	
  3045                           ; 1 bytes @ 0xA
  3046                           
  3047  002A                     ?_EUSART_SetErrorHandler:	
  3048                           ; 1 bytes @ 0xA
  3049                           
  3050  002A                     ?_TMR1_SetInterruptHandler:	
  3051                           ; 1 bytes @ 0xA
  3052                           
  3053  002A                     ?_TMR0_SetInterruptHandler:	
  3054                           ; 1 bytes @ 0xA
  3055                           
  3056  002A                     ?_FLASH_EraseBlock:	
  3057                           ; 1 bytes @ 0xA
  3058                           
  3059  002A                     ??_InitModbusSlave:	
  3060                           ; 1 bytes @ 0xA
  3061                           
  3062  002A                     ??_PIN_MANAGER_Initialize:	
  3063                           ; 1 bytes @ 0xA
  3064                           
  3065  002A                     ?__Umul8_16:	
  3066                           ; 1 bytes @ 0xA
  3067                           
  3068  002A                     ?_FLASH_ReadWord:	
  3069                           ; 2 bytes @ 0xA
  3070                           
  3071  002A                     ?___xxtofl:	
  3072                           ; 2 bytes @ 0xA
  3073                           
  3074  002A                     I2C_MasterSendTxData@data:	
  3075                           ; 4 bytes @ 0xA
  3076                           
  3077  002A                     __Umul8_16@multiplicand:	
  3078                           ; 1 bytes @ 0xA
  3079                           
  3080  002A                     I2C_SetBuffer@bufferSize:	
  3081                           ; 1 bytes @ 0xA
  3082                           
  3083  002A                     I2C_SetCallback@cb:	
  3084                           ; 2 bytes @ 0xA
  3085                           
  3086  002A                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3087                           ; 2 bytes @ 0xA
  3088                           
  3089  002A                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3090                           ; 2 bytes @ 0xA
  3091                           
  3092  002A                     EUSART_SetErrorHandler@interruptHandler:	
  3093                           ; 2 bytes @ 0xA
  3094                           
  3095  002A                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3096                           ; 2 bytes @ 0xA
  3097                           
  3098  002A                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3099                           ; 2 bytes @ 0xA
  3100                           
  3101  002A                     TMR1_SetInterruptHandler@InterruptHandler:	
  3102                           ; 2 bytes @ 0xA
  3103                           
  3104  002A                     TMR0_SetInterruptHandler@InterruptHandler:	
  3105                           ; 2 bytes @ 0xA
  3106                           
  3107  002A                     FLASH_ReadWord@flashAddr:	
  3108                           ; 2 bytes @ 0xA
  3109                           
  3110  002A                     FLASH_EraseBlock@startAddr:	
  3111                           ; 2 bytes @ 0xA
  3112                           
  3113  002A                     ___xxtofl@val:	
  3114                           ; 2 bytes @ 0xA
  3115                           
  3116                           
  3117                           ; 4 bytes @ 0xA
  3118  002A                     	ds	1
  3119  002B                     ??_I2C_DO_SEND_ADR_WRITE:
  3120  002B                     I2C_Open@address:	
  3121                           ; 1 bytes @ 0xB
  3122                           
  3123  002B                     I2C_Close@returnValue:	
  3124                           ; 1 bytes @ 0xB
  3125                           
  3126  002B                     InitModbusSlave@u8SlaveId:	
  3127                           ; 1 bytes @ 0xB
  3128                           
  3129                           
  3130                           ; 1 bytes @ 0xB
  3131  002B                     	ds	1
  3132  002C                     ??_I2C_SetBuffer:
  3133  002C                     ??_TMR1_Initialize:	
  3134                           ; 1 bytes @ 0xC
  3135                           
  3136  002C                     ??_TMR0_Initialize:	
  3137                           ; 1 bytes @ 0xC
  3138                           
  3139  002C                     ??_EUSART_Initialize:	
  3140                           ; 1 bytes @ 0xC
  3141                           
  3142  002C                     ??_EUSART_SetRxInterruptHandler:	
  3143                           ; 1 bytes @ 0xC
  3144                           
  3145  002C                     ??_EUSART_SetTxInterruptHandler:	
  3146                           ; 1 bytes @ 0xC
  3147                           
  3148  002C                     ??_EUSART_SetFramingErrorHandler:	
  3149                           ; 1 bytes @ 0xC
  3150                           
  3151  002C                     ??_EUSART_SetOverrunErrorHandler:	
  3152                           ; 1 bytes @ 0xC
  3153                           
  3154  002C                     ??_EUSART_SetErrorHandler:	
  3155                           ; 1 bytes @ 0xC
  3156                           
  3157  002C                     ??_TMR1_SetInterruptHandler:	
  3158                           ; 1 bytes @ 0xC
  3159                           
  3160  002C                     ??_TMR0_SetInterruptHandler:	
  3161                           ; 1 bytes @ 0xC
  3162                           
  3163  002C                     ??_FLASH_EraseBlock:	
  3164                           ; 1 bytes @ 0xC
  3165                           
  3166  002C                     ??__Umul8_16:	
  3167                           ; 1 bytes @ 0xC
  3168                           
  3169  002C                     ??_FLASH_ReadWord:	
  3170                           ; 1 bytes @ 0xC
  3171                           
  3172  002C                     I2C_Open@returnValue:	
  3173                           ; 1 bytes @ 0xC
  3174                           
  3175  002C                     I2C_SetCallback@ptr:	
  3176                           ; 1 bytes @ 0xC
  3177                           
  3178  002C                     FLASH_ReadWord@GIEBitValue:	
  3179                           ; 1 bytes @ 0xC
  3180                           
  3181  002C                     FLASH_EraseBlock@GIEBitValue:	
  3182                           ; 1 bytes @ 0xC
  3183                           
  3184                           
  3185                           ; 1 bytes @ 0xC
  3186  002C                     	ds	1
  3187  002D                     ??_I2C_SetCallback:
  3188  002D                     ?_FLASH_WriteBlock:	
  3189                           ; 1 bytes @ 0xD
  3190                           
  3191  002D                     ??_SYSTEM_Initialize:	
  3192                           ; 1 bytes @ 0xD
  3193                           
  3194  002D                     I2C_SetBuffer@buffer:	
  3195                           ; 1 bytes @ 0xD
  3196                           
  3197  002D                     FLASH_WriteBlock@writeAddr:	
  3198                           ; 1 bytes @ 0xD
  3199                           
  3200                           
  3201                           ; 2 bytes @ 0xD
  3202  002D                     	ds	1
  3203  002E                     ??___xxtofl:
  3204  002E                     I2C_SetCallback@idx:	
  3205                           ; 1 bytes @ 0xE
  3206                           
  3207  002E                     __Umul8_16@product:	
  3208                           ; 1 bytes @ 0xE
  3209                           
  3210                           
  3211                           ; 2 bytes @ 0xE
  3212  002E                     	ds	1
  3213  002F                     ?_I2C_SetDataCompleteCallback:
  3214  002F                     ?_I2C_SetAddressNackCallback:	
  3215                           ; 1 bytes @ 0xF
  3216                           
  3217  002F                     FLASH_WriteBlock@flashWordArray:	
  3218                           ; 1 bytes @ 0xF
  3219                           
  3220  002F                     I2C_SetDataCompleteCallback@cb:	
  3221                           ; 1 bytes @ 0xF
  3222                           
  3223  002F                     I2C_SetAddressNackCallback@cb:	
  3224                           ; 2 bytes @ 0xF
  3225                           
  3226                           
  3227                           ; 2 bytes @ 0xF
  3228  002F                     	ds	1
  3229  0030                     ??_FLASH_WriteBlock:
  3230  0030                     __Umul8_16@word_mpld:	
  3231                           ; 1 bytes @ 0x10
  3232                           
  3233                           
  3234                           ; 2 bytes @ 0x10
  3235  0030                     	ds	1
  3236  0031                     I2C_SetDataCompleteCallback@ptr:
  3237  0031                     I2C_SetAddressNackCallback@ptr:	
  3238                           ; 1 bytes @ 0x11
  3239                           
  3240                           
  3241                           ; 1 bytes @ 0x11
  3242  0031                     	ds	1
  3243  0032                     ??_I2C_SetDataCompleteCallback:
  3244  0032                     ??_I2C_SetAddressNackCallback:	
  3245                           ; 1 bytes @ 0x12
  3246                           
  3247  0032                     __Umul8_16@multiplier:	
  3248                           ; 1 bytes @ 0x12
  3249                           
  3250  0032                     ___xxtofl@sign:	
  3251                           ; 1 bytes @ 0x12
  3252                           
  3253                           
  3254                           ; 1 bytes @ 0x12
  3255  0032                     	ds	1
  3256  0033                     ?_rd1RegCompleteHandler:
  3257  0033                     ?_rd2RegCompleteHandler:	
  3258                           ; 1 bytes @ 0x13
  3259                           
  3260  0033                     ?_wr1RegCompleteHandler:	
  3261                           ; 1 bytes @ 0x13
  3262                           
  3263  0033                     ?_wr2RegCompleteHandler:	
  3264                           ; 1 bytes @ 0x13
  3265                           
  3266  0033                     ?_rdBlkRegCompleteHandler:	
  3267                           ; 1 bytes @ 0x13
  3268                           
  3269  0033                     ?_I2C_CallbackReturnStop:	
  3270                           ; 1 bytes @ 0x13
  3271                           
  3272  0033                     ?_I2C_CallbackReturnReset:	
  3273                           ; 1 bytes @ 0x13
  3274                           
  3275  0033                     rd1RegCompleteHandler@ptr:	
  3276                           ; 1 bytes @ 0x13
  3277                           
  3278  0033                     rd2RegCompleteHandler@ptr:	
  3279                           ; 1 bytes @ 0x13
  3280                           
  3281  0033                     wr1RegCompleteHandler@ptr:	
  3282                           ; 1 bytes @ 0x13
  3283                           
  3284  0033                     wr2RegCompleteHandler@ptr:	
  3285                           ; 1 bytes @ 0x13
  3286                           
  3287  0033                     rdBlkRegCompleteHandler@ptr:	
  3288                           ; 1 bytes @ 0x13
  3289                           
  3290  0033                     I2C_CallbackReturnStop@funPtr:	
  3291                           ; 1 bytes @ 0x13
  3292                           
  3293  0033                     I2C_CallbackReturnReset@funPtr:	
  3294                           ; 1 bytes @ 0x13
  3295                           
  3296  0033                     ___xxtofl@exp:	
  3297                           ; 1 bytes @ 0x13
  3298                           
  3299  0033                     FLASH_WriteBlock@blockStartAddr:	
  3300                           ; 1 bytes @ 0x13
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0x13
  3304  0033                     	ds	1
  3305  0034                     ??_rd1RegCompleteHandler:
  3306  0034                     ??_rd2RegCompleteHandler:	
  3307                           ; 1 bytes @ 0x14
  3308                           
  3309  0034                     ??_wr1RegCompleteHandler:	
  3310                           ; 1 bytes @ 0x14
  3311                           
  3312  0034                     ??_wr2RegCompleteHandler:	
  3313                           ; 1 bytes @ 0x14
  3314                           
  3315  0034                     ??_rdBlkRegCompleteHandler:	
  3316                           ; 1 bytes @ 0x14
  3317                           
  3318  0034                     ??_I2C_DO_TX:	
  3319                           ; 1 bytes @ 0x14
  3320                           
  3321  0034                     ??_I2C_DO_RX:	
  3322                           ; 1 bytes @ 0x14
  3323                           
  3324  0034                     ??_I2C_DO_TX_EMPTY:	
  3325                           ; 1 bytes @ 0x14
  3326                           
  3327  0034                     ??_I2C_DO_ADDRESS_NACK:	
  3328                           ; 1 bytes @ 0x14
  3329                           
  3330  0034                     ??_I2C_CallbackReturnStop:	
  3331                           ; 1 bytes @ 0x14
  3332                           
  3333  0034                     ??_I2C_CallbackReturnReset:	
  3334                           ; 1 bytes @ 0x14
  3335                           
  3336  0034                     ___xxtofl@arg:	
  3337                           ; 1 bytes @ 0x14
  3338                           
  3339                           
  3340                           ; 4 bytes @ 0x14
  3341  0034                     	ds	1
  3342  0035                     FLASH_WriteBlock@GIEBitValue:
  3343                           
  3344                           ; 1 bytes @ 0x15
  3345  0035                     	ds	1
  3346  0036                     FLASH_WriteBlock@i:
  3347                           
  3348                           ; 1 bytes @ 0x16
  3349  0036                     	ds	1
  3350  0037                     ??_I2C_MasterFsm:
  3351                           
  3352                           ; 1 bytes @ 0x17
  3353  0037                     	ds	1
  3354  0038                     ?___flge:
  3355  0038                     ?___fladd:	
  3356                           ; 1 bit 
  3357                           
  3358  0038                     ___flge@ff1:	
  3359                           ; 4 bytes @ 0x18
  3360                           
  3361  0038                     ___fladd@b:	
  3362                           ; 4 bytes @ 0x18
  3363                           
  3364                           
  3365                           ; 4 bytes @ 0x18
  3366  0038                     	ds	2
  3367  003A                     ??_I2C_Poller:
  3368  003A                     ??_I2C_MasterOperation:	
  3369                           ; 1 bytes @ 0x1A
  3370                           
  3371                           
  3372                           ; 1 bytes @ 0x1A
  3373  003A                     	ds	1
  3374  003B                     I2C_MasterOperation@read:
  3375                           
  3376                           ; 1 bytes @ 0x1B
  3377  003B                     	ds	1
  3378  003C                     I2C_MasterOperation@returnValue:
  3379  003C                     ___flge@ff2:	
  3380                           ; 1 bytes @ 0x1C
  3381                           
  3382  003C                     ___fladd@a:	
  3383                           ; 4 bytes @ 0x1C
  3384                           
  3385                           
  3386                           ; 4 bytes @ 0x1C
  3387  003C                     	ds	1
  3388  003D                     ??_I2C_MasterWrite:
  3389  003D                     ??_I2C_MasterRead:	
  3390                           ; 1 bytes @ 0x1D
  3391                           
  3392  003D                     ?_I2C_WriteNBytes:	
  3393                           ; 1 bytes @ 0x1D
  3394                           
  3395  003D                     ?_I2C_ReadNBytes:	
  3396                           ; 1 bytes @ 0x1D
  3397                           
  3398  003D                     I2C_WriteNBytes@data:	
  3399                           ; 1 bytes @ 0x1D
  3400                           
  3401  003D                     I2C_ReadNBytes@data:	
  3402                           ; 1 bytes @ 0x1D
  3403                           
  3404                           
  3405                           ; 1 bytes @ 0x1D
  3406  003D                     	ds	1
  3407  003E                     I2C_WriteNBytes@len:
  3408  003E                     I2C_ReadNBytes@len:	
  3409                           ; 2 bytes @ 0x1E
  3410                           
  3411                           
  3412                           ; 2 bytes @ 0x1E
  3413  003E                     	ds	2
  3414  0040                     ??_I2C_WriteNBytes:
  3415  0040                     ??_I2C_ReadNBytes:	
  3416                           ; 1 bytes @ 0x20
  3417                           
  3418  0040                     ??___flge:	
  3419                           ; 1 bytes @ 0x20
  3420                           
  3421  0040                     ??___fladd:	
  3422                           ; 1 bytes @ 0x20
  3423                           
  3424  0040                     I2C_WriteNBytes@address:	
  3425                           ; 1 bytes @ 0x20
  3426                           
  3427  0040                     I2C_ReadNBytes@address:	
  3428                           ; 1 bytes @ 0x20
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x20
  3432  0040                     	ds	1
  3433  0041                     ??_MCP3422_Write:
  3434  0041                     ?_MCP3422_Read:	
  3435                           ; 1 bytes @ 0x21
  3436                           
  3437  0041                     MCP3422_Read@count:	
  3438                           ; 1 bytes @ 0x21
  3439                           
  3440                           
  3441                           ; 1 bytes @ 0x21
  3442  0041                     	ds	1
  3443  0042                     ??_MCP3422_Read:
  3444  0042                     MCP3422_Write@data:	
  3445                           ; 1 bytes @ 0x22
  3446                           
  3447                           
  3448                           ; 1 bytes @ 0x22
  3449  0042                     	ds	3
  3450  0045                     MCP3422_Read@data:
  3451                           
  3452                           ; 1 bytes @ 0x25
  3453  0045                     	ds	3
  3454  0048                     ___fladd@signs:
  3455                           
  3456                           ; 1 bytes @ 0x28
  3457  0048                     	ds	1
  3458  0049                     ___fladd@aexp:
  3459                           
  3460                           ; 1 bytes @ 0x29
  3461  0049                     	ds	1
  3462  004A                     ___fladd@bexp:
  3463                           
  3464                           ; 1 bytes @ 0x2A
  3465  004A                     	ds	1
  3466  004B                     ___fladd@grs:
  3467                           
  3468                           ; 1 bytes @ 0x2B
  3469  004B                     	ds	1
  3470  004C                     ??___flsub:
  3471  004C                     ??___flmul:	
  3472                           ; 1 bytes @ 0x2C
  3473                           
  3474                           
  3475                           ; 1 bytes @ 0x2C
  3476  004C                     	ds	5
  3477  0051                     ??_get_ntc_temperature:
  3478                           
  3479                           	psect	maintext
  3480  0D0F                     __pmaintext:	
  3481                           ; 1 bytes @ 0x31
  3482 ;;
  3483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3484 ;;
  3485 ;; *************** function _main *****************
  3486 ;; Defined at:
  3487 ;;		line 148 in file "main.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  u16CalBuffer   16    6[BANK3 ] unsigned short [8]
  3492 ;;  fTdVoltage      4   22[BANK3 ] float 
  3493 ;;  fNtcVoltage     4    2[BANK3 ] float 
  3494 ;;  u16TdVal        2    0[BANK3 ] unsigned short 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : B1F/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3504 ;;      Params:         0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0      26       0       0       0
  3506 ;;      Temps:          0       0       1       0       0       0       0       0
  3507 ;;      Totals:         0       0       1       0      26       0       0       0
  3508 ;;Total ram usage:       27 bytes
  3509 ;; Hardware stack levels required when called: 15
  3510 ;; This function calls:
  3511 ;;		_FLASH_ReadWord
  3512 ;;		_FLASH_WriteBlock
  3513 ;;		_InitModbusSlave
  3514 ;;		_MCP3422_ReadVoltage
  3515 ;;		_SYSTEM_Initialize
  3516 ;;		___flge
  3517 ;;		___flmul
  3518 ;;		___fltol
  3519 ;;		___xxtofl
  3520 ;;		_get_ntc_temperature
  3521 ;;		_map
  3522 ;; This function is called by:
  3523 ;;		Startup code after reset
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527  0D0F                     _main:	
  3528                           ;psect for function _main
  3529                           
  3530                           
  3531                           ;main.c: 151:     float fTdVoltage = 0.0f;
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3535  0D0F  3000               	movlw	0
  3536  0D10  0023               	movlb	3	; select bank3
  3537  0D11  00EB               	movwf	(main@fTdVoltage+3)^(0+384)
  3538  0D12  3000               	movlw	0
  3539  0D13  00EA               	movwf	(main@fTdVoltage+2)^(0+384)
  3540  0D14  3000               	movlw	0
  3541  0D15  00E9               	movwf	(main@fTdVoltage+1)^(0+384)
  3542  0D16  3000               	movlw	0
  3543  0D17  00E8               	movwf	main@fTdVoltage^(0+384)
  3544                           
  3545                           ;main.c: 152:     uint16_t u16TdVal = 0.0f;
  3546  0D18  01D2               	clrf	main@u16TdVal^(0+384)
  3547  0D19  01D3               	clrf	(main@u16TdVal+1)^(0+384)
  3548                           
  3549                           ;main.c: 153:     uint16_t u16CalBuffer[8] = {0U};
  3550  0D1A  30D8               	movlw	low main@u16CalBuffer
  3551  0D1B  0086               	movwf	6
  3552  0D1C  3001               	movlw	high main@u16CalBuffer
  3553  0D1D  0087               	movwf	7
  3554  0D1E  3010               	movlw	16
  3555  0D1F  0021               	movlb	1	; select bank1
  3556  0D20  00EE               	movwf	??_main^(0+128)
  3557  0D21  3000               	movlw	0
  3558  0D22                     u6350:
  3559  0D22  001E               	movwi fsr1++
  3560  0D23  0BEE               	decfsz	??_main^(0+128),f
  3561  0D24  2D22               	goto	u6350
  3562                           
  3563                           ;main.c: 155:     SYSTEM_Initialize();
  3564  0D25  319E  264E  318D   	fcall	_SYSTEM_Initialize
  3565                           
  3566                           ;main.c: 158:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3567  0D28  301A               	movlw	26
  3568  0D29  0021               	movlb	1	; select bank1
  3569  0D2A  00EE               	movwf	??_main^(0+128)
  3570  0D2B  30F8               	movlw	248
  3571  0D2C                     u6567:
  3572  0D2C  0B89               	decfsz	9,f
  3573  0D2D  2D2C               	goto	u6567
  3574  0D2E  0BEE               	decfsz	??_main^(0+128),f
  3575  0D2F  2D2C               	goto	u6567
  3576  0D30  0000               	nop
  3577                           
  3578                           ;main.c: 160:     u16CalBuffer[0] = FLASH_ReadWord(0x1FE0);
  3579  0D31  30E0               	movlw	224
  3580  0D32  0020               	movlb	0	; select bank0
  3581  0D33  00AA               	movwf	FLASH_ReadWord@flashAddr
  3582  0D34  301F               	movlw	31
  3583  0D35  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3584  0D36  319F  2706  318D   	fcall	_FLASH_ReadWord
  3585  0D39  0020               	movlb	0	; select bank0
  3586  0D3A  082B               	movf	?_FLASH_ReadWord+1,w
  3587  0D3B  0023               	movlb	3	; select bank3
  3588  0D3C  00D9               	movwf	(main@u16CalBuffer+1)^(0+384)
  3589  0D3D  0020               	movlb	0	; select bank0
  3590  0D3E  082A               	movf	?_FLASH_ReadWord,w
  3591  0D3F  0023               	movlb	3	; select bank3
  3592  0D40  00D8               	movwf	main@u16CalBuffer^(0+384)
  3593                           
  3594                           ;main.c: 161:     u16CalBuffer[1] = FLASH_ReadWord(0x1FE0 +1);
  3595  0D41  30E1               	movlw	225
  3596  0D42  0020               	movlb	0	; select bank0
  3597  0D43  00AA               	movwf	FLASH_ReadWord@flashAddr
  3598  0D44  301F               	movlw	31
  3599  0D45  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3600  0D46  319F  2706  318D   	fcall	_FLASH_ReadWord
  3601  0D49  0020               	movlb	0	; select bank0
  3602  0D4A  082B               	movf	?_FLASH_ReadWord+1,w
  3603  0D4B  0023               	movlb	3	; select bank3
  3604  0D4C  00DB               	movwf	((main@u16CalBuffer+1)^(0+384)+2)
  3605  0D4D  0020               	movlb	0	; select bank0
  3606  0D4E  082A               	movf	?_FLASH_ReadWord,w
  3607  0D4F  0023               	movlb	3	; select bank3
  3608  0D50  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  3609                           
  3610                           ;main.c: 162:     u16CalBuffer[2] = FLASH_ReadWord(0x1FE0 +2);
  3611  0D51  30E2               	movlw	226
  3612  0D52  0020               	movlb	0	; select bank0
  3613  0D53  00AA               	movwf	FLASH_ReadWord@flashAddr
  3614  0D54  301F               	movlw	31
  3615  0D55  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3616  0D56  319F  2706  318D   	fcall	_FLASH_ReadWord
  3617  0D59  0020               	movlb	0	; select bank0
  3618  0D5A  082B               	movf	?_FLASH_ReadWord+1,w
  3619  0D5B  0023               	movlb	3	; select bank3
  3620  0D5C  00DD               	movwf	((main@u16CalBuffer+1)^(0+384)+4)
  3621  0D5D  0020               	movlb	0	; select bank0
  3622  0D5E  082A               	movf	?_FLASH_ReadWord,w
  3623  0D5F  0023               	movlb	3	; select bank3
  3624  0D60  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  3625                           
  3626                           ;main.c: 163:     u16CalBuffer[3] = FLASH_ReadWord(0x1FE0 +3);
  3627  0D61  30E3               	movlw	227
  3628  0D62  0020               	movlb	0	; select bank0
  3629  0D63  00AA               	movwf	FLASH_ReadWord@flashAddr
  3630  0D64  301F               	movlw	31
  3631  0D65  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3632  0D66  319F  2706  318D   	fcall	_FLASH_ReadWord
  3633  0D69  0020               	movlb	0	; select bank0
  3634  0D6A  082B               	movf	?_FLASH_ReadWord+1,w
  3635  0D6B  0023               	movlb	3	; select bank3
  3636  0D6C  00DF               	movwf	((main@u16CalBuffer+1)^(0+384)+6)
  3637  0D6D  0020               	movlb	0	; select bank0
  3638  0D6E  082A               	movf	?_FLASH_ReadWord,w
  3639  0D6F  0023               	movlb	3	; select bank3
  3640  0D70  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  3641                           
  3642                           ;main.c: 166:     if((0x3FFFU == u16CalBuffer[0]) || (0x3400U == u16CalBuffer[0]))
  3643  0D71  0A58               	incf	main@u16CalBuffer^(0+384),w
  3644  0D72  303F               	movlw	63
  3645  0D73  1903               	skipnz
  3646  0D74  0659               	xorwf	(main@u16CalBuffer+1)^(0+384),w
  3647  0D75  1903               	btfsc	3,2
  3648  0D76  2D7C               	goto	l6593
  3649  0D77  3034               	movlw	52
  3650  0D78  0659               	xorwf	(main@u16CalBuffer+1)^(0+384),w
  3651  0D79  0458               	iorwf	main@u16CalBuffer^(0+384),w
  3652  0D7A  1D03               	btfss	3,2
  3653  0D7B  2D7E               	goto	l6595
  3654  0D7C                     l6593:
  3655                           
  3656                           ;main.c: 167:     {;main.c: 168:         u16CalBuffer[0] = 0;
  3657  0D7C  01D8               	clrf	main@u16CalBuffer^(0+384)
  3658  0D7D  01D9               	clrf	(main@u16CalBuffer+1)^(0+384)
  3659  0D7E                     l6595:
  3660                           
  3661                           ;main.c: 170:     if((0x3FFFU == u16CalBuffer[2]) || (0x3400U == u16CalBuffer[2]))
  3662  0D7E  0A5C               	incf	(main@u16CalBuffer^(0+384)+4),w
  3663  0D7F  303F               	movlw	63
  3664  0D80  1903               	skipnz
  3665  0D81  065D               	xorwf	((main@u16CalBuffer+1)^(0+384)+4),w
  3666  0D82  1903               	btfsc	3,2
  3667  0D83  2D89               	goto	l6599
  3668  0D84  3034               	movlw	52
  3669  0D85  065D               	xorwf	((main@u16CalBuffer+1)^(0+384)+4),w
  3670  0D86  045C               	iorwf	(main@u16CalBuffer^(0+384)+4),w
  3671  0D87  1D03               	btfss	3,2
  3672  0D88  2D8D               	goto	l6601
  3673  0D89                     l6599:
  3674                           
  3675                           ;main.c: 171:     {;main.c: 172:         u16CalBuffer[2] = 400;
  3676  0D89  3090               	movlw	144
  3677  0D8A  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  3678  0D8B  3001               	movlw	1
  3679  0D8C  00DD               	movwf	(main@u16CalBuffer^(0+384)+5)
  3680  0D8D                     l6601:
  3681                           
  3682                           ;main.c: 174:     if((0x3FFFU == u16CalBuffer[1]) || (0x3400U == u16CalBuffer[1]))
  3683  0D8D  0A5A               	incf	(main@u16CalBuffer^(0+384)+2),w
  3684  0D8E  303F               	movlw	63
  3685  0D8F  1903               	skipnz
  3686  0D90  065B               	xorwf	((main@u16CalBuffer+1)^(0+384)+2),w
  3687  0D91  1903               	btfsc	3,2
  3688  0D92  2D98               	goto	l6605
  3689  0D93  3034               	movlw	52
  3690  0D94  065B               	xorwf	((main@u16CalBuffer+1)^(0+384)+2),w
  3691  0D95  045A               	iorwf	(main@u16CalBuffer^(0+384)+2),w
  3692  0D96  1D03               	btfss	3,2
  3693  0D97  2D9C               	goto	l6607
  3694  0D98                     l6605:
  3695                           
  3696                           ;main.c: 175:     {;main.c: 176:         u16CalBuffer[1] = 900;
  3697  0D98  3084               	movlw	132
  3698  0D99  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  3699  0D9A  3003               	movlw	3
  3700  0D9B  00DB               	movwf	(main@u16CalBuffer^(0+384)+3)
  3701  0D9C                     l6607:
  3702                           
  3703                           ;main.c: 178:     if((0x3FFFU == u16CalBuffer[3]) || (0x3400U == u16CalBuffer[3]))
  3704  0D9C  0A5E               	incf	(main@u16CalBuffer^(0+384)+6),w
  3705  0D9D  303F               	movlw	63
  3706  0D9E  1903               	skipnz
  3707  0D9F  065F               	xorwf	((main@u16CalBuffer+1)^(0+384)+6),w
  3708  0DA0  1903               	btfsc	3,2
  3709  0DA1  2DA7               	goto	l6611
  3710  0DA2  3034               	movlw	52
  3711  0DA3  065F               	xorwf	((main@u16CalBuffer+1)^(0+384)+6),w
  3712  0DA4  045E               	iorwf	(main@u16CalBuffer^(0+384)+6),w
  3713  0DA5  1D03               	btfss	3,2
  3714  0DA6  2DAB               	goto	l6613
  3715  0DA7                     l6611:
  3716                           
  3717                           ;main.c: 179:     {;main.c: 180:         u16CalBuffer[3] = 1800;
  3718  0DA7  3008               	movlw	8
  3719  0DA8  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  3720  0DA9  3007               	movlw	7
  3721  0DAA  00DF               	movwf	(main@u16CalBuffer^(0+384)+7)
  3722  0DAB                     l6613:
  3723                           
  3724                           ;main.c: 188:     InitModbusSlave(1U);
  3725  0DAB  3001               	movlw	1
  3726  0DAC  319E  260F  318D   	fcall	_InitModbusSlave
  3727                           
  3728                           ;main.c: 189:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3729  0DAF  301A               	movlw	26
  3730  0DB0  0021               	movlb	1	; select bank1
  3731  0DB1  00EE               	movwf	??_main^(0+128)
  3732  0DB2  30F8               	movlw	248
  3733  0DB3                     u6577:
  3734  0DB3  0B89               	decfsz	9,f
  3735  0DB4  2DB3               	goto	u6577
  3736  0DB5  0BEE               	decfsz	??_main^(0+128),f
  3737  0DB6  2DB3               	goto	u6577
  3738  0DB7  0000               	nop
  3739                           
  3740                           ;main.c: 191:     (INTCONbits.GIE = 1);
  3741  0DB8  178B               	bsf	11,7	;volatile
  3742                           
  3743                           ;main.c: 194:     (INTCONbits.PEIE = 1);
  3744  0DB9  170B               	bsf	11,6	;volatile
  3745  0DBA                     l881:	
  3746                           ;main.c: 201:     while (1)
  3747                           
  3748  0DBA  0064               	clrwdt	;# 
  3749                           
  3750                           ;main.c: 206:         fTdVoltage = MCP3422_ReadVoltage(0x80);
  3751  0DBB  3080               	movlw	128
  3752  0DBC  3192  22E5  318D   	fcall	_MCP3422_ReadVoltage
  3753  0DBF  0021               	movlb	1	; select bank1
  3754  0DC0  0840               	movf	(?_MCP3422_ReadVoltage+3)^(0+128),w
  3755  0DC1  0023               	movlb	3	; select bank3
  3756  0DC2  00EB               	movwf	(main@fTdVoltage+3)^(0+384)
  3757  0DC3  0021               	movlb	1	; select bank1
  3758  0DC4  083F               	movf	(?_MCP3422_ReadVoltage+2)^(0+128),w
  3759  0DC5  0023               	movlb	3	; select bank3
  3760  0DC6  00EA               	movwf	(main@fTdVoltage+2)^(0+384)
  3761  0DC7  0021               	movlb	1	; select bank1
  3762  0DC8  083E               	movf	(?_MCP3422_ReadVoltage+1)^(0+128),w
  3763  0DC9  0023               	movlb	3	; select bank3
  3764  0DCA  00E9               	movwf	(main@fTdVoltage+1)^(0+384)
  3765  0DCB  0021               	movlb	1	; select bank1
  3766  0DCC  083D               	movf	?_MCP3422_ReadVoltage^(0+128),w
  3767  0DCD  0023               	movlb	3	; select bank3
  3768  0DCE  00E8               	movwf	main@fTdVoltage^(0+384)
  3769                           
  3770                           ;main.c: 207:         fNtcVoltage = MCP3422_ReadVoltage(0xA0);
  3771  0DCF  30A0               	movlw	160
  3772  0DD0  3192  22E5  318D   	fcall	_MCP3422_ReadVoltage
  3773  0DD3  0021               	movlb	1	; select bank1
  3774  0DD4  0840               	movf	(?_MCP3422_ReadVoltage+3)^(0+128),w
  3775  0DD5  0023               	movlb	3	; select bank3
  3776  0DD6  00D7               	movwf	(main@fNtcVoltage+3)^(0+384)
  3777  0DD7  0021               	movlb	1	; select bank1
  3778  0DD8  083F               	movf	(?_MCP3422_ReadVoltage+2)^(0+128),w
  3779  0DD9  0023               	movlb	3	; select bank3
  3780  0DDA  00D6               	movwf	(main@fNtcVoltage+2)^(0+384)
  3781  0DDB  0021               	movlb	1	; select bank1
  3782  0DDC  083E               	movf	(?_MCP3422_ReadVoltage+1)^(0+128),w
  3783  0DDD  0023               	movlb	3	; select bank3
  3784  0DDE  00D5               	movwf	(main@fNtcVoltage+1)^(0+384)
  3785  0DDF  0021               	movlb	1	; select bank1
  3786  0DE0  083D               	movf	?_MCP3422_ReadVoltage^(0+128),w
  3787  0DE1  0023               	movlb	3	; select bank3
  3788  0DE2  00D4               	movwf	main@fNtcVoltage^(0+384)
  3789  0DE3  1003               	clrc
  3790  0DE4  0022               	movlb	2	; select bank2
  3791  0DE5  1F0E               	btfss	14,6	;volatile
  3792  0DE6  1403               	setc
  3793  0DE7  1C03               	btfss	3,0
  3794  0DE8  2DEC               	goto	u6440
  3795  0DE9  0022               	movlb	2	; select bank2
  3796  0DEA  170E               	bsf	14,6	;volatile
  3797  0DEB  2DEE               	goto	l6627
  3798  0DEC                     u6440:
  3799  0DEC  0022               	movlb	2	; select bank2
  3800  0DED  130E               	bcf	14,6	;volatile
  3801  0DEE                     l6627:
  3802                           
  3803                           ;main.c: 209:         get_ntc_temperature(fNtcVoltage);
  3804  0DEE  0023               	movlb	3	; select bank3
  3805  0DEF  0857               	movf	(main@fNtcVoltage+3)^(0+384),w
  3806  0DF0  0021               	movlb	1	; select bank1
  3807  0DF1  00E6               	movwf	(get_ntc_temperature@adcVoltage+3)^(0+128)
  3808  0DF2  0023               	movlb	3	; select bank3
  3809  0DF3  0856               	movf	(main@fNtcVoltage+2)^(0+384),w
  3810  0DF4  0021               	movlb	1	; select bank1
  3811  0DF5  00E5               	movwf	(get_ntc_temperature@adcVoltage+2)^(0+128)
  3812  0DF6  0023               	movlb	3	; select bank3
  3813  0DF7  0855               	movf	(main@fNtcVoltage+1)^(0+384),w
  3814  0DF8  0021               	movlb	1	; select bank1
  3815  0DF9  00E4               	movwf	(get_ntc_temperature@adcVoltage+1)^(0+128)
  3816  0DFA  0023               	movlb	3	; select bank3
  3817  0DFB  0854               	movf	main@fNtcVoltage^(0+384),w
  3818  0DFC  0021               	movlb	1	; select bank1
  3819  0DFD  00E3               	movwf	get_ntc_temperature@adcVoltage^(0+128)
  3820  0DFE  3196  266E  318D   	fcall	_get_ntc_temperature
  3821                           
  3822                           ;main.c: 211:         if((modbusSlaveData.ModbusHoldingRegister[4U] == 9588U) && (bCalMo
      +                          de == 0))
  3823  0E01  3074               	movlw	116
  3824  0E02  0023               	movlb	3	; select bank3
  3825  0E03  0628               	xorwf	(_modbusSlaveData^(0+384)+8),w	;volatile
  3826  0E04  3025               	movlw	37
  3827  0E05  1903               	skipnz
  3828  0E06  0629               	xorwf	((_modbusSlaveData+1)^(0+384)+8),w	;volatile
  3829  0E07  1D03               	btfss	3,2
  3830  0E08  2E13               	goto	l6635
  3831  0E09  0851               	movf	_bCalMode^(0+384),w
  3832  0E0A  1D03               	btfss	3,2
  3833  0E0B  2E13               	goto	l6635
  3834                           
  3835                           ;main.c: 212:         {;main.c: 213:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 1U;
  3836  0E0C  3000               	movlw	0
  3837  0E0D  00A9               	movwf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3838  0E0E  3001               	movlw	1
  3839  0E0F  00A8               	movwf	(_modbusSlaveData^(0+384)+8)	;volatile
  3840                           
  3841                           ;main.c: 215:             bCalMode = 1;
  3842  0E10  01D1               	clrf	_bCalMode^(0+384)
  3843  0E11  0AD1               	incf	_bCalMode^(0+384),f
  3844                           
  3845                           ;main.c: 216:         }
  3846  0E12  2E96               	goto	l6673
  3847  0E13                     l6635:
  3848  0E13  3019               	movlw	25
  3849  0E14  0628               	xorwf	(_modbusSlaveData^(0+384)+8),w	;volatile
  3850  0E15  3012               	movlw	18
  3851  0E16  1903               	skipnz
  3852  0E17  0629               	xorwf	((_modbusSlaveData+1)^(0+384)+8),w	;volatile
  3853  0E18  1D03               	btfss	3,2
  3854  0E19  2E3D               	goto	l886
  3855  0E1A  0351               	decf	_bCalMode^(0+384),w
  3856  0E1B  1D03               	btfss	3,2
  3857  0E1C  2E3D               	goto	l886
  3858                           
  3859                           ;main.c: 218:         {;main.c: 219:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 0U;
  3860  0E1D  01A8               	clrf	(_modbusSlaveData^(0+384)+8)	;volatile
  3861  0E1E  01A9               	clrf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3862                           
  3863                           ;main.c: 220:             (INTCONbits.GIE = 0);
  3864  0E1F  138B               	bcf	11,7	;volatile
  3865                           
  3866                           ;main.c: 221:             (INTCONbits.PEIE = 0);
  3867  0E20  130B               	bcf	11,6	;volatile
  3868                           
  3869                           ;main.c: 222:             FLASH_WriteBlock(0x1FE0,&u16CalBuffer);
  3870  0E21  30E0               	movlw	224
  3871  0E22  0020               	movlb	0	; select bank0
  3872  0E23  00AD               	movwf	FLASH_WriteBlock@writeAddr
  3873  0E24  301F               	movlw	31
  3874  0E25  00AE               	movwf	FLASH_WriteBlock@writeAddr+1
  3875  0E26  30D8               	movlw	(low (main@u16CalBuffer| (0+256)))& (0+255)
  3876  0E27  0021               	movlb	1	; select bank1
  3877  0E28  00EE               	movwf	??_main^(0+128)
  3878  0E29  086E               	movf	??_main^(0+128),w
  3879  0E2A  0020               	movlb	0	; select bank0
  3880  0E2B  00AF               	movwf	FLASH_WriteBlock@flashWordArray
  3881  0E2C  3192  227E  318D   	fcall	_FLASH_WriteBlock
  3882                           
  3883                           ;main.c: 223:             _delay((unsigned long)((50)*(8000000/4000.0)));
  3884  0E2F  3082               	movlw	130
  3885  0E30  0021               	movlb	1	; select bank1
  3886  0E31  00EE               	movwf	??_main^(0+128)
  3887  0E32  30DD               	movlw	221
  3888  0E33                     u6587:
  3889  0E33  0B89               	decfsz	9,f
  3890  0E34  2E33               	goto	u6587
  3891  0E35  0BEE               	decfsz	??_main^(0+128),f
  3892  0E36  2E33               	goto	u6587
  3893  0E37  3200               	nop2
  3894                           
  3895                           ;main.c: 224:             (INTCONbits.GIE = 1);
  3896  0E38  178B               	bsf	11,7	;volatile
  3897                           
  3898                           ;main.c: 225:             (INTCONbits.PEIE = 1);
  3899  0E39  170B               	bsf	11,6	;volatile
  3900                           
  3901                           ;main.c: 226:             bCalMode = 0;
  3902  0E3A  0023               	movlb	3	; select bank3
  3903  0E3B  01D1               	clrf	_bCalMode^(0+384)
  3904                           
  3905                           ;main.c: 227:         }
  3906  0E3C  2E96               	goto	l6673
  3907  0E3D                     l886:	
  3908                           ;main.c: 228:         else
  3909                           
  3910                           
  3911                           ;main.c: 229:         {;main.c: 230:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 1U;
  3912  0E3D  3000               	movlw	0
  3913  0E3E  00A9               	movwf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3914  0E3F  3001               	movlw	1
  3915  0E40  00A8               	movwf	(_modbusSlaveData^(0+384)+8)	;volatile
  3916                           
  3917                           ;main.c: 231:             if(1 == bCalMode)
  3918  0E41  0351               	decf	_bCalMode^(0+384),w
  3919  0E42  1903               	btfsc	3,2
  3920  0E43  2E83               	goto	l6669
  3921  0E44  2E90               	goto	l6671
  3922  0E45                     l6659:
  3923                           
  3924                           ;main.c: 236:                         u16CalBuffer[0] = modbusSlaveData.ModbusHoldingReg
      +                          ister[6U];
  3925  0E45  082D               	movf	((_modbusSlaveData+1)^(0+384)+12),w	;volatile
  3926  0E46  00D9               	movwf	(main@u16CalBuffer+1)^(0+384)
  3927  0E47  082C               	movf	(_modbusSlaveData^(0+384)+12),w	;volatile
  3928  0E48  00D8               	movwf	main@u16CalBuffer^(0+384)
  3929                           
  3930                           ;main.c: 237:                         u16CalBuffer[1] = (uint16_t)fTdVoltage;
  3931  0E49  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  3932  0E4A  0021               	movlb	1	; select bank1
  3933  0E4B  00DA               	movwf	(___fltol@f1+3)^(0+128)
  3934  0E4C  0023               	movlb	3	; select bank3
  3935  0E4D  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  3936  0E4E  0021               	movlb	1	; select bank1
  3937  0E4F  00D9               	movwf	(___fltol@f1+2)^(0+128)
  3938  0E50  0023               	movlb	3	; select bank3
  3939  0E51  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  3940  0E52  0021               	movlb	1	; select bank1
  3941  0E53  00D8               	movwf	(___fltol@f1+1)^(0+128)
  3942  0E54  0023               	movlb	3	; select bank3
  3943  0E55  0868               	movf	main@fTdVoltage^(0+384),w
  3944  0E56  0021               	movlb	1	; select bank1
  3945  0E57  00D7               	movwf	___fltol@f1^(0+128)
  3946  0E58  3192  2218  318D   	fcall	___fltol
  3947  0E5B  0021               	movlb	1	; select bank1
  3948  0E5C  0858               	movf	(?___fltol+1)^(0+128),w
  3949  0E5D  0023               	movlb	3	; select bank3
  3950  0E5E  00DB               	movwf	((main@u16CalBuffer+1)^(0+384)+2)
  3951  0E5F  0021               	movlb	1	; select bank1
  3952  0E60  0857               	movf	?___fltol^(0+128),w
  3953  0E61  0023               	movlb	3	; select bank3
  3954  0E62  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  3955                           
  3956                           ;main.c: 238:                         break;
  3957  0E63  2E96               	goto	l6673
  3958  0E64                     l6663:
  3959                           
  3960                           ;main.c: 240:                         u16CalBuffer[2] = modbusSlaveData.ModbusHoldingReg
      +                          ister[6U];
  3961  0E64  082D               	movf	((_modbusSlaveData+1)^(0+384)+12),w	;volatile
  3962  0E65  00DD               	movwf	((main@u16CalBuffer+1)^(0+384)+4)
  3963  0E66  082C               	movf	(_modbusSlaveData^(0+384)+12),w	;volatile
  3964  0E67  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  3965                           
  3966                           ;main.c: 241:                         u16CalBuffer[3] = (uint16_t)fTdVoltage;
  3967  0E68  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  3968  0E69  0021               	movlb	1	; select bank1
  3969  0E6A  00DA               	movwf	(___fltol@f1+3)^(0+128)
  3970  0E6B  0023               	movlb	3	; select bank3
  3971  0E6C  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  3972  0E6D  0021               	movlb	1	; select bank1
  3973  0E6E  00D9               	movwf	(___fltol@f1+2)^(0+128)
  3974  0E6F  0023               	movlb	3	; select bank3
  3975  0E70  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  3976  0E71  0021               	movlb	1	; select bank1
  3977  0E72  00D8               	movwf	(___fltol@f1+1)^(0+128)
  3978  0E73  0023               	movlb	3	; select bank3
  3979  0E74  0868               	movf	main@fTdVoltage^(0+384),w
  3980  0E75  0021               	movlb	1	; select bank1
  3981  0E76  00D7               	movwf	___fltol@f1^(0+128)
  3982  0E77  3192  2218  318D   	fcall	___fltol
  3983  0E7A  0021               	movlb	1	; select bank1
  3984  0E7B  0858               	movf	(?___fltol+1)^(0+128),w
  3985  0E7C  0023               	movlb	3	; select bank3
  3986  0E7D  00DF               	movwf	((main@u16CalBuffer+1)^(0+384)+6)
  3987  0E7E  0021               	movlb	1	; select bank1
  3988  0E7F  0857               	movf	?___fltol^(0+128),w
  3989  0E80  0023               	movlb	3	; select bank3
  3990  0E81  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  3991                           
  3992                           ;main.c: 242:                         break;
  3993  0E82  2E96               	goto	l6673
  3994  0E83                     l6669:
  3995                           
  3996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3997                           ; Switch size 1, requested type "simple"
  3998                           ; Number of cases is 1, Range of values is 0 to 0
  3999                           ; switch strategies available:
  4000                           ; Name         Instructions Cycles
  4001                           ; simple_byte            4     3 (average)
  4002                           ; direct_byte            8     6 (fixed)
  4003                           ; jumptable            260     6 (fixed)
  4004                           ;	Chosen strategy is simple_byte
  4005  0E83  082B               	movf	((_modbusSlaveData+1)^(0+384)+10),w	;volatile
  4006  0E84  3A00               	xorlw	0	; case 0
  4007  0E85  1903               	skipnz
  4008  0E86  2E88               	goto	l6839
  4009  0E87  2E96               	goto	l887
  4010  0E88                     l6839:
  4011                           
  4012                           ; Switch size 1, requested type "simple"
  4013                           ; Number of cases is 2, Range of values is 1 to 2
  4014                           ; switch strategies available:
  4015                           ; Name         Instructions Cycles
  4016                           ; simple_byte            7     4 (average)
  4017                           ; direct_byte           13     9 (fixed)
  4018                           ; jumptable            263     9 (fixed)
  4019                           ;	Chosen strategy is simple_byte
  4020  0E88  082A               	movf	(_modbusSlaveData^(0+384)+10),w	;volatile
  4021  0E89  3A01               	xorlw	1	; case 1
  4022  0E8A  1903               	skipnz
  4023  0E8B  2E45               	goto	l6659
  4024  0E8C  3A03               	xorlw	3	; case 2
  4025  0E8D  1903               	skipnz
  4026  0E8E  2E64               	goto	l6663
  4027  0E8F  2E96               	goto	l887
  4028  0E90                     l6671:
  4029                           
  4030                           ;main.c: 249:             {;main.c: 250:                 modbusSlaveData.ModbusHoldingRe
      +                          gister[4U] = 0U;
  4031  0E90  01A8               	clrf	(_modbusSlaveData^(0+384)+8)	;volatile
  4032  0E91  01A9               	clrf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  4033                           
  4034                           ;main.c: 251:                 modbusSlaveData.ModbusHoldingRegister[5U] = 0U;
  4035  0E92  01AA               	clrf	(_modbusSlaveData^(0+384)+10)	;volatile
  4036  0E93  01AB               	clrf	((_modbusSlaveData+1)^(0+384)+10)	;volatile
  4037                           
  4038                           ;main.c: 252:                 modbusSlaveData.ModbusHoldingRegister[6U] = 0U;
  4039  0E94  01AC               	clrf	(_modbusSlaveData^(0+384)+12)	;volatile
  4040  0E95  01AD               	clrf	((_modbusSlaveData+1)^(0+384)+12)	;volatile
  4041  0E96                     l887:	
  4042                           ;main.c: 255:         }
  4043                           
  4044  0E96                     l6673:
  4045                           
  4046                           ;main.c: 257:         if(0 == bCalMode)
  4047  0E96  0851               	movf	_bCalMode^(0+384),w
  4048  0E97  1D03               	btfss	3,2
  4049  0E98  2FFD               	goto	l6695
  4050                           
  4051                           ;main.c: 258:         {;main.c: 259:             if((fTdVoltage >= u16CalBuffer[1]) && (
      +                          fTdVoltage <= u16CalBuffer[3]))
  4052  0E99  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4053  0E9A  0020               	movlb	0	; select bank0
  4054  0E9B  00BB               	movwf	___flge@ff1+3
  4055  0E9C  0023               	movlb	3	; select bank3
  4056  0E9D  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4057  0E9E  0020               	movlb	0	; select bank0
  4058  0E9F  00BA               	movwf	___flge@ff1+2
  4059  0EA0  0023               	movlb	3	; select bank3
  4060  0EA1  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4061  0EA2  0020               	movlb	0	; select bank0
  4062  0EA3  00B9               	movwf	___flge@ff1+1
  4063  0EA4  0023               	movlb	3	; select bank3
  4064  0EA5  0868               	movf	main@fTdVoltage^(0+384),w
  4065  0EA6  0020               	movlb	0	; select bank0
  4066  0EA7  00B8               	movwf	___flge@ff1
  4067  0EA8  0023               	movlb	3	; select bank3
  4068  0EA9  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4069  0EAA  0020               	movlb	0	; select bank0
  4070  0EAB  00AA               	movwf	___xxtofl@val
  4071  0EAC  0023               	movlb	3	; select bank3
  4072  0EAD  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4073  0EAE  0020               	movlb	0	; select bank0
  4074  0EAF  00AB               	movwf	___xxtofl@val+1
  4075  0EB0  01AC               	clrf	___xxtofl@val+2
  4076  0EB1  01AD               	clrf	___xxtofl@val+3
  4077  0EB2  3000               	movlw	0
  4078  0EB3  3188  200D  318D   	fcall	___xxtofl
  4079  0EB6  0020               	movlb	0	; select bank0
  4080  0EB7  082D               	movf	?___xxtofl+3,w
  4081  0EB8  00BF               	movwf	___flge@ff2+3
  4082  0EB9  082C               	movf	?___xxtofl+2,w
  4083  0EBA  00BE               	movwf	___flge@ff2+2
  4084  0EBB  082B               	movf	?___xxtofl+1,w
  4085  0EBC  00BD               	movwf	___flge@ff2+1
  4086  0EBD  082A               	movf	?___xxtofl,w
  4087  0EBE  00BC               	movwf	___flge@ff2
  4088  0EBF  3193  2360  318D   	fcall	___flge
  4089  0EC2  1C03               	btfss	3,0
  4090  0EC3  2F33               	goto	l6681
  4091  0EC4  0023               	movlb	3	; select bank3
  4092  0EC5  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4093  0EC6  0020               	movlb	0	; select bank0
  4094  0EC7  00AA               	movwf	___xxtofl@val
  4095  0EC8  0023               	movlb	3	; select bank3
  4096  0EC9  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4097  0ECA  0020               	movlb	0	; select bank0
  4098  0ECB  00AB               	movwf	___xxtofl@val+1
  4099  0ECC  01AC               	clrf	___xxtofl@val+2
  4100  0ECD  01AD               	clrf	___xxtofl@val+3
  4101  0ECE  3000               	movlw	0
  4102  0ECF  3188  200D  318D   	fcall	___xxtofl
  4103  0ED2  0020               	movlb	0	; select bank0
  4104  0ED3  082D               	movf	?___xxtofl+3,w
  4105  0ED4  00BB               	movwf	___flge@ff1+3
  4106  0ED5  082C               	movf	?___xxtofl+2,w
  4107  0ED6  00BA               	movwf	___flge@ff1+2
  4108  0ED7  082B               	movf	?___xxtofl+1,w
  4109  0ED8  00B9               	movwf	___flge@ff1+1
  4110  0ED9  082A               	movf	?___xxtofl,w
  4111  0EDA  00B8               	movwf	___flge@ff1
  4112  0EDB  0023               	movlb	3	; select bank3
  4113  0EDC  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4114  0EDD  0020               	movlb	0	; select bank0
  4115  0EDE  00BF               	movwf	___flge@ff2+3
  4116  0EDF  0023               	movlb	3	; select bank3
  4117  0EE0  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4118  0EE1  0020               	movlb	0	; select bank0
  4119  0EE2  00BE               	movwf	___flge@ff2+2
  4120  0EE3  0023               	movlb	3	; select bank3
  4121  0EE4  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4122  0EE5  0020               	movlb	0	; select bank0
  4123  0EE6  00BD               	movwf	___flge@ff2+1
  4124  0EE7  0023               	movlb	3	; select bank3
  4125  0EE8  0868               	movf	main@fTdVoltage^(0+384),w
  4126  0EE9  0020               	movlb	0	; select bank0
  4127  0EEA  00BC               	movwf	___flge@ff2
  4128  0EEB  3193  2360  318D   	fcall	___flge
  4129  0EEE  1C03               	btfss	3,0
  4130  0EEF  2F33               	goto	l6681
  4131                           
  4132                           ;main.c: 260:             {;main.c: 261:                 u16TdVal = map(fTdVoltage,u16Ca
      +                          lBuffer[1],u16CalBuffer[3],u16CalBuffer[0],u16CalBuffer[2]);
  4133  0EF0  0023               	movlb	3	; select bank3
  4134  0EF1  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4135  0EF2  0022               	movlb	2	; select bank2
  4136  0EF3  00A3               	movwf	(map@x+3)^(0+256)
  4137  0EF4  0023               	movlb	3	; select bank3
  4138  0EF5  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4139  0EF6  0022               	movlb	2	; select bank2
  4140  0EF7  00A2               	movwf	(map@x+2)^(0+256)
  4141  0EF8  0023               	movlb	3	; select bank3
  4142  0EF9  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4143  0EFA  0022               	movlb	2	; select bank2
  4144  0EFB  00A1               	movwf	(map@x+1)^(0+256)
  4145  0EFC  0023               	movlb	3	; select bank3
  4146  0EFD  0868               	movf	main@fTdVoltage^(0+384),w
  4147  0EFE  0022               	movlb	2	; select bank2
  4148  0EFF  00A0               	movwf	map@x^(0+256)
  4149  0F00  0023               	movlb	3	; select bank3
  4150  0F01  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4151  0F02  0022               	movlb	2	; select bank2
  4152  0F03  00A4               	movwf	map@in_min^(0+256)
  4153  0F04  0023               	movlb	3	; select bank3
  4154  0F05  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4155  0F06  0022               	movlb	2	; select bank2
  4156  0F07  00A5               	movwf	(map@in_min^(0+256)+1)
  4157  0F08  01A6               	clrf	(map@in_min^(0+256)+2)
  4158  0F09  01A7               	clrf	(map@in_min^(0+256)+3)
  4159  0F0A  0023               	movlb	3	; select bank3
  4160  0F0B  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4161  0F0C  0022               	movlb	2	; select bank2
  4162  0F0D  00A8               	movwf	map@in_max^(0+256)
  4163  0F0E  0023               	movlb	3	; select bank3
  4164  0F0F  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4165  0F10  0022               	movlb	2	; select bank2
  4166  0F11  00A9               	movwf	(map@in_max^(0+256)+1)
  4167  0F12  01AA               	clrf	(map@in_max^(0+256)+2)
  4168  0F13  01AB               	clrf	(map@in_max^(0+256)+3)
  4169  0F14  0023               	movlb	3	; select bank3
  4170  0F15  0858               	movf	main@u16CalBuffer^(0+384),w
  4171  0F16  0022               	movlb	2	; select bank2
  4172  0F17  00AC               	movwf	map@out_min^(0+256)
  4173  0F18  0023               	movlb	3	; select bank3
  4174  0F19  0859               	movf	(main@u16CalBuffer+1)^(0+384),w
  4175  0F1A  0022               	movlb	2	; select bank2
  4176  0F1B  00AD               	movwf	(map@out_min^(0+256)+1)
  4177  0F1C  01AE               	clrf	(map@out_min^(0+256)+2)
  4178  0F1D  01AF               	clrf	(map@out_min^(0+256)+3)
  4179  0F1E  0023               	movlb	3	; select bank3
  4180  0F1F  085C               	movf	(main@u16CalBuffer^(0+384)+4),w
  4181  0F20  0022               	movlb	2	; select bank2
  4182  0F21  00B0               	movwf	map@out_max^(0+256)
  4183  0F22  0023               	movlb	3	; select bank3
  4184  0F23  085D               	movf	((main@u16CalBuffer+1)^(0+384)+4),w
  4185  0F24  0022               	movlb	2	; select bank2
  4186  0F25  00B1               	movwf	(map@out_max^(0+256)+1)
  4187  0F26  01B2               	clrf	(map@out_max^(0+256)+2)
  4188  0F27  01B3               	clrf	(map@out_max^(0+256)+3)
  4189  0F28  3193  23DC  318D   	fcall	_map
  4190  0F2B  0022               	movlb	2	; select bank2
  4191  0F2C  0821               	movf	(?_map+1)^(0+256),w
  4192  0F2D  0023               	movlb	3	; select bank3
  4193  0F2E  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4194  0F2F  0022               	movlb	2	; select bank2
  4195  0F30  0820               	movf	?_map^(0+256),w
  4196  0F31  0023               	movlb	3	; select bank3
  4197  0F32  2F94               	goto	L1
  4198  0F33                     l6681:	
  4199                           ;main.c: 262:             }
  4200                           
  4201                           
  4202                           ;main.c: 264:             {;main.c: 265:                 if(fTdVoltage < u16CalBuffer[1]
      +                          )
  4203  0F33  0023               	movlb	3	; select bank3
  4204  0F34  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4205  0F35  0020               	movlb	0	; select bank0
  4206  0F36  00BB               	movwf	___flge@ff1+3
  4207  0F37  0023               	movlb	3	; select bank3
  4208  0F38  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4209  0F39  0020               	movlb	0	; select bank0
  4210  0F3A  00BA               	movwf	___flge@ff1+2
  4211  0F3B  0023               	movlb	3	; select bank3
  4212  0F3C  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4213  0F3D  0020               	movlb	0	; select bank0
  4214  0F3E  00B9               	movwf	___flge@ff1+1
  4215  0F3F  0023               	movlb	3	; select bank3
  4216  0F40  0868               	movf	main@fTdVoltage^(0+384),w
  4217  0F41  0020               	movlb	0	; select bank0
  4218  0F42  00B8               	movwf	___flge@ff1
  4219  0F43  0023               	movlb	3	; select bank3
  4220  0F44  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4221  0F45  0020               	movlb	0	; select bank0
  4222  0F46  00AA               	movwf	___xxtofl@val
  4223  0F47  0023               	movlb	3	; select bank3
  4224  0F48  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4225  0F49  0020               	movlb	0	; select bank0
  4226  0F4A  00AB               	movwf	___xxtofl@val+1
  4227  0F4B  01AC               	clrf	___xxtofl@val+2
  4228  0F4C  01AD               	clrf	___xxtofl@val+3
  4229  0F4D  3000               	movlw	0
  4230  0F4E  3188  200D  318D   	fcall	___xxtofl
  4231  0F51  0020               	movlb	0	; select bank0
  4232  0F52  082D               	movf	?___xxtofl+3,w
  4233  0F53  00BF               	movwf	___flge@ff2+3
  4234  0F54  082C               	movf	?___xxtofl+2,w
  4235  0F55  00BE               	movwf	___flge@ff2+2
  4236  0F56  082B               	movf	?___xxtofl+1,w
  4237  0F57  00BD               	movwf	___flge@ff2+1
  4238  0F58  082A               	movf	?___xxtofl,w
  4239  0F59  00BC               	movwf	___flge@ff2
  4240  0F5A  3193  2360  318D   	fcall	___flge
  4241  0F5D  1803               	btfsc	3,0
  4242  0F5E  2F64               	goto	l6685
  4243                           
  4244                           ;main.c: 266:                 {;main.c: 267:                     u16TdVal = u16CalBuffer
      +                          [0];
  4245  0F5F  0023               	movlb	3	; select bank3
  4246  0F60  0859               	movf	(main@u16CalBuffer+1)^(0+384),w
  4247  0F61  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4248  0F62  0858               	movf	main@u16CalBuffer^(0+384),w
  4249  0F63  2F94               	goto	L1
  4250  0F64                     l6685:	
  4251                           ;main.c: 268:                 }
  4252                           
  4253  0F64  0023               	movlb	3	; select bank3
  4254  0F65  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4255  0F66  0020               	movlb	0	; select bank0
  4256  0F67  00AA               	movwf	___xxtofl@val
  4257  0F68  0023               	movlb	3	; select bank3
  4258  0F69  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4259  0F6A  0020               	movlb	0	; select bank0
  4260  0F6B  00AB               	movwf	___xxtofl@val+1
  4261  0F6C  01AC               	clrf	___xxtofl@val+2
  4262  0F6D  01AD               	clrf	___xxtofl@val+3
  4263  0F6E  3000               	movlw	0
  4264  0F6F  3188  200D  318D   	fcall	___xxtofl
  4265  0F72  0020               	movlb	0	; select bank0
  4266  0F73  082D               	movf	?___xxtofl+3,w
  4267  0F74  00BB               	movwf	___flge@ff1+3
  4268  0F75  082C               	movf	?___xxtofl+2,w
  4269  0F76  00BA               	movwf	___flge@ff1+2
  4270  0F77  082B               	movf	?___xxtofl+1,w
  4271  0F78  00B9               	movwf	___flge@ff1+1
  4272  0F79  082A               	movf	?___xxtofl,w
  4273  0F7A  00B8               	movwf	___flge@ff1
  4274  0F7B  0023               	movlb	3	; select bank3
  4275  0F7C  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4276  0F7D  0020               	movlb	0	; select bank0
  4277  0F7E  00BF               	movwf	___flge@ff2+3
  4278  0F7F  0023               	movlb	3	; select bank3
  4279  0F80  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4280  0F81  0020               	movlb	0	; select bank0
  4281  0F82  00BE               	movwf	___flge@ff2+2
  4282  0F83  0023               	movlb	3	; select bank3
  4283  0F84  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4284  0F85  0020               	movlb	0	; select bank0
  4285  0F86  00BD               	movwf	___flge@ff2+1
  4286  0F87  0023               	movlb	3	; select bank3
  4287  0F88  0868               	movf	main@fTdVoltage^(0+384),w
  4288  0F89  0020               	movlb	0	; select bank0
  4289  0F8A  00BC               	movwf	___flge@ff2
  4290  0F8B  3193  2360  318D   	fcall	___flge
  4291  0F8E  1803               	btfsc	3,0
  4292  0F8F  2F95               	goto	l897
  4293                           
  4294                           ;main.c: 270:                 {;main.c: 271:                     u16TdVal = u16CalBuffer
      +                          [2];
  4295  0F90  0023               	movlb	3	; select bank3
  4296  0F91  085D               	movf	((main@u16CalBuffer+1)^(0+384)+4),w
  4297  0F92  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4298  0F93  085C               	movf	(main@u16CalBuffer^(0+384)+4),w
  4299  0F94                     L1:
  4300  0F94  00D2               	movwf	main@u16TdVal^(0+384)
  4301  0F95                     l897:	
  4302                           ;main.c: 273:             }
  4303                           
  4304                           
  4305                           ;main.c: 276:             modbusSlaveData.ModbusHoldingRegister[0U] = u16TdVal;
  4306  0F95  0023               	movlb	3	; select bank3
  4307  0F96  0853               	movf	(main@u16TdVal+1)^(0+384),w
  4308  0F97  00A1               	movwf	(_modbusSlaveData+1)^(0+384)	;volatile
  4309  0F98  0852               	movf	main@u16TdVal^(0+384),w
  4310  0F99  00A0               	movwf	_modbusSlaveData^(0+384)	;volatile
  4311  0F9A                     L2:
  4312                           
  4313                           ;main.c: 277:             modbusSlaveData.ModbusHoldingRegister[1U] = (uint16_t)fTdVolta
      +                          ge;
  4314  0F9A  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4315  0F9B  0021               	movlb	1	; select bank1
  4316  0F9C  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4317  0F9D  0023               	movlb	3	; select bank3
  4318  0F9E  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4319  0F9F  0021               	movlb	1	; select bank1
  4320  0FA0  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4321  0FA1  0023               	movlb	3	; select bank3
  4322  0FA2  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4323  0FA3  0021               	movlb	1	; select bank1
  4324  0FA4  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4325  0FA5  0023               	movlb	3	; select bank3
  4326  0FA6  0868               	movf	main@fTdVoltage^(0+384),w
  4327  0FA7  0021               	movlb	1	; select bank1
  4328  0FA8  00D7               	movwf	___fltol@f1^(0+128)
  4329  0FA9  3192  2218  318D   	fcall	___fltol
  4330  0FAC  0021               	movlb	1	; select bank1
  4331  0FAD  0858               	movf	(?___fltol+1)^(0+128),w
  4332  0FAE  0023               	movlb	3	; select bank3
  4333  0FAF  00A3               	movwf	((_modbusSlaveData+1)^(0+384)+2)	;volatile
  4334  0FB0  0021               	movlb	1	; select bank1
  4335  0FB1  0857               	movf	?___fltol^(0+128),w
  4336  0FB2  0023               	movlb	3	; select bank3
  4337  0FB3  00A2               	movwf	(_modbusSlaveData^(0+384)+2)	;volatile
  4338                           
  4339                           ;main.c: 278:             modbusSlaveData.ModbusHoldingRegister[2U] = (uint16_t)(tempNTC
      +                           * 100.0f);
  4340  0FB4  0850               	movf	(_tempNTC+3)^(0+384),w
  4341  0FB5  0021               	movlb	1	; select bank1
  4342  0FB6  00AF               	movwf	(___flmul@a+3)^(0+128)
  4343  0FB7  0023               	movlb	3	; select bank3
  4344  0FB8  084F               	movf	(_tempNTC+2)^(0+384),w
  4345  0FB9  0021               	movlb	1	; select bank1
  4346  0FBA  00AE               	movwf	(___flmul@a+2)^(0+128)
  4347  0FBB  0023               	movlb	3	; select bank3
  4348  0FBC  084E               	movf	(_tempNTC+1)^(0+384),w
  4349  0FBD  0021               	movlb	1	; select bank1
  4350  0FBE  00AD               	movwf	(___flmul@a+1)^(0+128)
  4351  0FBF  0023               	movlb	3	; select bank3
  4352  0FC0  084D               	movf	_tempNTC^(0+384),w
  4353  0FC1  0021               	movlb	1	; select bank1
  4354  0FC2  00AC               	movwf	___flmul@a^(0+128)
  4355  0FC3  3042               	movlw	66
  4356  0FC4  00AB               	movwf	(___flmul@b+3)^(0+128)
  4357  0FC5  30C8               	movlw	200
  4358  0FC6  00AA               	movwf	(___flmul@b+2)^(0+128)
  4359  0FC7  3000               	movlw	0
  4360  0FC8  00A9               	movwf	(___flmul@b+1)^(0+128)
  4361  0FC9  3000               	movlw	0
  4362  0FCA  00A8               	movwf	___flmul@b^(0+128)
  4363  0FCB  318A  2241  318D   	fcall	___flmul
  4364  0FCE  0021               	movlb	1	; select bank1
  4365  0FCF  082B               	movf	(?___flmul+3)^(0+128),w
  4366  0FD0  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4367  0FD1  082A               	movf	(?___flmul+2)^(0+128),w
  4368  0FD2  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4369  0FD3  0829               	movf	(?___flmul+1)^(0+128),w
  4370  0FD4  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4371  0FD5  0828               	movf	?___flmul^(0+128),w
  4372  0FD6  00D7               	movwf	___fltol@f1^(0+128)
  4373  0FD7  3192  2218  318D   	fcall	___fltol
  4374  0FDA  0021               	movlb	1	; select bank1
  4375  0FDB  0858               	movf	(?___fltol+1)^(0+128),w
  4376  0FDC  0023               	movlb	3	; select bank3
  4377  0FDD  00A5               	movwf	((_modbusSlaveData+1)^(0+384)+4)	;volatile
  4378  0FDE  0021               	movlb	1	; select bank1
  4379  0FDF  0857               	movf	?___fltol^(0+128),w
  4380  0FE0  0023               	movlb	3	; select bank3
  4381  0FE1  00A4               	movwf	(_modbusSlaveData^(0+384)+4)	;volatile
  4382                           
  4383                           ;main.c: 279:             modbusSlaveData.ModbusHoldingRegister[3U] = (uint16_t)fNtcVolt
      +                          age;
  4384  0FE2  0857               	movf	(main@fNtcVoltage+3)^(0+384),w
  4385  0FE3  0021               	movlb	1	; select bank1
  4386  0FE4  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4387  0FE5  0023               	movlb	3	; select bank3
  4388  0FE6  0856               	movf	(main@fNtcVoltage+2)^(0+384),w
  4389  0FE7  0021               	movlb	1	; select bank1
  4390  0FE8  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4391  0FE9  0023               	movlb	3	; select bank3
  4392  0FEA  0855               	movf	(main@fNtcVoltage+1)^(0+384),w
  4393  0FEB  0021               	movlb	1	; select bank1
  4394  0FEC  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4395  0FED  0023               	movlb	3	; select bank3
  4396  0FEE  0854               	movf	main@fNtcVoltage^(0+384),w
  4397  0FEF  0021               	movlb	1	; select bank1
  4398  0FF0  00D7               	movwf	___fltol@f1^(0+128)
  4399  0FF1  3192  2218  318D   	fcall	___fltol
  4400  0FF4  0021               	movlb	1	; select bank1
  4401  0FF5  0858               	movf	(?___fltol+1)^(0+128),w
  4402  0FF6  0023               	movlb	3	; select bank3
  4403  0FF7  00A7               	movwf	((_modbusSlaveData+1)^(0+384)+6)	;volatile
  4404  0FF8  0021               	movlb	1	; select bank1
  4405  0FF9  0857               	movf	?___fltol^(0+128),w
  4406  0FFA  0023               	movlb	3	; select bank3
  4407  0FFB  00A6               	movwf	(_modbusSlaveData^(0+384)+6)	;volatile
  4408                           
  4409                           ;main.c: 286:         }
  4410  0FFC  2DBA               	goto	l881
  4411  0FFD                     l6695:
  4412                           
  4413                           ;main.c: 288:         {;main.c: 289:             modbusSlaveData.ModbusHoldingRegister[0
      +                          U] = 0U;
  4414  0FFD  01A0               	clrf	_modbusSlaveData^(0+384)	;volatile
  4415  0FFE  01A1               	clrf	(_modbusSlaveData+1)^(0+384)	;volatile
  4416  0FFF  2F9A               	goto	L2
  4417  1000                     __end_of_main:	
  4418                           ;main.c: 291:             modbusSlaveData.ModbusHoldingRegister[2U] = (uint16_t)(tempNTC
      +                           * 100.0f);
  4419                           
  4420                           ;main.c: 290:             modbusSlaveData.ModbusHoldingRegister[1U] = (uint16_t)fTdVolta
      +                          ge;
  4421                           
  4422                           
  4423                           	psect	text1
  4424  13DC                     __ptext1:	
  4425 ;; *************** function _map *****************
  4426 ;; Defined at:
  4427 ;;		line 54 in file "main.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  x               4    0[BANK2 ] float 
  4430 ;;  in_min          4    4[BANK2 ] long 
  4431 ;;  in_max          4    8[BANK2 ] long 
  4432 ;;  out_min         4   12[BANK2 ] long 
  4433 ;;  out_max         4   16[BANK2 ] long 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  4    0[BANK2 ] long 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4445 ;;      Params:         0       0       0      20       0       0       0       0
  4446 ;;      Locals:         0       0       4       0       0       0       0       0
  4447 ;;      Temps:          0       0       8       0       0       0       0       0
  4448 ;;      Totals:         0       0      12      20       0       0       0       0
  4449 ;;Total ram usage:       32 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 6
  4452 ;; This function calls:
  4453 ;;		___fladd
  4454 ;;		___fldiv
  4455 ;;		___flmul
  4456 ;;		___flsub
  4457 ;;		___fltol
  4458 ;;		___xxtofl
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464  13DC                     _map:	
  4465                           ;psect for function _map
  4466                           
  4467                           
  4468                           ;main.c: 55:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4472  13DC  0022               	movlb	2	; select bank2
  4473  13DD  0823               	movf	(map@x+3)^(0+256),w
  4474  13DE  0021               	movlb	1	; select bank1
  4475  13DF  00A7               	movwf	(___flsub@b+3)^(0+128)
  4476  13E0  0022               	movlb	2	; select bank2
  4477  13E1  0822               	movf	(map@x+2)^(0+256),w
  4478  13E2  0021               	movlb	1	; select bank1
  4479  13E3  00A6               	movwf	(___flsub@b+2)^(0+128)
  4480  13E4  0022               	movlb	2	; select bank2
  4481  13E5  0821               	movf	(map@x+1)^(0+256),w
  4482  13E6  0021               	movlb	1	; select bank1
  4483  13E7  00A5               	movwf	(___flsub@b+1)^(0+128)
  4484  13E8  0022               	movlb	2	; select bank2
  4485  13E9  0820               	movf	map@x^(0+256),w
  4486  13EA  0021               	movlb	1	; select bank1
  4487  13EB  00A4               	movwf	___flsub@b^(0+128)
  4488  13EC  0022               	movlb	2	; select bank2
  4489  13ED  0827               	movf	(map@in_min+3)^(0+256),w
  4490  13EE  0020               	movlb	0	; select bank0
  4491  13EF  00AD               	movwf	___xxtofl@val+3
  4492  13F0  0022               	movlb	2	; select bank2
  4493  13F1  0826               	movf	(map@in_min+2)^(0+256),w
  4494  13F2  0020               	movlb	0	; select bank0
  4495  13F3  00AC               	movwf	___xxtofl@val+2
  4496  13F4  0022               	movlb	2	; select bank2
  4497  13F5  0825               	movf	(map@in_min+1)^(0+256),w
  4498  13F6  0020               	movlb	0	; select bank0
  4499  13F7  00AB               	movwf	___xxtofl@val+1
  4500  13F8  0022               	movlb	2	; select bank2
  4501  13F9  0824               	movf	map@in_min^(0+256),w
  4502  13FA  0020               	movlb	0	; select bank0
  4503  13FB  00AA               	movwf	___xxtofl@val
  4504  13FC  3001               	movlw	1
  4505  13FD  3188  200D  3193   	fcall	___xxtofl
  4506  1400  0020               	movlb	0	; select bank0
  4507  1401  082D               	movf	?___xxtofl+3,w
  4508  1402  0021               	movlb	1	; select bank1
  4509  1403  00A3               	movwf	(___flsub@a+3)^(0+128)
  4510  1404  0020               	movlb	0	; select bank0
  4511  1405  082C               	movf	?___xxtofl+2,w
  4512  1406  0021               	movlb	1	; select bank1
  4513  1407  00A2               	movwf	(___flsub@a+2)^(0+128)
  4514  1408  0020               	movlb	0	; select bank0
  4515  1409  082B               	movf	?___xxtofl+1,w
  4516  140A  0021               	movlb	1	; select bank1
  4517  140B  00A1               	movwf	(___flsub@a+1)^(0+128)
  4518  140C  0020               	movlb	0	; select bank0
  4519  140D  082A               	movf	?___xxtofl,w
  4520  140E  0021               	movlb	1	; select bank1
  4521  140F  00A0               	movwf	___flsub@a^(0+128)
  4522  1410  3190  20C9  3193   	fcall	___flsub
  4523  1413  0021               	movlb	1	; select bank1
  4524  1414  0823               	movf	(?___flsub+3)^(0+128),w
  4525  1415  00AF               	movwf	(___flmul@a+3)^(0+128)
  4526  1416  0822               	movf	(?___flsub+2)^(0+128),w
  4527  1417  00AE               	movwf	(___flmul@a+2)^(0+128)
  4528  1418  0821               	movf	(?___flsub+1)^(0+128),w
  4529  1419  00AD               	movwf	(___flmul@a+1)^(0+128)
  4530  141A  0820               	movf	?___flsub^(0+128),w
  4531  141B  00AC               	movwf	___flmul@a^(0+128)
  4532  141C  0022               	movlb	2	; select bank2
  4533  141D  082C               	movf	map@out_min^(0+256),w
  4534  141E  0230               	subwf	map@out_max^(0+256),w
  4535  141F  0021               	movlb	1	; select bank1
  4536  1420  00E2               	movwf	??_map^(0+128)
  4537  1421  0022               	movlb	2	; select bank2
  4538  1422  082D               	movf	(map@out_min+1)^(0+256),w
  4539  1423  3B31               	subwfb	(map@out_max+1)^(0+256),w
  4540  1424  0021               	movlb	1	; select bank1
  4541  1425  00E3               	movwf	(??_map^(0+128)+1)
  4542  1426  0022               	movlb	2	; select bank2
  4543  1427  082E               	movf	(map@out_min+2)^(0+256),w
  4544  1428  3B32               	subwfb	(map@out_max+2)^(0+256),w
  4545  1429  0021               	movlb	1	; select bank1
  4546  142A  00E4               	movwf	(??_map^(0+128)+2)
  4547  142B  0022               	movlb	2	; select bank2
  4548  142C  082F               	movf	(map@out_min+3)^(0+256),w
  4549  142D  3B33               	subwfb	(map@out_max+3)^(0+256),w
  4550  142E  0021               	movlb	1	; select bank1
  4551  142F  00E5               	movwf	(??_map^(0+128)+3)
  4552  1430  0865               	movf	(??_map+3)^(0+128),w
  4553  1431  0020               	movlb	0	; select bank0
  4554  1432  00AD               	movwf	___xxtofl@val+3
  4555  1433  0021               	movlb	1	; select bank1
  4556  1434  0864               	movf	(??_map+2)^(0+128),w
  4557  1435  0020               	movlb	0	; select bank0
  4558  1436  00AC               	movwf	___xxtofl@val+2
  4559  1437  0021               	movlb	1	; select bank1
  4560  1438  0863               	movf	(??_map+1)^(0+128),w
  4561  1439  0020               	movlb	0	; select bank0
  4562  143A  00AB               	movwf	___xxtofl@val+1
  4563  143B  0021               	movlb	1	; select bank1
  4564  143C  0862               	movf	??_map^(0+128),w
  4565  143D  0020               	movlb	0	; select bank0
  4566  143E  00AA               	movwf	___xxtofl@val
  4567  143F  3001               	movlw	1
  4568  1440  3188  200D  3193   	fcall	___xxtofl
  4569  1443  0020               	movlb	0	; select bank0
  4570  1444  082D               	movf	?___xxtofl+3,w
  4571  1445  0021               	movlb	1	; select bank1
  4572  1446  00AB               	movwf	(___flmul@b+3)^(0+128)
  4573  1447  0020               	movlb	0	; select bank0
  4574  1448  082C               	movf	?___xxtofl+2,w
  4575  1449  0021               	movlb	1	; select bank1
  4576  144A  00AA               	movwf	(___flmul@b+2)^(0+128)
  4577  144B  0020               	movlb	0	; select bank0
  4578  144C  082B               	movf	?___xxtofl+1,w
  4579  144D  0021               	movlb	1	; select bank1
  4580  144E  00A9               	movwf	(___flmul@b+1)^(0+128)
  4581  144F  0020               	movlb	0	; select bank0
  4582  1450  082A               	movf	?___xxtofl,w
  4583  1451  0021               	movlb	1	; select bank1
  4584  1452  00A8               	movwf	___flmul@b^(0+128)
  4585  1453  318A  2241  3193   	fcall	___flmul
  4586  1456  0021               	movlb	1	; select bank1
  4587  1457  082B               	movf	(?___flmul+3)^(0+128),w
  4588  1458  00C4               	movwf	(___fldiv@b+3)^(0+128)
  4589  1459  082A               	movf	(?___flmul+2)^(0+128),w
  4590  145A  00C3               	movwf	(___fldiv@b+2)^(0+128)
  4591  145B  0829               	movf	(?___flmul+1)^(0+128),w
  4592  145C  00C2               	movwf	(___fldiv@b+1)^(0+128)
  4593  145D  0828               	movf	?___flmul^(0+128),w
  4594  145E  00C1               	movwf	___fldiv@b^(0+128)
  4595  145F  0022               	movlb	2	; select bank2
  4596  1460  0824               	movf	map@in_min^(0+256),w
  4597  1461  0228               	subwf	map@in_max^(0+256),w
  4598  1462  0021               	movlb	1	; select bank1
  4599  1463  00E6               	movwf	(??_map+4)^(0+128)
  4600  1464  0022               	movlb	2	; select bank2
  4601  1465  0825               	movf	(map@in_min+1)^(0+256),w
  4602  1466  3B29               	subwfb	(map@in_max+1)^(0+256),w
  4603  1467  0021               	movlb	1	; select bank1
  4604  1468  00E7               	movwf	((??_map+4)^(0+128)+1)
  4605  1469  0022               	movlb	2	; select bank2
  4606  146A  0826               	movf	(map@in_min+2)^(0+256),w
  4607  146B  3B2A               	subwfb	(map@in_max+2)^(0+256),w
  4608  146C  0021               	movlb	1	; select bank1
  4609  146D  00E8               	movwf	((??_map+4)^(0+128)+2)
  4610  146E  0022               	movlb	2	; select bank2
  4611  146F  0827               	movf	(map@in_min+3)^(0+256),w
  4612  1470  3B2B               	subwfb	(map@in_max+3)^(0+256),w
  4613  1471  0021               	movlb	1	; select bank1
  4614  1472  00E9               	movwf	((??_map+4)^(0+128)+3)
  4615  1473  0869               	movf	(??_map+7)^(0+128),w
  4616  1474  0020               	movlb	0	; select bank0
  4617  1475  00AD               	movwf	___xxtofl@val+3
  4618  1476  0021               	movlb	1	; select bank1
  4619  1477  0868               	movf	(??_map+6)^(0+128),w
  4620  1478  0020               	movlb	0	; select bank0
  4621  1479  00AC               	movwf	___xxtofl@val+2
  4622  147A  0021               	movlb	1	; select bank1
  4623  147B  0867               	movf	(??_map+5)^(0+128),w
  4624  147C  0020               	movlb	0	; select bank0
  4625  147D  00AB               	movwf	___xxtofl@val+1
  4626  147E  0021               	movlb	1	; select bank1
  4627  147F  0866               	movf	(??_map+4)^(0+128),w
  4628  1480  0020               	movlb	0	; select bank0
  4629  1481  00AA               	movwf	___xxtofl@val
  4630  1482  3001               	movlw	1
  4631  1483  3188  200D  3193   	fcall	___xxtofl
  4632  1486  0020               	movlb	0	; select bank0
  4633  1487  082D               	movf	?___xxtofl+3,w
  4634  1488  0021               	movlb	1	; select bank1
  4635  1489  00C0               	movwf	(___fldiv@a+3)^(0+128)
  4636  148A  0020               	movlb	0	; select bank0
  4637  148B  082C               	movf	?___xxtofl+2,w
  4638  148C  0021               	movlb	1	; select bank1
  4639  148D  00BF               	movwf	(___fldiv@a+2)^(0+128)
  4640  148E  0020               	movlb	0	; select bank0
  4641  148F  082B               	movf	?___xxtofl+1,w
  4642  1490  0021               	movlb	1	; select bank1
  4643  1491  00BE               	movwf	(___fldiv@a+1)^(0+128)
  4644  1492  0020               	movlb	0	; select bank0
  4645  1493  082A               	movf	?___xxtofl,w
  4646  1494  0021               	movlb	1	; select bank1
  4647  1495  00BD               	movwf	___fldiv@a^(0+128)
  4648  1496  3194  24F4  3193   	fcall	___fldiv
  4649  1499  0021               	movlb	1	; select bank1
  4650  149A  0840               	movf	(?___fldiv+3)^(0+128),w
  4651  149B  00ED               	movwf	(_map$2275+3)^(0+128)
  4652  149C  083F               	movf	(?___fldiv+2)^(0+128),w
  4653  149D  00EC               	movwf	(_map$2275+2)^(0+128)
  4654  149E  083E               	movf	(?___fldiv+1)^(0+128),w
  4655  149F  00EB               	movwf	(_map$2275+1)^(0+128)
  4656  14A0  083D               	movf	?___fldiv^(0+128),w
  4657  14A1  00EA               	movwf	_map$2275^(0+128)
  4658                           
  4659                           ;main.c: 55:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  4660  14A2  086D               	movf	(_map$2275+3)^(0+128),w
  4661  14A3  0020               	movlb	0	; select bank0
  4662  14A4  00BF               	movwf	___fladd@a+3
  4663  14A5  0021               	movlb	1	; select bank1
  4664  14A6  086C               	movf	(_map$2275+2)^(0+128),w
  4665  14A7  0020               	movlb	0	; select bank0
  4666  14A8  00BE               	movwf	___fladd@a+2
  4667  14A9  0021               	movlb	1	; select bank1
  4668  14AA  086B               	movf	(_map$2275+1)^(0+128),w
  4669  14AB  0020               	movlb	0	; select bank0
  4670  14AC  00BD               	movwf	___fladd@a+1
  4671  14AD  0021               	movlb	1	; select bank1
  4672  14AE  086A               	movf	_map$2275^(0+128),w
  4673  14AF  0020               	movlb	0	; select bank0
  4674  14B0  00BC               	movwf	___fladd@a
  4675  14B1  0022               	movlb	2	; select bank2
  4676  14B2  082F               	movf	(map@out_min+3)^(0+256),w
  4677  14B3  0020               	movlb	0	; select bank0
  4678  14B4  00AD               	movwf	___xxtofl@val+3
  4679  14B5  0022               	movlb	2	; select bank2
  4680  14B6  082E               	movf	(map@out_min+2)^(0+256),w
  4681  14B7  0020               	movlb	0	; select bank0
  4682  14B8  00AC               	movwf	___xxtofl@val+2
  4683  14B9  0022               	movlb	2	; select bank2
  4684  14BA  082D               	movf	(map@out_min+1)^(0+256),w
  4685  14BB  0020               	movlb	0	; select bank0
  4686  14BC  00AB               	movwf	___xxtofl@val+1
  4687  14BD  0022               	movlb	2	; select bank2
  4688  14BE  082C               	movf	map@out_min^(0+256),w
  4689  14BF  0020               	movlb	0	; select bank0
  4690  14C0  00AA               	movwf	___xxtofl@val
  4691  14C1  3001               	movlw	1
  4692  14C2  3188  200D  3193   	fcall	___xxtofl
  4693  14C5  0020               	movlb	0	; select bank0
  4694  14C6  082D               	movf	?___xxtofl+3,w
  4695  14C7  00BB               	movwf	___fladd@b+3
  4696  14C8  082C               	movf	?___xxtofl+2,w
  4697  14C9  00BA               	movwf	___fladd@b+2
  4698  14CA  082B               	movf	?___xxtofl+1,w
  4699  14CB  00B9               	movwf	___fladd@b+1
  4700  14CC  082A               	movf	?___xxtofl,w
  4701  14CD  00B8               	movwf	___fladd@b
  4702  14CE  3185  25F9  3193   	fcall	___fladd
  4703  14D1  0020               	movlb	0	; select bank0
  4704  14D2  083B               	movf	?___fladd+3,w
  4705  14D3  0021               	movlb	1	; select bank1
  4706  14D4  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4707  14D5  0020               	movlb	0	; select bank0
  4708  14D6  083A               	movf	?___fladd+2,w
  4709  14D7  0021               	movlb	1	; select bank1
  4710  14D8  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4711  14D9  0020               	movlb	0	; select bank0
  4712  14DA  0839               	movf	?___fladd+1,w
  4713  14DB  0021               	movlb	1	; select bank1
  4714  14DC  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4715  14DD  0020               	movlb	0	; select bank0
  4716  14DE  0838               	movf	?___fladd,w
  4717  14DF  0021               	movlb	1	; select bank1
  4718  14E0  00D7               	movwf	___fltol@f1^(0+128)
  4719  14E1  3192  2218         	fcall	___fltol
  4720  14E3  0021               	movlb	1	; select bank1
  4721  14E4  085A               	movf	(?___fltol+3)^(0+128),w
  4722  14E5  0022               	movlb	2	; select bank2
  4723  14E6  00A3               	movwf	(?_map+3)^(0+256)
  4724  14E7  0021               	movlb	1	; select bank1
  4725  14E8  0859               	movf	(?___fltol+2)^(0+128),w
  4726  14E9  0022               	movlb	2	; select bank2
  4727  14EA  00A2               	movwf	(?_map+2)^(0+256)
  4728  14EB  0021               	movlb	1	; select bank1
  4729  14EC  0858               	movf	(?___fltol+1)^(0+128),w
  4730  14ED  0022               	movlb	2	; select bank2
  4731  14EE  00A1               	movwf	(?_map+1)^(0+256)
  4732  14EF  0021               	movlb	1	; select bank1
  4733  14F0  0857               	movf	?___fltol^(0+128),w
  4734  14F1  0022               	movlb	2	; select bank2
  4735  14F2  00A0               	movwf	?_map^(0+256)
  4736  14F3  0008               	return
  4737  14F4                     __end_of_map:
  4738                           
  4739                           	psect	text2
  4740  1218                     __ptext2:	
  4741 ;; *************** function ___fltol *****************
  4742 ;; Defined at:
  4743 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  f1              4   55[BANK1 ] long 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  exp1            1   65[BANK1 ] unsigned char 
  4748 ;;  sign1           1   64[BANK1 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  4   55[BANK1 ] long 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4758 ;;      Params:         0       0       4       0       0       0       0       0
  4759 ;;      Locals:         0       0       2       0       0       0       0       0
  4760 ;;      Temps:          0       0       5       0       0       0       0       0
  4761 ;;      Totals:         0       0      11       0       0       0       0       0
  4762 ;;Total ram usage:       11 bytes
  4763 ;; Hardware stack levels used: 1
  4764 ;; Hardware stack levels required when called: 4
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_map
  4769 ;;		_main
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773  1218                     ___fltol:	
  4774                           ;psect for function ___fltol
  4775                           
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4779  1218  1003               	clrc
  4780  1219  0021               	movlb	1	; select bank1
  4781  121A  0D59               	rlf	(___fltol@f1+2)^(0+128),w
  4782  121B  0D5A               	rlf	(___fltol@f1+3)^(0+128),w
  4783  121C  00DB               	movwf	??___fltol^(0+128)
  4784  121D  085B               	movf	??___fltol^(0+128),w
  4785  121E  00E1               	movwf	___fltol@exp1^(0+128)
  4786  121F  0861               	movf	___fltol@exp1^(0+128),w
  4787  1220  1D03               	btfss	3,2
  4788  1221  2A2B               	goto	l6471
  4789  1222                     l6467:
  4790  1222  3000               	movlw	0
  4791  1223  00DA               	movwf	(?___fltol+3)^(0+128)
  4792  1224  3000               	movlw	0
  4793  1225  00D9               	movwf	(?___fltol+2)^(0+128)
  4794  1226  3000               	movlw	0
  4795  1227  00D8               	movwf	(?___fltol+1)^(0+128)
  4796  1228  3000               	movlw	0
  4797  1229  00D7               	movwf	?___fltol^(0+128)
  4798  122A  0008               	return
  4799  122B                     l6471:
  4800  122B  0857               	movf	___fltol@f1^(0+128),w
  4801  122C  00DB               	movwf	??___fltol^(0+128)
  4802  122D  0858               	movf	(___fltol@f1+1)^(0+128),w
  4803  122E  00DC               	movwf	(??___fltol^(0+128)+1)
  4804  122F  0859               	movf	(___fltol@f1+2)^(0+128),w
  4805  1230  00DD               	movwf	(??___fltol^(0+128)+2)
  4806  1231  085A               	movf	(___fltol@f1+3)^(0+128),w
  4807  1232  00DE               	movwf	(??___fltol^(0+128)+3)
  4808  1233  301F               	movlw	31
  4809  1234                     u6125:
  4810  1234  36DE               	lsrf	(??___fltol^(0+128)+3),f
  4811  1235  0CDD               	rrf	(??___fltol^(0+128)+2),f
  4812  1236  0CDC               	rrf	(??___fltol^(0+128)+1),f
  4813  1237  0CDB               	rrf	??___fltol^(0+128),f
  4814  1238  0B89               	decfsz	9,f
  4815  1239  2A34               	goto	u6125
  4816  123A  085B               	movf	??___fltol^(0+128),w
  4817  123B  00DF               	movwf	(??___fltol+4)^(0+128)
  4818  123C  085F               	movf	(??___fltol+4)^(0+128),w
  4819  123D  00E0               	movwf	___fltol@sign1^(0+128)
  4820  123E  17D9               	bsf	(___fltol@f1^(0+128)+2),7
  4821  123F  30FF               	movlw	255
  4822  1240  05D7               	andwf	___fltol@f1^(0+128),f
  4823  1241  30FF               	movlw	255
  4824  1242  05D8               	andwf	(___fltol@f1+1)^(0+128),f
  4825  1243  30FF               	movlw	255
  4826  1244  05D9               	andwf	(___fltol@f1+2)^(0+128),f
  4827  1245  3000               	movlw	0
  4828  1246  05DA               	andwf	(___fltol@f1+3)^(0+128),f
  4829  1247  3096               	movlw	150
  4830  1248  02E1               	subwf	___fltol@exp1^(0+128),f
  4831  1249  1FE1               	btfss	___fltol@exp1^(0+128),7
  4832  124A  2A5E               	goto	l6489
  4833  124B  0861               	movf	___fltol@exp1^(0+128),w
  4834  124C  3A80               	xorlw	128
  4835  124D  3E97               	addlw	151
  4836  124E  1C03               	btfss	3,0
  4837  124F  2A22               	goto	l6467
  4838  1250                     l6487:
  4839  1250  3001               	movlw	1
  4840  1251                     u6155:
  4841  1251  36DA               	lsrf	(___fltol@f1+3)^(0+128),f
  4842  1252  0CD9               	rrf	(___fltol@f1+2)^(0+128),f
  4843  1253  0CD8               	rrf	(___fltol@f1+1)^(0+128),f
  4844  1254  0CD7               	rrf	___fltol@f1^(0+128),f
  4845  1255  0B89               	decfsz	9,f
  4846  1256  2A51               	goto	u6155
  4847  1257  3001               	movlw	1
  4848  1258  00DB               	movwf	??___fltol^(0+128)
  4849  1259  085B               	movf	??___fltol^(0+128),w
  4850  125A  07E1               	addwf	___fltol@exp1^(0+128),f
  4851  125B  1903               	btfsc	3,2
  4852  125C  2A6F               	goto	l6497
  4853  125D  2A50               	goto	l6487
  4854  125E                     l6489:
  4855  125E  3020               	movlw	32
  4856  125F  0261               	subwf	___fltol@exp1^(0+128),w
  4857  1260  1803               	btfsc	3,0
  4858  1261  2A22               	goto	l6467
  4859  1262                     l1254:
  4860  1262  0861               	movf	___fltol@exp1^(0+128),w
  4861  1263  1903               	btfsc	3,2
  4862  1264  2A6F               	goto	l6497
  4863  1265  3001               	movlw	1
  4864  1266                     u6185:
  4865  1266  35D7               	lslf	___fltol@f1^(0+128),f
  4866  1267  0DD8               	rlf	(___fltol@f1+1)^(0+128),f
  4867  1268  0DD9               	rlf	(___fltol@f1+2)^(0+128),f
  4868  1269  0DDA               	rlf	(___fltol@f1+3)^(0+128),f
  4869  126A  0B89               	decfsz	9,f
  4870  126B  2A66               	goto	u6185
  4871  126C  3001               	movlw	1
  4872  126D  02E1               	subwf	___fltol@exp1^(0+128),f
  4873  126E  2A62               	goto	l1254
  4874  126F                     l6497:
  4875  126F  0860               	movf	___fltol@sign1^(0+128),w
  4876  1270  1903               	btfsc	3,2
  4877  1271  0008               	return
  4878  1272  09D7               	comf	___fltol@f1^(0+128),f
  4879  1273  09D8               	comf	(___fltol@f1+1)^(0+128),f
  4880  1274  09D9               	comf	(___fltol@f1+2)^(0+128),f
  4881  1275  09DA               	comf	(___fltol@f1+3)^(0+128),f
  4882  1276  0AD7               	incf	___fltol@f1^(0+128),f
  4883  1277  1903               	skipnz
  4884  1278  0AD8               	incf	(___fltol@f1+1)^(0+128),f
  4885  1279  1903               	skipnz
  4886  127A  0AD9               	incf	(___fltol@f1+2)^(0+128),f
  4887  127B  1903               	skipnz
  4888  127C  0ADA               	incf	(___fltol@f1+3)^(0+128),f
  4889  127D  0008               	return
  4890  127E                     __end_of___fltol:
  4891                           
  4892                           	psect	text3
  4893  166E                     __ptext3:	
  4894 ;; *************** function _get_ntc_temperature *****************
  4895 ;; Defined at:
  4896 ;;		line 134 in file "main.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  adcVoltage      4   67[BANK1 ] float 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  temp            4   74[BANK2 ] float 
  4901 ;;  rntc            4   66[BANK2 ] float 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4911 ;;      Params:         0       0       4       0       0       0       0       0
  4912 ;;      Locals:         0       0       0      12       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0
  4914 ;;      Totals:         0       0       4      12       0       0       0       0
  4915 ;;Total ram usage:       16 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 7
  4918 ;; This function calls:
  4919 ;;		___fladd
  4920 ;;		___fldiv
  4921 ;;		___flsub
  4922 ;;		_logf
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928  166E                     _get_ntc_temperature:	
  4929                           ;psect for function _get_ntc_temperature
  4930                           
  4931                           
  4932                           ;main.c: 134: void get_ntc_temperature(float adcVoltage);main.c: 135: {;main.c: 136:    
      +                           adcVoltage /= 1000.0f;
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _get_ntc_temperature: [wreg+status,2+status,0+pclath+cstack]
  4936  166E  3044               	movlw	68
  4937  166F  0021               	movlb	1	; select bank1
  4938  1670  00C0               	movwf	(___fldiv@a+3)^(0+128)
  4939  1671  307A               	movlw	122
  4940  1672  00BF               	movwf	(___fldiv@a+2)^(0+128)
  4941  1673  3000               	movlw	0
  4942  1674  00BE               	movwf	(___fldiv@a+1)^(0+128)
  4943  1675  3000               	movlw	0
  4944  1676  00BD               	movwf	___fldiv@a^(0+128)
  4945  1677  0866               	movf	(get_ntc_temperature@adcVoltage+3)^(0+128),w
  4946  1678  00C4               	movwf	(___fldiv@b+3)^(0+128)
  4947  1679  0865               	movf	(get_ntc_temperature@adcVoltage+2)^(0+128),w
  4948  167A  00C3               	movwf	(___fldiv@b+2)^(0+128)
  4949  167B  0864               	movf	(get_ntc_temperature@adcVoltage+1)^(0+128),w
  4950  167C  00C2               	movwf	(___fldiv@b+1)^(0+128)
  4951  167D  0863               	movf	get_ntc_temperature@adcVoltage^(0+128),w
  4952  167E  00C1               	movwf	___fldiv@b^(0+128)
  4953  167F  3194  24F4  3196   	fcall	___fldiv
  4954  1682  0021               	movlb	1	; select bank1
  4955  1683  0840               	movf	(?___fldiv+3)^(0+128),w
  4956  1684  00E6               	movwf	(get_ntc_temperature@adcVoltage+3)^(0+128)
  4957  1685  083F               	movf	(?___fldiv+2)^(0+128),w
  4958  1686  00E5               	movwf	(get_ntc_temperature@adcVoltage+2)^(0+128)
  4959  1687  083E               	movf	(?___fldiv+1)^(0+128),w
  4960  1688  00E4               	movwf	(get_ntc_temperature@adcVoltage+1)^(0+128)
  4961  1689  083D               	movf	?___fldiv^(0+128),w
  4962  168A  00E3               	movwf	get_ntc_temperature@adcVoltage^(0+128)
  4963                           
  4964                           ;main.c: 137:     float rntc = (float)33000.0f / (((float)5.0 / (float)adcVoltage ) - 1.
      +                          0f);
  4965  168B  30BF               	movlw	191
  4966  168C  0020               	movlb	0	; select bank0
  4967  168D  00BB               	movwf	___fladd@b+3
  4968  168E  3080               	movlw	128
  4969  168F  00BA               	movwf	___fladd@b+2
  4970  1690  3000               	movlw	0
  4971  1691  00B9               	movwf	___fladd@b+1
  4972  1692  3000               	movlw	0
  4973  1693  00B8               	movwf	___fladd@b
  4974  1694  0021               	movlb	1	; select bank1
  4975  1695  0866               	movf	(get_ntc_temperature@adcVoltage+3)^(0+128),w
  4976  1696  00C0               	movwf	(___fldiv@a+3)^(0+128)
  4977  1697  0865               	movf	(get_ntc_temperature@adcVoltage+2)^(0+128),w
  4978  1698  00BF               	movwf	(___fldiv@a+2)^(0+128)
  4979  1699  0864               	movf	(get_ntc_temperature@adcVoltage+1)^(0+128),w
  4980  169A  00BE               	movwf	(___fldiv@a+1)^(0+128)
  4981  169B  0863               	movf	get_ntc_temperature@adcVoltage^(0+128),w
  4982  169C  00BD               	movwf	___fldiv@a^(0+128)
  4983  169D  3040               	movlw	64
  4984  169E  00C4               	movwf	(___fldiv@b+3)^(0+128)
  4985  169F  30A0               	movlw	160
  4986  16A0  00C3               	movwf	(___fldiv@b+2)^(0+128)
  4987  16A1  3000               	movlw	0
  4988  16A2  00C2               	movwf	(___fldiv@b+1)^(0+128)
  4989  16A3  3000               	movlw	0
  4990  16A4  00C1               	movwf	___fldiv@b^(0+128)
  4991  16A5  3194  24F4  3196   	fcall	___fldiv
  4992  16A8  0021               	movlb	1	; select bank1
  4993  16A9  0840               	movf	(?___fldiv+3)^(0+128),w
  4994  16AA  0020               	movlb	0	; select bank0
  4995  16AB  00BF               	movwf	___fladd@a+3
  4996  16AC  0021               	movlb	1	; select bank1
  4997  16AD  083F               	movf	(?___fldiv+2)^(0+128),w
  4998  16AE  0020               	movlb	0	; select bank0
  4999  16AF  00BE               	movwf	___fladd@a+2
  5000  16B0  0021               	movlb	1	; select bank1
  5001  16B1  083E               	movf	(?___fldiv+1)^(0+128),w
  5002  16B2  0020               	movlb	0	; select bank0
  5003  16B3  00BD               	movwf	___fladd@a+1
  5004  16B4  0021               	movlb	1	; select bank1
  5005  16B5  083D               	movf	?___fldiv^(0+128),w
  5006  16B6  0020               	movlb	0	; select bank0
  5007  16B7  00BC               	movwf	___fladd@a
  5008  16B8  3185  25F9  3196   	fcall	___fladd
  5009  16BB  0020               	movlb	0	; select bank0
  5010  16BC  083B               	movf	?___fladd+3,w
  5011  16BD  0022               	movlb	2	; select bank2
  5012  16BE  00E9               	movwf	(_get_ntc_temperature$2276+3)^(0+256)
  5013  16BF  0020               	movlb	0	; select bank0
  5014  16C0  083A               	movf	?___fladd+2,w
  5015  16C1  0022               	movlb	2	; select bank2
  5016  16C2  00E8               	movwf	(_get_ntc_temperature$2276+2)^(0+256)
  5017  16C3  0020               	movlb	0	; select bank0
  5018  16C4  0839               	movf	?___fladd+1,w
  5019  16C5  0022               	movlb	2	; select bank2
  5020  16C6  00E7               	movwf	(_get_ntc_temperature$2276+1)^(0+256)
  5021  16C7  0020               	movlb	0	; select bank0
  5022  16C8  0838               	movf	?___fladd,w
  5023  16C9  0022               	movlb	2	; select bank2
  5024  16CA  00E6               	movwf	_get_ntc_temperature$2276^(0+256)
  5025                           
  5026                           ;main.c: 137:     float rntc = (float)33000.0f / (((float)5.0 / (float)adcVoltage ) - 1.
      +                          0f);
  5027  16CB  0869               	movf	(_get_ntc_temperature$2276+3)^(0+256),w
  5028  16CC  0021               	movlb	1	; select bank1
  5029  16CD  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5030  16CE  0022               	movlb	2	; select bank2
  5031  16CF  0868               	movf	(_get_ntc_temperature$2276+2)^(0+256),w
  5032  16D0  0021               	movlb	1	; select bank1
  5033  16D1  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5034  16D2  0022               	movlb	2	; select bank2
  5035  16D3  0867               	movf	(_get_ntc_temperature$2276+1)^(0+256),w
  5036  16D4  0021               	movlb	1	; select bank1
  5037  16D5  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5038  16D6  0022               	movlb	2	; select bank2
  5039  16D7  0866               	movf	_get_ntc_temperature$2276^(0+256),w
  5040  16D8  0021               	movlb	1	; select bank1
  5041  16D9  00BD               	movwf	___fldiv@a^(0+128)
  5042  16DA  3047               	movlw	71
  5043  16DB  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5044  16DC  3000               	movlw	0
  5045  16DD  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5046  16DE  30E8               	movlw	232
  5047  16DF  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5048  16E0  3000               	movlw	0
  5049  16E1  00C1               	movwf	___fldiv@b^(0+128)
  5050  16E2  3194  24F4  3196   	fcall	___fldiv
  5051  16E5  0021               	movlb	1	; select bank1
  5052  16E6  0840               	movf	(?___fldiv+3)^(0+128),w
  5053  16E7  0022               	movlb	2	; select bank2
  5054  16E8  00E5               	movwf	(get_ntc_temperature@rntc+3)^(0+256)
  5055  16E9  0021               	movlb	1	; select bank1
  5056  16EA  083F               	movf	(?___fldiv+2)^(0+128),w
  5057  16EB  0022               	movlb	2	; select bank2
  5058  16EC  00E4               	movwf	(get_ntc_temperature@rntc+2)^(0+256)
  5059  16ED  0021               	movlb	1	; select bank1
  5060  16EE  083E               	movf	(?___fldiv+1)^(0+128),w
  5061  16EF  0022               	movlb	2	; select bank2
  5062  16F0  00E3               	movwf	(get_ntc_temperature@rntc+1)^(0+256)
  5063  16F1  0021               	movlb	1	; select bank1
  5064  16F2  083D               	movf	?___fldiv^(0+128),w
  5065  16F3  0022               	movlb	2	; select bank2
  5066  16F4  00E2               	movwf	get_ntc_temperature@rntc^(0+256)
  5067                           
  5068                           ;main.c: 138:     float temp;;main.c: 139:     temp = rntc / (float)10000.0f;
  5069  16F5  3046               	movlw	70
  5070  16F6  0021               	movlb	1	; select bank1
  5071  16F7  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5072  16F8  301C               	movlw	28
  5073  16F9  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5074  16FA  3040               	movlw	64
  5075  16FB  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5076  16FC  3000               	movlw	0
  5077  16FD  00BD               	movwf	___fldiv@a^(0+128)
  5078  16FE  0022               	movlb	2	; select bank2
  5079  16FF  0865               	movf	(get_ntc_temperature@rntc+3)^(0+256),w
  5080  1700  0021               	movlb	1	; select bank1
  5081  1701  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5082  1702  0022               	movlb	2	; select bank2
  5083  1703  0864               	movf	(get_ntc_temperature@rntc+2)^(0+256),w
  5084  1704  0021               	movlb	1	; select bank1
  5085  1705  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5086  1706  0022               	movlb	2	; select bank2
  5087  1707  0863               	movf	(get_ntc_temperature@rntc+1)^(0+256),w
  5088  1708  0021               	movlb	1	; select bank1
  5089  1709  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5090  170A  0022               	movlb	2	; select bank2
  5091  170B  0862               	movf	get_ntc_temperature@rntc^(0+256),w
  5092  170C  0021               	movlb	1	; select bank1
  5093  170D  00C1               	movwf	___fldiv@b^(0+128)
  5094  170E  3194  24F4  3196   	fcall	___fldiv
  5095  1711  0021               	movlb	1	; select bank1
  5096  1712  0840               	movf	(?___fldiv+3)^(0+128),w
  5097  1713  0022               	movlb	2	; select bank2
  5098  1714  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5099  1715  0021               	movlb	1	; select bank1
  5100  1716  083F               	movf	(?___fldiv+2)^(0+128),w
  5101  1717  0022               	movlb	2	; select bank2
  5102  1718  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5103  1719  0021               	movlb	1	; select bank1
  5104  171A  083E               	movf	(?___fldiv+1)^(0+128),w
  5105  171B  0022               	movlb	2	; select bank2
  5106  171C  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5107  171D  0021               	movlb	1	; select bank1
  5108  171E  083D               	movf	?___fldiv^(0+128),w
  5109  171F  0022               	movlb	2	; select bank2
  5110  1720  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5111                           
  5112                           ;main.c: 140:     temp = logf(temp);
  5113  1721  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5114  1722  0021               	movlb	1	; select bank1
  5115  1723  00DA               	movwf	(logf@x+3)^(0+128)
  5116  1724  0022               	movlb	2	; select bank2
  5117  1725  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5118  1726  0021               	movlb	1	; select bank1
  5119  1727  00D9               	movwf	(logf@x+2)^(0+128)
  5120  1728  0022               	movlb	2	; select bank2
  5121  1729  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5122  172A  0021               	movlb	1	; select bank1
  5123  172B  00D8               	movwf	(logf@x+1)^(0+128)
  5124  172C  0022               	movlb	2	; select bank2
  5125  172D  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5126  172E  0021               	movlb	1	; select bank1
  5127  172F  00D7               	movwf	logf@x^(0+128)
  5128  1730  3180  2065  3196   	fcall	_logf
  5129  1733  0021               	movlb	1	; select bank1
  5130  1734  085A               	movf	(?_logf+3)^(0+128),w
  5131  1735  0022               	movlb	2	; select bank2
  5132  1736  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5133  1737  0021               	movlb	1	; select bank1
  5134  1738  0859               	movf	(?_logf+2)^(0+128),w
  5135  1739  0022               	movlb	2	; select bank2
  5136  173A  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5137  173B  0021               	movlb	1	; select bank1
  5138  173C  0858               	movf	(?_logf+1)^(0+128),w
  5139  173D  0022               	movlb	2	; select bank2
  5140  173E  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5141  173F  0021               	movlb	1	; select bank1
  5142  1740  0857               	movf	?_logf^(0+128),w
  5143  1741  0022               	movlb	2	; select bank2
  5144  1742  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5145                           
  5146                           ;main.c: 141:     temp /= (float)3950;
  5147  1743  3045               	movlw	69
  5148  1744  0021               	movlb	1	; select bank1
  5149  1745  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5150  1746  3076               	movlw	118
  5151  1747  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5152  1748  30E0               	movlw	224
  5153  1749  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5154  174A  3000               	movlw	0
  5155  174B  00BD               	movwf	___fldiv@a^(0+128)
  5156  174C  0022               	movlb	2	; select bank2
  5157  174D  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5158  174E  0021               	movlb	1	; select bank1
  5159  174F  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5160  1750  0022               	movlb	2	; select bank2
  5161  1751  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5162  1752  0021               	movlb	1	; select bank1
  5163  1753  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5164  1754  0022               	movlb	2	; select bank2
  5165  1755  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5166  1756  0021               	movlb	1	; select bank1
  5167  1757  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5168  1758  0022               	movlb	2	; select bank2
  5169  1759  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5170  175A  0021               	movlb	1	; select bank1
  5171  175B  00C1               	movwf	___fldiv@b^(0+128)
  5172  175C  3194  24F4  3196   	fcall	___fldiv
  5173  175F  0021               	movlb	1	; select bank1
  5174  1760  0840               	movf	(?___fldiv+3)^(0+128),w
  5175  1761  0022               	movlb	2	; select bank2
  5176  1762  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5177  1763  0021               	movlb	1	; select bank1
  5178  1764  083F               	movf	(?___fldiv+2)^(0+128),w
  5179  1765  0022               	movlb	2	; select bank2
  5180  1766  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5181  1767  0021               	movlb	1	; select bank1
  5182  1768  083E               	movf	(?___fldiv+1)^(0+128),w
  5183  1769  0022               	movlb	2	; select bank2
  5184  176A  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5185  176B  0021               	movlb	1	; select bank1
  5186  176C  083D               	movf	?___fldiv^(0+128),w
  5187  176D  0022               	movlb	2	; select bank2
  5188  176E  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5189                           
  5190                           ;main.c: 142:     temp += 1.0f / ((float)25.0f + 273.15f);
  5191  176F  303B               	movlw	59
  5192  1770  0020               	movlb	0	; select bank0
  5193  1771  00BB               	movwf	___fladd@b+3
  5194  1772  305B               	movlw	91
  5195  1773  00BA               	movwf	___fladd@b+2
  5196  1774  30CF               	movlw	207
  5197  1775  00B9               	movwf	___fladd@b+1
  5198  1776  300F               	movlw	15
  5199  1777  00B8               	movwf	___fladd@b
  5200  1778  0022               	movlb	2	; select bank2
  5201  1779  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5202  177A  0020               	movlb	0	; select bank0
  5203  177B  00BF               	movwf	___fladd@a+3
  5204  177C  0022               	movlb	2	; select bank2
  5205  177D  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5206  177E  0020               	movlb	0	; select bank0
  5207  177F  00BE               	movwf	___fladd@a+2
  5208  1780  0022               	movlb	2	; select bank2
  5209  1781  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5210  1782  0020               	movlb	0	; select bank0
  5211  1783  00BD               	movwf	___fladd@a+1
  5212  1784  0022               	movlb	2	; select bank2
  5213  1785  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5214  1786  0020               	movlb	0	; select bank0
  5215  1787  00BC               	movwf	___fladd@a
  5216  1788  3185  25F9  3196   	fcall	___fladd
  5217  178B  0020               	movlb	0	; select bank0
  5218  178C  083B               	movf	?___fladd+3,w
  5219  178D  0022               	movlb	2	; select bank2
  5220  178E  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5221  178F  0020               	movlb	0	; select bank0
  5222  1790  083A               	movf	?___fladd+2,w
  5223  1791  0022               	movlb	2	; select bank2
  5224  1792  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5225  1793  0020               	movlb	0	; select bank0
  5226  1794  0839               	movf	?___fladd+1,w
  5227  1795  0022               	movlb	2	; select bank2
  5228  1796  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5229  1797  0020               	movlb	0	; select bank0
  5230  1798  0838               	movf	?___fladd,w
  5231  1799  0022               	movlb	2	; select bank2
  5232  179A  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5233                           
  5234                           ;main.c: 143:     temp = 1.0f / temp;
  5235  179B  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5236  179C  0021               	movlb	1	; select bank1
  5237  179D  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5238  179E  0022               	movlb	2	; select bank2
  5239  179F  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5240  17A0  0021               	movlb	1	; select bank1
  5241  17A1  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5242  17A2  0022               	movlb	2	; select bank2
  5243  17A3  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5244  17A4  0021               	movlb	1	; select bank1
  5245  17A5  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5246  17A6  0022               	movlb	2	; select bank2
  5247  17A7  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5248  17A8  0021               	movlb	1	; select bank1
  5249  17A9  00BD               	movwf	___fldiv@a^(0+128)
  5250  17AA  303F               	movlw	63
  5251  17AB  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5252  17AC  3080               	movlw	128
  5253  17AD  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5254  17AE  3000               	movlw	0
  5255  17AF  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5256  17B0  3000               	movlw	0
  5257  17B1  00C1               	movwf	___fldiv@b^(0+128)
  5258  17B2  3194  24F4  3196   	fcall	___fldiv
  5259  17B5  0021               	movlb	1	; select bank1
  5260  17B6  0840               	movf	(?___fldiv+3)^(0+128),w
  5261  17B7  0022               	movlb	2	; select bank2
  5262  17B8  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5263  17B9  0021               	movlb	1	; select bank1
  5264  17BA  083F               	movf	(?___fldiv+2)^(0+128),w
  5265  17BB  0022               	movlb	2	; select bank2
  5266  17BC  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5267  17BD  0021               	movlb	1	; select bank1
  5268  17BE  083E               	movf	(?___fldiv+1)^(0+128),w
  5269  17BF  0022               	movlb	2	; select bank2
  5270  17C0  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5271  17C1  0021               	movlb	1	; select bank1
  5272  17C2  083D               	movf	?___fldiv^(0+128),w
  5273  17C3  0022               	movlb	2	; select bank2
  5274  17C4  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5275                           
  5276                           ;main.c: 144:     temp -= 273.15f;
  5277  17C5  3043               	movlw	67
  5278  17C6  0021               	movlb	1	; select bank1
  5279  17C7  00A3               	movwf	(___flsub@a+3)^(0+128)
  5280  17C8  3088               	movlw	136
  5281  17C9  00A2               	movwf	(___flsub@a+2)^(0+128)
  5282  17CA  3093               	movlw	147
  5283  17CB  00A1               	movwf	(___flsub@a+1)^(0+128)
  5284  17CC  3033               	movlw	51
  5285  17CD  00A0               	movwf	___flsub@a^(0+128)
  5286  17CE  0022               	movlb	2	; select bank2
  5287  17CF  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5288  17D0  0021               	movlb	1	; select bank1
  5289  17D1  00A7               	movwf	(___flsub@b+3)^(0+128)
  5290  17D2  0022               	movlb	2	; select bank2
  5291  17D3  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5292  17D4  0021               	movlb	1	; select bank1
  5293  17D5  00A6               	movwf	(___flsub@b+2)^(0+128)
  5294  17D6  0022               	movlb	2	; select bank2
  5295  17D7  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5296  17D8  0021               	movlb	1	; select bank1
  5297  17D9  00A5               	movwf	(___flsub@b+1)^(0+128)
  5298  17DA  0022               	movlb	2	; select bank2
  5299  17DB  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5300  17DC  0021               	movlb	1	; select bank1
  5301  17DD  00A4               	movwf	___flsub@b^(0+128)
  5302  17DE  3190  20C9         	fcall	___flsub
  5303  17E0  0021               	movlb	1	; select bank1
  5304  17E1  0823               	movf	(?___flsub+3)^(0+128),w
  5305  17E2  0022               	movlb	2	; select bank2
  5306  17E3  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5307  17E4  0021               	movlb	1	; select bank1
  5308  17E5  0822               	movf	(?___flsub+2)^(0+128),w
  5309  17E6  0022               	movlb	2	; select bank2
  5310  17E7  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5311  17E8  0021               	movlb	1	; select bank1
  5312  17E9  0821               	movf	(?___flsub+1)^(0+128),w
  5313  17EA  0022               	movlb	2	; select bank2
  5314  17EB  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5315  17EC  0021               	movlb	1	; select bank1
  5316  17ED  0820               	movf	?___flsub^(0+128),w
  5317  17EE  0022               	movlb	2	; select bank2
  5318  17EF  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5319                           
  5320                           ;main.c: 145:     tempNTC = temp;
  5321  17F0  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5322  17F1  0023               	movlb	3	; select bank3
  5323  17F2  00D0               	movwf	(_tempNTC+3)^(0+384)
  5324  17F3  0022               	movlb	2	; select bank2
  5325  17F4  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5326  17F5  0023               	movlb	3	; select bank3
  5327  17F6  00CF               	movwf	(_tempNTC+2)^(0+384)
  5328  17F7  0022               	movlb	2	; select bank2
  5329  17F8  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5330  17F9  0023               	movlb	3	; select bank3
  5331  17FA  00CE               	movwf	(_tempNTC+1)^(0+384)
  5332  17FB  0022               	movlb	2	; select bank2
  5333  17FC  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5334  17FD  0023               	movlb	3	; select bank3
  5335  17FE  00CD               	movwf	_tempNTC^(0+384)
  5336  17FF  0008               	return
  5337  1800                     __end_of_get_ntc_temperature:
  5338                           
  5339                           	psect	text4
  5340  0065                     __ptext4:	
  5341 ;; *************** function _logf *****************
  5342 ;; Defined at:
  5343 ;;		line 29 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\logf.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  x               4   55[BANK1 ] float 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  ix              4   62[BANK2 ] unsigned long 
  5348 ;;  f               4   58[BANK2 ] float 
  5349 ;;  u               4   54[BANK2 ] struct .
  5350 ;;  w               4   46[BANK2 ] float 
  5351 ;;  z               4   42[BANK2 ] float 
  5352 ;;  s               4   38[BANK2 ] float 
  5353 ;;  dk              4   34[BANK2 ] float 
  5354 ;;  hfsq            4   30[BANK2 ] float 
  5355 ;;  t2              4    8[BANK2 ] float 
  5356 ;;  t1              4    4[BANK2 ] float 
  5357 ;;  R               4    0[BANK2 ] float 
  5358 ;;  k               2   28[BANK2 ] int 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  4   55[BANK1 ] float 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5368 ;;      Params:         0       0       4       0       0       0       0       0
  5369 ;;      Locals:         0       0       0      66       0       0       0       0
  5370 ;;      Temps:          0       0       8       0       0       0       0       0
  5371 ;;      Totals:         0       0      12      66       0       0       0       0
  5372 ;;Total ram usage:       78 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 6
  5375 ;; This function calls:
  5376 ;;		___fladd
  5377 ;;		___fldiv
  5378 ;;		___flmul
  5379 ;;		___flsub
  5380 ;;		___xxtofl
  5381 ;; This function is called by:
  5382 ;;		_get_ntc_temperature
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386  0065                     _logf:	
  5387                           ;psect for function _logf
  5388                           
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
  5392  0065  0020               	movlb	0	; select bank0
  5393  0066  0854               	movf	logf@F472+3,w
  5394  0067  0022               	movlb	2	; select bank2
  5395  0068  00D9               	movwf	(logf@u+3)^(0+256)
  5396  0069  0020               	movlb	0	; select bank0
  5397  006A  0853               	movf	logf@F472+2,w
  5398  006B  0022               	movlb	2	; select bank2
  5399  006C  00D8               	movwf	(logf@u+2)^(0+256)
  5400  006D  0020               	movlb	0	; select bank0
  5401  006E  0852               	movf	logf@F472+1,w
  5402  006F  0022               	movlb	2	; select bank2
  5403  0070  00D7               	movwf	(logf@u+1)^(0+256)
  5404  0071  0020               	movlb	0	; select bank0
  5405  0072  0851               	movf	logf@F472,w
  5406  0073  0022               	movlb	2	; select bank2
  5407  0074  00D6               	movwf	logf@u^(0+256)
  5408  0075  0021               	movlb	1	; select bank1
  5409  0076  085A               	movf	(logf@x+3)^(0+128),w
  5410  0077  0022               	movlb	2	; select bank2
  5411  0078  00D9               	movwf	(logf@u+3)^(0+256)
  5412  0079  0021               	movlb	1	; select bank1
  5413  007A  0859               	movf	(logf@x+2)^(0+128),w
  5414  007B  0022               	movlb	2	; select bank2
  5415  007C  00D8               	movwf	(logf@u+2)^(0+256)
  5416  007D  0021               	movlb	1	; select bank1
  5417  007E  0858               	movf	(logf@x+1)^(0+128),w
  5418  007F  0022               	movlb	2	; select bank2
  5419  0080  00D7               	movwf	(logf@u+1)^(0+256)
  5420  0081  0021               	movlb	1	; select bank1
  5421  0082  0857               	movf	logf@x^(0+128),w
  5422  0083  0022               	movlb	2	; select bank2
  5423  0084  00D6               	movwf	logf@u^(0+256)
  5424  0085  0859               	movf	(logf@u+3)^(0+256),w
  5425  0086  00E1               	movwf	(logf@ix+3)^(0+256)
  5426  0087  0858               	movf	(logf@u+2)^(0+256),w
  5427  0088  00E0               	movwf	(logf@ix+2)^(0+256)
  5428  0089  0857               	movf	(logf@u+1)^(0+256),w
  5429  008A  00DF               	movwf	(logf@ix+1)^(0+256)
  5430  008B  0856               	movf	logf@u^(0+256),w
  5431  008C  00DE               	movwf	logf@ix^(0+256)
  5432  008D  01BC               	clrf	logf@k^(0+256)
  5433  008E  01BD               	clrf	(logf@k+1)^(0+256)
  5434  008F  0861               	movf	(logf@ix+3)^(0+256),w
  5435  0090  1D03               	btfss	3,2
  5436  0091  2896               	goto	l6283
  5437  0092  3080               	movlw	128
  5438  0093  0260               	subwf	(logf@ix+2)^(0+256),w
  5439  0094  1C03               	btfss	3,0
  5440  0095  28B3               	goto	l6285
  5441  0096                     l6283:
  5442  0096  0022               	movlb	2	; select bank2
  5443  0097  085E               	movf	logf@ix^(0+256),w
  5444  0098  0021               	movlb	1	; select bank1
  5445  0099  00DB               	movwf	??_logf^(0+128)
  5446  009A  0022               	movlb	2	; select bank2
  5447  009B  085F               	movf	(logf@ix+1)^(0+256),w
  5448  009C  0021               	movlb	1	; select bank1
  5449  009D  00DC               	movwf	(??_logf^(0+128)+1)
  5450  009E  0022               	movlb	2	; select bank2
  5451  009F  0860               	movf	(logf@ix+2)^(0+256),w
  5452  00A0  0021               	movlb	1	; select bank1
  5453  00A1  00DD               	movwf	(??_logf^(0+128)+2)
  5454  00A2  0022               	movlb	2	; select bank2
  5455  00A3  0861               	movf	(logf@ix+3)^(0+256),w
  5456  00A4  0021               	movlb	1	; select bank1
  5457  00A5  00DE               	movwf	(??_logf^(0+128)+3)
  5458  00A6  301F               	movlw	31
  5459  00A7                     u5935:
  5460  00A7  36DE               	lsrf	(??_logf^(0+128)+3),f
  5461  00A8  0CDD               	rrf	(??_logf^(0+128)+2),f
  5462  00A9  0CDC               	rrf	(??_logf^(0+128)+1),f
  5463  00AA  0CDB               	rrf	??_logf^(0+128),f
  5464  00AB  0B89               	decfsz	9,f
  5465  00AC  28A7               	goto	u5935
  5466  00AD  085E               	movf	(??_logf+3)^(0+128),w
  5467  00AE  045D               	iorwf	(??_logf+2)^(0+128),w
  5468  00AF  045C               	iorwf	(??_logf+1)^(0+128),w
  5469  00B0  045B               	iorwf	??_logf^(0+128),w
  5470  00B1  1903               	skipnz
  5471  00B2  298D               	goto	l6307
  5472  00B3                     l6285:
  5473  00B3  0022               	movlb	2	; select bank2
  5474  00B4  085E               	movf	logf@ix^(0+256),w
  5475  00B5  0021               	movlb	1	; select bank1
  5476  00B6  00DB               	movwf	??_logf^(0+128)
  5477  00B7  0022               	movlb	2	; select bank2
  5478  00B8  085F               	movf	(logf@ix+1)^(0+256),w
  5479  00B9  0021               	movlb	1	; select bank1
  5480  00BA  00DC               	movwf	(??_logf^(0+128)+1)
  5481  00BB  0022               	movlb	2	; select bank2
  5482  00BC  0860               	movf	(logf@ix+2)^(0+256),w
  5483  00BD  0021               	movlb	1	; select bank1
  5484  00BE  00DD               	movwf	(??_logf^(0+128)+2)
  5485  00BF  0022               	movlb	2	; select bank2
  5486  00C0  0861               	movf	(logf@ix+3)^(0+256),w
  5487  00C1  0021               	movlb	1	; select bank1
  5488  00C2  00DE               	movwf	(??_logf^(0+128)+3)
  5489  00C3  3001               	movlw	1
  5490  00C4                     u5955:
  5491  00C4  35DB               	lslf	??_logf^(0+128),f
  5492  00C5  0DDC               	rlf	(??_logf^(0+128)+1),f
  5493  00C6  0DDD               	rlf	(??_logf^(0+128)+2),f
  5494  00C7  0DDE               	rlf	(??_logf^(0+128)+3),f
  5495  00C8  0B89               	decfsz	9,f
  5496  00C9  28C4               	goto	u5955
  5497  00CA  085E               	movf	(??_logf+3)^(0+128),w
  5498  00CB  045D               	iorwf	(??_logf+2)^(0+128),w
  5499  00CC  045C               	iorwf	(??_logf+1)^(0+128),w
  5500  00CD  045B               	iorwf	??_logf^(0+128),w
  5501  00CE  1D03               	skipz
  5502  00CF  2900               	goto	l6291
  5503  00D0  085A               	movf	(logf@x+3)^(0+128),w
  5504  00D1  00AB               	movwf	(___flmul@b+3)^(0+128)
  5505  00D2  0859               	movf	(logf@x+2)^(0+128),w
  5506  00D3  00AA               	movwf	(___flmul@b+2)^(0+128)
  5507  00D4  0858               	movf	(logf@x+1)^(0+128),w
  5508  00D5  00A9               	movwf	(___flmul@b+1)^(0+128)
  5509  00D6  0857               	movf	logf@x^(0+128),w
  5510  00D7  00A8               	movwf	___flmul@b^(0+128)
  5511  00D8  085A               	movf	(logf@x+3)^(0+128),w
  5512  00D9  00AF               	movwf	(___flmul@a+3)^(0+128)
  5513  00DA  0859               	movf	(logf@x+2)^(0+128),w
  5514  00DB  00AE               	movwf	(___flmul@a+2)^(0+128)
  5515  00DC  0858               	movf	(logf@x+1)^(0+128),w
  5516  00DD  00AD               	movwf	(___flmul@a+1)^(0+128)
  5517  00DE  0857               	movf	logf@x^(0+128),w
  5518  00DF  00AC               	movwf	___flmul@a^(0+128)
  5519  00E0  318A  2241  3180   	fcall	___flmul
  5520  00E3  0021               	movlb	1	; select bank1
  5521  00E4  082B               	movf	(?___flmul+3)^(0+128),w
  5522  00E5  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5523  00E6  082A               	movf	(?___flmul+2)^(0+128),w
  5524  00E7  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5525  00E8  0829               	movf	(?___flmul+1)^(0+128),w
  5526  00E9  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5527  00EA  0828               	movf	?___flmul^(0+128),w
  5528  00EB  00BD               	movwf	___fldiv@a^(0+128)
  5529  00EC  30BF               	movlw	191
  5530  00ED  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5531  00EE  3080               	movlw	128
  5532  00EF  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5533  00F0  3000               	movlw	0
  5534  00F1  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5535  00F2  3000               	movlw	0
  5536  00F3  00C1               	movwf	___fldiv@b^(0+128)
  5537  00F4  3194  24F4         	fcall	___fldiv
  5538  00F6  0021               	movlb	1	; select bank1
  5539  00F7  0840               	movf	(?___fldiv+3)^(0+128),w
  5540  00F8  00DA               	movwf	(?_logf+3)^(0+128)
  5541  00F9  083F               	movf	(?___fldiv+2)^(0+128),w
  5542  00FA  00D9               	movwf	(?_logf+2)^(0+128)
  5543  00FB  083E               	movf	(?___fldiv+1)^(0+128),w
  5544  00FC  00D8               	movwf	(?_logf+1)^(0+128)
  5545  00FD  083D               	movf	?___fldiv^(0+128),w
  5546  00FE  00D7               	movwf	?_logf^(0+128)
  5547  00FF  0008               	return
  5548  0100                     l6291:
  5549  0100  0022               	movlb	2	; select bank2
  5550  0101  085E               	movf	logf@ix^(0+256),w
  5551  0102  0021               	movlb	1	; select bank1
  5552  0103  00DB               	movwf	??_logf^(0+128)
  5553  0104  0022               	movlb	2	; select bank2
  5554  0105  085F               	movf	(logf@ix+1)^(0+256),w
  5555  0106  0021               	movlb	1	; select bank1
  5556  0107  00DC               	movwf	(??_logf^(0+128)+1)
  5557  0108  0022               	movlb	2	; select bank2
  5558  0109  0860               	movf	(logf@ix+2)^(0+256),w
  5559  010A  0021               	movlb	1	; select bank1
  5560  010B  00DD               	movwf	(??_logf^(0+128)+2)
  5561  010C  0022               	movlb	2	; select bank2
  5562  010D  0861               	movf	(logf@ix+3)^(0+256),w
  5563  010E  0021               	movlb	1	; select bank1
  5564  010F  00DE               	movwf	(??_logf^(0+128)+3)
  5565  0110  301F               	movlw	31
  5566  0111                     u5975:
  5567  0111  36DE               	lsrf	(??_logf^(0+128)+3),f
  5568  0112  0CDD               	rrf	(??_logf^(0+128)+2),f
  5569  0113  0CDC               	rrf	(??_logf^(0+128)+1),f
  5570  0114  0CDB               	rrf	??_logf^(0+128),f
  5571  0115  0B89               	decfsz	9,f
  5572  0116  2911               	goto	u5975
  5573  0117  085E               	movf	(??_logf+3)^(0+128),w
  5574  0118  045D               	iorwf	(??_logf+2)^(0+128),w
  5575  0119  045C               	iorwf	(??_logf+1)^(0+128),w
  5576  011A  045B               	iorwf	??_logf^(0+128),w
  5577  011B  1903               	skipnz
  5578  011C  2953               	goto	l6299
  5579  011D  3021               	movlw	33
  5580  011E  0022               	movlb	2	; select bank2
  5581  011F  00EE               	movwf	_errno^(0+256)
  5582  0120  3000               	movlw	0
  5583  0121  00EF               	movwf	(_errno^(0+256)+1)
  5584  0122  3000               	movlw	0
  5585  0123  0021               	movlb	1	; select bank1
  5586  0124  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5587  0125  3000               	movlw	0
  5588  0126  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5589  0127  3000               	movlw	0
  5590  0128  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5591  0129  3000               	movlw	0
  5592  012A  00BD               	movwf	___fldiv@a^(0+128)
  5593  012B  085A               	movf	(logf@x+3)^(0+128),w
  5594  012C  00A3               	movwf	(___flsub@a+3)^(0+128)
  5595  012D  0859               	movf	(logf@x+2)^(0+128),w
  5596  012E  00A2               	movwf	(___flsub@a+2)^(0+128)
  5597  012F  0858               	movf	(logf@x+1)^(0+128),w
  5598  0130  00A1               	movwf	(___flsub@a+1)^(0+128)
  5599  0131  0857               	movf	logf@x^(0+128),w
  5600  0132  00A0               	movwf	___flsub@a^(0+128)
  5601  0133  085A               	movf	(logf@x+3)^(0+128),w
  5602  0134  00A7               	movwf	(___flsub@b+3)^(0+128)
  5603  0135  0859               	movf	(logf@x+2)^(0+128),w
  5604  0136  00A6               	movwf	(___flsub@b+2)^(0+128)
  5605  0137  0858               	movf	(logf@x+1)^(0+128),w
  5606  0138  00A5               	movwf	(___flsub@b+1)^(0+128)
  5607  0139  0857               	movf	logf@x^(0+128),w
  5608  013A  00A4               	movwf	___flsub@b^(0+128)
  5609  013B  3190  20C9  3180   	fcall	___flsub
  5610  013E  0021               	movlb	1	; select bank1
  5611  013F  0823               	movf	(?___flsub+3)^(0+128),w
  5612  0140  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5613  0141  0822               	movf	(?___flsub+2)^(0+128),w
  5614  0142  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5615  0143  0821               	movf	(?___flsub+1)^(0+128),w
  5616  0144  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5617  0145  0820               	movf	?___flsub^(0+128),w
  5618  0146  00C1               	movwf	___fldiv@b^(0+128)
  5619  0147  3194  24F4         	fcall	___fldiv
  5620  0149  0021               	movlb	1	; select bank1
  5621  014A  0840               	movf	(?___fldiv+3)^(0+128),w
  5622  014B  00DA               	movwf	(?_logf+3)^(0+128)
  5623  014C  083F               	movf	(?___fldiv+2)^(0+128),w
  5624  014D  00D9               	movwf	(?_logf+2)^(0+128)
  5625  014E  083E               	movf	(?___fldiv+1)^(0+128),w
  5626  014F  00D8               	movwf	(?_logf+1)^(0+128)
  5627  0150  083D               	movf	?___fldiv^(0+128),w
  5628  0151  00D7               	movwf	?_logf^(0+128)
  5629  0152  0008               	return
  5630  0153                     l6299:
  5631  0153  30E7               	movlw	231
  5632  0154  0022               	movlb	2	; select bank2
  5633  0155  07BC               	addwf	logf@k^(0+256),f
  5634  0156  30FF               	movlw	255
  5635  0157  3DBD               	addwfc	(logf@k+1)^(0+256),f
  5636  0158  304C               	movlw	76
  5637  0159  0021               	movlb	1	; select bank1
  5638  015A  00AB               	movwf	(___flmul@b+3)^(0+128)
  5639  015B  3000               	movlw	0
  5640  015C  00AA               	movwf	(___flmul@b+2)^(0+128)
  5641  015D  3000               	movlw	0
  5642  015E  00A9               	movwf	(___flmul@b+1)^(0+128)
  5643  015F  3000               	movlw	0
  5644  0160  00A8               	movwf	___flmul@b^(0+128)
  5645  0161  085A               	movf	(logf@x+3)^(0+128),w
  5646  0162  00AF               	movwf	(___flmul@a+3)^(0+128)
  5647  0163  0859               	movf	(logf@x+2)^(0+128),w
  5648  0164  00AE               	movwf	(___flmul@a+2)^(0+128)
  5649  0165  0858               	movf	(logf@x+1)^(0+128),w
  5650  0166  00AD               	movwf	(___flmul@a+1)^(0+128)
  5651  0167  0857               	movf	logf@x^(0+128),w
  5652  0168  00AC               	movwf	___flmul@a^(0+128)
  5653  0169  318A  2241  3180   	fcall	___flmul
  5654  016C  0021               	movlb	1	; select bank1
  5655  016D  082B               	movf	(?___flmul+3)^(0+128),w
  5656  016E  00DA               	movwf	(logf@x+3)^(0+128)
  5657  016F  082A               	movf	(?___flmul+2)^(0+128),w
  5658  0170  00D9               	movwf	(logf@x+2)^(0+128)
  5659  0171  0829               	movf	(?___flmul+1)^(0+128),w
  5660  0172  00D8               	movwf	(logf@x+1)^(0+128)
  5661  0173  0828               	movf	?___flmul^(0+128),w
  5662  0174  00D7               	movwf	logf@x^(0+128)
  5663  0175  085A               	movf	(logf@x+3)^(0+128),w
  5664  0176  0022               	movlb	2	; select bank2
  5665  0177  00D9               	movwf	(logf@u+3)^(0+256)
  5666  0178  0021               	movlb	1	; select bank1
  5667  0179  0859               	movf	(logf@x+2)^(0+128),w
  5668  017A  0022               	movlb	2	; select bank2
  5669  017B  00D8               	movwf	(logf@u+2)^(0+256)
  5670  017C  0021               	movlb	1	; select bank1
  5671  017D  0858               	movf	(logf@x+1)^(0+128),w
  5672  017E  0022               	movlb	2	; select bank2
  5673  017F  00D7               	movwf	(logf@u+1)^(0+256)
  5674  0180  0021               	movlb	1	; select bank1
  5675  0181  0857               	movf	logf@x^(0+128),w
  5676  0182  0022               	movlb	2	; select bank2
  5677  0183  00D6               	movwf	logf@u^(0+256)
  5678  0184  0859               	movf	(logf@u+3)^(0+256),w
  5679  0185  00E1               	movwf	(logf@ix+3)^(0+256)
  5680  0186  0858               	movf	(logf@u+2)^(0+256),w
  5681  0187  00E0               	movwf	(logf@ix+2)^(0+256)
  5682  0188  0857               	movf	(logf@u+1)^(0+256),w
  5683  0189  00DF               	movwf	(logf@ix+1)^(0+256)
  5684  018A  0856               	movf	logf@u^(0+256),w
  5685  018B  00DE               	movwf	logf@ix^(0+256)
  5686  018C  29A8               	goto	l6319
  5687  018D                     l6307:
  5688  018D  3080               	movlw	128
  5689  018E  0022               	movlb	2	; select bank2
  5690  018F  0260               	subwf	(logf@ix+2)^(0+256),w
  5691  0190  307F               	movlw	127
  5692  0191  3B61               	subwfb	(logf@ix+3)^(0+256),w
  5693  0192  1803               	btfsc	3,0
  5694  0193  0008               	return
  5695  0194  3080               	movlw	128
  5696  0195  0022               	movlb	2	; select bank2
  5697  0196  0660               	xorwf	(logf@ix+2)^(0+256),w
  5698  0197  303F               	movlw	63
  5699  0198  1903               	skipnz
  5700  0199  0661               	xorwf	(logf@ix+3)^(0+256),w
  5701  019A  045E               	iorwf	logf@ix^(0+256),w
  5702  019B  045F               	iorwf	(logf@ix+1)^(0+256),w
  5703  019C  1D03               	btfss	3,2
  5704  019D  29A8               	goto	l6319
  5705  019E  3000               	movlw	0
  5706  019F  0021               	movlb	1	; select bank1
  5707  01A0  00DA               	movwf	(?_logf+3)^(0+128)
  5708  01A1  3000               	movlw	0
  5709  01A2  00D9               	movwf	(?_logf+2)^(0+128)
  5710  01A3  3000               	movlw	0
  5711  01A4  00D8               	movwf	(?_logf+1)^(0+128)
  5712  01A5  3000               	movlw	0
  5713  01A6  00D7               	movwf	?_logf^(0+128)
  5714  01A7  0008               	return
  5715  01A8                     l6319:
  5716  01A8  300D               	movlw	13
  5717  01A9  0022               	movlb	2	; select bank2
  5718  01AA  07DE               	addwf	logf@ix^(0+256),f
  5719  01AB  30FB               	movlw	251
  5720  01AC  3DDF               	addwfc	(logf@ix+1)^(0+256),f
  5721  01AD  304A               	movlw	74
  5722  01AE  3DE0               	addwfc	(logf@ix+2)^(0+256),f
  5723  01AF  3000               	movlw	0
  5724  01B0  3DE1               	addwfc	(logf@ix+3)^(0+256),f
  5725  01B1  085E               	movf	logf@ix^(0+256),w
  5726  01B2  0021               	movlb	1	; select bank1
  5727  01B3  00DB               	movwf	??_logf^(0+128)
  5728  01B4  0022               	movlb	2	; select bank2
  5729  01B5  085F               	movf	(logf@ix+1)^(0+256),w
  5730  01B6  0021               	movlb	1	; select bank1
  5731  01B7  00DC               	movwf	(??_logf^(0+128)+1)
  5732  01B8  0022               	movlb	2	; select bank2
  5733  01B9  0860               	movf	(logf@ix+2)^(0+256),w
  5734  01BA  0021               	movlb	1	; select bank1
  5735  01BB  00DD               	movwf	(??_logf^(0+128)+2)
  5736  01BC  0022               	movlb	2	; select bank2
  5737  01BD  0861               	movf	(logf@ix+3)^(0+256),w
  5738  01BE  0021               	movlb	1	; select bank1
  5739  01BF  00DE               	movwf	(??_logf^(0+128)+3)
  5740  01C0  3017               	movlw	23
  5741  01C1                     u6015:
  5742  01C1  36DE               	lsrf	(??_logf^(0+128)+3),f
  5743  01C2  0CDD               	rrf	(??_logf^(0+128)+2),f
  5744  01C3  0CDC               	rrf	(??_logf^(0+128)+1),f
  5745  01C4  0CDB               	rrf	??_logf^(0+128),f
  5746  01C5  0B89               	decfsz	9,f
  5747  01C6  29C1               	goto	u6015
  5748  01C7  085B               	movf	??_logf^(0+128),w
  5749  01C8  3E81               	addlw	129
  5750  01C9  00DF               	movwf	(??_logf+4)^(0+128)
  5751  01CA  30FF               	movlw	255
  5752  01CB  3D5C               	addwfc	(??_logf+1)^(0+128),w
  5753  01CC  00E0               	movwf	(??_logf+5)^(0+128)
  5754  01CD  085F               	movf	(??_logf+4)^(0+128),w
  5755  01CE  0022               	movlb	2	; select bank2
  5756  01CF  07BC               	addwf	logf@k^(0+256),f
  5757  01D0  0021               	movlb	1	; select bank1
  5758  01D1  0860               	movf	(??_logf+5)^(0+128),w
  5759  01D2  0022               	movlb	2	; select bank2
  5760  01D3  3DBD               	addwfc	(logf@k+1)^(0+256),f
  5761  01D4  30F3               	movlw	243
  5762  01D5  0021               	movlb	1	; select bank1
  5763  01D6  00DB               	movwf	??_logf^(0+128)
  5764  01D7  3004               	movlw	4
  5765  01D8  00DC               	movwf	(??_logf^(0+128)+1)
  5766  01D9  3035               	movlw	53
  5767  01DA  00DD               	movwf	(??_logf^(0+128)+2)
  5768  01DB  303F               	movlw	63
  5769  01DC  00DE               	movwf	(??_logf^(0+128)+3)
  5770  01DD  30FF               	movlw	255
  5771  01DE  0022               	movlb	2	; select bank2
  5772  01DF  055E               	andwf	logf@ix^(0+256),w
  5773  01E0  0021               	movlb	1	; select bank1
  5774  01E1  00DF               	movwf	(??_logf+4)^(0+128)
  5775  01E2  30FF               	movlw	255
  5776  01E3  0022               	movlb	2	; select bank2
  5777  01E4  055F               	andwf	(logf@ix+1)^(0+256),w
  5778  01E5  0021               	movlb	1	; select bank1
  5779  01E6  00E0               	movwf	((??_logf+4)^(0+128)+1)
  5780  01E7  307F               	movlw	127
  5781  01E8  0022               	movlb	2	; select bank2
  5782  01E9  0560               	andwf	(logf@ix+2)^(0+256),w
  5783  01EA  0021               	movlb	1	; select bank1
  5784  01EB  00E1               	movwf	((??_logf+4)^(0+128)+2)
  5785  01EC  3000               	movlw	0
  5786  01ED  0022               	movlb	2	; select bank2
  5787  01EE  0561               	andwf	(logf@ix+3)^(0+256),w
  5788  01EF  0021               	movlb	1	; select bank1
  5789  01F0  00E2               	movwf	((??_logf+4)^(0+128)+3)
  5790  01F1  085F               	movf	(??_logf+4)^(0+128),w
  5791  01F2  07DB               	addwf	??_logf^(0+128),f
  5792  01F3  0860               	movf	(??_logf+5)^(0+128),w
  5793  01F4  3DDC               	addwfc	(??_logf^(0+128)+1),f
  5794  01F5  0861               	movf	(??_logf+6)^(0+128),w
  5795  01F6  3DDD               	addwfc	(??_logf^(0+128)+2),f
  5796  01F7  0862               	movf	(??_logf+7)^(0+128),w
  5797  01F8  3DDE               	addwfc	(??_logf^(0+128)+3),f
  5798  01F9  085E               	movf	(??_logf+3)^(0+128),w
  5799  01FA  0022               	movlb	2	; select bank2
  5800  01FB  00E1               	movwf	(logf@ix+3)^(0+256)
  5801  01FC  0021               	movlb	1	; select bank1
  5802  01FD  085D               	movf	(??_logf+2)^(0+128),w
  5803  01FE  0022               	movlb	2	; select bank2
  5804  01FF  00E0               	movwf	(logf@ix+2)^(0+256)
  5805  0200  0021               	movlb	1	; select bank1
  5806  0201  085C               	movf	(??_logf+1)^(0+128),w
  5807  0202  0022               	movlb	2	; select bank2
  5808  0203  00DF               	movwf	(logf@ix+1)^(0+256)
  5809  0204  0021               	movlb	1	; select bank1
  5810  0205  085B               	movf	??_logf^(0+128),w
  5811  0206  0022               	movlb	2	; select bank2
  5812  0207  00DE               	movwf	logf@ix^(0+256)
  5813  0208  0861               	movf	(logf@ix+3)^(0+256),w
  5814  0209  00D9               	movwf	(logf@u+3)^(0+256)
  5815  020A  0860               	movf	(logf@ix+2)^(0+256),w
  5816  020B  00D8               	movwf	(logf@u+2)^(0+256)
  5817  020C  085F               	movf	(logf@ix+1)^(0+256),w
  5818  020D  00D7               	movwf	(logf@u+1)^(0+256)
  5819  020E  085E               	movf	logf@ix^(0+256),w
  5820  020F  00D6               	movwf	logf@u^(0+256)
  5821  0210  0859               	movf	(logf@u+3)^(0+256),w
  5822  0211  0021               	movlb	1	; select bank1
  5823  0212  00DA               	movwf	(logf@x+3)^(0+128)
  5824  0213  0022               	movlb	2	; select bank2
  5825  0214  0858               	movf	(logf@u+2)^(0+256),w
  5826  0215  0021               	movlb	1	; select bank1
  5827  0216  00D9               	movwf	(logf@x+2)^(0+128)
  5828  0217  0022               	movlb	2	; select bank2
  5829  0218  0857               	movf	(logf@u+1)^(0+256),w
  5830  0219  0021               	movlb	1	; select bank1
  5831  021A  00D8               	movwf	(logf@x+1)^(0+128)
  5832  021B  0022               	movlb	2	; select bank2
  5833  021C  0856               	movf	logf@u^(0+256),w
  5834  021D  0021               	movlb	1	; select bank1
  5835  021E  00D7               	movwf	logf@x^(0+128)
  5836  021F  30BF               	movlw	191
  5837  0220  0020               	movlb	0	; select bank0
  5838  0221  00BB               	movwf	___fladd@b+3
  5839  0222  3080               	movlw	128
  5840  0223  00BA               	movwf	___fladd@b+2
  5841  0224  3000               	movlw	0
  5842  0225  00B9               	movwf	___fladd@b+1
  5843  0226  3000               	movlw	0
  5844  0227  00B8               	movwf	___fladd@b
  5845  0228  0021               	movlb	1	; select bank1
  5846  0229  085A               	movf	(logf@x+3)^(0+128),w
  5847  022A  0020               	movlb	0	; select bank0
  5848  022B  00BF               	movwf	___fladd@a+3
  5849  022C  0021               	movlb	1	; select bank1
  5850  022D  0859               	movf	(logf@x+2)^(0+128),w
  5851  022E  0020               	movlb	0	; select bank0
  5852  022F  00BE               	movwf	___fladd@a+2
  5853  0230  0021               	movlb	1	; select bank1
  5854  0231  0858               	movf	(logf@x+1)^(0+128),w
  5855  0232  0020               	movlb	0	; select bank0
  5856  0233  00BD               	movwf	___fladd@a+1
  5857  0234  0021               	movlb	1	; select bank1
  5858  0235  0857               	movf	logf@x^(0+128),w
  5859  0236  0020               	movlb	0	; select bank0
  5860  0237  00BC               	movwf	___fladd@a
  5861  0238  3185  25F9  3180   	fcall	___fladd
  5862  023B  0020               	movlb	0	; select bank0
  5863  023C  083B               	movf	?___fladd+3,w
  5864  023D  0022               	movlb	2	; select bank2
  5865  023E  00DD               	movwf	(logf@f+3)^(0+256)
  5866  023F  0020               	movlb	0	; select bank0
  5867  0240  083A               	movf	?___fladd+2,w
  5868  0241  0022               	movlb	2	; select bank2
  5869  0242  00DC               	movwf	(logf@f+2)^(0+256)
  5870  0243  0020               	movlb	0	; select bank0
  5871  0244  0839               	movf	?___fladd+1,w
  5872  0245  0022               	movlb	2	; select bank2
  5873  0246  00DB               	movwf	(logf@f+1)^(0+256)
  5874  0247  0020               	movlb	0	; select bank0
  5875  0248  0838               	movf	?___fladd,w
  5876  0249  0022               	movlb	2	; select bank2
  5877  024A  00DA               	movwf	logf@f^(0+256)
  5878  024B  3040               	movlw	64
  5879  024C  0020               	movlb	0	; select bank0
  5880  024D  00BB               	movwf	___fladd@b+3
  5881  024E  3000               	movlw	0
  5882  024F  00BA               	movwf	___fladd@b+2
  5883  0250  3000               	movlw	0
  5884  0251  00B9               	movwf	___fladd@b+1
  5885  0252  3000               	movlw	0
  5886  0253  00B8               	movwf	___fladd@b
  5887  0254  0022               	movlb	2	; select bank2
  5888  0255  085D               	movf	(logf@f+3)^(0+256),w
  5889  0256  0020               	movlb	0	; select bank0
  5890  0257  00BF               	movwf	___fladd@a+3
  5891  0258  0022               	movlb	2	; select bank2
  5892  0259  085C               	movf	(logf@f+2)^(0+256),w
  5893  025A  0020               	movlb	0	; select bank0
  5894  025B  00BE               	movwf	___fladd@a+2
  5895  025C  0022               	movlb	2	; select bank2
  5896  025D  085B               	movf	(logf@f+1)^(0+256),w
  5897  025E  0020               	movlb	0	; select bank0
  5898  025F  00BD               	movwf	___fladd@a+1
  5899  0260  0022               	movlb	2	; select bank2
  5900  0261  085A               	movf	logf@f^(0+256),w
  5901  0262  0020               	movlb	0	; select bank0
  5902  0263  00BC               	movwf	___fladd@a
  5903  0264  3185  25F9  3180   	fcall	___fladd
  5904  0267  0020               	movlb	0	; select bank0
  5905  0268  083B               	movf	?___fladd+3,w
  5906  0269  0021               	movlb	1	; select bank1
  5907  026A  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5908  026B  0020               	movlb	0	; select bank0
  5909  026C  083A               	movf	?___fladd+2,w
  5910  026D  0021               	movlb	1	; select bank1
  5911  026E  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5912  026F  0020               	movlb	0	; select bank0
  5913  0270  0839               	movf	?___fladd+1,w
  5914  0271  0021               	movlb	1	; select bank1
  5915  0272  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5916  0273  0020               	movlb	0	; select bank0
  5917  0274  0838               	movf	?___fladd,w
  5918  0275  0021               	movlb	1	; select bank1
  5919  0276  00BD               	movwf	___fldiv@a^(0+128)
  5920  0277  0022               	movlb	2	; select bank2
  5921  0278  085D               	movf	(logf@f+3)^(0+256),w
  5922  0279  0021               	movlb	1	; select bank1
  5923  027A  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5924  027B  0022               	movlb	2	; select bank2
  5925  027C  085C               	movf	(logf@f+2)^(0+256),w
  5926  027D  0021               	movlb	1	; select bank1
  5927  027E  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5928  027F  0022               	movlb	2	; select bank2
  5929  0280  085B               	movf	(logf@f+1)^(0+256),w
  5930  0281  0021               	movlb	1	; select bank1
  5931  0282  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5932  0283  0022               	movlb	2	; select bank2
  5933  0284  085A               	movf	logf@f^(0+256),w
  5934  0285  0021               	movlb	1	; select bank1
  5935  0286  00C1               	movwf	___fldiv@b^(0+128)
  5936  0287  3194  24F4  3180   	fcall	___fldiv
  5937  028A  0021               	movlb	1	; select bank1
  5938  028B  0840               	movf	(?___fldiv+3)^(0+128),w
  5939  028C  0022               	movlb	2	; select bank2
  5940  028D  00C9               	movwf	(logf@s+3)^(0+256)
  5941  028E  0021               	movlb	1	; select bank1
  5942  028F  083F               	movf	(?___fldiv+2)^(0+128),w
  5943  0290  0022               	movlb	2	; select bank2
  5944  0291  00C8               	movwf	(logf@s+2)^(0+256)
  5945  0292  0021               	movlb	1	; select bank1
  5946  0293  083E               	movf	(?___fldiv+1)^(0+128),w
  5947  0294  0022               	movlb	2	; select bank2
  5948  0295  00C7               	movwf	(logf@s+1)^(0+256)
  5949  0296  0021               	movlb	1	; select bank1
  5950  0297  083D               	movf	?___fldiv^(0+128),w
  5951  0298  0022               	movlb	2	; select bank2
  5952  0299  00C6               	movwf	logf@s^(0+256)
  5953  029A  0849               	movf	(logf@s+3)^(0+256),w
  5954  029B  0021               	movlb	1	; select bank1
  5955  029C  00AB               	movwf	(___flmul@b+3)^(0+128)
  5956  029D  0022               	movlb	2	; select bank2
  5957  029E  0848               	movf	(logf@s+2)^(0+256),w
  5958  029F  0021               	movlb	1	; select bank1
  5959  02A0  00AA               	movwf	(___flmul@b+2)^(0+128)
  5960  02A1  0022               	movlb	2	; select bank2
  5961  02A2  0847               	movf	(logf@s+1)^(0+256),w
  5962  02A3  0021               	movlb	1	; select bank1
  5963  02A4  00A9               	movwf	(___flmul@b+1)^(0+128)
  5964  02A5  0022               	movlb	2	; select bank2
  5965  02A6  0846               	movf	logf@s^(0+256),w
  5966  02A7  0021               	movlb	1	; select bank1
  5967  02A8  00A8               	movwf	___flmul@b^(0+128)
  5968  02A9  0022               	movlb	2	; select bank2
  5969  02AA  0849               	movf	(logf@s+3)^(0+256),w
  5970  02AB  0021               	movlb	1	; select bank1
  5971  02AC  00AF               	movwf	(___flmul@a+3)^(0+128)
  5972  02AD  0022               	movlb	2	; select bank2
  5973  02AE  0848               	movf	(logf@s+2)^(0+256),w
  5974  02AF  0021               	movlb	1	; select bank1
  5975  02B0  00AE               	movwf	(___flmul@a+2)^(0+128)
  5976  02B1  0022               	movlb	2	; select bank2
  5977  02B2  0847               	movf	(logf@s+1)^(0+256),w
  5978  02B3  0021               	movlb	1	; select bank1
  5979  02B4  00AD               	movwf	(___flmul@a+1)^(0+128)
  5980  02B5  0022               	movlb	2	; select bank2
  5981  02B6  0846               	movf	logf@s^(0+256),w
  5982  02B7  0021               	movlb	1	; select bank1
  5983  02B8  00AC               	movwf	___flmul@a^(0+128)
  5984  02B9  318A  2241  3180   	fcall	___flmul
  5985  02BC  0021               	movlb	1	; select bank1
  5986  02BD  082B               	movf	(?___flmul+3)^(0+128),w
  5987  02BE  0022               	movlb	2	; select bank2
  5988  02BF  00CD               	movwf	(logf@z+3)^(0+256)
  5989  02C0  0021               	movlb	1	; select bank1
  5990  02C1  082A               	movf	(?___flmul+2)^(0+128),w
  5991  02C2  0022               	movlb	2	; select bank2
  5992  02C3  00CC               	movwf	(logf@z+2)^(0+256)
  5993  02C4  0021               	movlb	1	; select bank1
  5994  02C5  0829               	movf	(?___flmul+1)^(0+128),w
  5995  02C6  0022               	movlb	2	; select bank2
  5996  02C7  00CB               	movwf	(logf@z+1)^(0+256)
  5997  02C8  0021               	movlb	1	; select bank1
  5998  02C9  0828               	movf	?___flmul^(0+128),w
  5999  02CA  0022               	movlb	2	; select bank2
  6000  02CB  00CA               	movwf	logf@z^(0+256)
  6001  02CC  084D               	movf	(logf@z+3)^(0+256),w
  6002  02CD  0021               	movlb	1	; select bank1
  6003  02CE  00AB               	movwf	(___flmul@b+3)^(0+128)
  6004  02CF  0022               	movlb	2	; select bank2
  6005  02D0  084C               	movf	(logf@z+2)^(0+256),w
  6006  02D1  0021               	movlb	1	; select bank1
  6007  02D2  00AA               	movwf	(___flmul@b+2)^(0+128)
  6008  02D3  0022               	movlb	2	; select bank2
  6009  02D4  084B               	movf	(logf@z+1)^(0+256),w
  6010  02D5  0021               	movlb	1	; select bank1
  6011  02D6  00A9               	movwf	(___flmul@b+1)^(0+128)
  6012  02D7  0022               	movlb	2	; select bank2
  6013  02D8  084A               	movf	logf@z^(0+256),w
  6014  02D9  0021               	movlb	1	; select bank1
  6015  02DA  00A8               	movwf	___flmul@b^(0+128)
  6016  02DB  0022               	movlb	2	; select bank2
  6017  02DC  084D               	movf	(logf@z+3)^(0+256),w
  6018  02DD  0021               	movlb	1	; select bank1
  6019  02DE  00AF               	movwf	(___flmul@a+3)^(0+128)
  6020  02DF  0022               	movlb	2	; select bank2
  6021  02E0  084C               	movf	(logf@z+2)^(0+256),w
  6022  02E1  0021               	movlb	1	; select bank1
  6023  02E2  00AE               	movwf	(___flmul@a+2)^(0+128)
  6024  02E3  0022               	movlb	2	; select bank2
  6025  02E4  084B               	movf	(logf@z+1)^(0+256),w
  6026  02E5  0021               	movlb	1	; select bank1
  6027  02E6  00AD               	movwf	(___flmul@a+1)^(0+128)
  6028  02E7  0022               	movlb	2	; select bank2
  6029  02E8  084A               	movf	logf@z^(0+256),w
  6030  02E9  0021               	movlb	1	; select bank1
  6031  02EA  00AC               	movwf	___flmul@a^(0+128)
  6032  02EB  318A  2241  3180   	fcall	___flmul
  6033  02EE  0021               	movlb	1	; select bank1
  6034  02EF  082B               	movf	(?___flmul+3)^(0+128),w
  6035  02F0  0022               	movlb	2	; select bank2
  6036  02F1  00D1               	movwf	(logf@w+3)^(0+256)
  6037  02F2  0021               	movlb	1	; select bank1
  6038  02F3  082A               	movf	(?___flmul+2)^(0+128),w
  6039  02F4  0022               	movlb	2	; select bank2
  6040  02F5  00D0               	movwf	(logf@w+2)^(0+256)
  6041  02F6  0021               	movlb	1	; select bank1
  6042  02F7  0829               	movf	(?___flmul+1)^(0+128),w
  6043  02F8  0022               	movlb	2	; select bank2
  6044  02F9  00CF               	movwf	(logf@w+1)^(0+256)
  6045  02FA  0021               	movlb	1	; select bank1
  6046  02FB  0828               	movf	?___flmul^(0+128),w
  6047  02FC  0022               	movlb	2	; select bank2
  6048  02FD  00CE               	movwf	logf@w^(0+256)
  6049  02FE  303E               	movlw	62
  6050  02FF  0020               	movlb	0	; select bank0
  6051  0300  00BB               	movwf	___fladd@b+3
  6052  0301  30CC               	movlw	204
  6053  0302  00BA               	movwf	___fladd@b+2
  6054  0303  30CE               	movlw	206
  6055  0304  00B9               	movwf	___fladd@b+1
  6056  0305  3013               	movlw	19
  6057  0306  00B8               	movwf	___fladd@b
  6058  0307  303E               	movlw	62
  6059  0308  0021               	movlb	1	; select bank1
  6060  0309  00AB               	movwf	(___flmul@b+3)^(0+128)
  6061  030A  3078               	movlw	120
  6062  030B  00AA               	movwf	(___flmul@b+2)^(0+128)
  6063  030C  309E               	movlw	158
  6064  030D  00A9               	movwf	(___flmul@b+1)^(0+128)
  6065  030E  3026               	movlw	38
  6066  030F  00A8               	movwf	___flmul@b^(0+128)
  6067  0310  0022               	movlb	2	; select bank2
  6068  0311  0851               	movf	(logf@w+3)^(0+256),w
  6069  0312  0021               	movlb	1	; select bank1
  6070  0313  00AF               	movwf	(___flmul@a+3)^(0+128)
  6071  0314  0022               	movlb	2	; select bank2
  6072  0315  0850               	movf	(logf@w+2)^(0+256),w
  6073  0316  0021               	movlb	1	; select bank1
  6074  0317  00AE               	movwf	(___flmul@a+2)^(0+128)
  6075  0318  0022               	movlb	2	; select bank2
  6076  0319  084F               	movf	(logf@w+1)^(0+256),w
  6077  031A  0021               	movlb	1	; select bank1
  6078  031B  00AD               	movwf	(___flmul@a+1)^(0+128)
  6079  031C  0022               	movlb	2	; select bank2
  6080  031D  084E               	movf	logf@w^(0+256),w
  6081  031E  0021               	movlb	1	; select bank1
  6082  031F  00AC               	movwf	___flmul@a^(0+128)
  6083  0320  318A  2241  3180   	fcall	___flmul
  6084  0323  0021               	movlb	1	; select bank1
  6085  0324  082B               	movf	(?___flmul+3)^(0+128),w
  6086  0325  0020               	movlb	0	; select bank0
  6087  0326  00BF               	movwf	___fladd@a+3
  6088  0327  0021               	movlb	1	; select bank1
  6089  0328  082A               	movf	(?___flmul+2)^(0+128),w
  6090  0329  0020               	movlb	0	; select bank0
  6091  032A  00BE               	movwf	___fladd@a+2
  6092  032B  0021               	movlb	1	; select bank1
  6093  032C  0829               	movf	(?___flmul+1)^(0+128),w
  6094  032D  0020               	movlb	0	; select bank0
  6095  032E  00BD               	movwf	___fladd@a+1
  6096  032F  0021               	movlb	1	; select bank1
  6097  0330  0828               	movf	?___flmul^(0+128),w
  6098  0331  0020               	movlb	0	; select bank0
  6099  0332  00BC               	movwf	___fladd@a
  6100  0333  3185  25F9  3180   	fcall	___fladd
  6101  0336  0020               	movlb	0	; select bank0
  6102  0337  083B               	movf	?___fladd+3,w
  6103  0338  0022               	movlb	2	; select bank2
  6104  0339  00D5               	movwf	(_logf$2277+3)^(0+256)
  6105  033A  0020               	movlb	0	; select bank0
  6106  033B  083A               	movf	?___fladd+2,w
  6107  033C  0022               	movlb	2	; select bank2
  6108  033D  00D4               	movwf	(_logf$2277+2)^(0+256)
  6109  033E  0020               	movlb	0	; select bank0
  6110  033F  0839               	movf	?___fladd+1,w
  6111  0340  0022               	movlb	2	; select bank2
  6112  0341  00D3               	movwf	(_logf$2277+1)^(0+256)
  6113  0342  0020               	movlb	0	; select bank0
  6114  0343  0838               	movf	?___fladd,w
  6115  0344  0022               	movlb	2	; select bank2
  6116  0345  00D2               	movwf	_logf$2277^(0+256)
  6117  0346  0851               	movf	(logf@w+3)^(0+256),w
  6118  0347  0021               	movlb	1	; select bank1
  6119  0348  00AB               	movwf	(___flmul@b+3)^(0+128)
  6120  0349  0022               	movlb	2	; select bank2
  6121  034A  0850               	movf	(logf@w+2)^(0+256),w
  6122  034B  0021               	movlb	1	; select bank1
  6123  034C  00AA               	movwf	(___flmul@b+2)^(0+128)
  6124  034D  0022               	movlb	2	; select bank2
  6125  034E  084F               	movf	(logf@w+1)^(0+256),w
  6126  034F  0021               	movlb	1	; select bank1
  6127  0350  00A9               	movwf	(___flmul@b+1)^(0+128)
  6128  0351  0022               	movlb	2	; select bank2
  6129  0352  084E               	movf	logf@w^(0+256),w
  6130  0353  0021               	movlb	1	; select bank1
  6131  0354  00A8               	movwf	___flmul@b^(0+128)
  6132  0355  0022               	movlb	2	; select bank2
  6133  0356  0855               	movf	(_logf$2277+3)^(0+256),w
  6134  0357  0021               	movlb	1	; select bank1
  6135  0358  00AF               	movwf	(___flmul@a+3)^(0+128)
  6136  0359  0022               	movlb	2	; select bank2
  6137  035A  0854               	movf	(_logf$2277+2)^(0+256),w
  6138  035B  0021               	movlb	1	; select bank1
  6139  035C  00AE               	movwf	(___flmul@a+2)^(0+128)
  6140  035D  0022               	movlb	2	; select bank2
  6141  035E  0853               	movf	(_logf$2277+1)^(0+256),w
  6142  035F  0021               	movlb	1	; select bank1
  6143  0360  00AD               	movwf	(___flmul@a+1)^(0+128)
  6144  0361  0022               	movlb	2	; select bank2
  6145  0362  0852               	movf	_logf$2277^(0+256),w
  6146  0363  0021               	movlb	1	; select bank1
  6147  0364  00AC               	movwf	___flmul@a^(0+128)
  6148  0365  318A  2241  3180   	fcall	___flmul
  6149  0368  0021               	movlb	1	; select bank1
  6150  0369  082B               	movf	(?___flmul+3)^(0+128),w
  6151  036A  0022               	movlb	2	; select bank2
  6152  036B  00A7               	movwf	(logf@t1+3)^(0+256)
  6153  036C  0021               	movlb	1	; select bank1
  6154  036D  082A               	movf	(?___flmul+2)^(0+128),w
  6155  036E  0022               	movlb	2	; select bank2
  6156  036F  00A6               	movwf	(logf@t1+2)^(0+256)
  6157  0370  0021               	movlb	1	; select bank1
  6158  0371  0829               	movf	(?___flmul+1)^(0+128),w
  6159  0372  0022               	movlb	2	; select bank2
  6160  0373  00A5               	movwf	(logf@t1+1)^(0+256)
  6161  0374  0021               	movlb	1	; select bank1
  6162  0375  0828               	movf	?___flmul^(0+128),w
  6163  0376  0022               	movlb	2	; select bank2
  6164  0377  00A4               	movwf	logf@t1^(0+256)
  6165  0378  303F               	movlw	63
  6166  0379  0020               	movlb	0	; select bank0
  6167  037A  00BB               	movwf	___fladd@b+3
  6168  037B  302A               	movlw	42
  6169  037C  00BA               	movwf	___fladd@b+2
  6170  037D  30AA               	movlw	170
  6171  037E  00B9               	movwf	___fladd@b+1
  6172  037F  30AA               	movlw	170
  6173  0380  00B8               	movwf	___fladd@b
  6174  0381  303E               	movlw	62
  6175  0382  0021               	movlb	1	; select bank1
  6176  0383  00AB               	movwf	(___flmul@b+3)^(0+128)
  6177  0384  3091               	movlw	145
  6178  0385  00AA               	movwf	(___flmul@b+2)^(0+128)
  6179  0386  30E9               	movlw	233
  6180  0387  00A9               	movwf	(___flmul@b+1)^(0+128)
  6181  0388  30EE               	movlw	238
  6182  0389  00A8               	movwf	___flmul@b^(0+128)
  6183  038A  0022               	movlb	2	; select bank2
  6184  038B  0851               	movf	(logf@w+3)^(0+256),w
  6185  038C  0021               	movlb	1	; select bank1
  6186  038D  00AF               	movwf	(___flmul@a+3)^(0+128)
  6187  038E  0022               	movlb	2	; select bank2
  6188  038F  0850               	movf	(logf@w+2)^(0+256),w
  6189  0390  0021               	movlb	1	; select bank1
  6190  0391  00AE               	movwf	(___flmul@a+2)^(0+128)
  6191  0392  0022               	movlb	2	; select bank2
  6192  0393  084F               	movf	(logf@w+1)^(0+256),w
  6193  0394  0021               	movlb	1	; select bank1
  6194  0395  00AD               	movwf	(___flmul@a+1)^(0+128)
  6195  0396  0022               	movlb	2	; select bank2
  6196  0397  084E               	movf	logf@w^(0+256),w
  6197  0398  0021               	movlb	1	; select bank1
  6198  0399  00AC               	movwf	___flmul@a^(0+128)
  6199  039A  318A  2241  3180   	fcall	___flmul
  6200  039D  0021               	movlb	1	; select bank1
  6201  039E  082B               	movf	(?___flmul+3)^(0+128),w
  6202  039F  0020               	movlb	0	; select bank0
  6203  03A0  00BF               	movwf	___fladd@a+3
  6204  03A1  0021               	movlb	1	; select bank1
  6205  03A2  082A               	movf	(?___flmul+2)^(0+128),w
  6206  03A3  0020               	movlb	0	; select bank0
  6207  03A4  00BE               	movwf	___fladd@a+2
  6208  03A5  0021               	movlb	1	; select bank1
  6209  03A6  0829               	movf	(?___flmul+1)^(0+128),w
  6210  03A7  0020               	movlb	0	; select bank0
  6211  03A8  00BD               	movwf	___fladd@a+1
  6212  03A9  0021               	movlb	1	; select bank1
  6213  03AA  0828               	movf	?___flmul^(0+128),w
  6214  03AB  0020               	movlb	0	; select bank0
  6215  03AC  00BC               	movwf	___fladd@a
  6216  03AD  3185  25F9  3180   	fcall	___fladd
  6217  03B0  0020               	movlb	0	; select bank0
  6218  03B1  083B               	movf	?___fladd+3,w
  6219  03B2  0022               	movlb	2	; select bank2
  6220  03B3  00D5               	movwf	(_logf$2277+3)^(0+256)
  6221  03B4  0020               	movlb	0	; select bank0
  6222  03B5  083A               	movf	?___fladd+2,w
  6223  03B6  0022               	movlb	2	; select bank2
  6224  03B7  00D4               	movwf	(_logf$2277+2)^(0+256)
  6225  03B8  0020               	movlb	0	; select bank0
  6226  03B9  0839               	movf	?___fladd+1,w
  6227  03BA  0022               	movlb	2	; select bank2
  6228  03BB  00D3               	movwf	(_logf$2277+1)^(0+256)
  6229  03BC  0020               	movlb	0	; select bank0
  6230  03BD  0838               	movf	?___fladd,w
  6231  03BE  0022               	movlb	2	; select bank2
  6232  03BF  00D2               	movwf	_logf$2277^(0+256)
  6233  03C0  084D               	movf	(logf@z+3)^(0+256),w
  6234  03C1  0021               	movlb	1	; select bank1
  6235  03C2  00AB               	movwf	(___flmul@b+3)^(0+128)
  6236  03C3  0022               	movlb	2	; select bank2
  6237  03C4  084C               	movf	(logf@z+2)^(0+256),w
  6238  03C5  0021               	movlb	1	; select bank1
  6239  03C6  00AA               	movwf	(___flmul@b+2)^(0+128)
  6240  03C7  0022               	movlb	2	; select bank2
  6241  03C8  084B               	movf	(logf@z+1)^(0+256),w
  6242  03C9  0021               	movlb	1	; select bank1
  6243  03CA  00A9               	movwf	(___flmul@b+1)^(0+128)
  6244  03CB  0022               	movlb	2	; select bank2
  6245  03CC  084A               	movf	logf@z^(0+256),w
  6246  03CD  0021               	movlb	1	; select bank1
  6247  03CE  00A8               	movwf	___flmul@b^(0+128)
  6248  03CF  0022               	movlb	2	; select bank2
  6249  03D0  0855               	movf	(_logf$2277+3)^(0+256),w
  6250  03D1  0021               	movlb	1	; select bank1
  6251  03D2  00AF               	movwf	(___flmul@a+3)^(0+128)
  6252  03D3  0022               	movlb	2	; select bank2
  6253  03D4  0854               	movf	(_logf$2277+2)^(0+256),w
  6254  03D5  0021               	movlb	1	; select bank1
  6255  03D6  00AE               	movwf	(___flmul@a+2)^(0+128)
  6256  03D7  0022               	movlb	2	; select bank2
  6257  03D8  0853               	movf	(_logf$2277+1)^(0+256),w
  6258  03D9  0021               	movlb	1	; select bank1
  6259  03DA  00AD               	movwf	(___flmul@a+1)^(0+128)
  6260  03DB  0022               	movlb	2	; select bank2
  6261  03DC  0852               	movf	_logf$2277^(0+256),w
  6262  03DD  0021               	movlb	1	; select bank1
  6263  03DE  00AC               	movwf	___flmul@a^(0+128)
  6264  03DF  318A  2241  3180   	fcall	___flmul
  6265  03E2  0021               	movlb	1	; select bank1
  6266  03E3  082B               	movf	(?___flmul+3)^(0+128),w
  6267  03E4  0022               	movlb	2	; select bank2
  6268  03E5  00AB               	movwf	(logf@t2+3)^(0+256)
  6269  03E6  0021               	movlb	1	; select bank1
  6270  03E7  082A               	movf	(?___flmul+2)^(0+128),w
  6271  03E8  0022               	movlb	2	; select bank2
  6272  03E9  00AA               	movwf	(logf@t2+2)^(0+256)
  6273  03EA  0021               	movlb	1	; select bank1
  6274  03EB  0829               	movf	(?___flmul+1)^(0+128),w
  6275  03EC  0022               	movlb	2	; select bank2
  6276  03ED  00A9               	movwf	(logf@t2+1)^(0+256)
  6277  03EE  0021               	movlb	1	; select bank1
  6278  03EF  0828               	movf	?___flmul^(0+128),w
  6279  03F0  0022               	movlb	2	; select bank2
  6280  03F1  00A8               	movwf	logf@t2^(0+256)
  6281  03F2  0827               	movf	(logf@t1+3)^(0+256),w
  6282  03F3  0020               	movlb	0	; select bank0
  6283  03F4  00BB               	movwf	___fladd@b+3
  6284  03F5  0022               	movlb	2	; select bank2
  6285  03F6  0826               	movf	(logf@t1+2)^(0+256),w
  6286  03F7  0020               	movlb	0	; select bank0
  6287  03F8  00BA               	movwf	___fladd@b+2
  6288  03F9  0022               	movlb	2	; select bank2
  6289  03FA  0825               	movf	(logf@t1+1)^(0+256),w
  6290  03FB  0020               	movlb	0	; select bank0
  6291  03FC  00B9               	movwf	___fladd@b+1
  6292  03FD  0022               	movlb	2	; select bank2
  6293  03FE  0824               	movf	logf@t1^(0+256),w
  6294  03FF  0020               	movlb	0	; select bank0
  6295  0400  00B8               	movwf	___fladd@b
  6296  0401  0022               	movlb	2	; select bank2
  6297  0402  082B               	movf	(logf@t2+3)^(0+256),w
  6298  0403  0020               	movlb	0	; select bank0
  6299  0404  00BF               	movwf	___fladd@a+3
  6300  0405  0022               	movlb	2	; select bank2
  6301  0406  082A               	movf	(logf@t2+2)^(0+256),w
  6302  0407  0020               	movlb	0	; select bank0
  6303  0408  00BE               	movwf	___fladd@a+2
  6304  0409  0022               	movlb	2	; select bank2
  6305  040A  0829               	movf	(logf@t2+1)^(0+256),w
  6306  040B  0020               	movlb	0	; select bank0
  6307  040C  00BD               	movwf	___fladd@a+1
  6308  040D  0022               	movlb	2	; select bank2
  6309  040E  0828               	movf	logf@t2^(0+256),w
  6310  040F  0020               	movlb	0	; select bank0
  6311  0410  00BC               	movwf	___fladd@a
  6312  0411  3185  25F9  3180   	fcall	___fladd
  6313  0414  0020               	movlb	0	; select bank0
  6314  0415  083B               	movf	?___fladd+3,w
  6315  0416  0022               	movlb	2	; select bank2
  6316  0417  00A3               	movwf	(logf@R+3)^(0+256)
  6317  0418  0020               	movlb	0	; select bank0
  6318  0419  083A               	movf	?___fladd+2,w
  6319  041A  0022               	movlb	2	; select bank2
  6320  041B  00A2               	movwf	(logf@R+2)^(0+256)
  6321  041C  0020               	movlb	0	; select bank0
  6322  041D  0839               	movf	?___fladd+1,w
  6323  041E  0022               	movlb	2	; select bank2
  6324  041F  00A1               	movwf	(logf@R+1)^(0+256)
  6325  0420  0020               	movlb	0	; select bank0
  6326  0421  0838               	movf	?___fladd,w
  6327  0422  0022               	movlb	2	; select bank2
  6328  0423  00A0               	movwf	logf@R^(0+256)
  6329  0424  303F               	movlw	63
  6330  0425  0021               	movlb	1	; select bank1
  6331  0426  00AB               	movwf	(___flmul@b+3)^(0+128)
  6332  0427  3000               	movlw	0
  6333  0428  00AA               	movwf	(___flmul@b+2)^(0+128)
  6334  0429  3000               	movlw	0
  6335  042A  00A9               	movwf	(___flmul@b+1)^(0+128)
  6336  042B  3000               	movlw	0
  6337  042C  00A8               	movwf	___flmul@b^(0+128)
  6338  042D  0022               	movlb	2	; select bank2
  6339  042E  085D               	movf	(logf@f+3)^(0+256),w
  6340  042F  0021               	movlb	1	; select bank1
  6341  0430  00AF               	movwf	(___flmul@a+3)^(0+128)
  6342  0431  0022               	movlb	2	; select bank2
  6343  0432  085C               	movf	(logf@f+2)^(0+256),w
  6344  0433  0021               	movlb	1	; select bank1
  6345  0434  00AE               	movwf	(___flmul@a+2)^(0+128)
  6346  0435  0022               	movlb	2	; select bank2
  6347  0436  085B               	movf	(logf@f+1)^(0+256),w
  6348  0437  0021               	movlb	1	; select bank1
  6349  0438  00AD               	movwf	(___flmul@a+1)^(0+128)
  6350  0439  0022               	movlb	2	; select bank2
  6351  043A  085A               	movf	logf@f^(0+256),w
  6352  043B  0021               	movlb	1	; select bank1
  6353  043C  00AC               	movwf	___flmul@a^(0+128)
  6354  043D  318A  2241  3180   	fcall	___flmul
  6355  0440  0021               	movlb	1	; select bank1
  6356  0441  082B               	movf	(?___flmul+3)^(0+128),w
  6357  0442  0022               	movlb	2	; select bank2
  6358  0443  00D5               	movwf	(_logf$2277+3)^(0+256)
  6359  0444  0021               	movlb	1	; select bank1
  6360  0445  082A               	movf	(?___flmul+2)^(0+128),w
  6361  0446  0022               	movlb	2	; select bank2
  6362  0447  00D4               	movwf	(_logf$2277+2)^(0+256)
  6363  0448  0021               	movlb	1	; select bank1
  6364  0449  0829               	movf	(?___flmul+1)^(0+128),w
  6365  044A  0022               	movlb	2	; select bank2
  6366  044B  00D3               	movwf	(_logf$2277+1)^(0+256)
  6367  044C  0021               	movlb	1	; select bank1
  6368  044D  0828               	movf	?___flmul^(0+128),w
  6369  044E  0022               	movlb	2	; select bank2
  6370  044F  00D2               	movwf	_logf$2277^(0+256)
  6371  0450  085D               	movf	(logf@f+3)^(0+256),w
  6372  0451  0021               	movlb	1	; select bank1
  6373  0452  00AB               	movwf	(___flmul@b+3)^(0+128)
  6374  0453  0022               	movlb	2	; select bank2
  6375  0454  085C               	movf	(logf@f+2)^(0+256),w
  6376  0455  0021               	movlb	1	; select bank1
  6377  0456  00AA               	movwf	(___flmul@b+2)^(0+128)
  6378  0457  0022               	movlb	2	; select bank2
  6379  0458  085B               	movf	(logf@f+1)^(0+256),w
  6380  0459  0021               	movlb	1	; select bank1
  6381  045A  00A9               	movwf	(___flmul@b+1)^(0+128)
  6382  045B  0022               	movlb	2	; select bank2
  6383  045C  085A               	movf	logf@f^(0+256),w
  6384  045D  0021               	movlb	1	; select bank1
  6385  045E  00A8               	movwf	___flmul@b^(0+128)
  6386  045F  0022               	movlb	2	; select bank2
  6387  0460  0855               	movf	(_logf$2277+3)^(0+256),w
  6388  0461  0021               	movlb	1	; select bank1
  6389  0462  00AF               	movwf	(___flmul@a+3)^(0+128)
  6390  0463  0022               	movlb	2	; select bank2
  6391  0464  0854               	movf	(_logf$2277+2)^(0+256),w
  6392  0465  0021               	movlb	1	; select bank1
  6393  0466  00AE               	movwf	(___flmul@a+2)^(0+128)
  6394  0467  0022               	movlb	2	; select bank2
  6395  0468  0853               	movf	(_logf$2277+1)^(0+256),w
  6396  0469  0021               	movlb	1	; select bank1
  6397  046A  00AD               	movwf	(___flmul@a+1)^(0+128)
  6398  046B  0022               	movlb	2	; select bank2
  6399  046C  0852               	movf	_logf$2277^(0+256),w
  6400  046D  0021               	movlb	1	; select bank1
  6401  046E  00AC               	movwf	___flmul@a^(0+128)
  6402  046F  318A  2241  3180   	fcall	___flmul
  6403  0472  0021               	movlb	1	; select bank1
  6404  0473  082B               	movf	(?___flmul+3)^(0+128),w
  6405  0474  0022               	movlb	2	; select bank2
  6406  0475  00C1               	movwf	(logf@hfsq+3)^(0+256)
  6407  0476  0021               	movlb	1	; select bank1
  6408  0477  082A               	movf	(?___flmul+2)^(0+128),w
  6409  0478  0022               	movlb	2	; select bank2
  6410  0479  00C0               	movwf	(logf@hfsq+2)^(0+256)
  6411  047A  0021               	movlb	1	; select bank1
  6412  047B  0829               	movf	(?___flmul+1)^(0+128),w
  6413  047C  0022               	movlb	2	; select bank2
  6414  047D  00BF               	movwf	(logf@hfsq+1)^(0+256)
  6415  047E  0021               	movlb	1	; select bank1
  6416  047F  0828               	movf	?___flmul^(0+128),w
  6417  0480  0022               	movlb	2	; select bank2
  6418  0481  00BE               	movwf	logf@hfsq^(0+256)
  6419  0482  083C               	movf	logf@k^(0+256),w
  6420  0483  0020               	movlb	0	; select bank0
  6421  0484  00AA               	movwf	___xxtofl@val
  6422  0485  0022               	movlb	2	; select bank2
  6423  0486  083D               	movf	(logf@k+1)^(0+256),w
  6424  0487  0020               	movlb	0	; select bank0
  6425  0488  00AB               	movwf	___xxtofl@val+1
  6426  0489  0D89               	rlf	9,f
  6427  048A  3B89               	subwfb	9,f
  6428  048B  0989               	comf	9,f
  6429  048C  00AC               	movwf	___xxtofl@val+2
  6430  048D  00AD               	movwf	___xxtofl@val+3
  6431  048E  3001               	movlw	1
  6432  048F  3188  200D  3180   	fcall	___xxtofl
  6433  0492  0020               	movlb	0	; select bank0
  6434  0493  082D               	movf	?___xxtofl+3,w
  6435  0494  0022               	movlb	2	; select bank2
  6436  0495  00C5               	movwf	(logf@dk+3)^(0+256)
  6437  0496  0020               	movlb	0	; select bank0
  6438  0497  082C               	movf	?___xxtofl+2,w
  6439  0498  0022               	movlb	2	; select bank2
  6440  0499  00C4               	movwf	(logf@dk+2)^(0+256)
  6441  049A  0020               	movlb	0	; select bank0
  6442  049B  082B               	movf	?___xxtofl+1,w
  6443  049C  0022               	movlb	2	; select bank2
  6444  049D  00C3               	movwf	(logf@dk+1)^(0+256)
  6445  049E  0020               	movlb	0	; select bank0
  6446  049F  082A               	movf	?___xxtofl,w
  6447  04A0  0022               	movlb	2	; select bank2
  6448  04A1  00C2               	movwf	logf@dk^(0+256)
  6449  04A2  0849               	movf	(logf@s+3)^(0+256),w
  6450  04A3  0021               	movlb	1	; select bank1
  6451  04A4  00AB               	movwf	(___flmul@b+3)^(0+128)
  6452  04A5  0022               	movlb	2	; select bank2
  6453  04A6  0848               	movf	(logf@s+2)^(0+256),w
  6454  04A7  0021               	movlb	1	; select bank1
  6455  04A8  00AA               	movwf	(___flmul@b+2)^(0+128)
  6456  04A9  0022               	movlb	2	; select bank2
  6457  04AA  0847               	movf	(logf@s+1)^(0+256),w
  6458  04AB  0021               	movlb	1	; select bank1
  6459  04AC  00A9               	movwf	(___flmul@b+1)^(0+128)
  6460  04AD  0022               	movlb	2	; select bank2
  6461  04AE  0846               	movf	logf@s^(0+256),w
  6462  04AF  0021               	movlb	1	; select bank1
  6463  04B0  00A8               	movwf	___flmul@b^(0+128)
  6464  04B1  0022               	movlb	2	; select bank2
  6465  04B2  0823               	movf	(logf@R+3)^(0+256),w
  6466  04B3  0020               	movlb	0	; select bank0
  6467  04B4  00BB               	movwf	___fladd@b+3
  6468  04B5  0022               	movlb	2	; select bank2
  6469  04B6  0822               	movf	(logf@R+2)^(0+256),w
  6470  04B7  0020               	movlb	0	; select bank0
  6471  04B8  00BA               	movwf	___fladd@b+2
  6472  04B9  0022               	movlb	2	; select bank2
  6473  04BA  0821               	movf	(logf@R+1)^(0+256),w
  6474  04BB  0020               	movlb	0	; select bank0
  6475  04BC  00B9               	movwf	___fladd@b+1
  6476  04BD  0022               	movlb	2	; select bank2
  6477  04BE  0820               	movf	logf@R^(0+256),w
  6478  04BF  0020               	movlb	0	; select bank0
  6479  04C0  00B8               	movwf	___fladd@b
  6480  04C1  0022               	movlb	2	; select bank2
  6481  04C2  0841               	movf	(logf@hfsq+3)^(0+256),w
  6482  04C3  0020               	movlb	0	; select bank0
  6483  04C4  00BF               	movwf	___fladd@a+3
  6484  04C5  0022               	movlb	2	; select bank2
  6485  04C6  0840               	movf	(logf@hfsq+2)^(0+256),w
  6486  04C7  0020               	movlb	0	; select bank0
  6487  04C8  00BE               	movwf	___fladd@a+2
  6488  04C9  0022               	movlb	2	; select bank2
  6489  04CA  083F               	movf	(logf@hfsq+1)^(0+256),w
  6490  04CB  0020               	movlb	0	; select bank0
  6491  04CC  00BD               	movwf	___fladd@a+1
  6492  04CD  0022               	movlb	2	; select bank2
  6493  04CE  083E               	movf	logf@hfsq^(0+256),w
  6494  04CF  0020               	movlb	0	; select bank0
  6495  04D0  00BC               	movwf	___fladd@a
  6496  04D1  3185  25F9  3180   	fcall	___fladd
  6497  04D4  0020               	movlb	0	; select bank0
  6498  04D5  083B               	movf	?___fladd+3,w
  6499  04D6  0021               	movlb	1	; select bank1
  6500  04D7  00AF               	movwf	(___flmul@a+3)^(0+128)
  6501  04D8  0020               	movlb	0	; select bank0
  6502  04D9  083A               	movf	?___fladd+2,w
  6503  04DA  0021               	movlb	1	; select bank1
  6504  04DB  00AE               	movwf	(___flmul@a+2)^(0+128)
  6505  04DC  0020               	movlb	0	; select bank0
  6506  04DD  0839               	movf	?___fladd+1,w
  6507  04DE  0021               	movlb	1	; select bank1
  6508  04DF  00AD               	movwf	(___flmul@a+1)^(0+128)
  6509  04E0  0020               	movlb	0	; select bank0
  6510  04E1  0838               	movf	?___fladd,w
  6511  04E2  0021               	movlb	1	; select bank1
  6512  04E3  00AC               	movwf	___flmul@a^(0+128)
  6513  04E4  318A  2241  3180   	fcall	___flmul
  6514  04E7  0021               	movlb	1	; select bank1
  6515  04E8  082B               	movf	(?___flmul+3)^(0+128),w
  6516  04E9  0022               	movlb	2	; select bank2
  6517  04EA  00AF               	movwf	(_logf$2278+3)^(0+256)
  6518  04EB  0021               	movlb	1	; select bank1
  6519  04EC  082A               	movf	(?___flmul+2)^(0+128),w
  6520  04ED  0022               	movlb	2	; select bank2
  6521  04EE  00AE               	movwf	(_logf$2278+2)^(0+256)
  6522  04EF  0021               	movlb	1	; select bank1
  6523  04F0  0829               	movf	(?___flmul+1)^(0+128),w
  6524  04F1  0022               	movlb	2	; select bank2
  6525  04F2  00AD               	movwf	(_logf$2278+1)^(0+256)
  6526  04F3  0021               	movlb	1	; select bank1
  6527  04F4  0828               	movf	?___flmul^(0+128),w
  6528  04F5  0022               	movlb	2	; select bank2
  6529  04F6  00AC               	movwf	_logf$2278^(0+256)
  6530  04F7  3037               	movlw	55
  6531  04F8  0021               	movlb	1	; select bank1
  6532  04F9  00AB               	movwf	(___flmul@b+3)^(0+128)
  6533  04FA  3017               	movlw	23
  6534  04FB  00AA               	movwf	(___flmul@b+2)^(0+128)
  6535  04FC  30F7               	movlw	247
  6536  04FD  00A9               	movwf	(___flmul@b+1)^(0+128)
  6537  04FE  30D1               	movlw	209
  6538  04FF  00A8               	movwf	___flmul@b^(0+128)
  6539  0500  0022               	movlb	2	; select bank2
  6540  0501  0845               	movf	(logf@dk+3)^(0+256),w
  6541  0502  0021               	movlb	1	; select bank1
  6542  0503  00AF               	movwf	(___flmul@a+3)^(0+128)
  6543  0504  0022               	movlb	2	; select bank2
  6544  0505  0844               	movf	(logf@dk+2)^(0+256),w
  6545  0506  0021               	movlb	1	; select bank1
  6546  0507  00AE               	movwf	(___flmul@a+2)^(0+128)
  6547  0508  0022               	movlb	2	; select bank2
  6548  0509  0843               	movf	(logf@dk+1)^(0+256),w
  6549  050A  0021               	movlb	1	; select bank1
  6550  050B  00AD               	movwf	(___flmul@a+1)^(0+128)
  6551  050C  0022               	movlb	2	; select bank2
  6552  050D  0842               	movf	logf@dk^(0+256),w
  6553  050E  0021               	movlb	1	; select bank1
  6554  050F  00AC               	movwf	___flmul@a^(0+128)
  6555  0510  318A  2241  3180   	fcall	___flmul
  6556  0513  0021               	movlb	1	; select bank1
  6557  0514  082B               	movf	(?___flmul+3)^(0+128),w
  6558  0515  0020               	movlb	0	; select bank0
  6559  0516  00BB               	movwf	___fladd@b+3
  6560  0517  0021               	movlb	1	; select bank1
  6561  0518  082A               	movf	(?___flmul+2)^(0+128),w
  6562  0519  0020               	movlb	0	; select bank0
  6563  051A  00BA               	movwf	___fladd@b+2
  6564  051B  0021               	movlb	1	; select bank1
  6565  051C  0829               	movf	(?___flmul+1)^(0+128),w
  6566  051D  0020               	movlb	0	; select bank0
  6567  051E  00B9               	movwf	___fladd@b+1
  6568  051F  0021               	movlb	1	; select bank1
  6569  0520  0828               	movf	?___flmul^(0+128),w
  6570  0521  0020               	movlb	0	; select bank0
  6571  0522  00B8               	movwf	___fladd@b
  6572  0523  0022               	movlb	2	; select bank2
  6573  0524  082F               	movf	(_logf$2278+3)^(0+256),w
  6574  0525  0020               	movlb	0	; select bank0
  6575  0526  00BF               	movwf	___fladd@a+3
  6576  0527  0022               	movlb	2	; select bank2
  6577  0528  082E               	movf	(_logf$2278+2)^(0+256),w
  6578  0529  0020               	movlb	0	; select bank0
  6579  052A  00BE               	movwf	___fladd@a+2
  6580  052B  0022               	movlb	2	; select bank2
  6581  052C  082D               	movf	(_logf$2278+1)^(0+256),w
  6582  052D  0020               	movlb	0	; select bank0
  6583  052E  00BD               	movwf	___fladd@a+1
  6584  052F  0022               	movlb	2	; select bank2
  6585  0530  082C               	movf	_logf$2278^(0+256),w
  6586  0531  0020               	movlb	0	; select bank0
  6587  0532  00BC               	movwf	___fladd@a
  6588  0533  3185  25F9  3180   	fcall	___fladd
  6589  0536  0020               	movlb	0	; select bank0
  6590  0537  083B               	movf	?___fladd+3,w
  6591  0538  0022               	movlb	2	; select bank2
  6592  0539  00B3               	movwf	(_logf$2279+3)^(0+256)
  6593  053A  0020               	movlb	0	; select bank0
  6594  053B  083A               	movf	?___fladd+2,w
  6595  053C  0022               	movlb	2	; select bank2
  6596  053D  00B2               	movwf	(_logf$2279+2)^(0+256)
  6597  053E  0020               	movlb	0	; select bank0
  6598  053F  0839               	movf	?___fladd+1,w
  6599  0540  0022               	movlb	2	; select bank2
  6600  0541  00B1               	movwf	(_logf$2279+1)^(0+256)
  6601  0542  0020               	movlb	0	; select bank0
  6602  0543  0838               	movf	?___fladd,w
  6603  0544  0022               	movlb	2	; select bank2
  6604  0545  00B0               	movwf	_logf$2279^(0+256)
  6605  0546  0841               	movf	(logf@hfsq+3)^(0+256),w
  6606  0547  0021               	movlb	1	; select bank1
  6607  0548  00A3               	movwf	(___flsub@a+3)^(0+128)
  6608  0549  0022               	movlb	2	; select bank2
  6609  054A  0840               	movf	(logf@hfsq+2)^(0+256),w
  6610  054B  0021               	movlb	1	; select bank1
  6611  054C  00A2               	movwf	(___flsub@a+2)^(0+128)
  6612  054D  0022               	movlb	2	; select bank2
  6613  054E  083F               	movf	(logf@hfsq+1)^(0+256),w
  6614  054F  0021               	movlb	1	; select bank1
  6615  0550  00A1               	movwf	(___flsub@a+1)^(0+128)
  6616  0551  0022               	movlb	2	; select bank2
  6617  0552  083E               	movf	logf@hfsq^(0+256),w
  6618  0553  0021               	movlb	1	; select bank1
  6619  0554  00A0               	movwf	___flsub@a^(0+128)
  6620  0555  0022               	movlb	2	; select bank2
  6621  0556  0833               	movf	(_logf$2279+3)^(0+256),w
  6622  0557  0021               	movlb	1	; select bank1
  6623  0558  00A7               	movwf	(___flsub@b+3)^(0+128)
  6624  0559  0022               	movlb	2	; select bank2
  6625  055A  0832               	movf	(_logf$2279+2)^(0+256),w
  6626  055B  0021               	movlb	1	; select bank1
  6627  055C  00A6               	movwf	(___flsub@b+2)^(0+128)
  6628  055D  0022               	movlb	2	; select bank2
  6629  055E  0831               	movf	(_logf$2279+1)^(0+256),w
  6630  055F  0021               	movlb	1	; select bank1
  6631  0560  00A5               	movwf	(___flsub@b+1)^(0+128)
  6632  0561  0022               	movlb	2	; select bank2
  6633  0562  0830               	movf	_logf$2279^(0+256),w
  6634  0563  0021               	movlb	1	; select bank1
  6635  0564  00A4               	movwf	___flsub@b^(0+128)
  6636  0565  3190  20C9  3180   	fcall	___flsub
  6637  0568  0021               	movlb	1	; select bank1
  6638  0569  0823               	movf	(?___flsub+3)^(0+128),w
  6639  056A  0022               	movlb	2	; select bank2
  6640  056B  00B7               	movwf	(_logf$2280+3)^(0+256)
  6641  056C  0021               	movlb	1	; select bank1
  6642  056D  0822               	movf	(?___flsub+2)^(0+128),w
  6643  056E  0022               	movlb	2	; select bank2
  6644  056F  00B6               	movwf	(_logf$2280+2)^(0+256)
  6645  0570  0021               	movlb	1	; select bank1
  6646  0571  0821               	movf	(?___flsub+1)^(0+128),w
  6647  0572  0022               	movlb	2	; select bank2
  6648  0573  00B5               	movwf	(_logf$2280+1)^(0+256)
  6649  0574  0021               	movlb	1	; select bank1
  6650  0575  0820               	movf	?___flsub^(0+128),w
  6651  0576  0022               	movlb	2	; select bank2
  6652  0577  00B4               	movwf	_logf$2280^(0+256)
  6653  0578  085D               	movf	(logf@f+3)^(0+256),w
  6654  0579  0020               	movlb	0	; select bank0
  6655  057A  00BB               	movwf	___fladd@b+3
  6656  057B  0022               	movlb	2	; select bank2
  6657  057C  085C               	movf	(logf@f+2)^(0+256),w
  6658  057D  0020               	movlb	0	; select bank0
  6659  057E  00BA               	movwf	___fladd@b+2
  6660  057F  0022               	movlb	2	; select bank2
  6661  0580  085B               	movf	(logf@f+1)^(0+256),w
  6662  0581  0020               	movlb	0	; select bank0
  6663  0582  00B9               	movwf	___fladd@b+1
  6664  0583  0022               	movlb	2	; select bank2
  6665  0584  085A               	movf	logf@f^(0+256),w
  6666  0585  0020               	movlb	0	; select bank0
  6667  0586  00B8               	movwf	___fladd@b
  6668  0587  0022               	movlb	2	; select bank2
  6669  0588  0837               	movf	(_logf$2280+3)^(0+256),w
  6670  0589  0020               	movlb	0	; select bank0
  6671  058A  00BF               	movwf	___fladd@a+3
  6672  058B  0022               	movlb	2	; select bank2
  6673  058C  0836               	movf	(_logf$2280+2)^(0+256),w
  6674  058D  0020               	movlb	0	; select bank0
  6675  058E  00BE               	movwf	___fladd@a+2
  6676  058F  0022               	movlb	2	; select bank2
  6677  0590  0835               	movf	(_logf$2280+1)^(0+256),w
  6678  0591  0020               	movlb	0	; select bank0
  6679  0592  00BD               	movwf	___fladd@a+1
  6680  0593  0022               	movlb	2	; select bank2
  6681  0594  0834               	movf	_logf$2280^(0+256),w
  6682  0595  0020               	movlb	0	; select bank0
  6683  0596  00BC               	movwf	___fladd@a
  6684  0597  3185  25F9  3180   	fcall	___fladd
  6685  059A  0020               	movlb	0	; select bank0
  6686  059B  083B               	movf	?___fladd+3,w
  6687  059C  0022               	movlb	2	; select bank2
  6688  059D  00BB               	movwf	(_logf$2281+3)^(0+256)
  6689  059E  0020               	movlb	0	; select bank0
  6690  059F  083A               	movf	?___fladd+2,w
  6691  05A0  0022               	movlb	2	; select bank2
  6692  05A1  00BA               	movwf	(_logf$2281+2)^(0+256)
  6693  05A2  0020               	movlb	0	; select bank0
  6694  05A3  0839               	movf	?___fladd+1,w
  6695  05A4  0022               	movlb	2	; select bank2
  6696  05A5  00B9               	movwf	(_logf$2281+1)^(0+256)
  6697  05A6  0020               	movlb	0	; select bank0
  6698  05A7  0838               	movf	?___fladd,w
  6699  05A8  0022               	movlb	2	; select bank2
  6700  05A9  00B8               	movwf	_logf$2281^(0+256)
  6701  05AA  303F               	movlw	63
  6702  05AB  0021               	movlb	1	; select bank1
  6703  05AC  00AB               	movwf	(___flmul@b+3)^(0+128)
  6704  05AD  3031               	movlw	49
  6705  05AE  00AA               	movwf	(___flmul@b+2)^(0+128)
  6706  05AF  3071               	movlw	113
  6707  05B0  00A9               	movwf	(___flmul@b+1)^(0+128)
  6708  05B1  3080               	movlw	128
  6709  05B2  00A8               	movwf	___flmul@b^(0+128)
  6710  05B3  0022               	movlb	2	; select bank2
  6711  05B4  0845               	movf	(logf@dk+3)^(0+256),w
  6712  05B5  0021               	movlb	1	; select bank1
  6713  05B6  00AF               	movwf	(___flmul@a+3)^(0+128)
  6714  05B7  0022               	movlb	2	; select bank2
  6715  05B8  0844               	movf	(logf@dk+2)^(0+256),w
  6716  05B9  0021               	movlb	1	; select bank1
  6717  05BA  00AE               	movwf	(___flmul@a+2)^(0+128)
  6718  05BB  0022               	movlb	2	; select bank2
  6719  05BC  0843               	movf	(logf@dk+1)^(0+256),w
  6720  05BD  0021               	movlb	1	; select bank1
  6721  05BE  00AD               	movwf	(___flmul@a+1)^(0+128)
  6722  05BF  0022               	movlb	2	; select bank2
  6723  05C0  0842               	movf	logf@dk^(0+256),w
  6724  05C1  0021               	movlb	1	; select bank1
  6725  05C2  00AC               	movwf	___flmul@a^(0+128)
  6726  05C3  318A  2241  3180   	fcall	___flmul
  6727  05C6  0021               	movlb	1	; select bank1
  6728  05C7  082B               	movf	(?___flmul+3)^(0+128),w
  6729  05C8  0020               	movlb	0	; select bank0
  6730  05C9  00BB               	movwf	___fladd@b+3
  6731  05CA  0021               	movlb	1	; select bank1
  6732  05CB  082A               	movf	(?___flmul+2)^(0+128),w
  6733  05CC  0020               	movlb	0	; select bank0
  6734  05CD  00BA               	movwf	___fladd@b+2
  6735  05CE  0021               	movlb	1	; select bank1
  6736  05CF  0829               	movf	(?___flmul+1)^(0+128),w
  6737  05D0  0020               	movlb	0	; select bank0
  6738  05D1  00B9               	movwf	___fladd@b+1
  6739  05D2  0021               	movlb	1	; select bank1
  6740  05D3  0828               	movf	?___flmul^(0+128),w
  6741  05D4  0020               	movlb	0	; select bank0
  6742  05D5  00B8               	movwf	___fladd@b
  6743  05D6  0022               	movlb	2	; select bank2
  6744  05D7  083B               	movf	(_logf$2281+3)^(0+256),w
  6745  05D8  0020               	movlb	0	; select bank0
  6746  05D9  00BF               	movwf	___fladd@a+3
  6747  05DA  0022               	movlb	2	; select bank2
  6748  05DB  083A               	movf	(_logf$2281+2)^(0+256),w
  6749  05DC  0020               	movlb	0	; select bank0
  6750  05DD  00BE               	movwf	___fladd@a+2
  6751  05DE  0022               	movlb	2	; select bank2
  6752  05DF  0839               	movf	(_logf$2281+1)^(0+256),w
  6753  05E0  0020               	movlb	0	; select bank0
  6754  05E1  00BD               	movwf	___fladd@a+1
  6755  05E2  0022               	movlb	2	; select bank2
  6756  05E3  0838               	movf	_logf$2281^(0+256),w
  6757  05E4  0020               	movlb	0	; select bank0
  6758  05E5  00BC               	movwf	___fladd@a
  6759  05E6  3185  25F9         	fcall	___fladd
  6760  05E8  0020               	movlb	0	; select bank0
  6761  05E9  083B               	movf	?___fladd+3,w
  6762  05EA  0021               	movlb	1	; select bank1
  6763  05EB  00DA               	movwf	(?_logf+3)^(0+128)
  6764  05EC  0020               	movlb	0	; select bank0
  6765  05ED  083A               	movf	?___fladd+2,w
  6766  05EE  0021               	movlb	1	; select bank1
  6767  05EF  00D9               	movwf	(?_logf+2)^(0+128)
  6768  05F0  0020               	movlb	0	; select bank0
  6769  05F1  0839               	movf	?___fladd+1,w
  6770  05F2  0021               	movlb	1	; select bank1
  6771  05F3  00D8               	movwf	(?_logf+1)^(0+128)
  6772  05F4  0020               	movlb	0	; select bank0
  6773  05F5  0838               	movf	?___fladd,w
  6774  05F6  0021               	movlb	1	; select bank1
  6775  05F7  00D7               	movwf	?_logf^(0+128)
  6776  05F8  0008               	return
  6777  05F9                     __end_of_logf:
  6778                           
  6779                           	psect	text5
  6780  10C9                     __ptext5:	
  6781 ;; *************** function ___flsub *****************
  6782 ;; Defined at:
  6783 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  a               4    0[BANK1 ] float 
  6786 ;;  b               4    4[BANK1 ] float 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  4    0[BANK1 ] float 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6798 ;;      Params:         0       0       8       0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0
  6801 ;;      Totals:         0       0       8       0       0       0       0       0
  6802 ;;Total ram usage:        8 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 5
  6805 ;; This function calls:
  6806 ;;		___fladd
  6807 ;; This function is called by:
  6808 ;;		_map
  6809 ;;		_get_ntc_temperature
  6810 ;;		_logf
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814  10C9                     ___flsub:	
  6815                           ;psect for function ___flsub
  6816                           
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6820  10C9  3080               	movlw	128
  6821  10CA  0021               	movlb	1	; select bank1
  6822  10CB  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6823  10CC  0827               	movf	(___flsub@b+3)^(0+128),w
  6824  10CD  0020               	movlb	0	; select bank0
  6825  10CE  00BB               	movwf	___fladd@b+3
  6826  10CF  0021               	movlb	1	; select bank1
  6827  10D0  0826               	movf	(___flsub@b+2)^(0+128),w
  6828  10D1  0020               	movlb	0	; select bank0
  6829  10D2  00BA               	movwf	___fladd@b+2
  6830  10D3  0021               	movlb	1	; select bank1
  6831  10D4  0825               	movf	(___flsub@b+1)^(0+128),w
  6832  10D5  0020               	movlb	0	; select bank0
  6833  10D6  00B9               	movwf	___fladd@b+1
  6834  10D7  0021               	movlb	1	; select bank1
  6835  10D8  0824               	movf	___flsub@b^(0+128),w
  6836  10D9  0020               	movlb	0	; select bank0
  6837  10DA  00B8               	movwf	___fladd@b
  6838  10DB  0021               	movlb	1	; select bank1
  6839  10DC  0823               	movf	(___flsub@a+3)^(0+128),w
  6840  10DD  0020               	movlb	0	; select bank0
  6841  10DE  00BF               	movwf	___fladd@a+3
  6842  10DF  0021               	movlb	1	; select bank1
  6843  10E0  0822               	movf	(___flsub@a+2)^(0+128),w
  6844  10E1  0020               	movlb	0	; select bank0
  6845  10E2  00BE               	movwf	___fladd@a+2
  6846  10E3  0021               	movlb	1	; select bank1
  6847  10E4  0821               	movf	(___flsub@a+1)^(0+128),w
  6848  10E5  0020               	movlb	0	; select bank0
  6849  10E6  00BD               	movwf	___fladd@a+1
  6850  10E7  0021               	movlb	1	; select bank1
  6851  10E8  0820               	movf	___flsub@a^(0+128),w
  6852  10E9  0020               	movlb	0	; select bank0
  6853  10EA  00BC               	movwf	___fladd@a
  6854  10EB  3185  25F9         	fcall	___fladd
  6855  10ED  0020               	movlb	0	; select bank0
  6856  10EE  083B               	movf	?___fladd+3,w
  6857  10EF  0021               	movlb	1	; select bank1
  6858  10F0  00A3               	movwf	(?___flsub+3)^(0+128)
  6859  10F1  0020               	movlb	0	; select bank0
  6860  10F2  083A               	movf	?___fladd+2,w
  6861  10F3  0021               	movlb	1	; select bank1
  6862  10F4  00A2               	movwf	(?___flsub+2)^(0+128)
  6863  10F5  0020               	movlb	0	; select bank0
  6864  10F6  0839               	movf	?___fladd+1,w
  6865  10F7  0021               	movlb	1	; select bank1
  6866  10F8  00A1               	movwf	(?___flsub+1)^(0+128)
  6867  10F9  0020               	movlb	0	; select bank0
  6868  10FA  0838               	movf	?___fladd,w
  6869  10FB  0021               	movlb	1	; select bank1
  6870  10FC  00A0               	movwf	?___flsub^(0+128)
  6871  10FD  0008               	return
  6872  10FE                     __end_of___flsub:
  6873                           
  6874                           	psect	text6
  6875  05F9                     __ptext6:	
  6876 ;; *************** function ___fladd *****************
  6877 ;; Defined at:
  6878 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  b               4   24[BANK0 ] float 
  6881 ;;  a               4   28[BANK0 ] float 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  grs             1   43[BANK0 ] unsigned char 
  6884 ;;  bexp            1   42[BANK0 ] unsigned char 
  6885 ;;  aexp            1   41[BANK0 ] unsigned char 
  6886 ;;  signs           1   40[BANK0 ] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4   24[BANK0 ] unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6896 ;;      Params:         0       8       0       0       0       0       0       0
  6897 ;;      Locals:         0       4       0       0       0       0       0       0
  6898 ;;      Temps:          0       8       0       0       0       0       0       0
  6899 ;;      Totals:         0      20       0       0       0       0       0       0
  6900 ;;Total ram usage:       20 bytes
  6901 ;; Hardware stack levels used: 1
  6902 ;; Hardware stack levels required when called: 4
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_map
  6907 ;;		_get_ntc_temperature
  6908 ;;		___flsub
  6909 ;;		_logf
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913  05F9                     ___fladd:	
  6914                           ;psect for function ___fladd
  6915                           
  6916                           
  6917                           ;incstack = 0
  6918                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  6919  05F9  0020               	movlb	0	; select bank0
  6920  05FA  083B               	movf	___fladd@b+3,w
  6921  05FB  3980               	andlw	128
  6922  05FC  00C0               	movwf	??___fladd
  6923  05FD  0840               	movf	??___fladd,w
  6924  05FE  00C8               	movwf	___fladd@signs
  6925  05FF  353B               	lslf	___fladd@b+3,w
  6926  0600  00C0               	movwf	??___fladd
  6927  0601  0840               	movf	??___fladd,w
  6928  0602  00CA               	movwf	___fladd@bexp
  6929  0603  1BBA               	btfsc	___fladd@b+2,7
  6930  0604  144A               	bsf	___fladd@bexp,0
  6931  0605  084A               	movf	___fladd@bexp,w
  6932  0606  1903               	btfsc	3,2
  6933  0607  2E16               	goto	l5725
  6934  0608  0A4A               	incf	___fladd@bexp,w
  6935  0609  1D03               	btfss	3,2
  6936  060A  2E13               	goto	l5721
  6937  060B  3000               	movlw	0
  6938  060C  00BB               	movwf	___fladd@b+3
  6939  060D  3000               	movlw	0
  6940  060E  00BA               	movwf	___fladd@b+2
  6941  060F  3000               	movlw	0
  6942  0610  00B9               	movwf	___fladd@b+1
  6943  0611  3000               	movlw	0
  6944  0612  00B8               	movwf	___fladd@b
  6945  0613                     l5721:
  6946  0613  17BA               	bsf	___fladd@b+2,7
  6947  0614  01BB               	clrf	___fladd@b+3
  6948  0615  2E1E               	goto	l5727
  6949  0616                     l5725:
  6950  0616  3000               	movlw	0
  6951  0617  00BB               	movwf	___fladd@b+3
  6952  0618  3000               	movlw	0
  6953  0619  00BA               	movwf	___fladd@b+2
  6954  061A  3000               	movlw	0
  6955  061B  00B9               	movwf	___fladd@b+1
  6956  061C  3000               	movlw	0
  6957  061D  00B8               	movwf	___fladd@b
  6958  061E                     l5727:
  6959  061E  083F               	movf	___fladd@a+3,w
  6960  061F  3980               	andlw	128
  6961  0620  00C0               	movwf	??___fladd
  6962  0621  0840               	movf	??___fladd,w
  6963  0622  00C9               	movwf	___fladd@aexp
  6964  0623  0849               	movf	___fladd@aexp,w
  6965  0624  0648               	xorwf	___fladd@signs,w
  6966  0625  1D03               	btfss	3,2
  6967  0626  1748               	bsf	___fladd@signs,6
  6968  0627  353F               	lslf	___fladd@a+3,w
  6969  0628  00C0               	movwf	??___fladd
  6970  0629  0840               	movf	??___fladd,w
  6971  062A  00C9               	movwf	___fladd@aexp
  6972  062B  1BBE               	btfsc	___fladd@a+2,7
  6973  062C  1449               	bsf	___fladd@aexp,0
  6974  062D  0849               	movf	___fladd@aexp,w
  6975  062E  1903               	btfsc	3,2
  6976  062F  2E3E               	goto	l5749
  6977  0630  0A49               	incf	___fladd@aexp,w
  6978  0631  1D03               	btfss	3,2
  6979  0632  2E3B               	goto	l5745
  6980  0633  3000               	movlw	0
  6981  0634  00BF               	movwf	___fladd@a+3
  6982  0635  3000               	movlw	0
  6983  0636  00BE               	movwf	___fladd@a+2
  6984  0637  3000               	movlw	0
  6985  0638  00BD               	movwf	___fladd@a+1
  6986  0639  3000               	movlw	0
  6987  063A  00BC               	movwf	___fladd@a
  6988  063B                     l5745:
  6989  063B  17BE               	bsf	___fladd@a+2,7
  6990  063C  01BF               	clrf	___fladd@a+3
  6991  063D  2E46               	goto	l1354
  6992  063E                     l5749:
  6993  063E  3000               	movlw	0
  6994  063F  00BF               	movwf	___fladd@a+3
  6995  0640  3000               	movlw	0
  6996  0641  00BE               	movwf	___fladd@a+2
  6997  0642  3000               	movlw	0
  6998  0643  00BD               	movwf	___fladd@a+1
  6999  0644  3000               	movlw	0
  7000  0645  00BC               	movwf	___fladd@a
  7001  0646                     l1354:
  7002  0646  084A               	movf	___fladd@bexp,w
  7003  0647  0249               	subwf	___fladd@aexp,w
  7004  0648  1803               	skipnc
  7005  0649  2E8C               	goto	l5785
  7006  064A  1F48               	btfss	___fladd@signs,6
  7007  064B  2E50               	goto	l5755
  7008  064C  3080               	movlw	128
  7009  064D  00C0               	movwf	??___fladd
  7010  064E  0840               	movf	??___fladd,w
  7011  064F  06C8               	xorwf	___fladd@signs,f
  7012  0650                     l5755:
  7013  0650  084A               	movf	___fladd@bexp,w
  7014  0651  00C0               	movwf	??___fladd
  7015  0652  0840               	movf	??___fladd,w
  7016  0653  00CB               	movwf	___fladd@grs
  7017  0654  0849               	movf	___fladd@aexp,w
  7018  0655  00C0               	movwf	??___fladd
  7019  0656  0840               	movf	??___fladd,w
  7020  0657  00CA               	movwf	___fladd@bexp
  7021  0658  084B               	movf	___fladd@grs,w
  7022  0659  00C0               	movwf	??___fladd
  7023  065A  0840               	movf	??___fladd,w
  7024  065B  00C9               	movwf	___fladd@aexp
  7025  065C  0838               	movf	___fladd@b,w
  7026  065D  00C0               	movwf	??___fladd
  7027  065E  0840               	movf	??___fladd,w
  7028  065F  00CB               	movwf	___fladd@grs
  7029  0660  083C               	movf	___fladd@a,w
  7030  0661  00C0               	movwf	??___fladd
  7031  0662  0840               	movf	??___fladd,w
  7032  0663  00B8               	movwf	___fladd@b
  7033  0664  084B               	movf	___fladd@grs,w
  7034  0665  00C0               	movwf	??___fladd
  7035  0666  0840               	movf	??___fladd,w
  7036  0667  00BC               	movwf	___fladd@a
  7037  0668  0839               	movf	___fladd@b+1,w
  7038  0669  00C0               	movwf	??___fladd
  7039  066A  0840               	movf	??___fladd,w
  7040  066B  00CB               	movwf	___fladd@grs
  7041  066C  083D               	movf	___fladd@a+1,w
  7042  066D  00C0               	movwf	??___fladd
  7043  066E  0840               	movf	??___fladd,w
  7044  066F  00B9               	movwf	___fladd@b+1
  7045  0670  084B               	movf	___fladd@grs,w
  7046  0671  00C0               	movwf	??___fladd
  7047  0672  0840               	movf	??___fladd,w
  7048  0673  00BD               	movwf	___fladd@a+1
  7049  0674  083A               	movf	___fladd@b+2,w
  7050  0675  00C0               	movwf	??___fladd
  7051  0676  0840               	movf	??___fladd,w
  7052  0677  00CB               	movwf	___fladd@grs
  7053  0678  083E               	movf	___fladd@a+2,w
  7054  0679  00C0               	movwf	??___fladd
  7055  067A  0840               	movf	??___fladd,w
  7056  067B  00BA               	movwf	___fladd@b+2
  7057  067C  084B               	movf	___fladd@grs,w
  7058  067D  00C0               	movwf	??___fladd
  7059  067E  0840               	movf	??___fladd,w
  7060  067F  00BE               	movwf	___fladd@a+2
  7061  0680  083B               	movf	___fladd@b+3,w
  7062  0681  00C0               	movwf	??___fladd
  7063  0682  0840               	movf	??___fladd,w
  7064  0683  00CB               	movwf	___fladd@grs
  7065  0684  083F               	movf	___fladd@a+3,w
  7066  0685  00C0               	movwf	??___fladd
  7067  0686  0840               	movf	??___fladd,w
  7068  0687  00BB               	movwf	___fladd@b+3
  7069  0688  084B               	movf	___fladd@grs,w
  7070  0689  00C0               	movwf	??___fladd
  7071  068A  0840               	movf	??___fladd,w
  7072  068B  00BF               	movwf	___fladd@a+3
  7073  068C                     l5785:
  7074  068C  01CB               	clrf	___fladd@grs
  7075  068D  0849               	movf	___fladd@aexp,w
  7076  068E  00C0               	movwf	??___fladd
  7077  068F  01C1               	clrf	??___fladd+1
  7078  0690  0841               	movf	??___fladd+1,w
  7079  0691  00C3               	movwf	??___fladd+3
  7080  0692  084A               	movf	___fladd@bexp,w
  7081  0693  0240               	subwf	??___fladd,w
  7082  0694  00C2               	movwf	??___fladd+2
  7083  0695  1C03               	skipc
  7084  0696  03C3               	decf	??___fladd+3,f
  7085  0697  0843               	movf	??___fladd+3,w
  7086  0698  3A80               	xorlw	128
  7087  0699  00C4               	movwf	??___fladd+4
  7088  069A  3080               	movlw	128
  7089  069B  0244               	subwf	??___fladd+4,w
  7090  069C  1D03               	skipz
  7091  069D  2EA0               	goto	u4865
  7092  069E  301A               	movlw	26
  7093  069F  0242               	subwf	??___fladd+2,w
  7094  06A0                     u4865:
  7095  06A0  1C03               	skipc
  7096  06A1  2ED4               	goto	l5803
  7097  06A2  0020               	movlb	0	; select bank0
  7098  06A3  083B               	movf	___fladd@b+3,w
  7099  06A4  043A               	iorwf	___fladd@b+2,w
  7100  06A5  0439               	iorwf	___fladd@b+1,w
  7101  06A6  0438               	iorwf	___fladd@b,w
  7102  06A7  1903               	btfsc	3,2
  7103  06A8  2EAB               	goto	u4870
  7104  06A9  3001               	movlw	1
  7105  06AA  2EAC               	goto	u4880
  7106  06AB                     u4870:
  7107  06AB  3000               	movlw	0
  7108  06AC                     u4880:
  7109  06AC  00C0               	movwf	??___fladd
  7110  06AD  0840               	movf	??___fladd,w
  7111  06AE  00CB               	movwf	___fladd@grs
  7112  06AF  3000               	movlw	0
  7113  06B0  00BB               	movwf	___fladd@b+3
  7114  06B1  3000               	movlw	0
  7115  06B2  00BA               	movwf	___fladd@b+2
  7116  06B3  3000               	movlw	0
  7117  06B4  00B9               	movwf	___fladd@b+1
  7118  06B5  3000               	movlw	0
  7119  06B6  00B8               	movwf	___fladd@b
  7120  06B7  0849               	movf	___fladd@aexp,w
  7121  06B8  00C0               	movwf	??___fladd
  7122  06B9  0840               	movf	??___fladd,w
  7123  06BA  00CA               	movwf	___fladd@bexp
  7124  06BB  2ED9               	goto	l1358
  7125  06BC                     l1360:
  7126  06BC  1C4B               	btfss	___fladd@grs,0
  7127  06BD  2EC4               	goto	l5793
  7128  06BE  364B               	lsrf	___fladd@grs,w
  7129  06BF  3801               	iorlw	1
  7130  06C0  00C0               	movwf	??___fladd
  7131  06C1  0840               	movf	??___fladd,w
  7132  06C2  00CB               	movwf	___fladd@grs
  7133  06C3  2EC6               	goto	l5795
  7134  06C4                     l5793:
  7135  06C4  1003               	clrc
  7136  06C5  0CCB               	rrf	___fladd@grs,f
  7137  06C6                     l5795:
  7138  06C6  1838               	btfsc	___fladd@b,0
  7139  06C7  17CB               	bsf	___fladd@grs,7
  7140  06C8  3001               	movlw	1
  7141  06C9  00C0               	movwf	??___fladd
  7142  06CA                     u4915:
  7143  06CA  37BB               	asrf	___fladd@b+3,f
  7144  06CB  0CBA               	rrf	___fladd@b+2,f
  7145  06CC  0CB9               	rrf	___fladd@b+1,f
  7146  06CD  0CB8               	rrf	___fladd@b,f
  7147  06CE  0BC0               	decfsz	??___fladd& (0+127),f
  7148  06CF  2ECA               	goto	u4915
  7149  06D0  3001               	movlw	1
  7150  06D1  00C0               	movwf	??___fladd
  7151  06D2  0840               	movf	??___fladd,w
  7152  06D3  07CA               	addwf	___fladd@bexp,f
  7153  06D4                     l5803:
  7154  06D4  0020               	movlb	0	; select bank0
  7155  06D5  0849               	movf	___fladd@aexp,w
  7156  06D6  024A               	subwf	___fladd@bexp,w
  7157  06D7  1C03               	skipc
  7158  06D8  2EBC               	goto	l1360
  7159  06D9                     l1358:
  7160  06D9  1B48               	btfsc	___fladd@signs,6
  7161  06DA  2F0A               	goto	l5829
  7162  06DB  084A               	movf	___fladd@bexp,w
  7163  06DC  1D03               	btfss	3,2
  7164  06DD  2EE7               	goto	l5811
  7165  06DE  3000               	movlw	0
  7166  06DF  00BB               	movwf	?___fladd+3
  7167  06E0  3000               	movlw	0
  7168  06E1  00BA               	movwf	?___fladd+2
  7169  06E2  3000               	movlw	0
  7170  06E3  00B9               	movwf	?___fladd+1
  7171  06E4  3000               	movlw	0
  7172  06E5  00B8               	movwf	?___fladd
  7173  06E6  0008               	return
  7174  06E7                     l5811:
  7175  06E7  083C               	movf	___fladd@a,w
  7176  06E8  07B8               	addwf	___fladd@b,f
  7177  06E9  083D               	movf	___fladd@a+1,w
  7178  06EA  3DB9               	addwfc	___fladd@b+1,f
  7179  06EB  083E               	movf	___fladd@a+2,w
  7180  06EC  3DBA               	addwfc	___fladd@b+2,f
  7181  06ED  083F               	movf	___fladd@a+3,w
  7182  06EE  3DBB               	addwfc	___fladd@b+3,f
  7183  06EF  1C3B               	btfss	___fladd@b+3,0
  7184  06F0  2F84               	goto	l5863
  7185  06F1  1C4B               	btfss	___fladd@grs,0
  7186  06F2  2EF9               	goto	l5819
  7187  06F3  364B               	lsrf	___fladd@grs,w
  7188  06F4  3801               	iorlw	1
  7189  06F5  00C0               	movwf	??___fladd
  7190  06F6  0840               	movf	??___fladd,w
  7191  06F7  00CB               	movwf	___fladd@grs
  7192  06F8  2EFB               	goto	l5821
  7193  06F9                     l5819:
  7194  06F9  1003               	clrc
  7195  06FA  0CCB               	rrf	___fladd@grs,f
  7196  06FB                     l5821:
  7197  06FB  1838               	btfsc	___fladd@b,0
  7198  06FC  17CB               	bsf	___fladd@grs,7
  7199  06FD  3001               	movlw	1
  7200  06FE  00C0               	movwf	??___fladd
  7201  06FF                     u4985:
  7202  06FF  37BB               	asrf	___fladd@b+3,f
  7203  0700  0CBA               	rrf	___fladd@b+2,f
  7204  0701  0CB9               	rrf	___fladd@b+1,f
  7205  0702  0CB8               	rrf	___fladd@b,f
  7206  0703  0BC0               	decfsz	??___fladd& (0+127),f
  7207  0704  2EFF               	goto	u4985
  7208  0705  3001               	movlw	1
  7209  0706  00C0               	movwf	??___fladd
  7210  0707  0840               	movf	??___fladd,w
  7211  0708  07CA               	addwf	___fladd@bexp,f
  7212  0709  2F84               	goto	l5863
  7213  070A                     l5829:
  7214  070A  083B               	movf	___fladd@b+3,w
  7215  070B  3A80               	xorlw	128
  7216  070C  00C0               	movwf	??___fladd
  7217  070D  083F               	movf	___fladd@a+3,w
  7218  070E  3A80               	xorlw	128
  7219  070F  0240               	subwf	??___fladd,w
  7220  0710  1D03               	skipz
  7221  0711  2F1C               	goto	u4993
  7222  0712  083E               	movf	___fladd@a+2,w
  7223  0713  023A               	subwf	___fladd@b+2,w
  7224  0714  1D03               	skipz
  7225  0715  2F1C               	goto	u4993
  7226  0716  083D               	movf	___fladd@a+1,w
  7227  0717  0239               	subwf	___fladd@b+1,w
  7228  0718  1D03               	skipz
  7229  0719  2F1C               	goto	u4993
  7230  071A  083C               	movf	___fladd@a,w
  7231  071B  0238               	subwf	___fladd@b,w
  7232  071C                     u4993:
  7233  071C  1803               	skipnc
  7234  071D  2F54               	goto	l5839
  7235  071E  30FF               	movlw	255
  7236  071F  00C0               	movwf	??___fladd
  7237  0720  30FF               	movlw	255
  7238  0721  00C1               	movwf	??___fladd+1
  7239  0722  30FF               	movlw	255
  7240  0723  00C2               	movwf	??___fladd+2
  7241  0724  30FF               	movlw	255
  7242  0725  00C3               	movwf	??___fladd+3
  7243  0726  0838               	movf	___fladd@b,w
  7244  0727  023C               	subwf	___fladd@a,w
  7245  0728  00C4               	movwf	??___fladd+4
  7246  0729  0839               	movf	___fladd@b+1,w
  7247  072A  3B3D               	subwfb	___fladd@a+1,w
  7248  072B  00C5               	movwf	??___fladd+5
  7249  072C  083A               	movf	___fladd@b+2,w
  7250  072D  3B3E               	subwfb	___fladd@a+2,w
  7251  072E  00C6               	movwf	??___fladd+6
  7252  072F  083B               	movf	___fladd@b+3,w
  7253  0730  3B3F               	subwfb	___fladd@a+3,w
  7254  0731  00C7               	movwf	??___fladd+7
  7255  0732  0844               	movf	??___fladd+4,w
  7256  0733  07C0               	addwf	??___fladd,f
  7257  0734  0845               	movf	??___fladd+5,w
  7258  0735  3DC1               	addwfc	??___fladd+1,f
  7259  0736  0846               	movf	??___fladd+6,w
  7260  0737  3DC2               	addwfc	??___fladd+2,f
  7261  0738  0847               	movf	??___fladd+7,w
  7262  0739  3DC3               	addwfc	??___fladd+3,f
  7263  073A  0843               	movf	??___fladd+3,w
  7264  073B  00BB               	movwf	___fladd@b+3
  7265  073C  0842               	movf	??___fladd+2,w
  7266  073D  00BA               	movwf	___fladd@b+2
  7267  073E  0841               	movf	??___fladd+1,w
  7268  073F  00B9               	movwf	___fladd@b+1
  7269  0740  0840               	movf	??___fladd,w
  7270  0741  00B8               	movwf	___fladd@b
  7271  0742  3080               	movlw	128
  7272  0743  00C0               	movwf	??___fladd
  7273  0744  0840               	movf	??___fladd,w
  7274  0745  06C8               	xorwf	___fladd@signs,f
  7275  0746  09CB               	comf	___fladd@grs,f
  7276  0747  0ACB               	incf	___fladd@grs,f
  7277  0748  084B               	movf	___fladd@grs,w
  7278  0749  1D03               	btfss	3,2
  7279  074A  2F5C               	goto	l1375
  7280  074B  3001               	movlw	1
  7281  074C  07B8               	addwf	___fladd@b,f
  7282  074D  3000               	movlw	0
  7283  074E  3DB9               	addwfc	___fladd@b+1,f
  7284  074F  3000               	movlw	0
  7285  0750  3DBA               	addwfc	___fladd@b+2,f
  7286  0751  3000               	movlw	0
  7287  0752  3DBB               	addwfc	___fladd@b+3,f
  7288  0753  2F5C               	goto	l1375
  7289  0754                     l5839:
  7290  0754  083C               	movf	___fladd@a,w
  7291  0755  02B8               	subwf	___fladd@b,f
  7292  0756  083D               	movf	___fladd@a+1,w
  7293  0757  3BB9               	subwfb	___fladd@b+1,f
  7294  0758  083E               	movf	___fladd@a+2,w
  7295  0759  3BBA               	subwfb	___fladd@b+2,f
  7296  075A  083F               	movf	___fladd@a+3,w
  7297  075B  3BBB               	subwfb	___fladd@b+3,f
  7298  075C                     l1375:
  7299  075C  083B               	movf	___fladd@b+3,w
  7300  075D  043A               	iorwf	___fladd@b+2,w
  7301  075E  0439               	iorwf	___fladd@b+1,w
  7302  075F  0438               	iorwf	___fladd@b,w
  7303  0760  1D03               	skipz
  7304  0761  2F82               	goto	l5861
  7305  0762  084B               	movf	___fladd@grs,w
  7306  0763  1D03               	btfss	3,2
  7307  0764  2F82               	goto	l5861
  7308  0765  3000               	movlw	0
  7309  0766  00BB               	movwf	?___fladd+3
  7310  0767  3000               	movlw	0
  7311  0768  00BA               	movwf	?___fladd+2
  7312  0769  3000               	movlw	0
  7313  076A  00B9               	movwf	?___fladd+1
  7314  076B  3000               	movlw	0
  7315  076C  00B8               	movwf	?___fladd
  7316  076D  0008               	return
  7317  076E                     l5847:
  7318  076E  3001               	movlw	1
  7319  076F                     u5035:
  7320  076F  35B8               	lslf	___fladd@b,f
  7321  0770  0DB9               	rlf	___fladd@b+1,f
  7322  0771  0DBA               	rlf	___fladd@b+2,f
  7323  0772  0DBB               	rlf	___fladd@b+3,f
  7324  0773  0B89               	decfsz	9,f
  7325  0774  2F6F               	goto	u5035
  7326  0775  1BCB               	btfsc	___fladd@grs,7
  7327  0776  1438               	bsf	___fladd@b,0
  7328  0777  1C4B               	btfss	___fladd@grs,0
  7329  0778  2F7B               	goto	l5855
  7330  0779  1403               	setc
  7331  077A  2F7C               	goto	L3
  7332  077B                     l5855:
  7333  077B  1003               	clrc
  7334  077C                     L3:
  7335  077C  0DCB               	rlf	___fladd@grs,f
  7336  077D  084A               	movf	___fladd@bexp,w
  7337  077E  1903               	btfsc	3,2
  7338  077F  2F82               	goto	l5861
  7339  0780  3001               	movlw	1
  7340  0781  02CA               	subwf	___fladd@bexp,f
  7341  0782                     l5861:
  7342  0782  1FBA               	btfss	___fladd@b+2,7
  7343  0783  2F6E               	goto	l5847
  7344  0784                     l5863:
  7345  0784  01C9               	clrf	___fladd@aexp
  7346  0785  1FCB               	btfss	___fladd@grs,7
  7347  0786  2F8F               	goto	l5873
  7348  0787  084B               	movf	___fladd@grs,w
  7349  0788  397F               	andlw	127
  7350  0789  1903               	btfsc	3,2
  7351  078A  1838               	btfsc	___fladd@b,0
  7352  078B  2F8D               	goto	l5869
  7353  078C  2F8F               	goto	l5873
  7354  078D                     l5869:
  7355  078D  01C9               	clrf	___fladd@aexp
  7356  078E  0AC9               	incf	___fladd@aexp,f
  7357  078F                     l5873:
  7358  078F  0849               	movf	___fladd@aexp,w
  7359  0790  1903               	btfsc	3,2
  7360  0791  2FBB               	goto	l1388
  7361  0792  3001               	movlw	1
  7362  0793  07B8               	addwf	___fladd@b,f
  7363  0794  3000               	movlw	0
  7364  0795  3DB9               	addwfc	___fladd@b+1,f
  7365  0796  3000               	movlw	0
  7366  0797  3DBA               	addwfc	___fladd@b+2,f
  7367  0798  3000               	movlw	0
  7368  0799  3DBB               	addwfc	___fladd@b+3,f
  7369  079A  1C3B               	btfss	___fladd@b+3,0
  7370  079B  2FBB               	goto	l1388
  7371  079C  0838               	movf	___fladd@b,w
  7372  079D  00C0               	movwf	??___fladd
  7373  079E  0839               	movf	___fladd@b+1,w
  7374  079F  00C1               	movwf	??___fladd+1
  7375  07A0  083A               	movf	___fladd@b+2,w
  7376  07A1  00C2               	movwf	??___fladd+2
  7377  07A2  083B               	movf	___fladd@b+3,w
  7378  07A3  00C3               	movwf	??___fladd+3
  7379  07A4  3001               	movlw	1
  7380  07A5  00C4               	movwf	??___fladd+4
  7381  07A6                     u5135:
  7382  07A6  37C3               	asrf	??___fladd+3,f
  7383  07A7  0CC2               	rrf	??___fladd+2,f
  7384  07A8  0CC1               	rrf	??___fladd+1,f
  7385  07A9  0CC0               	rrf	??___fladd,f
  7386  07AA  0BC4               	decfsz	??___fladd+4,f
  7387  07AB  2FA6               	goto	u5135
  7388  07AC  0843               	movf	??___fladd+3,w
  7389  07AD  00BB               	movwf	___fladd@b+3
  7390  07AE  0842               	movf	??___fladd+2,w
  7391  07AF  00BA               	movwf	___fladd@b+2
  7392  07B0  0841               	movf	??___fladd+1,w
  7393  07B1  00B9               	movwf	___fladd@b+1
  7394  07B2  0840               	movf	??___fladd,w
  7395  07B3  00B8               	movwf	___fladd@b
  7396  07B4  0A4A               	incf	___fladd@bexp,w
  7397  07B5  1903               	btfsc	3,2
  7398  07B6  2FBB               	goto	l1388
  7399  07B7  3001               	movlw	1
  7400  07B8  00C0               	movwf	??___fladd
  7401  07B9  0840               	movf	??___fladd,w
  7402  07BA  07CA               	addwf	___fladd@bexp,f
  7403  07BB                     l1388:
  7404  07BB  0A4A               	incf	___fladd@bexp,w
  7405  07BC  1D03               	btfss	3,2
  7406  07BD  084A               	movf	___fladd@bexp,w
  7407  07BE  1D03               	btfss	3,2
  7408  07BF  2FCB               	goto	l5891
  7409  07C0  3000               	movlw	0
  7410  07C1  00BB               	movwf	___fladd@b+3
  7411  07C2  3000               	movlw	0
  7412  07C3  00BA               	movwf	___fladd@b+2
  7413  07C4  3000               	movlw	0
  7414  07C5  00B9               	movwf	___fladd@b+1
  7415  07C6  3000               	movlw	0
  7416  07C7  00B8               	movwf	___fladd@b
  7417  07C8  084A               	movf	___fladd@bexp,w
  7418  07C9  1903               	btfsc	3,2
  7419  07CA  01C8               	clrf	___fladd@signs
  7420  07CB                     l5891:
  7421  07CB  1C4A               	btfss	___fladd@bexp,0
  7422  07CC  2FCF               	goto	l5895
  7423  07CD  17BA               	bsf	___fladd@b+2,7
  7424  07CE  2FD3               	goto	l1396
  7425  07CF                     l5895:
  7426  07CF  307F               	movlw	127
  7427  07D0  00C0               	movwf	??___fladd
  7428  07D1  0840               	movf	??___fladd,w
  7429  07D2  05BA               	andwf	___fladd@b+2,f
  7430  07D3                     l1396:
  7431  07D3  364A               	lsrf	___fladd@bexp,w
  7432  07D4  00C0               	movwf	??___fladd
  7433  07D5  0840               	movf	??___fladd,w
  7434  07D6  00BB               	movwf	___fladd@b+3
  7435  07D7  1FC8               	btfss	___fladd@signs,7
  7436  07D8  0008               	return
  7437  07D9  17BB               	bsf	___fladd@b+3,7
  7438  07DA  0008               	return
  7439  07DB                     __end_of___fladd:
  7440                           
  7441                           	psect	text7
  7442  14F4                     __ptext7:	
  7443 ;; *************** function ___fldiv *****************
  7444 ;; Defined at:
  7445 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  a               4   29[BANK1 ] unsigned char 
  7448 ;;  b               4   33[BANK1 ] unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  grs             4   49[BANK1 ] unsigned long 
  7451 ;;  rem             4   42[BANK1 ] unsigned long 
  7452 ;;  new_exp         2   47[BANK1 ] int 
  7453 ;;  aexp            1   54[BANK1 ] unsigned char 
  7454 ;;  bexp            1   53[BANK1 ] unsigned char 
  7455 ;;  sign            1   46[BANK1 ] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  4   29[BANK1 ] unsigned char 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7465 ;;      Params:         0       0       8       0       0       0       0       0
  7466 ;;      Locals:         0       0      13       0       0       0       0       0
  7467 ;;      Temps:          0       0       5       0       0       0       0       0
  7468 ;;      Totals:         0       0      26       0       0       0       0       0
  7469 ;;Total ram usage:       26 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 4
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_map
  7476 ;;		_get_ntc_temperature
  7477 ;;		_logf
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481  14F4                     ___fldiv:	
  7482                           ;psect for function ___fldiv
  7483                           
  7484                           
  7485                           ;incstack = 0
  7486                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  7487  14F4  0021               	movlb	1	; select bank1
  7488  14F5  0844               	movf	(___fldiv@b^(0+128)+3),w
  7489  14F6  3980               	andlw	128
  7490  14F7  00C5               	movwf	??___fldiv^(0+128)
  7491  14F8  0845               	movf	??___fldiv^(0+128),w
  7492  14F9  00CE               	movwf	___fldiv@sign^(0+128)
  7493  14FA  3544               	lslf	(___fldiv@b^(0+128)+3),w
  7494  14FB  00C5               	movwf	??___fldiv^(0+128)
  7495  14FC  0845               	movf	??___fldiv^(0+128),w
  7496  14FD  00D5               	movwf	___fldiv@bexp^(0+128)
  7497  14FE  1BC3               	btfsc	(___fldiv@b^(0+128)+2),7
  7498  14FF  1455               	bsf	___fldiv@bexp^(0+128),0
  7499  1500  0855               	movf	___fldiv@bexp^(0+128),w
  7500  1501  1903               	btfsc	3,2
  7501  1502  2D11               	goto	l5939
  7502  1503  0A55               	incf	___fldiv@bexp^(0+128),w
  7503  1504  1D03               	btfss	3,2
  7504  1505  2D0E               	goto	l5935
  7505  1506  3000               	movlw	0
  7506  1507  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7507  1508  3000               	movlw	0
  7508  1509  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7509  150A  3000               	movlw	0
  7510  150B  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7511  150C  3000               	movlw	0
  7512  150D  00C1               	movwf	___fldiv@b^(0+128)
  7513  150E                     l5935:
  7514  150E  17C3               	bsf	(___fldiv@b^(0+128)+2),7
  7515  150F  01C4               	clrf	(___fldiv@b^(0+128)+3)
  7516  1510  2D19               	goto	l5941
  7517  1511                     l5939:
  7518  1511  3000               	movlw	0
  7519  1512  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7520  1513  3000               	movlw	0
  7521  1514  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7522  1515  3000               	movlw	0
  7523  1516  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7524  1517  3000               	movlw	0
  7525  1518  00C1               	movwf	___fldiv@b^(0+128)
  7526  1519                     l5941:
  7527  1519  0840               	movf	(___fldiv@a^(0+128)+3),w
  7528  151A  3980               	andlw	128
  7529  151B  00C5               	movwf	??___fldiv^(0+128)
  7530  151C  0845               	movf	??___fldiv^(0+128),w
  7531  151D  06CE               	xorwf	___fldiv@sign^(0+128),f
  7532  151E  3540               	lslf	(___fldiv@a^(0+128)+3),w
  7533  151F  00C5               	movwf	??___fldiv^(0+128)
  7534  1520  0845               	movf	??___fldiv^(0+128),w
  7535  1521  00D6               	movwf	___fldiv@aexp^(0+128)
  7536  1522  1BBF               	btfsc	(___fldiv@a^(0+128)+2),7
  7537  1523  1456               	bsf	___fldiv@aexp^(0+128),0
  7538  1524  0856               	movf	___fldiv@aexp^(0+128),w
  7539  1525  1903               	btfsc	3,2
  7540  1526  2D35               	goto	l5959
  7541  1527  0A56               	incf	___fldiv@aexp^(0+128),w
  7542  1528  1D03               	btfss	3,2
  7543  1529  2D32               	goto	l5955
  7544  152A  3000               	movlw	0
  7545  152B  00C0               	movwf	(___fldiv@a+3)^(0+128)
  7546  152C  3000               	movlw	0
  7547  152D  00BF               	movwf	(___fldiv@a+2)^(0+128)
  7548  152E  3000               	movlw	0
  7549  152F  00BE               	movwf	(___fldiv@a+1)^(0+128)
  7550  1530  3000               	movlw	0
  7551  1531  00BD               	movwf	___fldiv@a^(0+128)
  7552  1532                     l5955:
  7553  1532  17BF               	bsf	(___fldiv@a^(0+128)+2),7
  7554  1533  01C0               	clrf	(___fldiv@a^(0+128)+3)
  7555  1534  2D3D               	goto	l1410
  7556  1535                     l5959:
  7557  1535  3000               	movlw	0
  7558  1536  00C0               	movwf	(___fldiv@a+3)^(0+128)
  7559  1537  3000               	movlw	0
  7560  1538  00BF               	movwf	(___fldiv@a+2)^(0+128)
  7561  1539  3000               	movlw	0
  7562  153A  00BE               	movwf	(___fldiv@a+1)^(0+128)
  7563  153B  3000               	movlw	0
  7564  153C  00BD               	movwf	___fldiv@a^(0+128)
  7565  153D                     l1410:
  7566  153D  0840               	movf	(___fldiv@a+3)^(0+128),w
  7567  153E  043F               	iorwf	(___fldiv@a+2)^(0+128),w
  7568  153F  043E               	iorwf	(___fldiv@a+1)^(0+128),w
  7569  1540  043D               	iorwf	___fldiv@a^(0+128),w
  7570  1541  1D03               	skipz
  7571  1542  2D5C               	goto	l5969
  7572  1543  3000               	movlw	0
  7573  1544  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7574  1545  3000               	movlw	0
  7575  1546  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7576  1547  3000               	movlw	0
  7577  1548  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7578  1549  3000               	movlw	0
  7579  154A  00C1               	movwf	___fldiv@b^(0+128)
  7580  154B  3080               	movlw	128
  7581  154C  04C3               	iorwf	(___fldiv@b^(0+128)+2),f
  7582  154D  307F               	movlw	127
  7583  154E  04C4               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  7584  154F                     L4:
  7585  154F  084E               	movf	___fldiv@sign^(0+128),w
  7586  1550  00C5               	movwf	??___fldiv^(0+128)
  7587  1551  0845               	movf	??___fldiv^(0+128),w
  7588  1552  04C4               	iorwf	(___fldiv@b^(0+128)+3),f
  7589  1553  0844               	movf	(___fldiv@b+3)^(0+128),w
  7590  1554  00C0               	movwf	(?___fldiv+3)^(0+128)
  7591  1555  0843               	movf	(___fldiv@b+2)^(0+128),w
  7592  1556  00BF               	movwf	(?___fldiv+2)^(0+128)
  7593  1557  0842               	movf	(___fldiv@b+1)^(0+128),w
  7594  1558  00BE               	movwf	(?___fldiv+1)^(0+128)
  7595  1559  0841               	movf	___fldiv@b^(0+128),w
  7596  155A  00BD               	movwf	?___fldiv^(0+128)
  7597  155B  0008               	return
  7598  155C                     l5969:
  7599  155C  0855               	movf	___fldiv@bexp^(0+128),w
  7600  155D  1D03               	btfss	3,2
  7601  155E  2D68               	goto	l5975
  7602  155F  3000               	movlw	0
  7603  1560  00C0               	movwf	(?___fldiv+3)^(0+128)
  7604  1561  3000               	movlw	0
  7605  1562  00BF               	movwf	(?___fldiv+2)^(0+128)
  7606  1563  3000               	movlw	0
  7607  1564  00BE               	movwf	(?___fldiv+1)^(0+128)
  7608  1565  3000               	movlw	0
  7609  1566  00BD               	movwf	?___fldiv^(0+128)
  7610  1567  0008               	return
  7611  1568                     l5975:
  7612  1568  0855               	movf	___fldiv@bexp^(0+128),w
  7613  1569  00C5               	movwf	??___fldiv^(0+128)
  7614  156A  01C6               	clrf	(??___fldiv^(0+128)+1)
  7615  156B  0846               	movf	(??___fldiv+1)^(0+128),w
  7616  156C  00C8               	movwf	((??___fldiv+2)^(0+128)+1)
  7617  156D  0856               	movf	___fldiv@aexp^(0+128),w
  7618  156E  0245               	subwf	??___fldiv^(0+128),w
  7619  156F  00C7               	movwf	(??___fldiv+2)^(0+128)
  7620  1570  1C03               	skipc
  7621  1571  03C8               	decf	((??___fldiv+2)^(0+128)+1),f
  7622  1572  0847               	movf	(??___fldiv+2)^(0+128),w
  7623  1573  3E7F               	addlw	127
  7624  1574  00CF               	movwf	___fldiv@new_exp^(0+128)
  7625  1575  3000               	movlw	0
  7626  1576  3D48               	addwfc	(??___fldiv+3)^(0+128),w
  7627  1577  00D0               	movwf	(___fldiv@new_exp+1)^(0+128)
  7628  1578  0844               	movf	(___fldiv@b+3)^(0+128),w
  7629  1579  00CD               	movwf	(___fldiv@rem+3)^(0+128)
  7630  157A  0843               	movf	(___fldiv@b+2)^(0+128),w
  7631  157B  00CC               	movwf	(___fldiv@rem+2)^(0+128)
  7632  157C  0842               	movf	(___fldiv@b+1)^(0+128),w
  7633  157D  00CB               	movwf	(___fldiv@rem+1)^(0+128)
  7634  157E  0841               	movf	___fldiv@b^(0+128),w
  7635  157F  00CA               	movwf	___fldiv@rem^(0+128)
  7636  1580  3000               	movlw	0
  7637  1581  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7638  1582  3000               	movlw	0
  7639  1583  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7640  1584  3000               	movlw	0
  7641  1585  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7642  1586  3000               	movlw	0
  7643  1587  00C1               	movwf	___fldiv@b^(0+128)
  7644  1588  3000               	movlw	0
  7645  1589  00D4               	movwf	(___fldiv@grs+3)^(0+128)
  7646  158A  3000               	movlw	0
  7647  158B  00D3               	movwf	(___fldiv@grs+2)^(0+128)
  7648  158C  3000               	movlw	0
  7649  158D  00D2               	movwf	(___fldiv@grs+1)^(0+128)
  7650  158E  3000               	movlw	0
  7651  158F  00D1               	movwf	___fldiv@grs^(0+128)
  7652  1590  01D6               	clrf	___fldiv@aexp^(0+128)
  7653  1591                     l6003:
  7654  1591  301A               	movlw	26
  7655  1592  0256               	subwf	___fldiv@aexp^(0+128),w
  7656  1593  1803               	btfsc	3,0
  7657  1594  2DCD               	goto	l6005
  7658  1595  0856               	movf	___fldiv@aexp^(0+128),w
  7659  1596  1903               	btfsc	3,2
  7660  1597  2DAF               	goto	l5995
  7661  1598  3001               	movlw	1
  7662  1599                     u5325:
  7663  1599  35CA               	lslf	___fldiv@rem^(0+128),f
  7664  159A  0DCB               	rlf	(___fldiv@rem+1)^(0+128),f
  7665  159B  0DCC               	rlf	(___fldiv@rem+2)^(0+128),f
  7666  159C  0DCD               	rlf	(___fldiv@rem+3)^(0+128),f
  7667  159D  0B89               	decfsz	9,f
  7668  159E  2D99               	goto	u5325
  7669  159F  3001               	movlw	1
  7670  15A0                     u5335:
  7671  15A0  35C1               	lslf	___fldiv@b^(0+128),f
  7672  15A1  0DC2               	rlf	(___fldiv@b+1)^(0+128),f
  7673  15A2  0DC3               	rlf	(___fldiv@b+2)^(0+128),f
  7674  15A3  0DC4               	rlf	(___fldiv@b+3)^(0+128),f
  7675  15A4  0B89               	decfsz	9,f
  7676  15A5  2DA0               	goto	u5335
  7677  15A6  1BD4               	btfsc	(___fldiv@grs+3)^(0+128),7
  7678  15A7  1441               	bsf	___fldiv@b^(0+128),0
  7679  15A8  3001               	movlw	1
  7680  15A9                     u5355:
  7681  15A9  35D1               	lslf	___fldiv@grs^(0+128),f
  7682  15AA  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  7683  15AB  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  7684  15AC  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  7685  15AD  0B89               	decfsz	9,f
  7686  15AE  2DA9               	goto	u5355
  7687  15AF                     l5995:
  7688  15AF  0840               	movf	(___fldiv@a+3)^(0+128),w
  7689  15B0  024D               	subwf	(___fldiv@rem+3)^(0+128),w
  7690  15B1  1D03               	skipz
  7691  15B2  2DBD               	goto	u5365
  7692  15B3  083F               	movf	(___fldiv@a+2)^(0+128),w
  7693  15B4  024C               	subwf	(___fldiv@rem+2)^(0+128),w
  7694  15B5  1D03               	skipz
  7695  15B6  2DBD               	goto	u5365
  7696  15B7  083E               	movf	(___fldiv@a+1)^(0+128),w
  7697  15B8  024B               	subwf	(___fldiv@rem+1)^(0+128),w
  7698  15B9  1D03               	skipz
  7699  15BA  2DBD               	goto	u5365
  7700  15BB  083D               	movf	___fldiv@a^(0+128),w
  7701  15BC  024A               	subwf	___fldiv@rem^(0+128),w
  7702  15BD                     u5365:
  7703  15BD  1C03               	skipc
  7704  15BE  2DC8               	goto	l6001
  7705  15BF  1754               	bsf	(___fldiv@grs^(0+128)+3),6
  7706  15C0  083D               	movf	___fldiv@a^(0+128),w
  7707  15C1  02CA               	subwf	___fldiv@rem^(0+128),f
  7708  15C2  083E               	movf	(___fldiv@a+1)^(0+128),w
  7709  15C3  3BCB               	subwfb	(___fldiv@rem+1)^(0+128),f
  7710  15C4  083F               	movf	(___fldiv@a+2)^(0+128),w
  7711  15C5  3BCC               	subwfb	(___fldiv@rem+2)^(0+128),f
  7712  15C6  0840               	movf	(___fldiv@a+3)^(0+128),w
  7713  15C7  3BCD               	subwfb	(___fldiv@rem+3)^(0+128),f
  7714  15C8                     l6001:
  7715  15C8  3001               	movlw	1
  7716  15C9  00C5               	movwf	??___fldiv^(0+128)
  7717  15CA  0845               	movf	??___fldiv^(0+128),w
  7718  15CB  07D6               	addwf	___fldiv@aexp^(0+128),f
  7719  15CC  2D91               	goto	l6003
  7720  15CD                     l6005:
  7721  15CD  084D               	movf	(___fldiv@rem+3)^(0+128),w
  7722  15CE  044C               	iorwf	(___fldiv@rem+2)^(0+128),w
  7723  15CF  044B               	iorwf	(___fldiv@rem+1)^(0+128),w
  7724  15D0  044A               	iorwf	___fldiv@rem^(0+128),w
  7725  15D1  1D03               	btfss	3,2
  7726  15D2  1451               	bsf	___fldiv@grs^(0+128),0
  7727  15D3                     l6019:
  7728  15D3  1BC3               	btfsc	(___fldiv@b+2)^(0+128),7
  7729  15D4  2DEA               	goto	l6021
  7730  15D5  3001               	movlw	1
  7731  15D6                     u5395:
  7732  15D6  35C1               	lslf	___fldiv@b^(0+128),f
  7733  15D7  0DC2               	rlf	(___fldiv@b+1)^(0+128),f
  7734  15D8  0DC3               	rlf	(___fldiv@b+2)^(0+128),f
  7735  15D9  0DC4               	rlf	(___fldiv@b+3)^(0+128),f
  7736  15DA  0B89               	decfsz	9,f
  7737  15DB  2DD6               	goto	u5395
  7738  15DC  1BD4               	btfsc	(___fldiv@grs+3)^(0+128),7
  7739  15DD  1441               	bsf	___fldiv@b^(0+128),0
  7740  15DE  3001               	movlw	1
  7741  15DF                     u5415:
  7742  15DF  35D1               	lslf	___fldiv@grs^(0+128),f
  7743  15E0  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  7744  15E1  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  7745  15E2  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  7746  15E3  0B89               	decfsz	9,f
  7747  15E4  2DDF               	goto	u5415
  7748  15E5  30FF               	movlw	255
  7749  15E6  07CF               	addwf	___fldiv@new_exp^(0+128),f
  7750  15E7  30FF               	movlw	255
  7751  15E8  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7752  15E9  2DD3               	goto	l6019
  7753  15EA                     l6021:
  7754  15EA  01D6               	clrf	___fldiv@aexp^(0+128)
  7755  15EB  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  7756  15EC  2E03               	goto	l6031
  7757  15ED  30FF               	movlw	255
  7758  15EE  0551               	andwf	___fldiv@grs^(0+128),w
  7759  15EF  00C5               	movwf	??___fldiv^(0+128)
  7760  15F0  30FF               	movlw	255
  7761  15F1  0552               	andwf	(___fldiv@grs+1)^(0+128),w
  7762  15F2  00C6               	movwf	(??___fldiv^(0+128)+1)
  7763  15F3  30FF               	movlw	255
  7764  15F4  0553               	andwf	(___fldiv@grs+2)^(0+128),w
  7765  15F5  00C7               	movwf	(??___fldiv^(0+128)+2)
  7766  15F6  307F               	movlw	127
  7767  15F7  0554               	andwf	(___fldiv@grs+3)^(0+128),w
  7768  15F8  00C8               	movwf	(??___fldiv^(0+128)+3)
  7769  15F9  0848               	movf	(??___fldiv+3)^(0+128),w
  7770  15FA  0447               	iorwf	(??___fldiv+2)^(0+128),w
  7771  15FB  0446               	iorwf	(??___fldiv+1)^(0+128),w
  7772  15FC  0445               	iorwf	??___fldiv^(0+128),w
  7773  15FD  1903               	skipnz
  7774  15FE  1841               	btfsc	___fldiv@b^(0+128),0
  7775  15FF  2E01               	goto	l6027
  7776  1600  2E03               	goto	l6031
  7777  1601                     l6027:
  7778  1601  01D6               	clrf	___fldiv@aexp^(0+128)
  7779  1602  0AD6               	incf	___fldiv@aexp^(0+128),f
  7780  1603                     l6031:
  7781  1603  0856               	movf	___fldiv@aexp^(0+128),w
  7782  1604  1903               	btfsc	3,2
  7783  1605  2E2C               	goto	l6041
  7784  1606  3001               	movlw	1
  7785  1607  07C1               	addwf	___fldiv@b^(0+128),f
  7786  1608  3000               	movlw	0
  7787  1609  3DC2               	addwfc	(___fldiv@b+1)^(0+128),f
  7788  160A  3000               	movlw	0
  7789  160B  3DC3               	addwfc	(___fldiv@b+2)^(0+128),f
  7790  160C  3000               	movlw	0
  7791  160D  3DC4               	addwfc	(___fldiv@b+3)^(0+128),f
  7792  160E  1C44               	btfss	(___fldiv@b+3)^(0+128),0
  7793  160F  2E2C               	goto	l6041
  7794  1610  0841               	movf	___fldiv@b^(0+128),w
  7795  1611  00C5               	movwf	??___fldiv^(0+128)
  7796  1612  0842               	movf	(___fldiv@b+1)^(0+128),w
  7797  1613  00C6               	movwf	(??___fldiv^(0+128)+1)
  7798  1614  0843               	movf	(___fldiv@b+2)^(0+128),w
  7799  1615  00C7               	movwf	(??___fldiv^(0+128)+2)
  7800  1616  0844               	movf	(___fldiv@b+3)^(0+128),w
  7801  1617  00C8               	movwf	(??___fldiv^(0+128)+3)
  7802  1618  3001               	movlw	1
  7803  1619  00C9               	movwf	(??___fldiv+4)^(0+128)
  7804  161A                     u5485:
  7805  161A  37C8               	asrf	(??___fldiv^(0+128)+3),f
  7806  161B  0CC7               	rrf	(??___fldiv^(0+128)+2),f
  7807  161C  0CC6               	rrf	(??___fldiv^(0+128)+1),f
  7808  161D  0CC5               	rrf	??___fldiv^(0+128),f
  7809  161E  0BC9               	decfsz	(??___fldiv+4)^(0+128),f
  7810  161F  2E1A               	goto	u5485
  7811  1620  0848               	movf	(??___fldiv+3)^(0+128),w
  7812  1621  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7813  1622  0847               	movf	(??___fldiv+2)^(0+128),w
  7814  1623  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7815  1624  0846               	movf	(??___fldiv+1)^(0+128),w
  7816  1625  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7817  1626  0845               	movf	??___fldiv^(0+128),w
  7818  1627  00C1               	movwf	___fldiv@b^(0+128)
  7819  1628  3001               	movlw	1
  7820  1629  07CF               	addwf	___fldiv@new_exp^(0+128),f
  7821  162A  3000               	movlw	0
  7822  162B  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7823  162C                     l6041:
  7824  162C  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  7825  162D  3A80               	xorlw	128
  7826  162E  00C5               	movwf	??___fldiv^(0+128)
  7827  162F  3080               	movlw	128
  7828  1630  0245               	subwf	??___fldiv^(0+128),w
  7829  1631  1D03               	skipz
  7830  1632  2E35               	goto	u5495
  7831  1633  30FF               	movlw	255
  7832  1634  024F               	subwf	___fldiv@new_exp^(0+128),w
  7833  1635                     u5495:
  7834  1635  1C03               	skipc
  7835  1636  2E44               	goto	l1431
  7836  1637  30FF               	movlw	255
  7837  1638  0021               	movlb	1	; select bank1
  7838  1639  00CF               	movwf	___fldiv@new_exp^(0+128)
  7839  163A  3000               	movlw	0
  7840  163B  00D0               	movwf	(___fldiv@new_exp^(0+128)+1)
  7841  163C  3000               	movlw	0
  7842  163D  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7843  163E  3000               	movlw	0
  7844  163F  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7845  1640  3000               	movlw	0
  7846  1641  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7847  1642  3000               	movlw	0
  7848  1643  00C1               	movwf	___fldiv@b^(0+128)
  7849  1644                     l1431:
  7850  1644  0021               	movlb	1	; select bank1
  7851  1645  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  7852  1646  3A80               	xorlw	128
  7853  1647  00C5               	movwf	??___fldiv^(0+128)
  7854  1648  3080               	movlw	128
  7855  1649  0245               	subwf	??___fldiv^(0+128),w
  7856  164A  1D03               	skipz
  7857  164B  2E4E               	goto	u5505
  7858  164C  3001               	movlw	1
  7859  164D  024F               	subwf	___fldiv@new_exp^(0+128),w
  7860  164E                     u5505:
  7861  164E  1803               	skipnc
  7862  164F  2E5C               	goto	l1432
  7863  1650  0021               	movlb	1	; select bank1
  7864  1651  01CF               	clrf	___fldiv@new_exp^(0+128)
  7865  1652  01D0               	clrf	(___fldiv@new_exp+1)^(0+128)
  7866  1653  3000               	movlw	0
  7867  1654  00C4               	movwf	(___fldiv@b+3)^(0+128)
  7868  1655  3000               	movlw	0
  7869  1656  00C3               	movwf	(___fldiv@b+2)^(0+128)
  7870  1657  3000               	movlw	0
  7871  1658  00C2               	movwf	(___fldiv@b+1)^(0+128)
  7872  1659  3000               	movlw	0
  7873  165A  00C1               	movwf	___fldiv@b^(0+128)
  7874  165B  01CE               	clrf	___fldiv@sign^(0+128)
  7875  165C                     l1432:
  7876  165C  0021               	movlb	1	; select bank1
  7877  165D  084F               	movf	___fldiv@new_exp^(0+128),w
  7878  165E  00C5               	movwf	??___fldiv^(0+128)
  7879  165F  0845               	movf	??___fldiv^(0+128),w
  7880  1660  00D5               	movwf	___fldiv@bexp^(0+128)
  7881  1661  1C55               	btfss	___fldiv@bexp^(0+128),0
  7882  1662  2E65               	goto	l6055
  7883  1663  17C3               	bsf	(___fldiv@b^(0+128)+2),7
  7884  1664  2E69               	goto	l1434
  7885  1665                     l6055:
  7886  1665  307F               	movlw	127
  7887  1666  00C5               	movwf	??___fldiv^(0+128)
  7888  1667  0845               	movf	??___fldiv^(0+128),w
  7889  1668  05C3               	andwf	(___fldiv@b^(0+128)+2),f
  7890  1669                     l1434:
  7891  1669  3655               	lsrf	___fldiv@bexp^(0+128),w
  7892  166A  00C5               	movwf	??___fldiv^(0+128)
  7893  166B  0845               	movf	??___fldiv^(0+128),w
  7894  166C  00C4               	movwf	(___fldiv@b^(0+128)+3)
  7895  166D  2D4F               	goto	L4
  7896  166E                     __end_of___fldiv:
  7897                           
  7898                           	psect	text8
  7899  1360                     __ptext8:	
  7900 ;; *************** function ___flge *****************
  7901 ;; Defined at:
  7902 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  ff1             4   24[BANK0 ] unsigned char 
  7905 ;;  ff2             4   28[BANK0 ] unsigned char 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;		None               void
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7917 ;;      Params:         0       8       0       0       0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0
  7919 ;;      Temps:          0       4       0       0       0       0       0       0
  7920 ;;      Totals:         0      12       0       0       0       0       0       0
  7921 ;;Total ram usage:       12 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 4
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931  1360                     ___flge:	
  7932                           ;psect for function ___flge
  7933                           
  7934                           
  7935                           ;incstack = 0
  7936                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7937  1360  3000               	movlw	0
  7938  1361  0020               	movlb	0	; select bank0
  7939  1362  0538               	andwf	___flge@ff1,w
  7940  1363  00C0               	movwf	??___flge
  7941  1364  3000               	movlw	0
  7942  1365  0539               	andwf	___flge@ff1+1,w
  7943  1366  00C1               	movwf	??___flge+1
  7944  1367  3080               	movlw	128
  7945  1368  053A               	andwf	___flge@ff1+2,w
  7946  1369  00C2               	movwf	??___flge+2
  7947  136A  307F               	movlw	127
  7948  136B  053B               	andwf	___flge@ff1+3,w
  7949  136C  00C3               	movwf	??___flge+3
  7950  136D  0843               	movf	??___flge+3,w
  7951  136E  0442               	iorwf	??___flge+2,w
  7952  136F  0441               	iorwf	??___flge+1,w
  7953  1370  0440               	iorwf	??___flge,w
  7954  1371  1D03               	skipz
  7955  1372  2B7B               	goto	l1231
  7956  1373  3000               	movlw	0
  7957  1374  00BB               	movwf	___flge@ff1+3
  7958  1375  3000               	movlw	0
  7959  1376  00BA               	movwf	___flge@ff1+2
  7960  1377  3000               	movlw	0
  7961  1378  00B9               	movwf	___flge@ff1+1
  7962  1379  3000               	movlw	0
  7963  137A  00B8               	movwf	___flge@ff1
  7964  137B                     l1231:
  7965  137B  3000               	movlw	0
  7966  137C  053C               	andwf	___flge@ff2,w
  7967  137D  00C0               	movwf	??___flge
  7968  137E  3000               	movlw	0
  7969  137F  053D               	andwf	___flge@ff2+1,w
  7970  1380  00C1               	movwf	??___flge+1
  7971  1381  3080               	movlw	128
  7972  1382  053E               	andwf	___flge@ff2+2,w
  7973  1383  00C2               	movwf	??___flge+2
  7974  1384  307F               	movlw	127
  7975  1385  053F               	andwf	___flge@ff2+3,w
  7976  1386  00C3               	movwf	??___flge+3
  7977  1387  0843               	movf	??___flge+3,w
  7978  1388  0442               	iorwf	??___flge+2,w
  7979  1389  0441               	iorwf	??___flge+1,w
  7980  138A  0440               	iorwf	??___flge,w
  7981  138B  1D03               	skipz
  7982  138C  2B95               	goto	l5193
  7983  138D  3000               	movlw	0
  7984  138E  00BF               	movwf	___flge@ff2+3
  7985  138F  3000               	movlw	0
  7986  1390  00BE               	movwf	___flge@ff2+2
  7987  1391  3000               	movlw	0
  7988  1392  00BD               	movwf	___flge@ff2+1
  7989  1393  3000               	movlw	0
  7990  1394  00BC               	movwf	___flge@ff2
  7991  1395                     l5193:
  7992  1395  1FBB               	btfss	___flge@ff1+3,7
  7993  1396  2BAF               	goto	l5197
  7994  1397  3000               	movlw	0
  7995  1398  00C0               	movwf	??___flge
  7996  1399  3000               	movlw	0
  7997  139A  00C1               	movwf	??___flge+1
  7998  139B  3000               	movlw	0
  7999  139C  00C2               	movwf	??___flge+2
  8000  139D  3080               	movlw	128
  8001  139E  00C3               	movwf	??___flge+3
  8002  139F  0838               	movf	___flge@ff1,w
  8003  13A0  02C0               	subwf	??___flge,f
  8004  13A1  0839               	movf	___flge@ff1+1,w
  8005  13A2  3BC1               	subwfb	??___flge+1,f
  8006  13A3  083A               	movf	___flge@ff1+2,w
  8007  13A4  3BC2               	subwfb	??___flge+2,f
  8008  13A5  083B               	movf	___flge@ff1+3,w
  8009  13A6  3BC3               	subwfb	??___flge+3,f
  8010  13A7  0843               	movf	??___flge+3,w
  8011  13A8  00BB               	movwf	___flge@ff1+3
  8012  13A9  0842               	movf	??___flge+2,w
  8013  13AA  00BA               	movwf	___flge@ff1+2
  8014  13AB  0841               	movf	??___flge+1,w
  8015  13AC  00B9               	movwf	___flge@ff1+1
  8016  13AD  0840               	movf	??___flge,w
  8017  13AE  00B8               	movwf	___flge@ff1
  8018  13AF                     l5197:
  8019  13AF  1FBF               	btfss	___flge@ff2+3,7
  8020  13B0  2BC9               	goto	l1234
  8021  13B1  3000               	movlw	0
  8022  13B2  00C0               	movwf	??___flge
  8023  13B3  3000               	movlw	0
  8024  13B4  00C1               	movwf	??___flge+1
  8025  13B5  3000               	movlw	0
  8026  13B6  00C2               	movwf	??___flge+2
  8027  13B7  3080               	movlw	128
  8028  13B8  00C3               	movwf	??___flge+3
  8029  13B9  083C               	movf	___flge@ff2,w
  8030  13BA  02C0               	subwf	??___flge,f
  8031  13BB  083D               	movf	___flge@ff2+1,w
  8032  13BC  3BC1               	subwfb	??___flge+1,f
  8033  13BD  083E               	movf	___flge@ff2+2,w
  8034  13BE  3BC2               	subwfb	??___flge+2,f
  8035  13BF  083F               	movf	___flge@ff2+3,w
  8036  13C0  3BC3               	subwfb	??___flge+3,f
  8037  13C1  0843               	movf	??___flge+3,w
  8038  13C2  00BF               	movwf	___flge@ff2+3
  8039  13C3  0842               	movf	??___flge+2,w
  8040  13C4  00BE               	movwf	___flge@ff2+2
  8041  13C5  0841               	movf	??___flge+1,w
  8042  13C6  00BD               	movwf	___flge@ff2+1
  8043  13C7  0840               	movf	??___flge,w
  8044  13C8  00BC               	movwf	___flge@ff2
  8045  13C9                     l1234:
  8046  13C9  3080               	movlw	128
  8047  13CA  06BB               	xorwf	___flge@ff1+3,f
  8048  13CB  3080               	movlw	128
  8049  13CC  06BF               	xorwf	___flge@ff2+3,f
  8050  13CD  083F               	movf	___flge@ff2+3,w
  8051  13CE  023B               	subwf	___flge@ff1+3,w
  8052  13CF  1D03               	skipz
  8053  13D0  0008               	return
  8054  13D1  083E               	movf	___flge@ff2+2,w
  8055  13D2  023A               	subwf	___flge@ff1+2,w
  8056  13D3  1D03               	skipz
  8057  13D4  0008               	return
  8058  13D5  083D               	movf	___flge@ff2+1,w
  8059  13D6  0239               	subwf	___flge@ff1+1,w
  8060  13D7  1D03               	skipz
  8061  13D8  0008               	return
  8062  13D9  083C               	movf	___flge@ff2,w
  8063  13DA  0238               	subwf	___flge@ff1,w
  8064  13DB  0008               	return
  8065  13DC                     __end_of___flge:
  8066                           
  8067                           	psect	text9
  8068  1E4E                     __ptext9:	
  8069 ;; *************** function _SYSTEM_Initialize *****************
  8070 ;; Defined at:
  8071 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0, pclath, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8085 ;;      Params:         0       0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 6
  8092 ;; This function calls:
  8093 ;;		_EUSART_Initialize
  8094 ;;		_I2C_Initialize
  8095 ;;		_OSCILLATOR_Initialize
  8096 ;;		_PIN_MANAGER_Initialize
  8097 ;;		_TMR0_Initialize
  8098 ;;		_TMR1_Initialize
  8099 ;;		_WDT_Initialize
  8100 ;; This function is called by:
  8101 ;;		_main
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105  1E4E                     _SYSTEM_Initialize:	
  8106                           ;psect for function _SYSTEM_Initialize
  8107                           
  8108                           
  8109                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  8110                           
  8111                           ;incstack = 0
  8112                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8113  1E4E  319D  255A  319E   	fcall	_I2C_Initialize
  8114                           
  8115                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8116  1E51  319E  2694  319E   	fcall	_PIN_MANAGER_Initialize
  8117                           
  8118                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8119  1E54  319C  24F5  319E   	fcall	_OSCILLATOR_Initialize
  8120                           
  8121                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  8122  1E57  319C  24D5  319E   	fcall	_WDT_Initialize
  8123                           
  8124                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8125  1E5A  319E  2663  319E   	fcall	_TMR1_Initialize
  8126                           
  8127                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  8128  1E5D  319E  2639  319E   	fcall	_TMR0_Initialize
  8129                           
  8130                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  8131  1E60  3191  213C         	fcall	_EUSART_Initialize
  8132  1E62  0008               	return
  8133  1E63                     __end_of_SYSTEM_Initialize:
  8134                           
  8135                           	psect	text10
  8136  1CD5                     __ptext10:	
  8137 ;; *************** function _WDT_Initialize *****************
  8138 ;; Defined at:
  8139 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8153 ;;      Params:         0       0       0       0       0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used: 1
  8159 ;; Hardware stack levels required when called: 4
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_SYSTEM_Initialize
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167  1CD5                     _WDT_Initialize:	
  8168                           ;psect for function _WDT_Initialize
  8169                           
  8170                           
  8171                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x1A;
  8172                           
  8173                           ;incstack = 0
  8174                           ; Regs used in _WDT_Initialize: [wreg]
  8175  1CD5  301A               	movlw	26
  8176  1CD6  0021               	movlb	1	; select bank1
  8177  1CD7  0097               	movwf	23	;volatile
  8178  1CD8  0008               	return
  8179  1CD9                     __end_of_WDT_Initialize:
  8180                           
  8181                           	psect	text11
  8182  1E63                     __ptext11:	
  8183 ;; *************** function _TMR1_Initialize *****************
  8184 ;; Defined at:
  8185 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0, pclath, cstack
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8199 ;;      Params:         0       0       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0       0
  8201 ;;      Temps:          0       0       0       0       0       0       0       0
  8202 ;;      Totals:         0       0       0       0       0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used: 1
  8205 ;; Hardware stack levels required when called: 5
  8206 ;; This function calls:
  8207 ;;		_TMR1_SetInterruptHandler
  8208 ;; This function is called by:
  8209 ;;		_SYSTEM_Initialize
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213  1E63                     _TMR1_Initialize:	
  8214                           ;psect for function _TMR1_Initialize
  8215                           
  8216                           
  8217                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8221  1E63  0020               	movlb	0	; select bank0
  8222  1E64  0199               	clrf	25	;volatile
  8223                           
  8224                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xB1;
  8225  1E65  30B1               	movlw	177
  8226  1E66  0097               	movwf	23	;volatile
  8227                           
  8228                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0xE0;
  8229  1E67  30E0               	movlw	224
  8230  1E68  0096               	movwf	22	;volatile
  8231                           
  8232                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  8233  1E69  1011               	bcf	17,0	;volatile
  8234                           
  8235                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8236  1E6A  0817               	movf	23,w	;volatile
  8237  1E6B  00E1               	movwf	_timer1ReloadVal+1	;volatile
  8238  1E6C  0816               	movf	22,w	;volatile
  8239  1E6D  00E0               	movwf	_timer1ReloadVal	;volatile
  8240                           
  8241                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  8242  1E6E  0021               	movlb	1	; select bank1
  8243  1E6F  1411               	bsf	17,0	;volatile
  8244                           
  8245                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(mbus_timer_handler);
  8246  1E70  307A               	movlw	low _mbus_timer_handler
  8247  1E71  0020               	movlb	0	; select bank0
  8248  1E72  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8249  1E73  301D               	movlw	high _mbus_timer_handler
  8250  1E74  00AB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8251  1E75  319D  2501         	fcall	_TMR1_SetInterruptHandler
  8252                           
  8253                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  8254  1E77  3001               	movlw	1
  8255  1E78  0020               	movlb	0	; select bank0
  8256  1E79  0098               	movwf	24	;volatile
  8257  1E7A  0008               	return
  8258  1E7B                     __end_of_TMR1_Initialize:
  8259                           
  8260                           	psect	text12
  8261  1D01                     __ptext12:	
  8262 ;; *************** function _TMR1_SetInterruptHandler *****************
  8263 ;; Defined at:
  8264 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  InterruptHan    2   10[BANK0 ] PTR FTN()void 
  8267 ;;		 -> mbus_timer_handler(1), 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8279 ;;      Params:         0       2       0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0
  8282 ;;      Totals:         0       2       0       0       0       0       0       0
  8283 ;;Total ram usage:        2 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 4
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_TMR1_Initialize
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293  1D01                     _TMR1_SetInterruptHandler:	
  8294                           ;psect for function _TMR1_SetInterruptHandler
  8295                           
  8296                           
  8297                           ;mcc_generated_files/tmr1.c: 180:     TMR1_InterruptHandler = InterruptHandler;
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8301  1D01  0020               	movlb	0	; select bank0
  8302  1D02  082B               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8303  1D03  00DF               	movwf	_TMR1_InterruptHandler+1
  8304  1D04  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8305  1D05  00DE               	movwf	_TMR1_InterruptHandler
  8306  1D06  0008               	return
  8307  1D07                     __end_of_TMR1_SetInterruptHandler:
  8308                           
  8309                           	psect	text13
  8310  1E39                     __ptext13:	
  8311 ;; *************** function _TMR0_Initialize *****************
  8312 ;; Defined at:
  8313 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0, pclath, cstack
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8327 ;;      Params:         0       0       0       0       0       0       0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0
  8329 ;;      Temps:          0       1       0       0       0       0       0       0
  8330 ;;      Totals:         0       1       0       0       0       0       0       0
  8331 ;;Total ram usage:        1 bytes
  8332 ;; Hardware stack levels used: 1
  8333 ;; Hardware stack levels required when called: 5
  8334 ;; This function calls:
  8335 ;;		_TMR0_SetInterruptHandler
  8336 ;; This function is called by:
  8337 ;;		_SYSTEM_Initialize
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341  1E39                     _TMR0_Initialize:	
  8342                           ;psect for function _TMR0_Initialize
  8343                           
  8344                           
  8345                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  8346                           
  8347                           ;incstack = 0
  8348                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8349  1E39  0021               	movlb	1	; select bank1
  8350  1E3A  0815               	movf	21,w	;volatile
  8351  1E3B  39C0               	andlw	192
  8352  1E3C  3817               	iorlw	23
  8353  1E3D  0095               	movwf	21	;volatile
  8354                           
  8355                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xF8;
  8356  1E3E  30F8               	movlw	248
  8357  1E3F  0020               	movlb	0	; select bank0
  8358  1E40  0095               	movwf	21	;volatile
  8359                           
  8360                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 248;
  8361  1E41  30F8               	movlw	248
  8362  1E42  00AC               	movwf	??_TMR0_Initialize
  8363  1E43  082C               	movf	??_TMR0_Initialize,w
  8364  1E44  00E2               	movwf	_timer0ReloadVal	;volatile
  8365                           
  8366                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  8367  1E45  110B               	bcf	11,2	;volatile
  8368                           
  8369                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  8370  1E46  168B               	bsf	11,5	;volatile
  8371                           
  8372                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8373  1E47  3087               	movlw	low _TMR0_DefaultInterruptHandler
  8374  1E48  00AA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8375  1E49  301C               	movlw	high _TMR0_DefaultInterruptHandler
  8376  1E4A  00AB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8377  1E4B  319C  24FB         	fcall	_TMR0_SetInterruptHandler
  8378  1E4D  0008               	return
  8379  1E4E                     __end_of_TMR0_Initialize:
  8380                           
  8381                           	psect	text14
  8382  1CFB                     __ptext14:	
  8383 ;; *************** function _TMR0_SetInterruptHandler *****************
  8384 ;; Defined at:
  8385 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  InterruptHan    2   10[BANK0 ] PTR FTN()void 
  8388 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8400 ;;      Params:         0       2       0       0       0       0       0       0
  8401 ;;      Locals:         0       0       0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0
  8403 ;;      Totals:         0       2       0       0       0       0       0       0
  8404 ;;Total ram usage:        2 bytes
  8405 ;; Hardware stack levels used: 1
  8406 ;; Hardware stack levels required when called: 4
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_TMR0_Initialize
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414  1CFB                     _TMR0_SetInterruptHandler:	
  8415                           ;psect for function _TMR0_SetInterruptHandler
  8416                           
  8417                           
  8418                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8422  1CFB  0020               	movlb	0	; select bank0
  8423  1CFC  082B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8424  1CFD  00DD               	movwf	_TMR0_InterruptHandler+1
  8425  1CFE  082A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8426  1CFF  00DC               	movwf	_TMR0_InterruptHandler
  8427  1D00  0008               	return
  8428  1D01                     __end_of_TMR0_SetInterruptHandler:
  8429                           
  8430                           	psect	text15
  8431  1E94                     __ptext15:	
  8432 ;; *************** function _PIN_MANAGER_Initialize *****************
  8433 ;; Defined at:
  8434 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;		None
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, status,2
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8448 ;;      Params:         0       0       0       0       0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0       0       0       0
  8451 ;;      Totals:         0       0       0       0       0       0       0       0
  8452 ;;Total ram usage:        0 bytes
  8453 ;; Hardware stack levels used: 1
  8454 ;; Hardware stack levels required when called: 4
  8455 ;; This function calls:
  8456 ;;		Nothing
  8457 ;; This function is called by:
  8458 ;;		_SYSTEM_Initialize
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462  1E94                     _PIN_MANAGER_Initialize:	
  8463                           ;psect for function _PIN_MANAGER_Initialize
  8464                           
  8465                           
  8466                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8467                           
  8468                           ;incstack = 0
  8469                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8470  1E94  0022               	movlb	2	; select bank2
  8471  1E95  018C               	clrf	12	;volatile
  8472                           
  8473                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8474  1E96  018D               	clrf	13	;volatile
  8475                           
  8476                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8477  1E97  018E               	clrf	14	;volatile
  8478                           
  8479                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8480  1E98  303F               	movlw	63
  8481  1E99  0021               	movlb	1	; select bank1
  8482  1E9A  008C               	movwf	12	;volatile
  8483                           
  8484                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  8485  1E9B  3070               	movlw	112
  8486  1E9C  008D               	movwf	13	;volatile
  8487                           
  8488                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x3F;
  8489  1E9D  303F               	movlw	63
  8490  1E9E  008E               	movwf	14	;volatile
  8491                           
  8492                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0F;
  8493  1E9F  300F               	movlw	15
  8494  1EA0  0023               	movlb	3	; select bank3
  8495  1EA1  008E               	movwf	14	;volatile
  8496                           
  8497                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  8498  1EA2  018D               	clrf	13	;volatile
  8499                           
  8500                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  8501  1EA3  3017               	movlw	23
  8502  1EA4  008C               	movwf	12	;volatile
  8503                           
  8504                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8505  1EA5  0024               	movlb	4	; select bank4
  8506  1EA6  018D               	clrf	13	;volatile
  8507                           
  8508                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8509  1EA7  018C               	clrf	12	;volatile
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  8512  1EA8  0021               	movlb	1	; select bank1
  8513  1EA9  1795               	bsf	21,7	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  8516  1EAA  0022               	movlb	2	; select bank2
  8517  1EAB  019D               	clrf	29	;volatile
  8518  1EAC  0008               	return
  8519  1EAD                     __end_of_PIN_MANAGER_Initialize:
  8520                           
  8521                           	psect	text16
  8522  1CF5                     __ptext16:	
  8523 ;; *************** function _OSCILLATOR_Initialize *****************
  8524 ;; Defined at:
  8525 ;;		line 62 in file "mcc_generated_files/mcc.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8539 ;;      Params:         0       0       0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used: 1
  8545 ;; Hardware stack levels required when called: 4
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_SYSTEM_Initialize
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553  1CF5                     _OSCILLATOR_Initialize:	
  8554                           ;psect for function _OSCILLATOR_Initialize
  8555                           
  8556                           
  8557                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  8558                           
  8559                           ;incstack = 0
  8560                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8561  1CF5  3070               	movlw	112
  8562  1CF6  0021               	movlb	1	; select bank1
  8563  1CF7  0099               	movwf	25	;volatile
  8564                           
  8565                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  8566  1CF8  0022               	movlb	2	; select bank2
  8567  1CF9  0196               	clrf	22	;volatile
  8568  1CFA  0008               	return
  8569  1CFB                     __end_of_OSCILLATOR_Initialize:
  8570                           
  8571                           	psect	text17
  8572  1D5A                     __ptext17:	
  8573 ;; *************** function _I2C_Initialize *****************
  8574 ;; Defined at:
  8575 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8589 ;;      Params:         0       0       0       0       0       0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0
  8592 ;;      Totals:         0       0       0       0       0       0       0       0
  8593 ;;Total ram usage:        0 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 4
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_SYSTEM_Initialize
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603  1D5A                     _I2C_Initialize:	
  8604                           ;psect for function _I2C_Initialize
  8605                           
  8606                           
  8607                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x80;
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  8611  1D5A  3080               	movlw	128
  8612  1D5B  0024               	movlb	4	; select bank4
  8613  1D5C  0094               	movwf	20	;volatile
  8614                           
  8615                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  8616  1D5D  3008               	movlw	8
  8617  1D5E  0095               	movwf	21	;volatile
  8618                           
  8619                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  8620  1D5F  0196               	clrf	22	;volatile
  8621                           
  8622                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x13;
  8623  1D60  3013               	movlw	19
  8624  1D61  0092               	movwf	18	;volatile
  8625                           
  8626                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  8627  1D62  1295               	bcf	21,5	;volatile
  8628  1D63  0008               	return
  8629  1D64                     __end_of_I2C_Initialize:
  8630                           
  8631                           	psect	text18
  8632  113C                     __ptext18:	
  8633 ;; *************** function _EUSART_Initialize *****************
  8634 ;; Defined at:
  8635 ;;		line 88 in file "mcc_generated_files/eusart.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, pclath, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8649 ;;      Params:         0       0       0       0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0
  8651 ;;      Temps:          0       1       0       0       0       0       0       0
  8652 ;;      Totals:         0       1       0       0       0       0       0       0
  8653 ;;Total ram usage:        1 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 5
  8656 ;; This function calls:
  8657 ;;		_EUSART_SetErrorHandler
  8658 ;;		_EUSART_SetFramingErrorHandler
  8659 ;;		_EUSART_SetOverrunErrorHandler
  8660 ;;		_EUSART_SetRxInterruptHandler
  8661 ;;		_EUSART_SetTxInterruptHandler
  8662 ;; This function is called by:
  8663 ;;		_SYSTEM_Initialize
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667  113C                     _EUSART_Initialize:	
  8668                           ;psect for function _EUSART_Initialize
  8669                           
  8670                           
  8671                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8675  113C  0021               	movlb	1	; select bank1
  8676  113D  1291               	bcf	17,5	;volatile
  8677                           
  8678                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(mbus_rx_handler);
  8679  113E  303E               	movlw	low _mbus_rx_handler
  8680  113F  0020               	movlb	0	; select bank0
  8681  1140  00AA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8682  1141  3010               	movlw	high _mbus_rx_handler
  8683  1142  00AB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8684  1143  319D  253E  3191   	fcall	_EUSART_SetRxInterruptHandler
  8685                           
  8686                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  8687  1146  0021               	movlb	1	; select bank1
  8688  1147  1211               	bcf	17,4	;volatile
  8689                           
  8690                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(mbus_tx_handler);
  8691  1148  308E               	movlw	low _mbus_tx_handler
  8692  1149  0020               	movlb	0	; select bank0
  8693  114A  00AA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  8694  114B  301F               	movlw	high _mbus_tx_handler
  8695  114C  00AB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  8696  114D  319D  2547  3191   	fcall	_EUSART_SetTxInterruptHandler
  8697                           
  8698                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  8699  1150  3008               	movlw	8
  8700  1151  0023               	movlb	3	; select bank3
  8701  1152  009F               	movwf	31	;volatile
  8702                           
  8703                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  8704  1153  3090               	movlw	144
  8705  1154  009D               	movwf	29	;volatile
  8706                           
  8707                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  8708  1155  3024               	movlw	36
  8709  1156  009E               	movwf	30	;volatile
  8710                           
  8711                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  8712  1157  30CF               	movlw	207
  8713  1158  009B               	movwf	27	;volatile
  8714                           
  8715                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  8716  1159  019C               	clrf	28	;volatile
  8717                           
  8718                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  8719  115A  3000               	movlw	0
  8720  115B  0020               	movlb	0	; select bank0
  8721  115C  00AA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8722  115D  3000               	movlw	0
  8723  115E  00AB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8724  115F  319D  252C  3191   	fcall	_EUSART_SetFramingErrorHandler
  8725                           
  8726                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  8727  1162  3000               	movlw	0
  8728  1163  0020               	movlb	0	; select bank0
  8729  1164  00AA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8730  1165  3000               	movlw	0
  8731  1166  00AB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8732  1167  319D  2535  3191   	fcall	_EUSART_SetOverrunErrorHandler
  8733                           
  8734                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  8735  116A  3000               	movlw	0
  8736  116B  0020               	movlb	0	; select bank0
  8737  116C  00AA               	movwf	EUSART_SetErrorHandler@interruptHandler
  8738  116D  3000               	movlw	0
  8739  116E  00AB               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8740  116F  319D  2523         	fcall	_EUSART_SetErrorHandler
  8741                           
  8742                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  8743  1171  0020               	movlb	0	; select bank0
  8744  1172  01D8               	clrf	_eusartRxLastError	;volatile
  8745                           
  8746                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  8747  1173  01DB               	clrf	_eusartTxHead	;volatile
  8748                           
  8749                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  8750  1174  01DA               	clrf	_eusartTxTail	;volatile
  8751                           
  8752                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  8753  1175  3040               	movlw	64
  8754  1176  00AC               	movwf	??_EUSART_Initialize
  8755  1177  082C               	movf	??_EUSART_Initialize,w
  8756  1178  00E3               	movwf	_eusartTxBufferRemaining	;volatile
  8757                           
  8758                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  8759  1179  01D9               	clrf	_eusartRxHead	;volatile
  8760                           
  8761                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  8762  117A  01FD               	clrf	_eusartRxTail	;volatile
  8763                           
  8764                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  8765  117B  01FC               	clrf	_eusartRxCount	;volatile
  8766                           
  8767                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  8768  117C  0021               	movlb	1	; select bank1
  8769  117D  1691               	bsf	17,5	;volatile
  8770  117E  0008               	return
  8771  117F                     __end_of_EUSART_Initialize:
  8772                           
  8773                           	psect	text19
  8774  1D47                     __ptext19:	
  8775 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8776 ;; Defined at:
  8777 ;;		line 276 in file "mcc_generated_files/eusart.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  8780 ;;		 -> mbus_tx_handler(1), 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8792 ;;      Params:         0       2       0       0       0       0       0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0
  8795 ;;      Totals:         0       2       0       0       0       0       0       0
  8796 ;;Total ram usage:        2 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 4
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_EUSART_Initialize
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806  1D47                     _EUSART_SetTxInterruptHandler:	
  8807                           ;psect for function _EUSART_SetTxInterruptHandler
  8808                           
  8809                           
  8810                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  8811                           
  8812                           ;incstack = 0
  8813                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  8814  1D47  0020               	movlb	0	; select bank0
  8815  1D48  082B               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  8816  1D49  0023               	movlb	3	; select bank3
  8817  1D4A  00EF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384)
  8818  1D4B  0020               	movlb	0	; select bank0
  8819  1D4C  082A               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  8820  1D4D  0023               	movlb	3	; select bank3
  8821  1D4E  00EE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+384)
  8822  1D4F  0008               	return
  8823  1D50                     __end_of_EUSART_SetTxInterruptHandler:
  8824                           
  8825                           	psect	text20
  8826  1D3E                     __ptext20:	
  8827 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8828 ;; Defined at:
  8829 ;;		line 280 in file "mcc_generated_files/eusart.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  8832 ;;		 -> mbus_rx_handler(1), 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;		None
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      void 
  8837 ;; Registers used:
  8838 ;;		wreg
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8844 ;;      Params:         0       2       0       0       0       0       0       0
  8845 ;;      Locals:         0       0       0       0       0       0       0       0
  8846 ;;      Temps:          0       0       0       0       0       0       0       0
  8847 ;;      Totals:         0       2       0       0       0       0       0       0
  8848 ;;Total ram usage:        2 bytes
  8849 ;; Hardware stack levels used: 1
  8850 ;; Hardware stack levels required when called: 4
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_EUSART_Initialize
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858  1D3E                     _EUSART_SetRxInterruptHandler:	
  8859                           ;psect for function _EUSART_SetRxInterruptHandler
  8860                           
  8861                           
  8862                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  8866  1D3E  0020               	movlb	0	; select bank0
  8867  1D3F  082B               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  8868  1D40  0023               	movlb	3	; select bank3
  8869  1D41  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
  8870  1D42  0020               	movlb	0	; select bank0
  8871  1D43  082A               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  8872  1D44  0023               	movlb	3	; select bank3
  8873  1D45  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
  8874  1D46  0008               	return
  8875  1D47                     __end_of_EUSART_SetRxInterruptHandler:
  8876                           
  8877                           	psect	text21
  8878  1D35                     __ptext21:	
  8879 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8880 ;; Defined at:
  8881 ;;		line 268 in file "mcc_generated_files/eusart.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  8884 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8896 ;;      Params:         0       2       0       0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0
  8899 ;;      Totals:         0       2       0       0       0       0       0       0
  8900 ;;Total ram usage:        2 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 4
  8903 ;; This function calls:
  8904 ;;		Nothing
  8905 ;; This function is called by:
  8906 ;;		_EUSART_Initialize
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910  1D35                     _EUSART_SetOverrunErrorHandler:	
  8911                           ;psect for function _EUSART_SetOverrunErrorHandler
  8912                           
  8913                           
  8914                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8918  1D35  0020               	movlb	0	; select bank0
  8919  1D36  082B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8920  1D37  0024               	movlb	4	; select bank4
  8921  1D38  00E0               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+512)
  8922  1D39  0020               	movlb	0	; select bank0
  8923  1D3A  082A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8924  1D3B  0024               	movlb	4	; select bank4
  8925  1D3C  00DF               	movwf	_EUSART_OverrunErrorHandler^(0+512)
  8926  1D3D  0008               	return
  8927  1D3E                     __end_of_EUSART_SetOverrunErrorHandler:
  8928                           
  8929                           	psect	text22
  8930  1D2C                     __ptext22:	
  8931 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8932 ;; Defined at:
  8933 ;;		line 264 in file "mcc_generated_files/eusart.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  8936 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8948 ;;      Params:         0       2       0       0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0
  8951 ;;      Totals:         0       2       0       0       0       0       0       0
  8952 ;;Total ram usage:        2 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 4
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_EUSART_Initialize
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962  1D2C                     _EUSART_SetFramingErrorHandler:	
  8963                           ;psect for function _EUSART_SetFramingErrorHandler
  8964                           
  8965                           
  8966                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8970  1D2C  0020               	movlb	0	; select bank0
  8971  1D2D  082B               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8972  1D2E  0024               	movlb	4	; select bank4
  8973  1D2F  00E2               	movwf	(_EUSART_FramingErrorHandler+1)^(0+512)
  8974  1D30  0020               	movlb	0	; select bank0
  8975  1D31  082A               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8976  1D32  0024               	movlb	4	; select bank4
  8977  1D33  00E1               	movwf	_EUSART_FramingErrorHandler^(0+512)
  8978  1D34  0008               	return
  8979  1D35                     __end_of_EUSART_SetFramingErrorHandler:
  8980                           
  8981                           	psect	text23
  8982  1D23                     __ptext23:	
  8983 ;; *************** function _EUSART_SetErrorHandler *****************
  8984 ;; Defined at:
  8985 ;;		line 272 in file "mcc_generated_files/eusart.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  8988 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9000 ;;      Params:         0       2       0       0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0       0       0       0
  9002 ;;      Temps:          0       0       0       0       0       0       0       0
  9003 ;;      Totals:         0       2       0       0       0       0       0       0
  9004 ;;Total ram usage:        2 bytes
  9005 ;; Hardware stack levels used: 1
  9006 ;; Hardware stack levels required when called: 4
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_EUSART_Initialize
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014  1D23                     _EUSART_SetErrorHandler:	
  9015                           ;psect for function _EUSART_SetErrorHandler
  9016                           
  9017                           
  9018                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9019                           
  9020                           ;incstack = 0
  9021                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9022  1D23  0020               	movlb	0	; select bank0
  9023  1D24  082B               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9024  1D25  0024               	movlb	4	; select bank4
  9025  1D26  00DE               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
  9026  1D27  0020               	movlb	0	; select bank0
  9027  1D28  082A               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9028  1D29  0024               	movlb	4	; select bank4
  9029  1D2A  00DD               	movwf	_EUSART_ErrorHandler^(0+512)
  9030  1D2B  0008               	return
  9031  1D2C                     __end_of_EUSART_SetErrorHandler:
  9032                           
  9033                           	psect	text24
  9034  12E5                     __ptext24:	
  9035 ;; *************** function _MCP3422_ReadVoltage *****************
  9036 ;; Defined at:
  9037 ;;		line 113 in file "main.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  channel         1    wreg     unsigned char 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  channel         1   37[BANK1 ] unsigned char 
  9042 ;;  adc_value       4   41[BANK1 ] unsigned long 
  9043 ;;  data            3   38[BANK1 ] unsigned char [3]
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  4   29[BANK1 ] float 
  9046 ;; Registers used:
  9047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9053 ;;      Params:         0       0       4       0       0       0       0       0
  9054 ;;      Locals:         0       0       8       0       0       0       0       0
  9055 ;;      Temps:          0       0       4       0       0       0       0       0
  9056 ;;      Totals:         0       0      16       0       0       0       0       0
  9057 ;;Total ram usage:       16 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 14
  9060 ;; This function calls:
  9061 ;;		_MCP3422_Read
  9062 ;;		_MCP3422_Write
  9063 ;;		___flmul
  9064 ;;		___xxtofl
  9065 ;; This function is called by:
  9066 ;;		_main
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070  12E5                     _MCP3422_ReadVoltage:	
  9071                           ;psect for function _MCP3422_ReadVoltage
  9072                           
  9073                           
  9074                           ;incstack = 0
  9075                           ; Regs used in _MCP3422_ReadVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9076                           ;MCP3422_ReadVoltage@channel stored from wreg
  9077  12E5  0021               	movlb	1	; select bank1
  9078  12E6  00C5               	movwf	MCP3422_ReadVoltage@channel^(0+128)
  9079                           
  9080                           ;main.c: 116:     uint8_t data[3] = {0U};
  9081  12E7  3000               	movlw	0
  9082  12E8  00C6               	movwf	MCP3422_ReadVoltage@data^(0+128)
  9083  12E9  3000               	movlw	0
  9084  12EA  00C7               	movwf	(MCP3422_ReadVoltage@data+1)^(0+128)
  9085  12EB  3000               	movlw	0
  9086  12EC  00C8               	movwf	(MCP3422_ReadVoltage@data+2)^(0+128)
  9087                           
  9088                           ;main.c: 118:     MCP3422_Write(((0x10 | 0x00 | 0x0C) | channel));
  9089  12ED  0845               	movf	MCP3422_ReadVoltage@channel^(0+128),w
  9090  12EE  381C               	iorlw	28
  9091  12EF  319D  25AB  3192   	fcall	_MCP3422_Write
  9092                           
  9093                           ;main.c: 119:     _delay((unsigned long)((420)*(8000000/4000.0)));
  9094  12F2  3005               	movlw	5
  9095  12F3  0021               	movlb	1	; select bank1
  9096  12F4  00C2               	movwf	(??_MCP3422_ReadVoltage^(0+128)+1)
  9097  12F5  3043               	movlw	67
  9098  12F6  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9099  12F7  30E3               	movlw	227
  9100  12F8                     u6597:
  9101  12F8  0B89               	decfsz	9,f
  9102  12F9  2AF8               	goto	u6597
  9103  12FA  0BC1               	decfsz	??_MCP3422_ReadVoltage^(0+128),f
  9104  12FB  2AF8               	goto	u6597
  9105  12FC  0BC2               	decfsz	(??_MCP3422_ReadVoltage^(0+128)+1),f
  9106  12FD  2AF8               	goto	u6597
  9107  12FE  3200               	nop2
  9108                           
  9109                           ;main.c: 121:     MCP3422_Read(data, 3U);
  9110  12FF  3003               	movlw	3
  9111  1300  0021               	movlb	1	; select bank1
  9112  1301  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9113  1302  0841               	movf	??_MCP3422_ReadVoltage^(0+128),w
  9114  1303  0020               	movlb	0	; select bank0
  9115  1304  00C1               	movwf	MCP3422_Read@count
  9116  1305  30C6               	movlw	(low (MCP3422_ReadVoltage@data| 0))& (0+255)
  9117  1306  319D  25C8  3192   	fcall	_MCP3422_Read
  9118                           
  9119                           ;main.c: 122:     adc_value = data[0];
  9120  1309  0021               	movlb	1	; select bank1
  9121  130A  0846               	movf	MCP3422_ReadVoltage@data^(0+128),w
  9122  130B  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9123  130C  01C2               	clrf	(??_MCP3422_ReadVoltage^(0+128)+1)
  9124  130D  01C3               	clrf	(??_MCP3422_ReadVoltage^(0+128)+2)
  9125  130E  01C4               	clrf	(??_MCP3422_ReadVoltage^(0+128)+3)
  9126  130F  0844               	movf	(??_MCP3422_ReadVoltage+3)^(0+128),w
  9127  1310  00CC               	movwf	(MCP3422_ReadVoltage@adc_value+3)^(0+128)
  9128  1311  0843               	movf	(??_MCP3422_ReadVoltage+2)^(0+128),w
  9129  1312  00CB               	movwf	(MCP3422_ReadVoltage@adc_value+2)^(0+128)
  9130  1313  0842               	movf	(??_MCP3422_ReadVoltage+1)^(0+128),w
  9131  1314  00CA               	movwf	(MCP3422_ReadVoltage@adc_value+1)^(0+128)
  9132  1315  0841               	movf	??_MCP3422_ReadVoltage^(0+128),w
  9133  1316  00C9               	movwf	MCP3422_ReadVoltage@adc_value^(0+128)
  9134                           
  9135                           ;main.c: 123:     adc_value <<= 8U;
  9136  1317  3008               	movlw	8
  9137  1318                     u6215:
  9138  1318  35C9               	lslf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9139  1319  0DCA               	rlf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),f
  9140  131A  0DCB               	rlf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),f
  9141  131B  0DCC               	rlf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),f
  9142  131C  0B89               	decfsz	9,f
  9143  131D  2B18               	goto	u6215
  9144                           
  9145                           ;main.c: 124:     adc_value |= data[1];
  9146  131E  0847               	movf	(MCP3422_ReadVoltage@data^(0+128)+1),w
  9147  131F  04C9               	iorwf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9148                           
  9149                           ;main.c: 125:     adc_value <<= 8U;
  9150  1320  3008               	movlw	8
  9151  1321                     u6225:
  9152  1321  35C9               	lslf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9153  1322  0DCA               	rlf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),f
  9154  1323  0DCB               	rlf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),f
  9155  1324  0DCC               	rlf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),f
  9156  1325  0B89               	decfsz	9,f
  9157  1326  2B21               	goto	u6225
  9158                           
  9159                           ;main.c: 126:     adc_value |= data[2];
  9160  1327  0848               	movf	(MCP3422_ReadVoltage@data^(0+128)+2),w
  9161  1328  04C9               	iorwf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9162                           
  9163                           ;main.c: 131:     return ((float)adc_value * 0.015625f);
  9164  1329  303C               	movlw	60
  9165  132A  00AB               	movwf	(___flmul@b+3)^(0+128)
  9166  132B  3080               	movlw	128
  9167  132C  00AA               	movwf	(___flmul@b+2)^(0+128)
  9168  132D  3000               	movlw	0
  9169  132E  00A9               	movwf	(___flmul@b+1)^(0+128)
  9170  132F  3000               	movlw	0
  9171  1330  00A8               	movwf	___flmul@b^(0+128)
  9172  1331  084C               	movf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),w
  9173  1332  0020               	movlb	0	; select bank0
  9174  1333  00AD               	movwf	___xxtofl@val+3
  9175  1334  0021               	movlb	1	; select bank1
  9176  1335  084B               	movf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),w
  9177  1336  0020               	movlb	0	; select bank0
  9178  1337  00AC               	movwf	___xxtofl@val+2
  9179  1338  0021               	movlb	1	; select bank1
  9180  1339  084A               	movf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),w
  9181  133A  0020               	movlb	0	; select bank0
  9182  133B  00AB               	movwf	___xxtofl@val+1
  9183  133C  0021               	movlb	1	; select bank1
  9184  133D  0849               	movf	MCP3422_ReadVoltage@adc_value^(0+128),w
  9185  133E  0020               	movlb	0	; select bank0
  9186  133F  00AA               	movwf	___xxtofl@val
  9187  1340  3000               	movlw	0
  9188  1341  3188  200D  3192   	fcall	___xxtofl
  9189  1344  0020               	movlb	0	; select bank0
  9190  1345  082D               	movf	?___xxtofl+3,w
  9191  1346  0021               	movlb	1	; select bank1
  9192  1347  00AF               	movwf	(___flmul@a+3)^(0+128)
  9193  1348  0020               	movlb	0	; select bank0
  9194  1349  082C               	movf	?___xxtofl+2,w
  9195  134A  0021               	movlb	1	; select bank1
  9196  134B  00AE               	movwf	(___flmul@a+2)^(0+128)
  9197  134C  0020               	movlb	0	; select bank0
  9198  134D  082B               	movf	?___xxtofl+1,w
  9199  134E  0021               	movlb	1	; select bank1
  9200  134F  00AD               	movwf	(___flmul@a+1)^(0+128)
  9201  1350  0020               	movlb	0	; select bank0
  9202  1351  082A               	movf	?___xxtofl,w
  9203  1352  0021               	movlb	1	; select bank1
  9204  1353  00AC               	movwf	___flmul@a^(0+128)
  9205  1354  318A  2241         	fcall	___flmul
  9206  1356  0021               	movlb	1	; select bank1
  9207  1357  082B               	movf	(?___flmul+3)^(0+128),w
  9208  1358  00C0               	movwf	(?_MCP3422_ReadVoltage+3)^(0+128)
  9209  1359  082A               	movf	(?___flmul+2)^(0+128),w
  9210  135A  00BF               	movwf	(?_MCP3422_ReadVoltage+2)^(0+128)
  9211  135B  0829               	movf	(?___flmul+1)^(0+128),w
  9212  135C  00BE               	movwf	(?_MCP3422_ReadVoltage+1)^(0+128)
  9213  135D  0828               	movf	?___flmul^(0+128),w
  9214  135E  00BD               	movwf	?_MCP3422_ReadVoltage^(0+128)
  9215  135F  0008               	return
  9216  1360                     __end_of_MCP3422_ReadVoltage:
  9217                           
  9218                           	psect	text25
  9219  080D                     __ptext25:	
  9220 ;; *************** function ___xxtofl *****************
  9221 ;; Defined at:
  9222 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  sign            1    wreg     unsigned char 
  9225 ;;  val             4   10[BANK0 ] long 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  sign            1   18[BANK0 ] unsigned char 
  9228 ;;  arg             4   20[BANK0 ] unsigned long 
  9229 ;;  exp             1   19[BANK0 ] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  4   10[BANK0 ] unsigned char 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9239 ;;      Params:         0       4       0       0       0       0       0       0
  9240 ;;      Locals:         0       6       0       0       0       0       0       0
  9241 ;;      Temps:          0       4       0       0       0       0       0       0
  9242 ;;      Totals:         0      14       0       0       0       0       0       0
  9243 ;;Total ram usage:       14 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 4
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_map
  9250 ;;		_MCP3422_ReadVoltage
  9251 ;;		_main
  9252 ;;		_logf
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256  080D                     ___xxtofl:	
  9257                           ;psect for function ___xxtofl
  9258                           
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9262                           ;___xxtofl@sign stored from wreg
  9263  080D  0020               	movlb	0	; select bank0
  9264  080E  00B2               	movwf	___xxtofl@sign
  9265  080F  0832               	movf	___xxtofl@sign,w
  9266  0810  1D03               	btfss	3,2
  9267  0811  1FAD               	btfss	___xxtofl@val+3,7
  9268  0812  2823               	goto	l6207
  9269  0813  092A               	comf	___xxtofl@val,w
  9270  0814  00B4               	movwf	___xxtofl@arg
  9271  0815  092B               	comf	___xxtofl@val+1,w
  9272  0816  00B5               	movwf	___xxtofl@arg+1
  9273  0817  092C               	comf	___xxtofl@val+2,w
  9274  0818  00B6               	movwf	___xxtofl@arg+2
  9275  0819  092D               	comf	___xxtofl@val+3,w
  9276  081A  00B7               	movwf	___xxtofl@arg+3
  9277  081B  0AB4               	incf	___xxtofl@arg,f
  9278  081C  1903               	skipnz
  9279  081D  0AB5               	incf	___xxtofl@arg+1,f
  9280  081E  1903               	skipnz
  9281  081F  0AB6               	incf	___xxtofl@arg+2,f
  9282  0820  1903               	skipnz
  9283  0821  0AB7               	incf	___xxtofl@arg+3,f
  9284  0822  282B               	goto	l1494
  9285  0823                     l6207:
  9286  0823  082D               	movf	___xxtofl@val+3,w
  9287  0824  00B7               	movwf	___xxtofl@arg+3
  9288  0825  082C               	movf	___xxtofl@val+2,w
  9289  0826  00B6               	movwf	___xxtofl@arg+2
  9290  0827  082B               	movf	___xxtofl@val+1,w
  9291  0828  00B5               	movwf	___xxtofl@arg+1
  9292  0829  082A               	movf	___xxtofl@val,w
  9293  082A  00B4               	movwf	___xxtofl@arg
  9294  082B                     l1494:
  9295  082B  082D               	movf	___xxtofl@val+3,w
  9296  082C  042C               	iorwf	___xxtofl@val+2,w
  9297  082D  042B               	iorwf	___xxtofl@val+1,w
  9298  082E  042A               	iorwf	___xxtofl@val,w
  9299  082F  1D03               	skipz
  9300  0830  283A               	goto	l6213
  9301  0831  3000               	movlw	0
  9302  0832  00AD               	movwf	?___xxtofl+3
  9303  0833  3000               	movlw	0
  9304  0834  00AC               	movwf	?___xxtofl+2
  9305  0835  3000               	movlw	0
  9306  0836  00AB               	movwf	?___xxtofl+1
  9307  0837  3000               	movlw	0
  9308  0838  00AA               	movwf	?___xxtofl
  9309  0839  0008               	return
  9310  083A                     l6213:
  9311  083A  3096               	movlw	150
  9312  083B  00AE               	movwf	??___xxtofl
  9313  083C  082E               	movf	??___xxtofl,w
  9314  083D  00B3               	movwf	___xxtofl@exp
  9315  083E                     l6217:
  9316  083E  30FE               	movlw	254
  9317  083F  0537               	andwf	___xxtofl@arg+3,w
  9318  0840  1903               	btfsc	3,2
  9319  0841  2861               	goto	l1500
  9320  0842  3001               	movlw	1
  9321  0843  00AE               	movwf	??___xxtofl
  9322  0844  082E               	movf	??___xxtofl,w
  9323  0845  07B3               	addwf	___xxtofl@exp,f
  9324  0846  3001               	movlw	1
  9325  0847                     u5815:
  9326  0847  36B7               	lsrf	___xxtofl@arg+3,f
  9327  0848  0CB6               	rrf	___xxtofl@arg+2,f
  9328  0849  0CB5               	rrf	___xxtofl@arg+1,f
  9329  084A  0CB4               	rrf	___xxtofl@arg,f
  9330  084B  0B89               	decfsz	9,f
  9331  084C  2847               	goto	u5815
  9332  084D  283E               	goto	l6217
  9333  084E                     l6219:
  9334  084E  3001               	movlw	1
  9335  084F  00AE               	movwf	??___xxtofl
  9336  0850  082E               	movf	??___xxtofl,w
  9337  0851  07B3               	addwf	___xxtofl@exp,f
  9338  0852  3001               	movlw	1
  9339  0853  07B4               	addwf	___xxtofl@arg,f
  9340  0854  3000               	movlw	0
  9341  0855  3DB5               	addwfc	___xxtofl@arg+1,f
  9342  0856  3000               	movlw	0
  9343  0857  3DB6               	addwfc	___xxtofl@arg+2,f
  9344  0858  3000               	movlw	0
  9345  0859  3DB7               	addwfc	___xxtofl@arg+3,f
  9346  085A  3001               	movlw	1
  9347  085B                     u5835:
  9348  085B  36B7               	lsrf	___xxtofl@arg+3,f
  9349  085C  0CB6               	rrf	___xxtofl@arg+2,f
  9350  085D  0CB5               	rrf	___xxtofl@arg+1,f
  9351  085E  0CB4               	rrf	___xxtofl@arg,f
  9352  085F  0B89               	decfsz	9,f
  9353  0860  285B               	goto	u5835
  9354  0861                     l1500:
  9355  0861  30FF               	movlw	255
  9356  0862  0537               	andwf	___xxtofl@arg+3,w
  9357  0863  1903               	btfsc	3,2
  9358  0864  2873               	goto	l6227
  9359  0865  284E               	goto	l6219
  9360  0866                     l6229:
  9361  0866  3002               	movlw	2
  9362  0867  0233               	subwf	___xxtofl@exp,w
  9363  0868  1C03               	btfss	3,0
  9364  0869  2875               	goto	l1507
  9365  086A  3001               	movlw	1
  9366  086B  02B3               	subwf	___xxtofl@exp,f
  9367  086C  3001               	movlw	1
  9368  086D                     u5855:
  9369  086D  35B4               	lslf	___xxtofl@arg,f
  9370  086E  0DB5               	rlf	___xxtofl@arg+1,f
  9371  086F  0DB6               	rlf	___xxtofl@arg+2,f
  9372  0870  0DB7               	rlf	___xxtofl@arg+3,f
  9373  0871  0B89               	decfsz	9,f
  9374  0872  286D               	goto	u5855
  9375  0873                     l6227:
  9376  0873  1FB6               	btfss	___xxtofl@arg+2,7
  9377  0874  2866               	goto	l6229
  9378  0875                     l1507:
  9379  0875  1833               	btfsc	___xxtofl@exp,0
  9380  0876  287F               	goto	l1508
  9381  0877  30FF               	movlw	255
  9382  0878  05B4               	andwf	___xxtofl@arg,f
  9383  0879  30FF               	movlw	255
  9384  087A  05B5               	andwf	___xxtofl@arg+1,f
  9385  087B  307F               	movlw	127
  9386  087C  05B6               	andwf	___xxtofl@arg+2,f
  9387  087D  30FF               	movlw	255
  9388  087E  05B7               	andwf	___xxtofl@arg+3,f
  9389  087F                     l1508:
  9390  087F  1003               	clrc
  9391  0880  0CB3               	rrf	___xxtofl@exp,f
  9392  0881  0833               	movf	___xxtofl@exp,w
  9393  0882  00AE               	movwf	??___xxtofl
  9394  0883  01AF               	clrf	??___xxtofl+1
  9395  0884  01B0               	clrf	??___xxtofl+2
  9396  0885  01B1               	clrf	??___xxtofl+3
  9397  0886  3018               	movlw	24
  9398  0887                     u5895:
  9399  0887  35AE               	lslf	??___xxtofl,f
  9400  0888  0DAF               	rlf	??___xxtofl+1,f
  9401  0889  0DB0               	rlf	??___xxtofl+2,f
  9402  088A  0DB1               	rlf	??___xxtofl+3,f
  9403  088B  0B89               	decfsz	9,f
  9404  088C  2887               	goto	u5895
  9405  088D  082E               	movf	??___xxtofl,w
  9406  088E  04B4               	iorwf	___xxtofl@arg,f
  9407  088F  082F               	movf	??___xxtofl+1,w
  9408  0890  04B5               	iorwf	___xxtofl@arg+1,f
  9409  0891  0830               	movf	??___xxtofl+2,w
  9410  0892  04B6               	iorwf	___xxtofl@arg+2,f
  9411  0893  0831               	movf	??___xxtofl+3,w
  9412  0894  04B7               	iorwf	___xxtofl@arg+3,f
  9413  0895  0832               	movf	___xxtofl@sign,w
  9414  0896  1D03               	btfss	3,2
  9415  0897  1FAD               	btfss	___xxtofl@val+3,7
  9416  0898  289A               	goto	l6241
  9417  0899  17B7               	bsf	___xxtofl@arg+3,7
  9418  089A                     l6241:
  9419  089A  0837               	movf	___xxtofl@arg+3,w
  9420  089B  00AD               	movwf	?___xxtofl+3
  9421  089C  0836               	movf	___xxtofl@arg+2,w
  9422  089D  00AC               	movwf	?___xxtofl+2
  9423  089E  0835               	movf	___xxtofl@arg+1,w
  9424  089F  00AB               	movwf	?___xxtofl+1
  9425  08A0  0834               	movf	___xxtofl@arg,w
  9426  08A1  00AA               	movwf	?___xxtofl
  9427  08A2  0008               	return
  9428  08A3                     __end_of___xxtofl:
  9429                           
  9430                           	psect	text26
  9431  0A41                     __ptext26:	
  9432 ;; *************** function ___flmul *****************
  9433 ;; Defined at:
  9434 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  b               4    8[BANK1 ] unsigned char 
  9437 ;;  a               4   12[BANK1 ] unsigned char 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;  prod            4   23[BANK1 ] struct .
  9440 ;;  grs             4   18[BANK1 ] unsigned long 
  9441 ;;  temp            2   27[BANK1 ] struct .
  9442 ;;  bexp            1   22[BANK1 ] unsigned char 
  9443 ;;  aexp            1   17[BANK1 ] unsigned char 
  9444 ;;  sign            1   16[BANK1 ] unsigned char 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  4    8[BANK1 ] unsigned char 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, pclath, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9454 ;;      Params:         0       0       8       0       0       0       0       0
  9455 ;;      Locals:         0       0      13       0       0       0       0       0
  9456 ;;      Temps:          0       5       0       0       0       0       0       0
  9457 ;;      Totals:         0       5      21       0       0       0       0       0
  9458 ;;Total ram usage:       26 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 5
  9461 ;; This function calls:
  9462 ;;		__Umul8_16
  9463 ;; This function is called by:
  9464 ;;		_map
  9465 ;;		_MCP3422_ReadVoltage
  9466 ;;		_main
  9467 ;;		_logf
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471  0A41                     ___flmul:	
  9472                           ;psect for function ___flmul
  9473                           
  9474                           
  9475                           ;incstack = 0
  9476                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9477  0A41  0021               	movlb	1	; select bank1
  9478  0A42  082B               	movf	(___flmul@b^(0+128)+3),w
  9479  0A43  3980               	andlw	128
  9480  0A44  0020               	movlb	0	; select bank0
  9481  0A45  00CC               	movwf	??___flmul
  9482  0A46  084C               	movf	??___flmul,w
  9483  0A47  0021               	movlb	1	; select bank1
  9484  0A48  00B0               	movwf	___flmul@sign^(0+128)
  9485  0A49  352B               	lslf	(___flmul@b^(0+128)+3),w
  9486  0A4A  0020               	movlb	0	; select bank0
  9487  0A4B  00CC               	movwf	??___flmul
  9488  0A4C  084C               	movf	??___flmul,w
  9489  0A4D  0021               	movlb	1	; select bank1
  9490  0A4E  00B6               	movwf	___flmul@bexp^(0+128)
  9491  0A4F  1BAA               	btfsc	(___flmul@b^(0+128)+2),7
  9492  0A50  1436               	bsf	___flmul@bexp^(0+128),0
  9493  0A51  0836               	movf	___flmul@bexp^(0+128),w
  9494  0A52  1903               	btfsc	3,2
  9495  0A53  2A61               	goto	l6077
  9496  0A54  0A36               	incf	___flmul@bexp^(0+128),w
  9497  0A55  1D03               	btfss	3,2
  9498  0A56  2A5F               	goto	l6075
  9499  0A57  3000               	movlw	0
  9500  0A58  00AB               	movwf	(___flmul@b+3)^(0+128)
  9501  0A59  3000               	movlw	0
  9502  0A5A  00AA               	movwf	(___flmul@b+2)^(0+128)
  9503  0A5B  3000               	movlw	0
  9504  0A5C  00A9               	movwf	(___flmul@b+1)^(0+128)
  9505  0A5D  3000               	movlw	0
  9506  0A5E  00A8               	movwf	___flmul@b^(0+128)
  9507  0A5F                     l6075:
  9508  0A5F  17AA               	bsf	(___flmul@b^(0+128)+2),7
  9509  0A60  2A69               	goto	l6079
  9510  0A61                     l6077:
  9511  0A61  3000               	movlw	0
  9512  0A62  00AB               	movwf	(___flmul@b+3)^(0+128)
  9513  0A63  3000               	movlw	0
  9514  0A64  00AA               	movwf	(___flmul@b+2)^(0+128)
  9515  0A65  3000               	movlw	0
  9516  0A66  00A9               	movwf	(___flmul@b+1)^(0+128)
  9517  0A67  3000               	movlw	0
  9518  0A68  00A8               	movwf	___flmul@b^(0+128)
  9519  0A69                     l6079:
  9520  0A69  082F               	movf	(___flmul@a^(0+128)+3),w
  9521  0A6A  3980               	andlw	128
  9522  0A6B  0020               	movlb	0	; select bank0
  9523  0A6C  00CC               	movwf	??___flmul
  9524  0A6D  084C               	movf	??___flmul,w
  9525  0A6E  0021               	movlb	1	; select bank1
  9526  0A6F  06B0               	xorwf	___flmul@sign^(0+128),f
  9527  0A70  352F               	lslf	(___flmul@a^(0+128)+3),w
  9528  0A71  0020               	movlb	0	; select bank0
  9529  0A72  00CC               	movwf	??___flmul
  9530  0A73  084C               	movf	??___flmul,w
  9531  0A74  0021               	movlb	1	; select bank1
  9532  0A75  00B1               	movwf	___flmul@aexp^(0+128)
  9533  0A76  1BAE               	btfsc	(___flmul@a^(0+128)+2),7
  9534  0A77  1431               	bsf	___flmul@aexp^(0+128),0
  9535  0A78  0831               	movf	___flmul@aexp^(0+128),w
  9536  0A79  1903               	btfsc	3,2
  9537  0A7A  2A88               	goto	l6095
  9538  0A7B  0A31               	incf	___flmul@aexp^(0+128),w
  9539  0A7C  1D03               	btfss	3,2
  9540  0A7D  2A86               	goto	l6093
  9541  0A7E  3000               	movlw	0
  9542  0A7F  00AF               	movwf	(___flmul@a+3)^(0+128)
  9543  0A80  3000               	movlw	0
  9544  0A81  00AE               	movwf	(___flmul@a+2)^(0+128)
  9545  0A82  3000               	movlw	0
  9546  0A83  00AD               	movwf	(___flmul@a+1)^(0+128)
  9547  0A84  3000               	movlw	0
  9548  0A85  00AC               	movwf	___flmul@a^(0+128)
  9549  0A86                     l6093:
  9550  0A86  17AE               	bsf	(___flmul@a^(0+128)+2),7
  9551  0A87  2A90               	goto	l6097
  9552  0A88                     l6095:
  9553  0A88  3000               	movlw	0
  9554  0A89  00AF               	movwf	(___flmul@a+3)^(0+128)
  9555  0A8A  3000               	movlw	0
  9556  0A8B  00AE               	movwf	(___flmul@a+2)^(0+128)
  9557  0A8C  3000               	movlw	0
  9558  0A8D  00AD               	movwf	(___flmul@a+1)^(0+128)
  9559  0A8E  3000               	movlw	0
  9560  0A8F  00AC               	movwf	___flmul@a^(0+128)
  9561  0A90                     l6097:
  9562  0A90  0831               	movf	___flmul@aexp^(0+128),w
  9563  0A91  1D03               	btfss	3,2
  9564  0A92  0836               	movf	___flmul@bexp^(0+128),w
  9565  0A93  1D03               	btfss	3,2
  9566  0A94  2A9E               	goto	l6105
  9567  0A95  3000               	movlw	0
  9568  0A96  00AB               	movwf	(?___flmul+3)^(0+128)
  9569  0A97  3000               	movlw	0
  9570  0A98  00AA               	movwf	(?___flmul+2)^(0+128)
  9571  0A99  3000               	movlw	0
  9572  0A9A  00A9               	movwf	(?___flmul+1)^(0+128)
  9573  0A9B  3000               	movlw	0
  9574  0A9C  00A8               	movwf	?___flmul^(0+128)
  9575  0A9D  0008               	return
  9576  0A9E                     l6105:
  9577  0A9E  0828               	movf	___flmul@b^(0+128),w
  9578  0A9F  0020               	movlb	0	; select bank0
  9579  0AA0  00CC               	movwf	??___flmul
  9580  0AA1  084C               	movf	??___flmul,w
  9581  0AA2  00AA               	movwf	__Umul8_16@multiplicand
  9582  0AA3  0021               	movlb	1	; select bank1
  9583  0AA4  082E               	movf	(___flmul@a^(0+128)+2),w
  9584  0AA5  319F  2746  318A   	fcall	__Umul8_16
  9585  0AA8  0020               	movlb	0	; select bank0
  9586  0AA9  082B               	movf	?__Umul8_16+1,w
  9587  0AAA  0021               	movlb	1	; select bank1
  9588  0AAB  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9589  0AAC  0020               	movlb	0	; select bank0
  9590  0AAD  082A               	movf	?__Umul8_16,w
  9591  0AAE  0021               	movlb	1	; select bank1
  9592  0AAF  00BB               	movwf	___flmul@temp^(0+128)
  9593  0AB0  083B               	movf	___flmul@temp^(0+128),w
  9594  0AB1  0020               	movlb	0	; select bank0
  9595  0AB2  00CC               	movwf	??___flmul
  9596  0AB3  01CD               	clrf	??___flmul+1
  9597  0AB4  01CE               	clrf	??___flmul+2
  9598  0AB5  01CF               	clrf	??___flmul+3
  9599  0AB6  084F               	movf	??___flmul+3,w
  9600  0AB7  0021               	movlb	1	; select bank1
  9601  0AB8  00B5               	movwf	(___flmul@grs+3)^(0+128)
  9602  0AB9  0020               	movlb	0	; select bank0
  9603  0ABA  084E               	movf	??___flmul+2,w
  9604  0ABB  0021               	movlb	1	; select bank1
  9605  0ABC  00B4               	movwf	(___flmul@grs+2)^(0+128)
  9606  0ABD  0020               	movlb	0	; select bank0
  9607  0ABE  084D               	movf	??___flmul+1,w
  9608  0ABF  0021               	movlb	1	; select bank1
  9609  0AC0  00B3               	movwf	(___flmul@grs+1)^(0+128)
  9610  0AC1  0020               	movlb	0	; select bank0
  9611  0AC2  084C               	movf	??___flmul,w
  9612  0AC3  0021               	movlb	1	; select bank1
  9613  0AC4  00B2               	movwf	___flmul@grs^(0+128)
  9614  0AC5  083C               	movf	(___flmul@temp^(0+128)+1),w
  9615  0AC6  0020               	movlb	0	; select bank0
  9616  0AC7  00CC               	movwf	??___flmul
  9617  0AC8  01CD               	clrf	??___flmul+1
  9618  0AC9  01CE               	clrf	??___flmul+2
  9619  0ACA  01CF               	clrf	??___flmul+3
  9620  0ACB  084F               	movf	??___flmul+3,w
  9621  0ACC  0021               	movlb	1	; select bank1
  9622  0ACD  00BA               	movwf	(___flmul@prod+3)^(0+128)
  9623  0ACE  0020               	movlb	0	; select bank0
  9624  0ACF  084E               	movf	??___flmul+2,w
  9625  0AD0  0021               	movlb	1	; select bank1
  9626  0AD1  00B9               	movwf	(___flmul@prod+2)^(0+128)
  9627  0AD2  0020               	movlb	0	; select bank0
  9628  0AD3  084D               	movf	??___flmul+1,w
  9629  0AD4  0021               	movlb	1	; select bank1
  9630  0AD5  00B8               	movwf	(___flmul@prod+1)^(0+128)
  9631  0AD6  0020               	movlb	0	; select bank0
  9632  0AD7  084C               	movf	??___flmul,w
  9633  0AD8  0021               	movlb	1	; select bank1
  9634  0AD9  00B7               	movwf	___flmul@prod^(0+128)
  9635  0ADA  0829               	movf	(___flmul@b^(0+128)+1),w
  9636  0ADB  0020               	movlb	0	; select bank0
  9637  0ADC  00CC               	movwf	??___flmul
  9638  0ADD  084C               	movf	??___flmul,w
  9639  0ADE  00AA               	movwf	__Umul8_16@multiplicand
  9640  0ADF  0021               	movlb	1	; select bank1
  9641  0AE0  082D               	movf	(___flmul@a^(0+128)+1),w
  9642  0AE1  319F  2746  318A   	fcall	__Umul8_16
  9643  0AE4  0020               	movlb	0	; select bank0
  9644  0AE5  082B               	movf	?__Umul8_16+1,w
  9645  0AE6  0021               	movlb	1	; select bank1
  9646  0AE7  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9647  0AE8  0020               	movlb	0	; select bank0
  9648  0AE9  082A               	movf	?__Umul8_16,w
  9649  0AEA  0021               	movlb	1	; select bank1
  9650  0AEB  00BB               	movwf	___flmul@temp^(0+128)
  9651  0AEC  083B               	movf	___flmul@temp^(0+128),w
  9652  0AED  0020               	movlb	0	; select bank0
  9653  0AEE  00CC               	movwf	??___flmul
  9654  0AEF  01CD               	clrf	??___flmul+1
  9655  0AF0  01CE               	clrf	??___flmul+2
  9656  0AF1  01CF               	clrf	??___flmul+3
  9657  0AF2  084C               	movf	??___flmul,w
  9658  0AF3  0021               	movlb	1	; select bank1
  9659  0AF4  07B2               	addwf	___flmul@grs^(0+128),f
  9660  0AF5  0020               	movlb	0	; select bank0
  9661  0AF6  084D               	movf	??___flmul+1,w
  9662  0AF7  0021               	movlb	1	; select bank1
  9663  0AF8  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
  9664  0AF9  0020               	movlb	0	; select bank0
  9665  0AFA  084E               	movf	??___flmul+2,w
  9666  0AFB  0021               	movlb	1	; select bank1
  9667  0AFC  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
  9668  0AFD  0020               	movlb	0	; select bank0
  9669  0AFE  084F               	movf	??___flmul+3,w
  9670  0AFF  0021               	movlb	1	; select bank1
  9671  0B00  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
  9672  0B01  083C               	movf	(___flmul@temp^(0+128)+1),w
  9673  0B02  0020               	movlb	0	; select bank0
  9674  0B03  00CC               	movwf	??___flmul
  9675  0B04  01CD               	clrf	??___flmul+1
  9676  0B05  01CE               	clrf	??___flmul+2
  9677  0B06  01CF               	clrf	??___flmul+3
  9678  0B07  084C               	movf	??___flmul,w
  9679  0B08  0021               	movlb	1	; select bank1
  9680  0B09  07B7               	addwf	___flmul@prod^(0+128),f
  9681  0B0A  0020               	movlb	0	; select bank0
  9682  0B0B  084D               	movf	??___flmul+1,w
  9683  0B0C  0021               	movlb	1	; select bank1
  9684  0B0D  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9685  0B0E  0020               	movlb	0	; select bank0
  9686  0B0F  084E               	movf	??___flmul+2,w
  9687  0B10  0021               	movlb	1	; select bank1
  9688  0B11  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9689  0B12  0020               	movlb	0	; select bank0
  9690  0B13  084F               	movf	??___flmul+3,w
  9691  0B14  0021               	movlb	1	; select bank1
  9692  0B15  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9693  0B16  082A               	movf	(___flmul@b^(0+128)+2),w
  9694  0B17  0020               	movlb	0	; select bank0
  9695  0B18  00CC               	movwf	??___flmul
  9696  0B19  084C               	movf	??___flmul,w
  9697  0B1A  00AA               	movwf	__Umul8_16@multiplicand
  9698  0B1B  0021               	movlb	1	; select bank1
  9699  0B1C  082C               	movf	___flmul@a^(0+128),w
  9700  0B1D  319F  2746  318A   	fcall	__Umul8_16
  9701  0B20  0020               	movlb	0	; select bank0
  9702  0B21  082B               	movf	?__Umul8_16+1,w
  9703  0B22  0021               	movlb	1	; select bank1
  9704  0B23  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9705  0B24  0020               	movlb	0	; select bank0
  9706  0B25  082A               	movf	?__Umul8_16,w
  9707  0B26  0021               	movlb	1	; select bank1
  9708  0B27  00BB               	movwf	___flmul@temp^(0+128)
  9709  0B28  083B               	movf	___flmul@temp^(0+128),w
  9710  0B29  0020               	movlb	0	; select bank0
  9711  0B2A  00CC               	movwf	??___flmul
  9712  0B2B  01CD               	clrf	??___flmul+1
  9713  0B2C  01CE               	clrf	??___flmul+2
  9714  0B2D  01CF               	clrf	??___flmul+3
  9715  0B2E  084C               	movf	??___flmul,w
  9716  0B2F  0021               	movlb	1	; select bank1
  9717  0B30  07B2               	addwf	___flmul@grs^(0+128),f
  9718  0B31  0020               	movlb	0	; select bank0
  9719  0B32  084D               	movf	??___flmul+1,w
  9720  0B33  0021               	movlb	1	; select bank1
  9721  0B34  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
  9722  0B35  0020               	movlb	0	; select bank0
  9723  0B36  084E               	movf	??___flmul+2,w
  9724  0B37  0021               	movlb	1	; select bank1
  9725  0B38  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
  9726  0B39  0020               	movlb	0	; select bank0
  9727  0B3A  084F               	movf	??___flmul+3,w
  9728  0B3B  0021               	movlb	1	; select bank1
  9729  0B3C  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
  9730  0B3D  083C               	movf	(___flmul@temp^(0+128)+1),w
  9731  0B3E  0020               	movlb	0	; select bank0
  9732  0B3F  00CC               	movwf	??___flmul
  9733  0B40  01CD               	clrf	??___flmul+1
  9734  0B41  01CE               	clrf	??___flmul+2
  9735  0B42  01CF               	clrf	??___flmul+3
  9736  0B43  084C               	movf	??___flmul,w
  9737  0B44  0021               	movlb	1	; select bank1
  9738  0B45  07B7               	addwf	___flmul@prod^(0+128),f
  9739  0B46  0020               	movlb	0	; select bank0
  9740  0B47  084D               	movf	??___flmul+1,w
  9741  0B48  0021               	movlb	1	; select bank1
  9742  0B49  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9743  0B4A  0020               	movlb	0	; select bank0
  9744  0B4B  084E               	movf	??___flmul+2,w
  9745  0B4C  0021               	movlb	1	; select bank1
  9746  0B4D  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9747  0B4E  0020               	movlb	0	; select bank0
  9748  0B4F  084F               	movf	??___flmul+3,w
  9749  0B50  0021               	movlb	1	; select bank1
  9750  0B51  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9751  0B52  3008               	movlw	8
  9752  0B53                     u5605:
  9753  0B53  35B2               	lslf	___flmul@grs^(0+128),f
  9754  0B54  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
  9755  0B55  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
  9756  0B56  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
  9757  0B57  0B89               	decfsz	9,f
  9758  0B58  2B53               	goto	u5605
  9759  0B59  0829               	movf	(___flmul@b^(0+128)+1),w
  9760  0B5A  0020               	movlb	0	; select bank0
  9761  0B5B  00CC               	movwf	??___flmul
  9762  0B5C  084C               	movf	??___flmul,w
  9763  0B5D  00AA               	movwf	__Umul8_16@multiplicand
  9764  0B5E  0021               	movlb	1	; select bank1
  9765  0B5F  082C               	movf	___flmul@a^(0+128),w
  9766  0B60  319F  2746  318A   	fcall	__Umul8_16
  9767  0B63  0020               	movlb	0	; select bank0
  9768  0B64  082B               	movf	?__Umul8_16+1,w
  9769  0B65  0021               	movlb	1	; select bank1
  9770  0B66  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9771  0B67  0020               	movlb	0	; select bank0
  9772  0B68  082A               	movf	?__Umul8_16,w
  9773  0B69  0021               	movlb	1	; select bank1
  9774  0B6A  00BB               	movwf	___flmul@temp^(0+128)
  9775  0B6B  083B               	movf	___flmul@temp^(0+128),w
  9776  0B6C  07B2               	addwf	___flmul@grs^(0+128),f
  9777  0B6D  083C               	movf	(___flmul@temp+1)^(0+128),w
  9778  0B6E  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
  9779  0B6F  3000               	movlw	0
  9780  0B70  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
  9781  0B71  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
  9782  0B72  0828               	movf	___flmul@b^(0+128),w
  9783  0B73  0020               	movlb	0	; select bank0
  9784  0B74  00CC               	movwf	??___flmul
  9785  0B75  084C               	movf	??___flmul,w
  9786  0B76  00AA               	movwf	__Umul8_16@multiplicand
  9787  0B77  0021               	movlb	1	; select bank1
  9788  0B78  082D               	movf	(___flmul@a^(0+128)+1),w
  9789  0B79  319F  2746  318A   	fcall	__Umul8_16
  9790  0B7C  0020               	movlb	0	; select bank0
  9791  0B7D  082B               	movf	?__Umul8_16+1,w
  9792  0B7E  0021               	movlb	1	; select bank1
  9793  0B7F  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9794  0B80  0020               	movlb	0	; select bank0
  9795  0B81  082A               	movf	?__Umul8_16,w
  9796  0B82  0021               	movlb	1	; select bank1
  9797  0B83  00BB               	movwf	___flmul@temp^(0+128)
  9798  0B84  083B               	movf	___flmul@temp^(0+128),w
  9799  0B85  07B2               	addwf	___flmul@grs^(0+128),f
  9800  0B86  083C               	movf	(___flmul@temp+1)^(0+128),w
  9801  0B87  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
  9802  0B88  3000               	movlw	0
  9803  0B89  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
  9804  0B8A  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
  9805  0B8B  3008               	movlw	8
  9806  0B8C                     u5615:
  9807  0B8C  35B2               	lslf	___flmul@grs^(0+128),f
  9808  0B8D  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
  9809  0B8E  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
  9810  0B8F  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
  9811  0B90  0B89               	decfsz	9,f
  9812  0B91  2B8C               	goto	u5615
  9813  0B92  0828               	movf	___flmul@b^(0+128),w
  9814  0B93  0020               	movlb	0	; select bank0
  9815  0B94  00CC               	movwf	??___flmul
  9816  0B95  084C               	movf	??___flmul,w
  9817  0B96  00AA               	movwf	__Umul8_16@multiplicand
  9818  0B97  0021               	movlb	1	; select bank1
  9819  0B98  082C               	movf	___flmul@a^(0+128),w
  9820  0B99  319F  2746  318A   	fcall	__Umul8_16
  9821  0B9C  0020               	movlb	0	; select bank0
  9822  0B9D  082B               	movf	?__Umul8_16+1,w
  9823  0B9E  0021               	movlb	1	; select bank1
  9824  0B9F  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9825  0BA0  0020               	movlb	0	; select bank0
  9826  0BA1  082A               	movf	?__Umul8_16,w
  9827  0BA2  0021               	movlb	1	; select bank1
  9828  0BA3  00BB               	movwf	___flmul@temp^(0+128)
  9829  0BA4  083B               	movf	___flmul@temp^(0+128),w
  9830  0BA5  07B2               	addwf	___flmul@grs^(0+128),f
  9831  0BA6  083C               	movf	(___flmul@temp+1)^(0+128),w
  9832  0BA7  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
  9833  0BA8  3000               	movlw	0
  9834  0BA9  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
  9835  0BAA  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
  9836  0BAB  0829               	movf	(___flmul@b^(0+128)+1),w
  9837  0BAC  0020               	movlb	0	; select bank0
  9838  0BAD  00CC               	movwf	??___flmul
  9839  0BAE  084C               	movf	??___flmul,w
  9840  0BAF  00AA               	movwf	__Umul8_16@multiplicand
  9841  0BB0  0021               	movlb	1	; select bank1
  9842  0BB1  082E               	movf	(___flmul@a^(0+128)+2),w
  9843  0BB2  319F  2746  318A   	fcall	__Umul8_16
  9844  0BB5  0020               	movlb	0	; select bank0
  9845  0BB6  082B               	movf	?__Umul8_16+1,w
  9846  0BB7  0021               	movlb	1	; select bank1
  9847  0BB8  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9848  0BB9  0020               	movlb	0	; select bank0
  9849  0BBA  082A               	movf	?__Umul8_16,w
  9850  0BBB  0021               	movlb	1	; select bank1
  9851  0BBC  00BB               	movwf	___flmul@temp^(0+128)
  9852  0BBD  083B               	movf	___flmul@temp^(0+128),w
  9853  0BBE  07B7               	addwf	___flmul@prod^(0+128),f
  9854  0BBF  083C               	movf	(___flmul@temp+1)^(0+128),w
  9855  0BC0  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9856  0BC1  3000               	movlw	0
  9857  0BC2  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9858  0BC3  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9859  0BC4  082A               	movf	(___flmul@b^(0+128)+2),w
  9860  0BC5  0020               	movlb	0	; select bank0
  9861  0BC6  00CC               	movwf	??___flmul
  9862  0BC7  084C               	movf	??___flmul,w
  9863  0BC8  00AA               	movwf	__Umul8_16@multiplicand
  9864  0BC9  0021               	movlb	1	; select bank1
  9865  0BCA  082D               	movf	(___flmul@a^(0+128)+1),w
  9866  0BCB  319F  2746  318A   	fcall	__Umul8_16
  9867  0BCE  0020               	movlb	0	; select bank0
  9868  0BCF  082B               	movf	?__Umul8_16+1,w
  9869  0BD0  0021               	movlb	1	; select bank1
  9870  0BD1  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9871  0BD2  0020               	movlb	0	; select bank0
  9872  0BD3  082A               	movf	?__Umul8_16,w
  9873  0BD4  0021               	movlb	1	; select bank1
  9874  0BD5  00BB               	movwf	___flmul@temp^(0+128)
  9875  0BD6  083B               	movf	___flmul@temp^(0+128),w
  9876  0BD7  07B7               	addwf	___flmul@prod^(0+128),f
  9877  0BD8  083C               	movf	(___flmul@temp+1)^(0+128),w
  9878  0BD9  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9879  0BDA  3000               	movlw	0
  9880  0BDB  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9881  0BDC  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9882  0BDD  082A               	movf	(___flmul@b^(0+128)+2),w
  9883  0BDE  0020               	movlb	0	; select bank0
  9884  0BDF  00CC               	movwf	??___flmul
  9885  0BE0  084C               	movf	??___flmul,w
  9886  0BE1  00AA               	movwf	__Umul8_16@multiplicand
  9887  0BE2  0021               	movlb	1	; select bank1
  9888  0BE3  082E               	movf	(___flmul@a^(0+128)+2),w
  9889  0BE4  319F  2746  318A   	fcall	__Umul8_16
  9890  0BE7  0020               	movlb	0	; select bank0
  9891  0BE8  082B               	movf	?__Umul8_16+1,w
  9892  0BE9  0021               	movlb	1	; select bank1
  9893  0BEA  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9894  0BEB  0020               	movlb	0	; select bank0
  9895  0BEC  082A               	movf	?__Umul8_16,w
  9896  0BED  0021               	movlb	1	; select bank1
  9897  0BEE  00BB               	movwf	___flmul@temp^(0+128)
  9898  0BEF  083B               	movf	___flmul@temp^(0+128),w
  9899  0BF0  0020               	movlb	0	; select bank0
  9900  0BF1  00CC               	movwf	??___flmul
  9901  0BF2  0021               	movlb	1	; select bank1
  9902  0BF3  083C               	movf	(___flmul@temp+1)^(0+128),w
  9903  0BF4  0020               	movlb	0	; select bank0
  9904  0BF5  00CD               	movwf	??___flmul+1
  9905  0BF6  01CE               	clrf	??___flmul+2
  9906  0BF7  01CF               	clrf	??___flmul+3
  9907  0BF8  3008               	movlw	8
  9908  0BF9                     u5625:
  9909  0BF9  35CC               	lslf	??___flmul,f
  9910  0BFA  0DCD               	rlf	??___flmul+1,f
  9911  0BFB  0DCE               	rlf	??___flmul+2,f
  9912  0BFC  0DCF               	rlf	??___flmul+3,f
  9913  0BFD  0B89               	decfsz	9,f
  9914  0BFE  2BF9               	goto	u5625
  9915  0BFF  084C               	movf	??___flmul,w
  9916  0C00  0021               	movlb	1	; select bank1
  9917  0C01  07B7               	addwf	___flmul@prod^(0+128),f
  9918  0C02  0020               	movlb	0	; select bank0
  9919  0C03  084D               	movf	??___flmul+1,w
  9920  0C04  0021               	movlb	1	; select bank1
  9921  0C05  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9922  0C06  0020               	movlb	0	; select bank0
  9923  0C07  084E               	movf	??___flmul+2,w
  9924  0C08  0021               	movlb	1	; select bank1
  9925  0C09  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9926  0C0A  0020               	movlb	0	; select bank0
  9927  0C0B  084F               	movf	??___flmul+3,w
  9928  0C0C  0021               	movlb	1	; select bank1
  9929  0C0D  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9930  0C0E  0832               	movf	___flmul@grs^(0+128),w
  9931  0C0F  0020               	movlb	0	; select bank0
  9932  0C10  00CC               	movwf	??___flmul
  9933  0C11  0021               	movlb	1	; select bank1
  9934  0C12  0833               	movf	(___flmul@grs+1)^(0+128),w
  9935  0C13  0020               	movlb	0	; select bank0
  9936  0C14  00CD               	movwf	??___flmul+1
  9937  0C15  0021               	movlb	1	; select bank1
  9938  0C16  0834               	movf	(___flmul@grs+2)^(0+128),w
  9939  0C17  0020               	movlb	0	; select bank0
  9940  0C18  00CE               	movwf	??___flmul+2
  9941  0C19  0021               	movlb	1	; select bank1
  9942  0C1A  0835               	movf	(___flmul@grs+3)^(0+128),w
  9943  0C1B  0020               	movlb	0	; select bank0
  9944  0C1C  00CF               	movwf	??___flmul+3
  9945  0C1D  3018               	movlw	24
  9946  0C1E                     u5635:
  9947  0C1E  36CF               	lsrf	??___flmul+3,f
  9948  0C1F  0CCE               	rrf	??___flmul+2,f
  9949  0C20  0CCD               	rrf	??___flmul+1,f
  9950  0C21  0CCC               	rrf	??___flmul,f
  9951  0C22  0B89               	decfsz	9,f
  9952  0C23  2C1E               	goto	u5635
  9953  0C24  084C               	movf	??___flmul,w
  9954  0C25  0021               	movlb	1	; select bank1
  9955  0C26  07B7               	addwf	___flmul@prod^(0+128),f
  9956  0C27  0020               	movlb	0	; select bank0
  9957  0C28  084D               	movf	??___flmul+1,w
  9958  0C29  0021               	movlb	1	; select bank1
  9959  0C2A  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
  9960  0C2B  0020               	movlb	0	; select bank0
  9961  0C2C  084E               	movf	??___flmul+2,w
  9962  0C2D  0021               	movlb	1	; select bank1
  9963  0C2E  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
  9964  0C2F  0020               	movlb	0	; select bank0
  9965  0C30  084F               	movf	??___flmul+3,w
  9966  0C31  0021               	movlb	1	; select bank1
  9967  0C32  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
  9968  0C33  3008               	movlw	8
  9969  0C34                     u5645:
  9970  0C34  35B2               	lslf	___flmul@grs^(0+128),f
  9971  0C35  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
  9972  0C36  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
  9973  0C37  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
  9974  0C38  0B89               	decfsz	9,f
  9975  0C39  2C34               	goto	u5645
  9976  0C3A  0836               	movf	___flmul@bexp^(0+128),w
  9977  0C3B  0731               	addwf	___flmul@aexp^(0+128),w
  9978  0C3C  0020               	movlb	0	; select bank0
  9979  0C3D  00CC               	movwf	??___flmul
  9980  0C3E  01CD               	clrf	??___flmul+1
  9981  0C3F  0DCD               	rlf	??___flmul+1,f
  9982  0C40  084C               	movf	??___flmul,w
  9983  0C41  3E82               	addlw	130
  9984  0C42  0021               	movlb	1	; select bank1
  9985  0C43  00BB               	movwf	___flmul@temp^(0+128)
  9986  0C44  30FF               	movlw	255
  9987  0C45  0020               	movlb	0	; select bank0
  9988  0C46  3D4D               	addwfc	??___flmul+1,w
  9989  0C47  0021               	movlb	1	; select bank1
  9990  0C48  00BC               	movwf	(___flmul@temp+1)^(0+128)
  9991  0C49                     l6157:
  9992  0C49  1BB9               	btfsc	(___flmul@prod+2)^(0+128),7
  9993  0C4A  2C60               	goto	l6159
  9994  0C4B  3001               	movlw	1
  9995  0C4C                     u5655:
  9996  0C4C  35B7               	lslf	___flmul@prod^(0+128),f
  9997  0C4D  0DB8               	rlf	(___flmul@prod+1)^(0+128),f
  9998  0C4E  0DB9               	rlf	(___flmul@prod+2)^(0+128),f
  9999  0C4F  0DBA               	rlf	(___flmul@prod+3)^(0+128),f
 10000  0C50  0B89               	decfsz	9,f
 10001  0C51  2C4C               	goto	u5655
 10002  0C52  1BB5               	btfsc	(___flmul@grs+3)^(0+128),7
 10003  0C53  1437               	bsf	___flmul@prod^(0+128),0
 10004  0C54  3001               	movlw	1
 10005  0C55                     u5675:
 10006  0C55  35B2               	lslf	___flmul@grs^(0+128),f
 10007  0C56  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
 10008  0C57  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
 10009  0C58  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
 10010  0C59  0B89               	decfsz	9,f
 10011  0C5A  2C55               	goto	u5675
 10012  0C5B  30FF               	movlw	255
 10013  0C5C  07BB               	addwf	___flmul@temp^(0+128),f
 10014  0C5D  30FF               	movlw	255
 10015  0C5E  3DBC               	addwfc	(___flmul@temp+1)^(0+128),f
 10016  0C5F  2C49               	goto	l6157
 10017  0C60                     l6159:
 10018  0C60  01B1               	clrf	___flmul@aexp^(0+128)
 10019  0C61  1FB5               	btfss	(___flmul@grs+3)^(0+128),7
 10020  0C62  2C82               	goto	l6169
 10021  0C63  30FF               	movlw	255
 10022  0C64  0532               	andwf	___flmul@grs^(0+128),w
 10023  0C65  0020               	movlb	0	; select bank0
 10024  0C66  00CC               	movwf	??___flmul
 10025  0C67  30FF               	movlw	255
 10026  0C68  0021               	movlb	1	; select bank1
 10027  0C69  0533               	andwf	(___flmul@grs+1)^(0+128),w
 10028  0C6A  0020               	movlb	0	; select bank0
 10029  0C6B  00CD               	movwf	??___flmul+1
 10030  0C6C  30FF               	movlw	255
 10031  0C6D  0021               	movlb	1	; select bank1
 10032  0C6E  0534               	andwf	(___flmul@grs+2)^(0+128),w
 10033  0C6F  0020               	movlb	0	; select bank0
 10034  0C70  00CE               	movwf	??___flmul+2
 10035  0C71  307F               	movlw	127
 10036  0C72  0021               	movlb	1	; select bank1
 10037  0C73  0535               	andwf	(___flmul@grs+3)^(0+128),w
 10038  0C74  0020               	movlb	0	; select bank0
 10039  0C75  00CF               	movwf	??___flmul+3
 10040  0C76  084F               	movf	??___flmul+3,w
 10041  0C77  044E               	iorwf	??___flmul+2,w
 10042  0C78  044D               	iorwf	??___flmul+1,w
 10043  0C79  044C               	iorwf	??___flmul,w
 10044  0C7A  1D03               	btfss	3,2
 10045  0C7B  2C7F               	goto	l6165
 10046  0C7C  0021               	movlb	1	; select bank1
 10047  0C7D  1C37               	btfss	___flmul@prod^(0+128),0
 10048  0C7E  2C82               	goto	l6169
 10049  0C7F                     l6165:
 10050  0C7F  0021               	movlb	1	; select bank1
 10051  0C80  01B1               	clrf	___flmul@aexp^(0+128)
 10052  0C81  0AB1               	incf	___flmul@aexp^(0+128),f
 10053  0C82                     l6169:
 10054  0C82  0831               	movf	___flmul@aexp^(0+128),w
 10055  0C83  1903               	btfsc	3,2
 10056  0C84  2CB9               	goto	l6179
 10057  0C85  3001               	movlw	1
 10058  0C86  07B7               	addwf	___flmul@prod^(0+128),f
 10059  0C87  3000               	movlw	0
 10060  0C88  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10061  0C89  3000               	movlw	0
 10062  0C8A  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10063  0C8B  3000               	movlw	0
 10064  0C8C  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10065  0C8D  1C3A               	btfss	(___flmul@prod+3)^(0+128),0
 10066  0C8E  2CB9               	goto	l6179
 10067  0C8F  0837               	movf	___flmul@prod^(0+128),w
 10068  0C90  0020               	movlb	0	; select bank0
 10069  0C91  00CC               	movwf	??___flmul
 10070  0C92  0021               	movlb	1	; select bank1
 10071  0C93  0838               	movf	(___flmul@prod+1)^(0+128),w
 10072  0C94  0020               	movlb	0	; select bank0
 10073  0C95  00CD               	movwf	??___flmul+1
 10074  0C96  0021               	movlb	1	; select bank1
 10075  0C97  0839               	movf	(___flmul@prod+2)^(0+128),w
 10076  0C98  0020               	movlb	0	; select bank0
 10077  0C99  00CE               	movwf	??___flmul+2
 10078  0C9A  0021               	movlb	1	; select bank1
 10079  0C9B  083A               	movf	(___flmul@prod+3)^(0+128),w
 10080  0C9C  0020               	movlb	0	; select bank0
 10081  0C9D  00CF               	movwf	??___flmul+3
 10082  0C9E  3001               	movlw	1
 10083  0C9F  00D0               	movwf	??___flmul+4
 10084  0CA0                     u5745:
 10085  0CA0  37CF               	asrf	??___flmul+3,f
 10086  0CA1  0CCE               	rrf	??___flmul+2,f
 10087  0CA2  0CCD               	rrf	??___flmul+1,f
 10088  0CA3  0CCC               	rrf	??___flmul,f
 10089  0CA4  0BD0               	decfsz	??___flmul+4,f
 10090  0CA5  2CA0               	goto	u5745
 10091  0CA6  084F               	movf	??___flmul+3,w
 10092  0CA7  0021               	movlb	1	; select bank1
 10093  0CA8  00BA               	movwf	(___flmul@prod+3)^(0+128)
 10094  0CA9  0020               	movlb	0	; select bank0
 10095  0CAA  084E               	movf	??___flmul+2,w
 10096  0CAB  0021               	movlb	1	; select bank1
 10097  0CAC  00B9               	movwf	(___flmul@prod+2)^(0+128)
 10098  0CAD  0020               	movlb	0	; select bank0
 10099  0CAE  084D               	movf	??___flmul+1,w
 10100  0CAF  0021               	movlb	1	; select bank1
 10101  0CB0  00B8               	movwf	(___flmul@prod+1)^(0+128)
 10102  0CB1  0020               	movlb	0	; select bank0
 10103  0CB2  084C               	movf	??___flmul,w
 10104  0CB3  0021               	movlb	1	; select bank1
 10105  0CB4  00B7               	movwf	___flmul@prod^(0+128)
 10106  0CB5  3001               	movlw	1
 10107  0CB6  07BB               	addwf	___flmul@temp^(0+128),f
 10108  0CB7  3000               	movlw	0
 10109  0CB8  3DBC               	addwfc	(___flmul@temp+1)^(0+128),f
 10110  0CB9                     l6179:
 10111  0CB9  083C               	movf	(___flmul@temp+1)^(0+128),w
 10112  0CBA  3A80               	xorlw	128
 10113  0CBB  0020               	movlb	0	; select bank0
 10114  0CBC  00CC               	movwf	??___flmul
 10115  0CBD  3080               	movlw	128
 10116  0CBE  024C               	subwf	??___flmul,w
 10117  0CBF  1D03               	skipz
 10118  0CC0  2CC4               	goto	u5755
 10119  0CC1  30FF               	movlw	255
 10120  0CC2  0021               	movlb	1	; select bank1
 10121  0CC3  023B               	subwf	___flmul@temp^(0+128),w
 10122  0CC4                     u5755:
 10123  0CC4  1C03               	skipc
 10124  0CC5  2CD0               	goto	l6183
 10125  0CC6  307F               	movlw	127
 10126  0CC7  0021               	movlb	1	; select bank1
 10127  0CC8  00BA               	movwf	(___flmul@prod+3)^(0+128)
 10128  0CC9  3080               	movlw	128
 10129  0CCA  00B9               	movwf	(___flmul@prod+2)^(0+128)
 10130  0CCB  3000               	movlw	0
 10131  0CCC  00B8               	movwf	(___flmul@prod+1)^(0+128)
 10132  0CCD  3000               	movlw	0
 10133  0CCE  00B7               	movwf	___flmul@prod^(0+128)
 10134  0CCF  2D00               	goto	l1462
 10135  0CD0                     l6183:
 10136  0CD0  0021               	movlb	1	; select bank1
 10137  0CD1  083C               	movf	(___flmul@temp+1)^(0+128),w
 10138  0CD2  3A80               	xorlw	128
 10139  0CD3  0020               	movlb	0	; select bank0
 10140  0CD4  00CC               	movwf	??___flmul
 10141  0CD5  3080               	movlw	128
 10142  0CD6  024C               	subwf	??___flmul,w
 10143  0CD7  1D03               	skipz
 10144  0CD8  2CDC               	goto	u5765
 10145  0CD9  3001               	movlw	1
 10146  0CDA  0021               	movlb	1	; select bank1
 10147  0CDB  023B               	subwf	___flmul@temp^(0+128),w
 10148  0CDC                     u5765:
 10149  0CDC  1803               	skipnc
 10150  0CDD  2CE9               	goto	l6189
 10151  0CDE  3000               	movlw	0
 10152  0CDF  0021               	movlb	1	; select bank1
 10153  0CE0  00BA               	movwf	(___flmul@prod+3)^(0+128)
 10154  0CE1  3000               	movlw	0
 10155  0CE2  00B9               	movwf	(___flmul@prod+2)^(0+128)
 10156  0CE3  3000               	movlw	0
 10157  0CE4  00B8               	movwf	(___flmul@prod+1)^(0+128)
 10158  0CE5  3000               	movlw	0
 10159  0CE6  00B7               	movwf	___flmul@prod^(0+128)
 10160  0CE7  01B0               	clrf	___flmul@sign^(0+128)
 10161  0CE8  2D00               	goto	l1462
 10162  0CE9                     l6189:
 10163  0CE9  0021               	movlb	1	; select bank1
 10164  0CEA  083B               	movf	___flmul@temp^(0+128),w
 10165  0CEB  0020               	movlb	0	; select bank0
 10166  0CEC  00CC               	movwf	??___flmul
 10167  0CED  084C               	movf	??___flmul,w
 10168  0CEE  0021               	movlb	1	; select bank1
 10169  0CEF  00B6               	movwf	___flmul@bexp^(0+128)
 10170  0CF0  30FF               	movlw	255
 10171  0CF1  05B7               	andwf	___flmul@prod^(0+128),f
 10172  0CF2  30FF               	movlw	255
 10173  0CF3  05B8               	andwf	(___flmul@prod+1)^(0+128),f
 10174  0CF4  307F               	movlw	127
 10175  0CF5  05B9               	andwf	(___flmul@prod+2)^(0+128),f
 10176  0CF6  3000               	movlw	0
 10177  0CF7  05BA               	andwf	(___flmul@prod+3)^(0+128),f
 10178  0CF8  1836               	btfsc	___flmul@bexp^(0+128),0
 10179  0CF9  17B9               	bsf	(___flmul@prod^(0+128)+2),7
 10180  0CFA  3636               	lsrf	___flmul@bexp^(0+128),w
 10181  0CFB  0020               	movlb	0	; select bank0
 10182  0CFC  00CC               	movwf	??___flmul
 10183  0CFD  084C               	movf	??___flmul,w
 10184  0CFE  0021               	movlb	1	; select bank1
 10185  0CFF  00BA               	movwf	(___flmul@prod^(0+128)+3)
 10186  0D00                     l1462:
 10187  0D00  0830               	movf	___flmul@sign^(0+128),w
 10188  0D01  0020               	movlb	0	; select bank0
 10189  0D02  00CC               	movwf	??___flmul
 10190  0D03  084C               	movf	??___flmul,w
 10191  0D04  0021               	movlb	1	; select bank1
 10192  0D05  04BA               	iorwf	(___flmul@prod^(0+128)+3),f
 10193  0D06  083A               	movf	(___flmul@prod+3)^(0+128),w
 10194  0D07  00AB               	movwf	(?___flmul+3)^(0+128)
 10195  0D08  0839               	movf	(___flmul@prod+2)^(0+128),w
 10196  0D09  00AA               	movwf	(?___flmul+2)^(0+128)
 10197  0D0A  0838               	movf	(___flmul@prod+1)^(0+128),w
 10198  0D0B  00A9               	movwf	(?___flmul+1)^(0+128)
 10199  0D0C  0837               	movf	___flmul@prod^(0+128),w
 10200  0D0D  00A8               	movwf	?___flmul^(0+128)
 10201  0D0E  0008               	return
 10202  0D0F                     __end_of___flmul:
 10203                           
 10204                           	psect	text27
 10205  1F46                     __ptext27:	
 10206 ;; *************** function __Umul8_16 *****************
 10207 ;; Defined at:
 10208 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  multiplier      1    wreg     unsigned char 
 10211 ;;  multiplicand    1   10[BANK0 ] unsigned char 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  multiplier      1   18[BANK0 ] unsigned char 
 10214 ;;  word_mpld       2   16[BANK0 ] unsigned int 
 10215 ;;  product         2   14[BANK0 ] unsigned int 
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  2   10[BANK0 ] unsigned int 
 10218 ;; Registers used:
 10219 ;;		wreg, status,2, status,0
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10225 ;;      Params:         0       2       0       0       0       0       0       0
 10226 ;;      Locals:         0       5       0       0       0       0       0       0
 10227 ;;      Temps:          0       2       0       0       0       0       0       0
 10228 ;;      Totals:         0       9       0       0       0       0       0       0
 10229 ;;Total ram usage:        9 bytes
 10230 ;; Hardware stack levels used: 1
 10231 ;; Hardware stack levels required when called: 4
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		___flmul
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239  1F46                     __Umul8_16:	
 10240                           ;psect for function __Umul8_16
 10241                           
 10242                           
 10243                           ;incstack = 0
 10244                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10245                           ;__Umul8_16@multiplier stored from wreg
 10246  1F46  0020               	movlb	0	; select bank0
 10247  1F47  00B2               	movwf	__Umul8_16@multiplier
 10248  1F48  01AE               	clrf	__Umul8_16@product
 10249  1F49  01AF               	clrf	__Umul8_16@product+1
 10250  1F4A  082A               	movf	__Umul8_16@multiplicand,w
 10251  1F4B  00AC               	movwf	??__Umul8_16
 10252  1F4C  01AD               	clrf	??__Umul8_16+1
 10253  1F4D  082C               	movf	??__Umul8_16,w
 10254  1F4E  00B0               	movwf	__Umul8_16@word_mpld
 10255  1F4F  082D               	movf	??__Umul8_16+1,w
 10256  1F50  00B1               	movwf	__Umul8_16@word_mpld+1
 10257  1F51                     l5905:
 10258  1F51  1C32               	btfss	__Umul8_16@multiplier,0
 10259  1F52  2F57               	goto	l1469
 10260  1F53  0830               	movf	__Umul8_16@word_mpld,w
 10261  1F54  07AE               	addwf	__Umul8_16@product,f
 10262  1F55  0831               	movf	__Umul8_16@word_mpld+1,w
 10263  1F56  3DAF               	addwfc	__Umul8_16@product+1,f
 10264  1F57                     l1469:
 10265  1F57  3001               	movlw	1
 10266  1F58                     u5215:
 10267  1F58  35B0               	lslf	__Umul8_16@word_mpld,f
 10268  1F59  0DB1               	rlf	__Umul8_16@word_mpld+1,f
 10269  1F5A  0B89               	decfsz	9,f
 10270  1F5B  2F58               	goto	u5215
 10271  1F5C  1003               	clrc
 10272  1F5D  0CB2               	rrf	__Umul8_16@multiplier,f
 10273  1F5E  0832               	movf	__Umul8_16@multiplier,w
 10274  1F5F  1D03               	btfss	3,2
 10275  1F60  2F51               	goto	l5905
 10276  1F61  082F               	movf	__Umul8_16@product+1,w
 10277  1F62  00AB               	movwf	?__Umul8_16+1
 10278  1F63  082E               	movf	__Umul8_16@product,w
 10279  1F64  00AA               	movwf	?__Umul8_16
 10280  1F65  0008               	return
 10281  1F66                     __end_of__Umul8_16:
 10282                           
 10283                           	psect	text28
 10284  1DAB                     __ptext28:	
 10285 ;; *************** function _MCP3422_Write *****************
 10286 ;; Defined at:
 10287 ;;		line 103 in file "main.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  data            1    wreg     unsigned char 
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;  data            1   34[BANK0 ] unsigned char 
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10301 ;;      Params:         0       0       0       0       0       0       0       0
 10302 ;;      Locals:         0       1       0       0       0       0       0       0
 10303 ;;      Temps:          0       1       0       0       0       0       0       0
 10304 ;;      Totals:         0       2       0       0       0       0       0       0
 10305 ;;Total ram usage:        2 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 13
 10308 ;; This function calls:
 10309 ;;		_I2C_WriteNBytes
 10310 ;; This function is called by:
 10311 ;;		_MCP3422_ReadVoltage
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315  1DAB                     _MCP3422_Write:	
 10316                           ;psect for function _MCP3422_Write
 10317                           
 10318                           
 10319                           ;incstack = 0
 10320                           ; Regs used in _MCP3422_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10321                           ;MCP3422_Write@data stored from wreg
 10322  1DAB  0020               	movlb	0	; select bank0
 10323  1DAC  00C2               	movwf	MCP3422_Write@data
 10324                           
 10325                           ;main.c: 103: static void MCP3422_Write(uint8_t data);main.c: 104: {;main.c: 105:     I2
      +                          C_WriteNBytes(0x68,&data,1U);
 10326  1DAD  3042               	movlw	(low (MCP3422_Write@data| 0))& (0+255)
 10327  1DAE  00C1               	movwf	??_MCP3422_Write
 10328  1DAF  0841               	movf	??_MCP3422_Write,w
 10329  1DB0  00BD               	movwf	I2C_WriteNBytes@data
 10330  1DB1  3001               	movlw	1
 10331  1DB2  00BE               	movwf	I2C_WriteNBytes@len
 10332  1DB3  3000               	movlw	0
 10333  1DB4  00BF               	movwf	I2C_WriteNBytes@len+1
 10334  1DB5  3068               	movlw	104
 10335  1DB6  3187  27DB         	fcall	_I2C_WriteNBytes
 10336  1DB8  0008               	return
 10337  1DB9                     __end_of_MCP3422_Write:
 10338                           
 10339                           	psect	text29
 10340  07DB                     __ptext29:	
 10341 ;; *************** function _I2C_WriteNBytes *****************
 10342 ;; Defined at:
 10343 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  address         1    wreg     unsigned char 
 10346 ;;  data            1   29[BANK0 ] PTR unsigned char 
 10347 ;;		 -> MCP3422_Write@data(1), 
 10348 ;;  len             2   30[BANK0 ] unsigned int 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  address         1   32[BANK0 ] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10360 ;;      Params:         0       3       0       0       0       0       0       0
 10361 ;;      Locals:         0       1       0       0       0       0       0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0
 10363 ;;      Totals:         0       4       0       0       0       0       0       0
 10364 ;;Total ram usage:        4 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 12
 10367 ;; This function calls:
 10368 ;;		_I2C_Close
 10369 ;;		_I2C_MasterWrite
 10370 ;;		_I2C_Open
 10371 ;;		_I2C_SetAddressNackCallback
 10372 ;;		_I2C_SetBuffer
 10373 ;; This function is called by:
 10374 ;;		_MCP3422_Write
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378  07DB                     _I2C_WriteNBytes:	
 10379                           ;psect for function _I2C_WriteNBytes
 10380                           
 10381                           
 10382                           ;incstack = 0
 10383                           ; Regs used in _I2C_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10384                           ;I2C_WriteNBytes@address stored from wreg
 10385  07DB  0020               	movlb	0	; select bank0
 10386  07DC  00C0               	movwf	I2C_WriteNBytes@address
 10387  07DD                     l4249:	
 10388                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
 10389                           
 10390  07DD  0020               	movlb	0	; select bank0
 10391  07DE  0840               	movf	I2C_WriteNBytes@address,w
 10392  07DF  3190  20FE  3187   	fcall	_I2C_Open
 10393  07E2  3A00               	xorlw	0
 10394  07E3  1903               	skipnz
 10395  07E4  2FDD               	goto	l4249
 10396                           
 10397                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
 10398  07E5  0020               	movlb	0	; select bank0
 10399  07E6  083F               	movf	I2C_WriteNBytes@len+1,w
 10400  07E7  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 10401  07E8  083E               	movf	I2C_WriteNBytes@len,w
 10402  07E9  00AA               	movwf	I2C_SetBuffer@bufferSize
 10403  07EA  083D               	movf	I2C_WriteNBytes@data,w
 10404  07EB  319E  2624  3187   	fcall	_I2C_SetBuffer
 10405                           
 10406                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
 10407  07EE  3000               	movlw	0
 10408  07EF  0020               	movlb	0	; select bank0
 10409  07F0  00AF               	movwf	I2C_SetAddressNackCallback@cb
 10410  07F1  00B0               	movwf	I2C_SetAddressNackCallback@cb+1
 10411  07F2  01B1               	clrf	I2C_SetAddressNackCallback@ptr
 10412  07F3  3188  2000  3187   	fcall	_I2C_SetAddressNackCallback
 10413                           
 10414                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
 10415  07F6  319C  24D1  3187   	fcall	_I2C_MasterWrite
 10416  07F9                     l4257:	
 10417                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
 10418                           
 10419  07F9  319E  26CA  3187   	fcall	_I2C_Close
 10420  07FC  3A01               	xorlw	1
 10421  07FD  1D03               	btfss	3,2
 10422  07FE  0008               	return
 10423  07FF  2FF9               	goto	l4257
 10424  0800                     __end_of_I2C_WriteNBytes:
 10425                           
 10426                           	psect	text30
 10427  0800                     __ptext30:	
 10428 ;; *************** function _I2C_SetAddressNackCallback *****************
 10429 ;; Defined at:
 10430 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  cb              2   15[BANK0 ] PTR FTN(PTR void ,)enum 
 10433 ;;		 -> Absolute function(1), 
 10434 ;;  ptr             1   17[BANK0 ] PTR void 
 10435 ;;		 -> NULL(0), 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1    wreg      void 
 10440 ;; Registers used:
 10441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10447 ;;      Params:         0       3       0       0       0       0       0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0
 10449 ;;      Temps:          0       1       0       0       0       0       0       0
 10450 ;;      Totals:         0       4       0       0       0       0       0       0
 10451 ;;Total ram usage:        4 bytes
 10452 ;; Hardware stack levels used: 1
 10453 ;; Hardware stack levels required when called: 5
 10454 ;; This function calls:
 10455 ;;		_I2C_SetCallback
 10456 ;; This function is called by:
 10457 ;;		_I2C_WriteNBytes
 10458 ;;		_I2C_Read1ByteRegister
 10459 ;;		_I2C_Read2ByteRegister
 10460 ;;		_I2C_Write1ByteRegister
 10461 ;;		_I2C_Write2ByteRegister
 10462 ;;		_I2C_ReadDataBlock
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466  0800                     _I2C_SetAddressNackCallback:	
 10467                           ;psect for function _I2C_SetAddressNackCallback
 10468                           
 10469                           
 10470                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10474  0800  0020               	movlb	0	; select bank0
 10475  0801  0830               	movf	I2C_SetAddressNackCallback@cb+1,w
 10476  0802  00AB               	movwf	I2C_SetCallback@cb+1
 10477  0803  082F               	movf	I2C_SetAddressNackCallback@cb,w
 10478  0804  00AA               	movwf	I2C_SetCallback@cb
 10479  0805  0831               	movf	I2C_SetAddressNackCallback@ptr,w
 10480  0806  00B2               	movwf	??_I2C_SetAddressNackCallback
 10481  0807  0832               	movf	??_I2C_SetAddressNackCallback,w
 10482  0808  00AC               	movwf	I2C_SetCallback@ptr
 10483  0809  3002               	movlw	2
 10484  080A  319F  27B7         	fcall	_I2C_SetCallback
 10485  080C  0008               	return
 10486  080D                     __end_of_I2C_SetAddressNackCallback:
 10487                           
 10488                           	psect	text31
 10489  1CD1                     __ptext31:	
 10490 ;; *************** function _I2C_MasterWrite *****************
 10491 ;; Defined at:
 10492 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      enum E355
 10499 ;; Registers used:
 10500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10506 ;;      Params:         0       0       0       0       0       0       0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0
 10508 ;;      Temps:          0       0       0       0       0       0       0       0
 10509 ;;      Totals:         0       0       0       0       0       0       0       0
 10510 ;;Total ram usage:        0 bytes
 10511 ;; Hardware stack levels used: 1
 10512 ;; Hardware stack levels required when called: 11
 10513 ;; This function calls:
 10514 ;;		_I2C_MasterOperation
 10515 ;; This function is called by:
 10516 ;;		_I2C_WriteNBytes
 10517 ;;		_I2C_Read1ByteRegister
 10518 ;;		_I2C_Read2ByteRegister
 10519 ;;		_I2C_Write1ByteRegister
 10520 ;;		_I2C_Write2ByteRegister
 10521 ;;		_I2C_ReadDataBlock
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525  1CD1                     _I2C_MasterWrite:	
 10526                           ;psect for function _I2C_MasterWrite
 10527                           
 10528                           
 10529                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 10530                           
 10531                           ;incstack = 0
 10532                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10533  1CD1  3000               	movlw	0
 10534  1CD2  319E  26E8         	fcall	_I2C_MasterOperation
 10535  1CD4  0008               	return
 10536  1CD5                     __end_of_I2C_MasterWrite:
 10537                           
 10538                           	psect	text32
 10539  1DC8                     __ptext32:	
 10540 ;; *************** function _MCP3422_Read *****************
 10541 ;; Defined at:
 10542 ;;		line 108 in file "main.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  data            1    wreg     PTR unsigned char 
 10545 ;;		 -> MCP3422_ReadVoltage@data(3), 
 10546 ;;  count           1   33[BANK0 ] unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  data            1   37[BANK0 ] PTR unsigned char 
 10549 ;;		 -> MCP3422_ReadVoltage@data(3), 
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10559 ;;      Params:         0       1       0       0       0       0       0       0
 10560 ;;      Locals:         0       1       0       0       0       0       0       0
 10561 ;;      Temps:          0       3       0       0       0       0       0       0
 10562 ;;      Totals:         0       5       0       0       0       0       0       0
 10563 ;;Total ram usage:        5 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 13
 10566 ;; This function calls:
 10567 ;;		_I2C_ReadNBytes
 10568 ;; This function is called by:
 10569 ;;		_MCP3422_ReadVoltage
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573  1DC8                     _MCP3422_Read:	
 10574                           ;psect for function _MCP3422_Read
 10575                           
 10576                           
 10577                           ;incstack = 0
 10578                           ; Regs used in _MCP3422_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10579                           ;MCP3422_Read@data stored from wreg
 10580  1DC8  0020               	movlb	0	; select bank0
 10581  1DC9  00C5               	movwf	MCP3422_Read@data
 10582                           
 10583                           ;main.c: 108: static void MCP3422_Read(uint8_t *data, uint8_t count);main.c: 109: {;main
      +                          .c: 110:     I2C_ReadNBytes(0x68, data, count);
 10584  1DCA  0845               	movf	MCP3422_Read@data,w
 10585  1DCB  00C2               	movwf	??_MCP3422_Read
 10586  1DCC  0842               	movf	??_MCP3422_Read,w
 10587  1DCD  00BD               	movwf	I2C_ReadNBytes@data
 10588  1DCE  0841               	movf	MCP3422_Read@count,w
 10589  1DCF  00C3               	movwf	??_MCP3422_Read+1
 10590  1DD0  01C4               	clrf	??_MCP3422_Read+2
 10591  1DD1  0843               	movf	??_MCP3422_Read+1,w
 10592  1DD2  00BE               	movwf	I2C_ReadNBytes@len
 10593  1DD3  0844               	movf	??_MCP3422_Read+2,w
 10594  1DD4  00BF               	movwf	I2C_ReadNBytes@len+1
 10595  1DD5  3068               	movlw	104
 10596  1DD6  319E  26AD         	fcall	_I2C_ReadNBytes
 10597  1DD8  0008               	return
 10598  1DD9                     __end_of_MCP3422_Read:
 10599                           
 10600                           	psect	text33
 10601  1EAD                     __ptext33:	
 10602 ;; *************** function _I2C_ReadNBytes *****************
 10603 ;; Defined at:
 10604 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;  address         1    wreg     unsigned char 
 10607 ;;  data            1   29[BANK0 ] PTR unsigned char 
 10608 ;;		 -> MCP3422_ReadVoltage@data(3), 
 10609 ;;  len             2   30[BANK0 ] unsigned int 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  address         1   32[BANK0 ] unsigned char 
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10621 ;;      Params:         0       3       0       0       0       0       0       0
 10622 ;;      Locals:         0       1       0       0       0       0       0       0
 10623 ;;      Temps:          0       0       0       0       0       0       0       0
 10624 ;;      Totals:         0       4       0       0       0       0       0       0
 10625 ;;Total ram usage:        4 bytes
 10626 ;; Hardware stack levels used: 1
 10627 ;; Hardware stack levels required when called: 12
 10628 ;; This function calls:
 10629 ;;		_I2C_Close
 10630 ;;		_I2C_MasterRead
 10631 ;;		_I2C_Open
 10632 ;;		_I2C_SetBuffer
 10633 ;; This function is called by:
 10634 ;;		_MCP3422_Read
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638  1EAD                     _I2C_ReadNBytes:	
 10639                           ;psect for function _I2C_ReadNBytes
 10640                           
 10641                           
 10642                           ;incstack = 0
 10643                           ; Regs used in _I2C_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10644                           ;I2C_ReadNBytes@address stored from wreg
 10645  1EAD  0020               	movlb	0	; select bank0
 10646  1EAE  00C0               	movwf	I2C_ReadNBytes@address
 10647  1EAF                     l4261:	
 10648                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
 10649                           
 10650  1EAF  0020               	movlb	0	; select bank0
 10651  1EB0  0840               	movf	I2C_ReadNBytes@address,w
 10652  1EB1  3190  20FE  319E   	fcall	_I2C_Open
 10653  1EB4  3A00               	xorlw	0
 10654  1EB5  1903               	skipnz
 10655  1EB6  2EAF               	goto	l4261
 10656                           
 10657                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
 10658  1EB7  0020               	movlb	0	; select bank0
 10659  1EB8  083F               	movf	I2C_ReadNBytes@len+1,w
 10660  1EB9  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 10661  1EBA  083E               	movf	I2C_ReadNBytes@len,w
 10662  1EBB  00AA               	movwf	I2C_SetBuffer@bufferSize
 10663  1EBC  083D               	movf	I2C_ReadNBytes@data,w
 10664  1EBD  319E  2624  319E   	fcall	_I2C_SetBuffer
 10665                           
 10666                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
 10667  1EC0  319C  24CD  319E   	fcall	_I2C_MasterRead
 10668  1EC3                     l4267:	
 10669                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
 10670                           
 10671  1EC3  319E  26CA  319E   	fcall	_I2C_Close
 10672  1EC6  3A01               	xorlw	1
 10673  1EC7  1D03               	btfss	3,2
 10674  1EC8  0008               	return
 10675  1EC9  2EC3               	goto	l4267
 10676  1ECA                     __end_of_I2C_ReadNBytes:
 10677                           
 10678                           	psect	text34
 10679  10FE                     __ptext34:	
 10680 ;; *************** function _I2C_Open *****************
 10681 ;; Defined at:
 10682 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  address         1    wreg     unsigned char 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  address         1   11[BANK0 ] unsigned char 
 10687 ;;  returnValue     1   12[BANK0 ] enum E355
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      enum E355
 10690 ;; Registers used:
 10691 ;;		wreg, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10697 ;;      Params:         0       0       0       0       0       0       0       0
 10698 ;;      Locals:         0       2       0       0       0       0       0       0
 10699 ;;      Temps:          0       1       0       0       0       0       0       0
 10700 ;;      Totals:         0       3       0       0       0       0       0       0
 10701 ;;Total ram usage:        3 bytes
 10702 ;; Hardware stack levels used: 1
 10703 ;; Hardware stack levels required when called: 5
 10704 ;; This function calls:
 10705 ;;		_I2C_MasterClearIrq
 10706 ;;		_I2C_MasterOpen
 10707 ;; This function is called by:
 10708 ;;		_I2C_WriteNBytes
 10709 ;;		_I2C_ReadNBytes
 10710 ;;		_I2C_Read1ByteRegister
 10711 ;;		_I2C_Read2ByteRegister
 10712 ;;		_I2C_Write1ByteRegister
 10713 ;;		_I2C_Write2ByteRegister
 10714 ;;		_I2C_ReadDataBlock
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718  10FE                     _I2C_Open:	
 10719                           ;psect for function _I2C_Open
 10720                           
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
 10724                           ;I2C_Open@address stored from wreg
 10725  10FE  0020               	movlb	0	; select bank0
 10726  10FF  00AB               	movwf	I2C_Open@address
 10727                           
 10728                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10729  1100  01AC               	clrf	I2C_Open@returnValue
 10730  1101  0AAC               	incf	I2C_Open@returnValue,f
 10731                           
 10732                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 10733  1102  0024               	movlb	4	; select bank4
 10734  1103  193C               	btfsc	(_I2C_Status^(0+512)+28),2
 10735  1104  2939               	goto	l302
 10736                           
 10737                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 10738  1105  0020               	movlb	0	; select bank0
 10739  1106  082B               	movf	I2C_Open@address,w
 10740  1107  00AA               	movwf	??_I2C_Open
 10741  1108  082A               	movf	??_I2C_Open,w
 10742  1109  0024               	movlb	4	; select bank4
 10743  110A  00B6               	movwf	(_I2C_Status^(0+512)+22)
 10744                           
 10745                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 10746  110B  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 10747                           
 10748                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 10749  110C  153C               	bsf	(_I2C_Status^(0+512)+28),2
 10750                           
 10751                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 10752  110D  103C               	bcf	(_I2C_Status^(0+512)+28),0
 10753                           
 10754                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 10755  110E  300E               	movlw	14
 10756  110F  0020               	movlb	0	; select bank0
 10757  1110  00AA               	movwf	??_I2C_Open
 10758  1111  082A               	movf	??_I2C_Open,w
 10759  1112  0024               	movlb	4	; select bank4
 10760  1113  00BA               	movwf	(_I2C_Status^(0+512)+26)
 10761                           
 10762                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 10763  1114  30F4               	movlw	244
 10764  1115  00B4               	movwf	(_I2C_Status^(0+512)+20)
 10765  1116  3001               	movlw	1
 10766  1117  00B5               	movwf	(_I2C_Status^(0+512)+21)
 10767                           
 10768                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 10769  1118  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 10770                           
 10771                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10772  1119  3088               	movlw	low _I2C_CallbackReturnStop
 10773  111A  00A0               	movwf	_I2C_Status^(0+512)
 10774  111B  301C               	movlw	high _I2C_CallbackReturnStop
 10775  111C  00A1               	movwf	(_I2C_Status^(0+512)+1)
 10776                           
 10777                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10778  111D  01AC               	clrf	(low ((_I2C_Status| (0+512)+12)))^0
 10779                           
 10780                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10781  111E  3088               	movlw	low _I2C_CallbackReturnStop
 10782  111F  00A2               	movwf	(low ((_I2C_Status| (0+512)+2)))^0
 10783  1120  301C               	movlw	high _I2C_CallbackReturnStop
 10784  1121  00A3               	movwf	((low ((_I2C_Status| (0+512)+2)))^0+1)
 10785                           
 10786                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10787  1122  01AD               	clrf	(low ((_I2C_Status| (0+512)+13)))^0
 10788                           
 10789                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10790  1123  3088               	movlw	low _I2C_CallbackReturnStop
 10791  1124  00A4               	movwf	(low ((_I2C_Status| (0+512)+4)))^0
 10792  1125  301C               	movlw	high _I2C_CallbackReturnStop
 10793  1126  00A5               	movwf	((low ((_I2C_Status| (0+512)+4)))^0+1)
 10794                           
 10795                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10796  1127  01AE               	clrf	(low ((_I2C_Status| (0+512)+14)))^0
 10797                           
 10798                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10799  1128  3088               	movlw	low _I2C_CallbackReturnStop
 10800  1129  00A6               	movwf	(low ((_I2C_Status| (0+512)+6)))^0
 10801  112A  301C               	movlw	high _I2C_CallbackReturnStop
 10802  112B  00A7               	movwf	((low ((_I2C_Status| (0+512)+6)))^0+1)
 10803                           
 10804                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10805  112C  01AF               	clrf	(low ((_I2C_Status| (0+512)+15)))^0
 10806                           
 10807                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10808  112D  3000               	movlw	low _I2C_CallbackReturnReset
 10809  112E  00A8               	movwf	(low ((_I2C_Status| (0+512)+8)))^0
 10810  112F  3010               	movlw	high _I2C_CallbackReturnReset
 10811  1130  00A9               	movwf	((low ((_I2C_Status| (0+512)+8)))^0+1)
 10812                           
 10813                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10814  1131  01B0               	clrf	(low ((_I2C_Status| (0+512)+16)))^0
 10815                           
 10816                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10817  1132  319C  248A  3190   	fcall	_I2C_MasterClearIrq
 10818                           
 10819                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10820  1135  319D  2592         	fcall	_I2C_MasterOpen
 10821                           
 10822                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10823  1137  0020               	movlb	0	; select bank0
 10824  1138  01AC               	clrf	I2C_Open@returnValue
 10825  1139                     l302:	
 10826                           ;mcc_generated_files/i2c_master.c: 205:     }
 10827                           
 10828                           
 10829                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10830  1139  0020               	movlb	0	; select bank0
 10831  113A  082C               	movf	I2C_Open@returnValue,w
 10832  113B  0008               	return
 10833  113C                     __end_of_I2C_Open:
 10834                           
 10835                           	psect	text35
 10836  1D92                     __ptext35:	
 10837 ;; *************** function _I2C_MasterOpen *****************
 10838 ;; Defined at:
 10839 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;		None
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      _Bool 
 10846 ;; Registers used:
 10847 ;;		wreg, status,2
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10853 ;;      Params:         0       0       0       0       0       0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0
 10855 ;;      Temps:          0       0       0       0       0       0       0       0
 10856 ;;      Totals:         0       0       0       0       0       0       0       0
 10857 ;;Total ram usage:        0 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 4
 10860 ;; This function calls:
 10861 ;;		Nothing
 10862 ;; This function is called by:
 10863 ;;		_I2C_Open
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867  1D92                     _I2C_MasterOpen:	
 10868                           ;psect for function _I2C_MasterOpen
 10869                           
 10870                           
 10871                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 10872                           
 10873                           ;incstack = 0
 10874                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
 10875  1D92  0024               	movlb	4	; select bank4
 10876  1D93  1A95               	btfsc	21,5	;volatile
 10877  1D94  0008               	return
 10878                           
 10879                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x80;
 10880  1D95  3080               	movlw	128
 10881  1D96  0094               	movwf	20	;volatile
 10882                           
 10883                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
 10884  1D97  3008               	movlw	8
 10885  1D98  0095               	movwf	21	;volatile
 10886                           
 10887                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
 10888  1D99  0196               	clrf	22	;volatile
 10889                           
 10890                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x13;
 10891  1D9A  3013               	movlw	19
 10892  1D9B  0092               	movwf	18	;volatile
 10893                           
 10894                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 10895  1D9C  1695               	bsf	21,5	;volatile
 10896  1D9D  0008               	return
 10897  1D9E                     __end_of_I2C_MasterOpen:
 10898                           
 10899                           	psect	text36
 10900  1CCD                     __ptext36:	
 10901 ;; *************** function _I2C_MasterRead *****************
 10902 ;; Defined at:
 10903 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;		None
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;		None
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1    wreg      enum E355
 10910 ;; Registers used:
 10911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10917 ;;      Params:         0       0       0       0       0       0       0       0
 10918 ;;      Locals:         0       0       0       0       0       0       0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0
 10920 ;;      Totals:         0       0       0       0       0       0       0       0
 10921 ;;Total ram usage:        0 bytes
 10922 ;; Hardware stack levels used: 1
 10923 ;; Hardware stack levels required when called: 11
 10924 ;; This function calls:
 10925 ;;		_I2C_MasterOperation
 10926 ;; This function is called by:
 10927 ;;		_I2C_ReadNBytes
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931  1CCD                     _I2C_MasterRead:	
 10932                           ;psect for function _I2C_MasterRead
 10933                           
 10934                           
 10935                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
 10936                           
 10937                           ;incstack = 0
 10938                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10939  1CCD  3001               	movlw	1
 10940  1CCE  319E  26E8         	fcall	_I2C_MasterOperation
 10941  1CD0  0008               	return
 10942  1CD1                     __end_of_I2C_MasterRead:
 10943                           
 10944                           	psect	text37
 10945  1EE8                     __ptext37:	
 10946 ;; *************** function _I2C_MasterOperation *****************
 10947 ;; Defined at:
 10948 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  read            1    wreg     _Bool 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  read            1   27[BANK0 ] _Bool 
 10953 ;;  returnValue     1   28[BANK0 ] enum E355
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      enum E355
 10956 ;; Registers used:
 10957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10963 ;;      Params:         0       0       0       0       0       0       0       0
 10964 ;;      Locals:         0       2       0       0       0       0       0       0
 10965 ;;      Temps:          0       1       0       0       0       0       0       0
 10966 ;;      Totals:         0       3       0       0       0       0       0       0
 10967 ;;Total ram usage:        3 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; Hardware stack levels required when called: 10
 10970 ;; This function calls:
 10971 ;;		_I2C_MasterStart
 10972 ;;		_I2C_Poller
 10973 ;; This function is called by:
 10974 ;;		_I2C_MasterRead
 10975 ;;		_I2C_MasterWrite
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979  1EE8                     _I2C_MasterOperation:	
 10980                           ;psect for function _I2C_MasterOperation
 10981                           
 10982                           
 10983                           ;incstack = 0
 10984                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10985                           ;I2C_MasterOperation@read stored from wreg
 10986  1EE8  0020               	movlb	0	; select bank0
 10987  1EE9  00BB               	movwf	I2C_MasterOperation@read
 10988                           
 10989                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10990  1EEA  01BC               	clrf	I2C_MasterOperation@returnValue
 10991  1EEB  0ABC               	incf	I2C_MasterOperation@returnValue,f
 10992                           
 10993                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10994  1EEC  0024               	movlb	4	; select bank4
 10995  1EED  18BC               	btfsc	(_I2C_Status^(0+512)+28),1
 10996  1EEE  2F03               	goto	l3975
 10997                           
 10998                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10999  1EEF  14BC               	bsf	(_I2C_Status^(0+512)+28),1
 11000                           
 11001                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 11002  1EF0  0020               	movlb	0	; select bank0
 11003  1EF1  01BC               	clrf	I2C_MasterOperation@returnValue
 11004                           
 11005                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 11006  1EF2  083B               	movf	I2C_MasterOperation@read,w
 11007  1EF3  1903               	btfsc	3,2
 11008  1EF4  2EF9               	goto	l3969
 11009                           
 11010                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 11011  1EF5  0024               	movlb	4	; select bank4
 11012  1EF6  01BA               	clrf	(_I2C_Status^(0+512)+26)
 11013  1EF7  0ABA               	incf	(_I2C_Status^(0+512)+26),f
 11014                           
 11015                           ;mcc_generated_files/i2c_master.c: 235:         }
 11016  1EF8  2EFE               	goto	l3971
 11017  1EF9                     l3969:
 11018                           
 11019                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 11020  1EF9  3002               	movlw	2
 11021  1EFA  00BA               	movwf	??_I2C_MasterOperation
 11022  1EFB  083A               	movf	??_I2C_MasterOperation,w
 11023  1EFC  0024               	movlb	4	; select bank4
 11024  1EFD  00BA               	movwf	(_I2C_Status^(0+512)+26)
 11025  1EFE                     l3971:
 11026                           
 11027                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 11028  1EFE  319C  2493  319E   	fcall	_I2C_MasterStart
 11029                           
 11030                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 11031  1F01  319D  2550         	fcall	_I2C_Poller
 11032  1F03                     l3975:
 11033                           
 11034                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 11035  1F03  0020               	movlb	0	; select bank0
 11036  1F04  083C               	movf	I2C_MasterOperation@returnValue,w
 11037  1F05  0008               	return
 11038  1F06                     __end_of_I2C_MasterOperation:
 11039                           
 11040                           	psect	text38
 11041  1D50                     __ptext38:	
 11042 ;; *************** function _I2C_Poller *****************
 11043 ;; Defined at:
 11044 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;		None
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11058 ;;      Params:         0       0       0       0       0       0       0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0
 11061 ;;      Totals:         0       0       0       0       0       0       0       0
 11062 ;;Total ram usage:        0 bytes
 11063 ;; Hardware stack levels used: 1
 11064 ;; Hardware stack levels required when called: 9
 11065 ;; This function calls:
 11066 ;;		_I2C_MasterFsm
 11067 ;;		_I2C_MasterWaitForEvent
 11068 ;; This function is called by:
 11069 ;;		_I2C_MasterOperation
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073  1D50                     _I2C_Poller:	
 11074                           ;psect for function _I2C_Poller
 11075                           
 11076  1D50                     l3941:	
 11077                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 11078                           
 11079                           ;incstack = 0
 11080                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11081                           
 11082                           
 11083                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 11084  1D50  0024               	movlb	4	; select bank4
 11085  1D51  1CBC               	btfss	(_I2C_Status^(0+512)+28),1
 11086  1D52  0008               	return
 11087                           
 11088                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 11089  1D53  319C  24C9  319D   	fcall	_I2C_MasterWaitForEvent
 11090                           
 11091                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 11092  1D56  3190  2014  319D   	fcall	_I2C_MasterFsm
 11093  1D59  2D50               	goto	l3941
 11094  1D5A                     __end_of_I2C_Poller:
 11095                           
 11096                           	psect	text39
 11097  1CC9                     __ptext39:	
 11098 ;; *************** function _I2C_MasterWaitForEvent *****************
 11099 ;; Defined at:
 11100 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		None
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11114 ;;      Params:         0       0       0       0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0
 11117 ;;      Totals:         0       0       0       0       0       0       0       0
 11118 ;;Total ram usage:        0 bytes
 11119 ;; Hardware stack levels used: 1
 11120 ;; Hardware stack levels required when called: 4
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_I2C_Poller
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128  1CC9                     _I2C_MasterWaitForEvent:	
 11129                           ;psect for function _I2C_MasterWaitForEvent
 11130                           
 11131  1CC9                     l525:	
 11132                           ;incstack = 0
 11133                           ; Regs used in _I2C_MasterWaitForEvent: []
 11134                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
 11135                           
 11136                           
 11137                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
 11138  1CC9  0020               	movlb	0	; select bank0
 11139  1CCA  1991               	btfsc	17,3	;volatile
 11140  1CCB  0008               	return
 11141  1CCC  2CC9               	goto	l525
 11142  1CCD                     __end_of_I2C_MasterWaitForEvent:
 11143                           
 11144                           	psect	text40
 11145  1014                     __ptext40:	
 11146 ;; *************** function _I2C_MasterFsm *****************
 11147 ;; Defined at:
 11148 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;		None
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      void 
 11155 ;; Registers used:
 11156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11162 ;;      Params:         0       0       0       0       0       0       0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0
 11164 ;;      Temps:          0       3       0       0       0       0       0       0
 11165 ;;      Totals:         0       3       0       0       0       0       0       0
 11166 ;;Total ram usage:        3 bytes
 11167 ;; Hardware stack levels used: 1
 11168 ;; Hardware stack levels required when called: 8
 11169 ;; This function calls:
 11170 ;;		_I2C_DO_ADDRESS_NACK
 11171 ;;		_I2C_DO_IDLE
 11172 ;;		_I2C_DO_RCEN
 11173 ;;		_I2C_DO_RESET
 11174 ;;		_I2C_DO_RX
 11175 ;;		_I2C_DO_RX_ACK
 11176 ;;		_I2C_DO_RX_NACK_RESTART
 11177 ;;		_I2C_DO_RX_NACK_STOP
 11178 ;;		_I2C_DO_SEND_ADR_READ
 11179 ;;		_I2C_DO_SEND_ADR_WRITE
 11180 ;;		_I2C_DO_SEND_RESTART
 11181 ;;		_I2C_DO_SEND_RESTART_READ
 11182 ;;		_I2C_DO_SEND_RESTART_WRITE
 11183 ;;		_I2C_DO_SEND_STOP
 11184 ;;		_I2C_DO_TX
 11185 ;;		_I2C_DO_TX_EMPTY
 11186 ;;		_I2C_MasterClearIrq
 11187 ;;		_I2C_MasterIsNack
 11188 ;; This function is called by:
 11189 ;;		_I2C_Poller
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193  1014                     _I2C_MasterFsm:	
 11194                           ;psect for function _I2C_MasterFsm
 11195                           
 11196                           
 11197                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 11198                           
 11199                           ;incstack = 0
 11200                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11201  1014  319C  248A  3190   	fcall	_I2C_MasterClearIrq
 11202                           
 11203                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 11204  1017  0024               	movlb	4	; select bank4
 11205  1018  1C3C               	btfss	(_I2C_Status^(0+512)+28),0
 11206  1019  2826               	goto	l3931
 11207  101A  319C  24E9  3190   	fcall	_I2C_MasterIsNack
 11208  101D  3A00               	xorlw	0
 11209  101E  1903               	skipnz
 11210  101F  2826               	goto	l3931
 11211                           
 11212                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 11213  1020  300F               	movlw	15
 11214  1021  0020               	movlb	0	; select bank0
 11215  1022  00B7               	movwf	??_I2C_MasterFsm
 11216  1023  0837               	movf	??_I2C_MasterFsm,w
 11217  1024  0024               	movlb	4	; select bank4
 11218  1025  00BA               	movwf	(_I2C_Status^(0+512)+26)
 11219  1026                     l3931:
 11220                           
 11221                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 11222  1026  0024               	movlb	4	; select bank4
 11223  1027  083A               	movf	(_I2C_Status^(0+512)+26),w
 11224  1028  0020               	movlb	0	; select bank0
 11225  1029  00B7               	movwf	??_I2C_MasterFsm
 11226  102A  01B8               	clrf	??_I2C_MasterFsm+1
 11227  102B  35B7               	lslf	??_I2C_MasterFsm,f
 11228  102C  0DB8               	rlf	??_I2C_MasterFsm+1,f
 11229  102D  3000               	movlw	low (_i2c_fsmStateTable| (0+32768))
 11230  102E  0737               	addwf	??_I2C_MasterFsm,w
 11231  102F  0084               	movwf	4
 11232  1030  3098               	movlw	high (_i2c_fsmStateTable| (0+32768))
 11233  1031  3D38               	addwfc	??_I2C_MasterFsm+1,w
 11234  1032  0085               	movwf	5
 11235  1033  3F01               	moviw [1]fsr0
 11236  1034  008A               	movwf	10
 11237  1035  3F00               	moviw [0]fsr0
 11238  1036  000A               	callw
 11239  1037  3190               	pagesel	$
 11240  1038  0020               	movlb	0	; select bank0
 11241  1039  00B9               	movwf	??_I2C_MasterFsm+2
 11242  103A  0839               	movf	??_I2C_MasterFsm+2,w
 11243  103B  0024               	movlb	4	; select bank4
 11244  103C  00BA               	movwf	(_I2C_Status^(0+512)+26)
 11245  103D  0008               	return
 11246  103E                     __end_of_I2C_MasterFsm:
 11247                           
 11248                           	psect	text41
 11249  109A                     __ptext41:	
 11250 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 11251 ;; Defined at:
 11252 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      enum E3885
 11259 ;; Registers used:
 11260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11266 ;;      Params:         0       0       0       0       0       0       0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0
 11268 ;;      Temps:          0       3       0       0       0       0       0       0
 11269 ;;      Totals:         0       3       0       0       0       0       0       0
 11270 ;;Total ram usage:        3 bytes
 11271 ;; Hardware stack levels used: 1
 11272 ;; Hardware stack levels required when called: 7
 11273 ;; This function calls:
 11274 ;;		Absolute function
 11275 ;;		_I2C_CallbackReturnReset
 11276 ;;		_I2C_CallbackReturnStop
 11277 ;;		_I2C_DO_SEND_RESTART
 11278 ;;		_I2C_DO_SEND_STOP
 11279 ;;		_rd1RegCompleteHandler
 11280 ;;		_rd2RegCompleteHandler
 11281 ;;		_rdBlkRegCompleteHandler
 11282 ;;		_wr1RegCompleteHandler
 11283 ;;		_wr2RegCompleteHandler
 11284 ;; This function is called by:
 11285 ;;		_I2C_MasterFsm
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289  109A                     _I2C_DO_ADDRESS_NACK:	
 11290                           ;psect for function _I2C_DO_ADDRESS_NACK
 11291                           
 11292                           
 11293                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 11294                           
 11295                           ;incstack = 0
 11296                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11297  109A  0024               	movlb	4	; select bank4
 11298  109B  103C               	bcf	(_I2C_Status^(0+512)+28),0
 11299                           
 11300                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 11301  109C  3002               	movlw	2
 11302  109D  0020               	movlb	0	; select bank0
 11303  109E  00B4               	movwf	??_I2C_DO_ADDRESS_NACK
 11304  109F  0834               	movf	??_I2C_DO_ADDRESS_NACK,w
 11305  10A0  0024               	movlb	4	; select bank4
 11306  10A1  00BB               	movwf	(_I2C_Status^(0+512)+27)
 11307                           
 11308                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 11309  10A2  28A9               	goto	l3915
 11310  10A3                     l3905:
 11311                           
 11312                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 11313  10A3  319C  24B5         	fcall	_I2C_DO_SEND_RESTART
 11314  10A5  0008               	return
 11315  10A6                     l3909:
 11316                           
 11317                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 11318  10A6  319C  24B9         	fcall	_I2C_DO_SEND_STOP
 11319  10A8  0008               	return
 11320  10A9                     l3915:
 11321  10A9  082E               	movf	(low ((_I2C_Status| (0+512)+14)))^0,w
 11322  10AA  0020               	movlb	0	; select bank0
 11323  10AB  00B4               	movwf	??_I2C_DO_ADDRESS_NACK
 11324  10AC  0834               	movf	??_I2C_DO_ADDRESS_NACK,w
 11325  10AD  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 11326  10AE  3004               	movlw	4
 11327  10AF  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 11328  10B0  0086               	movwf	6
 11329  10B1  3002               	movlw	2	; select bank4/5
 11330  10B2  0087               	movwf	7
 11331  10B3  3F41               	moviw [1]fsr1
 11332  10B4  008A               	movwf	10
 11333  10B5  3F40               	moviw [0]fsr1
 11334  10B6  000A               	callw
 11335  10B7  3190               	pagesel	$
 11336  10B8  0020               	movlb	0	; select bank0
 11337  10B9  00B5               	movwf	??_I2C_DO_ADDRESS_NACK+1
 11338  10BA  01B6               	clrf	??_I2C_DO_ADDRESS_NACK+2
 11339                           
 11340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11341                           ; Switch size 1, requested type "simple"
 11342                           ; Number of cases is 1, Range of values is 0 to 0
 11343                           ; switch strategies available:
 11344                           ; Name         Instructions Cycles
 11345                           ; simple_byte            4     3 (average)
 11346                           ; direct_byte            8     6 (fixed)
 11347                           ; jumptable            260     6 (fixed)
 11348                           ;	Chosen strategy is simple_byte
 11349  10BB  0836               	movf	??_I2C_DO_ADDRESS_NACK+2,w
 11350  10BC  3A00               	xorlw	0	; case 0
 11351  10BD  1903               	skipnz
 11352  10BE  28C0               	goto	l6841
 11353  10BF  28A6               	goto	l3909
 11354  10C0                     l6841:
 11355                           
 11356                           ; Switch size 1, requested type "simple"
 11357                           ; Number of cases is 2, Range of values is 2 to 3
 11358                           ; switch strategies available:
 11359                           ; Name         Instructions Cycles
 11360                           ; simple_byte            7     4 (average)
 11361                           ; direct_byte           13     9 (fixed)
 11362                           ; jumptable            263     9 (fixed)
 11363                           ;	Chosen strategy is simple_byte
 11364  10C0  0835               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 11365  10C1  3A02               	xorlw	2	; case 2
 11366  10C2  1903               	skipnz
 11367  10C3  28A3               	goto	l3905
 11368  10C4  3A01               	xorlw	1	; case 3
 11369  10C5  1903               	skipnz
 11370  10C6  28A3               	goto	l3905
 11371  10C7  28A6               	goto	l3909
 11372  10C8  0008               	return
 11373  10C9                     __end_of_I2C_DO_ADDRESS_NACK:
 11374                           
 11375                           	psect	text42
 11376  1CDE                     __ptext42:	
 11377 ;; *************** function _I2C_DO_RESET *****************
 11378 ;; Defined at:
 11379 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;		None
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;		None
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      enum E3885
 11386 ;; Registers used:
 11387 ;;		wreg, status,2
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11393 ;;      Params:         0       0       0       0       0       0       0       0
 11394 ;;      Locals:         0       0       0       0       0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0
 11396 ;;      Totals:         0       0       0       0       0       0       0       0
 11397 ;;Total ram usage:        0 bytes
 11398 ;; Hardware stack levels used: 1
 11399 ;; Hardware stack levels required when called: 4
 11400 ;; This function calls:
 11401 ;;		Nothing
 11402 ;; This function is called by:
 11403 ;;		_I2C_MasterFsm
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407  1CDE                     _I2C_DO_RESET:	
 11408                           ;psect for function _I2C_DO_RESET
 11409                           
 11410                           
 11411                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 11412                           
 11413                           ;incstack = 0
 11414                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 11415  1CDE  0024               	movlb	4	; select bank4
 11416  1CDF  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 11417                           
 11418                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 11419  1CE0  01BB               	clrf	(_I2C_Status^(0+512)+27)
 11420                           
 11421                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 11422  1CE1  300E               	movlw	14
 11423  1CE2  0008               	return
 11424  1CE3                     __end_of_I2C_DO_RESET:
 11425                           
 11426                           	psect	text43
 11427  1CC5                     __ptext43:	
 11428 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 11429 ;; Defined at:
 11430 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      enum E3885
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0, pclath, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11444 ;;      Params:         0       0       0       0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used: 1
 11450 ;; Hardware stack levels required when called: 5
 11451 ;; This function calls:
 11452 ;;		_I2C_MasterSendNack
 11453 ;; This function is called by:
 11454 ;;		_I2C_DO_RX
 11455 ;;		_I2C_MasterFsm
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459  1CC5                     _I2C_DO_RX_NACK_RESTART:	
 11460                           ;psect for function _I2C_DO_RX_NACK_RESTART
 11461                           
 11462                           
 11463                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 11464                           
 11465                           ;incstack = 0
 11466                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11467  1CC5  319C  24A5         	fcall	_I2C_MasterSendNack
 11468                           
 11469                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 11470  1CC7  3009               	movlw	9
 11471  1CC8  0008               	return
 11472  1CC9                     __end_of_I2C_DO_RX_NACK_RESTART:
 11473                           
 11474                           	psect	text44
 11475  1CC1                     __ptext44:	
 11476 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 11477 ;; Defined at:
 11478 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      enum E3885
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0, pclath, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11492 ;;      Params:         0       0       0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0
 11495 ;;      Totals:         0       0       0       0       0       0       0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 5
 11499 ;; This function calls:
 11500 ;;		_I2C_MasterSendNack
 11501 ;; This function is called by:
 11502 ;;		_I2C_DO_RX
 11503 ;;		_I2C_MasterFsm
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507  1CC1                     _I2C_DO_RX_NACK_STOP:	
 11508                           ;psect for function _I2C_DO_RX_NACK_STOP
 11509                           
 11510                           
 11511                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 11512                           
 11513                           ;incstack = 0
 11514                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 11515  1CC1  319C  24A5         	fcall	_I2C_MasterSendNack
 11516                           
 11517                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 11518  1CC3  300A               	movlw	10
 11519  1CC4  0008               	return
 11520  1CC5                     __end_of_I2C_DO_RX_NACK_STOP:
 11521                           
 11522                           	psect	text45
 11523  1CBD                     __ptext45:	
 11524 ;; *************** function _I2C_DO_RX_ACK *****************
 11525 ;; Defined at:
 11526 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;		None
 11529 ;; Auto vars:     Size  Location     Type
 11530 ;;		None
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      enum E3885
 11533 ;; Registers used:
 11534 ;;		wreg, status,2, status,0, pclath, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11540 ;;      Params:         0       0       0       0       0       0       0       0
 11541 ;;      Locals:         0       0       0       0       0       0       0       0
 11542 ;;      Temps:          0       0       0       0       0       0       0       0
 11543 ;;      Totals:         0       0       0       0       0       0       0       0
 11544 ;;Total ram usage:        0 bytes
 11545 ;; Hardware stack levels used: 1
 11546 ;; Hardware stack levels required when called: 5
 11547 ;; This function calls:
 11548 ;;		_I2C_MasterSendAck
 11549 ;; This function is called by:
 11550 ;;		_I2C_MasterFsm
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554  1CBD                     _I2C_DO_RX_ACK:	
 11555                           ;psect for function _I2C_DO_RX_ACK
 11556                           
 11557                           
 11558                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 11559                           
 11560                           ;incstack = 0
 11561                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 11562  1CBD  319C  24A9         	fcall	_I2C_MasterSendAck
 11563                           
 11564                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 11565  1CBF  3005               	movlw	5
 11566  1CC0  0008               	return
 11567  1CC1                     __end_of_I2C_DO_RX_ACK:
 11568                           
 11569                           	psect	text46
 11570  1CB9                     __ptext46:	
 11571 ;; *************** function _I2C_DO_SEND_STOP *****************
 11572 ;; Defined at:
 11573 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;		None
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1    wreg      enum E3885
 11580 ;; Registers used:
 11581 ;;		wreg, status,2, status,0, pclath, cstack
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11587 ;;      Params:         0       0       0       0       0       0       0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0
 11589 ;;      Temps:          0       0       0       0       0       0       0       0
 11590 ;;      Totals:         0       0       0       0       0       0       0       0
 11591 ;;Total ram usage:        0 bytes
 11592 ;; Hardware stack levels used: 1
 11593 ;; Hardware stack levels required when called: 5
 11594 ;; This function calls:
 11595 ;;		_I2C_MasterStop
 11596 ;; This function is called by:
 11597 ;;		_I2C_DO_TX
 11598 ;;		_I2C_DO_TX_EMPTY
 11599 ;;		_I2C_DO_ADDRESS_NACK
 11600 ;;		_I2C_MasterFsm
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604  1CB9                     _I2C_DO_SEND_STOP:	
 11605                           ;psect for function _I2C_DO_SEND_STOP
 11606                           
 11607                           
 11608                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 11609                           
 11610                           ;incstack = 0
 11611                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 11612  1CB9  319C  2499         	fcall	_I2C_MasterStop
 11613                           
 11614                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 11615  1CBB  3000               	movlw	0
 11616  1CBC  0008               	return
 11617  1CBD                     __end_of_I2C_DO_SEND_STOP:
 11618                           
 11619                           	psect	text47
 11620  1CB5                     __ptext47:	
 11621 ;; *************** function _I2C_DO_SEND_RESTART *****************
 11622 ;; Defined at:
 11623 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      enum E3885
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, status,0, pclath, cstack
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11637 ;;      Params:         0       0       0       0       0       0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0       0
 11640 ;;      Totals:         0       0       0       0       0       0       0       0
 11641 ;;Total ram usage:        0 bytes
 11642 ;; Hardware stack levels used: 1
 11643 ;; Hardware stack levels required when called: 5
 11644 ;; This function calls:
 11645 ;;		_I2C_MasterEnableRestart
 11646 ;; This function is called by:
 11647 ;;		_I2C_DO_TX_EMPTY
 11648 ;;		_I2C_DO_ADDRESS_NACK
 11649 ;;		_I2C_MasterFsm
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653  1CB5                     _I2C_DO_SEND_RESTART:	
 11654                           ;psect for function _I2C_DO_SEND_RESTART
 11655                           
 11656                           
 11657                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 11658                           
 11659                           ;incstack = 0
 11660                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 11661  1CB5  319C  2496         	fcall	_I2C_MasterEnableRestart
 11662                           
 11663                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 11664  1CB7  3001               	movlw	1
 11665  1CB8  0008               	return
 11666  1CB9                     __end_of_I2C_DO_SEND_RESTART:
 11667                           
 11668                           	psect	text48
 11669  1CB1                     __ptext48:	
 11670 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11671 ;; Defined at:
 11672 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;		None
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  1    wreg      enum E3885
 11679 ;; Registers used:
 11680 ;;		wreg, status,2, status,0, pclath, cstack
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11686 ;;      Params:         0       0       0       0       0       0       0       0
 11687 ;;      Locals:         0       0       0       0       0       0       0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0
 11689 ;;      Totals:         0       0       0       0       0       0       0       0
 11690 ;;Total ram usage:        0 bytes
 11691 ;; Hardware stack levels used: 1
 11692 ;; Hardware stack levels required when called: 5
 11693 ;; This function calls:
 11694 ;;		_I2C_MasterEnableRestart
 11695 ;; This function is called by:
 11696 ;;		_I2C_DO_TX
 11697 ;;		_I2C_MasterFsm
 11698 ;; This function uses a non-reentrant model
 11699 ;;
 11700                           
 11701  1CB1                     _I2C_DO_SEND_RESTART_WRITE:	
 11702                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 11703                           
 11704                           
 11705                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 11706                           
 11707                           ;incstack = 0
 11708                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 11709  1CB1  319C  2496         	fcall	_I2C_MasterEnableRestart
 11710                           
 11711                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 11712  1CB3  3002               	movlw	2
 11713  1CB4  0008               	return
 11714  1CB5                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11715                           
 11716                           	psect	text49
 11717  1CAD                     __ptext49:	
 11718 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11719 ;; Defined at:
 11720 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 11721 ;; Parameters:    Size  Location     Type
 11722 ;;		None
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;		None
 11725 ;; Return value:  Size  Location     Type
 11726 ;;                  1    wreg      enum E3885
 11727 ;; Registers used:
 11728 ;;		wreg, status,2, status,0, pclath, cstack
 11729 ;; Tracked objects:
 11730 ;;		On entry : 0/0
 11731 ;;		On exit  : 0/0
 11732 ;;		Unchanged: 0/0
 11733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11734 ;;      Params:         0       0       0       0       0       0       0       0
 11735 ;;      Locals:         0       0       0       0       0       0       0       0
 11736 ;;      Temps:          0       0       0       0       0       0       0       0
 11737 ;;      Totals:         0       0       0       0       0       0       0       0
 11738 ;;Total ram usage:        0 bytes
 11739 ;; Hardware stack levels used: 1
 11740 ;; Hardware stack levels required when called: 5
 11741 ;; This function calls:
 11742 ;;		_I2C_MasterEnableRestart
 11743 ;; This function is called by:
 11744 ;;		_I2C_DO_TX
 11745 ;;		_I2C_MasterFsm
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749  1CAD                     _I2C_DO_SEND_RESTART_READ:	
 11750                           ;psect for function _I2C_DO_SEND_RESTART_READ
 11751                           
 11752                           
 11753                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11754                           
 11755                           ;incstack = 0
 11756                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 11757  1CAD  319C  2496         	fcall	_I2C_MasterEnableRestart
 11758                           
 11759                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11760  1CAF  3001               	movlw	1
 11761  1CB0  0008               	return
 11762  1CB1                     __end_of_I2C_DO_SEND_RESTART_READ:
 11763                           
 11764                           	psect	text50
 11765  1CEF                     __ptext50:	
 11766 ;; *************** function _I2C_DO_RCEN *****************
 11767 ;; Defined at:
 11768 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      enum E3885
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11782 ;;      Params:         0       0       0       0       0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used: 1
 11788 ;; Hardware stack levels required when called: 5
 11789 ;; This function calls:
 11790 ;;		_I2C_MasterStartRx
 11791 ;; This function is called by:
 11792 ;;		_I2C_MasterFsm
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796  1CEF                     _I2C_DO_RCEN:	
 11797                           ;psect for function _I2C_DO_RCEN
 11798                           
 11799                           
 11800                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11801                           
 11802                           ;incstack = 0
 11803                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 11804  1CEF  0024               	movlb	4	; select bank4
 11805  1CF0  103C               	bcf	(_I2C_Status^(0+512)+28),0
 11806                           
 11807                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11808  1CF1  319C  249C         	fcall	_I2C_MasterStartRx
 11809                           
 11810                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11811  1CF3  3004               	movlw	4
 11812  1CF4  0008               	return
 11813  1CF5                     __end_of_I2C_DO_RCEN:
 11814                           
 11815                           	psect	text51
 11816  117F                     __ptext51:	
 11817 ;; *************** function _I2C_DO_RX *****************
 11818 ;; Defined at:
 11819 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;		None
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;		None
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      enum E3885
 11826 ;; Registers used:
 11827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11833 ;;      Params:         0       0       0       0       0       0       0       0
 11834 ;;      Locals:         0       0       0       0       0       0       0       0
 11835 ;;      Temps:          0       3       0       0       0       0       0       0
 11836 ;;      Totals:         0       3       0       0       0       0       0       0
 11837 ;;Total ram usage:        3 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 7
 11840 ;; This function calls:
 11841 ;;		Absolute function
 11842 ;;		_I2C_CallbackReturnReset
 11843 ;;		_I2C_CallbackReturnStop
 11844 ;;		_I2C_DO_RX_NACK_RESTART
 11845 ;;		_I2C_DO_RX_NACK_STOP
 11846 ;;		_I2C_MasterGetRxData
 11847 ;;		_I2C_MasterSendAck
 11848 ;;		_rd1RegCompleteHandler
 11849 ;;		_rd2RegCompleteHandler
 11850 ;;		_rdBlkRegCompleteHandler
 11851 ;;		_wr1RegCompleteHandler
 11852 ;;		_wr2RegCompleteHandler
 11853 ;; This function is called by:
 11854 ;;		_I2C_MasterFsm
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858  117F                     _I2C_DO_RX:	
 11859                           ;psect for function _I2C_DO_RX
 11860                           
 11861                           
 11862                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11863                           
 11864                           ;incstack = 0
 11865                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11866  117F  319C  249F  3191   	fcall	_I2C_MasterGetRxData
 11867  1182  0020               	movlb	0	; select bank0
 11868  1183  00B4               	movwf	??_I2C_DO_RX
 11869  1184  0024               	movlb	4	; select bank4
 11870  1185  0837               	movf	(low ((_I2C_Status| (0+512)+23)))^0,w
 11871  1186  0086               	movwf	6
 11872  1187  0187               	clrf	7
 11873  1188  0020               	movlb	0	; select bank0
 11874  1189  0834               	movf	??_I2C_DO_RX,w
 11875  118A  0081               	movwf	1
 11876  118B  3001               	movlw	1
 11877  118C  00B4               	movwf	??_I2C_DO_RX
 11878  118D  0834               	movf	??_I2C_DO_RX,w
 11879  118E  0024               	movlb	4	; select bank4
 11880  118F  07B7               	addwf	(low ((_I2C_Status| (0+512)+23)))^0,f
 11881                           
 11882                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11883  1190  3001               	movlw	1
 11884  1191  02B8               	subwf	(_I2C_Status^(0+512)+24),f
 11885  1192  3000               	movlw	0
 11886  1193  3BB9               	subwfb	((_I2C_Status+1)^(0+512)+24),f
 11887  1194  0838               	movf	(_I2C_Status^(0+512)+24),w
 11888  1195  0439               	iorwf	((_I2C_Status+1)^(0+512)+24),w
 11889  1196  1903               	btfsc	3,2
 11890  1197  299C               	goto	l384
 11891                           
 11892                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11893  1198  319C  24A9         	fcall	_I2C_MasterSendAck
 11894                           
 11895                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11896  119A  3005               	movlw	5
 11897  119B  0008               	return
 11898  119C                     l384:	
 11899                           ;mcc_generated_files/i2c_master.c: 386:     else
 11900                           
 11901                           
 11902                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11903  119C  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 11904                           
 11905                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11906  119D  29A4               	goto	l3849
 11907  119E                     l3839:
 11908                           
 11909                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11910  119E  319C  24C5         	fcall	_I2C_DO_RX_NACK_RESTART
 11911  11A0  0008               	return
 11912  11A1                     l3843:
 11913                           
 11914                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11915  11A1  319C  24C1         	fcall	_I2C_DO_RX_NACK_STOP
 11916  11A3  0008               	return
 11917  11A4                     l3849:
 11918  11A4  082C               	movf	(low ((_I2C_Status| (0+512)+12)))^0,w
 11919  11A5  0020               	movlb	0	; select bank0
 11920  11A6  00B4               	movwf	??_I2C_DO_RX
 11921  11A7  0834               	movf	??_I2C_DO_RX,w
 11922  11A8  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 11923  11A9  0024               	movlb	4	; select bank4
 11924  11AA  0821               	movf	(_I2C_Status+1)^(0+512),w
 11925  11AB  008A               	movwf	10
 11926  11AC  0820               	movf	_I2C_Status^(0+512),w
 11927  11AD  000A               	callw
 11928  11AE  3191               	pagesel	$
 11929  11AF  0020               	movlb	0	; select bank0
 11930  11B0  00B5               	movwf	??_I2C_DO_RX+1
 11931  11B1  01B6               	clrf	??_I2C_DO_RX+2
 11932                           
 11933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11934                           ; Switch size 1, requested type "simple"
 11935                           ; Number of cases is 1, Range of values is 0 to 0
 11936                           ; switch strategies available:
 11937                           ; Name         Instructions Cycles
 11938                           ; simple_byte            4     3 (average)
 11939                           ; direct_byte            8     6 (fixed)
 11940                           ; jumptable            260     6 (fixed)
 11941                           ;	Chosen strategy is simple_byte
 11942  11B2  0836               	movf	??_I2C_DO_RX+2,w
 11943  11B3  3A00               	xorlw	0	; case 0
 11944  11B4  1903               	skipnz
 11945  11B5  29B7               	goto	l6843
 11946  11B6  29A1               	goto	l3843
 11947  11B7                     l6843:
 11948                           
 11949                           ; Switch size 1, requested type "simple"
 11950                           ; Number of cases is 4, Range of values is 1 to 4
 11951                           ; switch strategies available:
 11952                           ; Name         Instructions Cycles
 11953                           ; simple_byte           13     7 (average)
 11954                           ; direct_byte           17     9 (fixed)
 11955                           ; jumptable            263     9 (fixed)
 11956                           ;	Chosen strategy is simple_byte
 11957  11B7  0835               	movf	??_I2C_DO_RX+1,w
 11958  11B8  3A01               	xorlw	1	; case 1
 11959  11B9  1903               	skipnz
 11960  11BA  29A1               	goto	l3843
 11961  11BB  3A03               	xorlw	3	; case 2
 11962  11BC  1903               	skipnz
 11963  11BD  299E               	goto	l3839
 11964  11BE  3A01               	xorlw	1	; case 3
 11965  11BF  1903               	skipnz
 11966  11C0  299E               	goto	l3839
 11967  11C1  3A07               	xorlw	7	; case 4
 11968  11C2  1903               	skipnz
 11969  11C3  29A1               	goto	l3843
 11970  11C4  29A1               	goto	l3843
 11971  11C5  0008               	return
 11972  11C6                     __end_of_I2C_DO_RX:
 11973                           
 11974                           	psect	text52
 11975  11C6                     __ptext52:	
 11976 ;; *************** function _I2C_DO_TX *****************
 11977 ;; Defined at:
 11978 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;		None
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      enum E3885
 11985 ;; Registers used:
 11986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11992 ;;      Params:         0       0       0       0       0       0       0       0
 11993 ;;      Locals:         0       0       0       0       0       0       0       0
 11994 ;;      Temps:          0       3       0       0       0       0       0       0
 11995 ;;      Totals:         0       3       0       0       0       0       0       0
 11996 ;;Total ram usage:        3 bytes
 11997 ;; Hardware stack levels used: 1
 11998 ;; Hardware stack levels required when called: 7
 11999 ;; This function calls:
 12000 ;;		Absolute function
 12001 ;;		_I2C_CallbackReturnReset
 12002 ;;		_I2C_CallbackReturnStop
 12003 ;;		_I2C_DO_SEND_RESTART_READ
 12004 ;;		_I2C_DO_SEND_RESTART_WRITE
 12005 ;;		_I2C_DO_SEND_STOP
 12006 ;;		_I2C_MasterIsNack
 12007 ;;		_I2C_MasterSendTxData
 12008 ;;		_rd1RegCompleteHandler
 12009 ;;		_rd2RegCompleteHandler
 12010 ;;		_rdBlkRegCompleteHandler
 12011 ;;		_wr1RegCompleteHandler
 12012 ;;		_wr2RegCompleteHandler
 12013 ;; This function is called by:
 12014 ;;		_I2C_MasterFsm
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018  11C6                     _I2C_DO_TX:	
 12019                           ;psect for function _I2C_DO_TX
 12020                           
 12021                           
 12022                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 12023                           
 12024                           ;incstack = 0
 12025                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12026  11C6  319C  24E9  3191   	fcall	_I2C_MasterIsNack
 12027  11C9  3A00               	xorlw	0
 12028  11CA  1D03               	btfss	3,2
 12029  11CB  29D6               	goto	l3809
 12030  11CC  29FC               	goto	l368
 12031  11CD                     l3795:
 12032                           
 12033                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 12034  11CD  319C  24AD         	fcall	_I2C_DO_SEND_RESTART_READ
 12035  11CF  0008               	return
 12036  11D0                     l3799:
 12037                           
 12038                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 12039  11D0  319C  24B1         	fcall	_I2C_DO_SEND_RESTART_WRITE
 12040  11D2  0008               	return
 12041  11D3                     l3803:
 12042                           
 12043                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 12044  11D3  319C  24B9         	fcall	_I2C_DO_SEND_STOP
 12045  11D5  0008               	return
 12046  11D6                     l3809:
 12047  11D6  0024               	movlb	4	; select bank4
 12048  11D7  082F               	movf	(low ((_I2C_Status| (0+512)+15)))^0,w
 12049  11D8  0020               	movlb	0	; select bank0
 12050  11D9  00B4               	movwf	??_I2C_DO_TX
 12051  11DA  0834               	movf	??_I2C_DO_TX,w
 12052  11DB  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 12053  11DC  3006               	movlw	6
 12054  11DD  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 12055  11DE  0086               	movwf	6
 12056  11DF  3002               	movlw	2	; select bank4/5
 12057  11E0  0087               	movwf	7
 12058  11E1  3F41               	moviw [1]fsr1
 12059  11E2  008A               	movwf	10
 12060  11E3  3F40               	moviw [0]fsr1
 12061  11E4  000A               	callw
 12062  11E5  3191               	pagesel	$
 12063  11E6  0020               	movlb	0	; select bank0
 12064  11E7  00B5               	movwf	??_I2C_DO_TX+1
 12065  11E8  01B6               	clrf	??_I2C_DO_TX+2
 12066                           
 12067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12068                           ; Switch size 1, requested type "simple"
 12069                           ; Number of cases is 1, Range of values is 0 to 0
 12070                           ; switch strategies available:
 12071                           ; Name         Instructions Cycles
 12072                           ; simple_byte            4     3 (average)
 12073                           ; direct_byte            8     6 (fixed)
 12074                           ; jumptable            260     6 (fixed)
 12075                           ;	Chosen strategy is simple_byte
 12076  11E9  0836               	movf	??_I2C_DO_TX+2,w
 12077  11EA  3A00               	xorlw	0	; case 0
 12078  11EB  1903               	skipnz
 12079  11EC  29EE               	goto	l6845
 12080  11ED  29D3               	goto	l3803
 12081  11EE                     l6845:
 12082                           
 12083                           ; Switch size 1, requested type "simple"
 12084                           ; Number of cases is 4, Range of values is 1 to 4
 12085                           ; switch strategies available:
 12086                           ; Name         Instructions Cycles
 12087                           ; simple_byte           13     7 (average)
 12088                           ; direct_byte           17     9 (fixed)
 12089                           ; jumptable            263     9 (fixed)
 12090                           ;	Chosen strategy is simple_byte
 12091  11EE  0835               	movf	??_I2C_DO_TX+1,w
 12092  11EF  3A01               	xorlw	1	; case 1
 12093  11F0  1903               	skipnz
 12094  11F1  29D3               	goto	l3803
 12095  11F2  3A03               	xorlw	3	; case 2
 12096  11F3  1903               	skipnz
 12097  11F4  29CD               	goto	l3795
 12098  11F5  3A01               	xorlw	1	; case 3
 12099  11F6  1903               	skipnz
 12100  11F7  29D0               	goto	l3799
 12101  11F8  3A07               	xorlw	7	; case 4
 12102  11F9  1903               	skipnz
 12103  11FA  29D3               	goto	l3803
 12104  11FB  29D3               	goto	l3803
 12105  11FC                     l368:	
 12106                           ;mcc_generated_files/i2c_master.c: 370:     else
 12107                           
 12108                           
 12109                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 12110  11FC  0024               	movlb	4	; select bank4
 12111  11FD  103C               	bcf	(_I2C_Status^(0+512)+28),0
 12112                           
 12113                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 12114  11FE  3017               	movlw	23
 12115  11FF  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 12116  1200  0086               	movwf	6
 12117  1201  3002               	movlw	2	; select bank4/5
 12118  1202  0087               	movwf	7
 12119  1203  3F40               	moviw [0]fsr1
 12120  1204  0084               	movwf	4
 12121  1205  0185               	clrf	5
 12122  1206  0A81               	incf	1,f
 12123  1207  0800               	movf	0,w
 12124  1208  319C  24E3  3191   	fcall	_I2C_MasterSendTxData
 12125                           
 12126                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 12127  120B  3001               	movlw	1
 12128  120C  0024               	movlb	4	; select bank4
 12129  120D  02B8               	subwf	(_I2C_Status^(0+512)+24),f
 12130  120E  3000               	movlw	0
 12131  120F  3BB9               	subwfb	((_I2C_Status+1)^(0+512)+24),f
 12132  1210  0838               	movf	(_I2C_Status^(0+512)+24),w
 12133  1211  0439               	iorwf	((_I2C_Status+1)^(0+512)+24),w
 12134  1212  1D03               	btfss	3,2
 12135  1213  2A16               	goto	l3817
 12136  1214  3006               	movlw	6
 12137  1215  0008               	return
 12138  1216                     l3817:
 12139  1216  3003               	movlw	3
 12140  1217  0008               	return
 12141  1218                     __end_of_I2C_DO_TX:
 12142                           
 12143                           	psect	text53
 12144  1D14                     __ptext53:	
 12145 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 12146 ;; Defined at:
 12147 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 12148 ;; Parameters:    Size  Location     Type
 12149 ;;		None
 12150 ;; Auto vars:     Size  Location     Type
 12151 ;;		None
 12152 ;; Return value:  Size  Location     Type
 12153 ;;                  1    wreg      enum E3885
 12154 ;; Registers used:
 12155 ;;		wreg, status,2, status,0, pclath, cstack
 12156 ;; Tracked objects:
 12157 ;;		On entry : 0/0
 12158 ;;		On exit  : 0/0
 12159 ;;		Unchanged: 0/0
 12160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12161 ;;      Params:         0       0       0       0       0       0       0       0
 12162 ;;      Locals:         0       0       0       0       0       0       0       0
 12163 ;;      Temps:          0       0       0       0       0       0       0       0
 12164 ;;      Totals:         0       0       0       0       0       0       0       0
 12165 ;;Total ram usage:        0 bytes
 12166 ;; Hardware stack levels used: 1
 12167 ;; Hardware stack levels required when called: 5
 12168 ;; This function calls:
 12169 ;;		_I2C_MasterSendTxData
 12170 ;; This function is called by:
 12171 ;;		_I2C_MasterFsm
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175  1D14                     _I2C_DO_SEND_ADR_WRITE:	
 12176                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 12177                           
 12178                           
 12179                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 12180                           
 12181                           ;incstack = 0
 12182                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 12183  1D14  0024               	movlb	4	; select bank4
 12184  1D15  143C               	bsf	(_I2C_Status^(0+512)+28),0
 12185                           
 12186                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 12187  1D16  3536               	lslf	(_I2C_Status^(0+512)+22),w
 12188  1D17  319C  24E3         	fcall	_I2C_MasterSendTxData
 12189                           
 12190                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 12191  1D19  3003               	movlw	3
 12192  1D1A  0008               	return
 12193  1D1B                     __end_of_I2C_DO_SEND_ADR_WRITE:
 12194                           
 12195                           	psect	text54
 12196  1D1B                     __ptext54:	
 12197 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 12198 ;; Defined at:
 12199 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;		None
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;		None
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  1    wreg      enum E3885
 12206 ;; Registers used:
 12207 ;;		wreg, status,2, status,0, pclath, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12213 ;;      Params:         0       0       0       0       0       0       0       0
 12214 ;;      Locals:         0       0       0       0       0       0       0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0       0
 12216 ;;      Totals:         0       0       0       0       0       0       0       0
 12217 ;;Total ram usage:        0 bytes
 12218 ;; Hardware stack levels used: 1
 12219 ;; Hardware stack levels required when called: 5
 12220 ;; This function calls:
 12221 ;;		_I2C_MasterSendTxData
 12222 ;; This function is called by:
 12223 ;;		_I2C_MasterFsm
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227  1D1B                     _I2C_DO_SEND_ADR_READ:	
 12228                           ;psect for function _I2C_DO_SEND_ADR_READ
 12229                           
 12230                           
 12231                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 12235  1D1B  0024               	movlb	4	; select bank4
 12236  1D1C  143C               	bsf	(_I2C_Status^(0+512)+28),0
 12237                           
 12238                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 12239  1D1D  1403               	setc
 12240  1D1E  0D36               	rlf	(_I2C_Status^(0+512)+22),w
 12241  1D1F  319C  24E3         	fcall	_I2C_MasterSendTxData
 12242                           
 12243                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 12244  1D21  3005               	movlw	5
 12245  1D22  0008               	return
 12246  1D23                     __end_of_I2C_DO_SEND_ADR_READ:
 12247                           
 12248                           	psect	text55
 12249  1CD9                     __ptext55:	
 12250 ;; *************** function _I2C_DO_IDLE *****************
 12251 ;; Defined at:
 12252 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;		None
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;		None
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      enum E3885
 12259 ;; Registers used:
 12260 ;;		wreg, status,2
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12266 ;;      Params:         0       0       0       0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0
 12269 ;;      Totals:         0       0       0       0       0       0       0       0
 12270 ;;Total ram usage:        0 bytes
 12271 ;; Hardware stack levels used: 1
 12272 ;; Hardware stack levels required when called: 4
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		_I2C_MasterFsm
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280  1CD9                     _I2C_DO_IDLE:	
 12281                           ;psect for function _I2C_DO_IDLE
 12282                           
 12283                           
 12284                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 12285                           
 12286                           ;incstack = 0
 12287                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 12288  1CD9  0024               	movlb	4	; select bank4
 12289  1CDA  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 12290                           
 12291                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 12292  1CDB  01BB               	clrf	(_I2C_Status^(0+512)+27)
 12293                           
 12294                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 12295  1CDC  300E               	movlw	14
 12296  1CDD  0008               	return
 12297  1CDE                     __end_of_I2C_DO_IDLE:
 12298                           
 12299                           	psect	text56
 12300  106B                     __ptext56:	
 12301 ;; *************** function _I2C_DO_TX_EMPTY *****************
 12302 ;; Defined at:
 12303 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      enum E3885
 12310 ;; Registers used:
 12311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12317 ;;      Params:         0       0       0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0
 12319 ;;      Temps:          0       3       0       0       0       0       0       0
 12320 ;;      Totals:         0       3       0       0       0       0       0       0
 12321 ;;Total ram usage:        3 bytes
 12322 ;; Hardware stack levels used: 1
 12323 ;; Hardware stack levels required when called: 7
 12324 ;; This function calls:
 12325 ;;		Absolute function
 12326 ;;		_I2C_CallbackReturnReset
 12327 ;;		_I2C_CallbackReturnStop
 12328 ;;		_I2C_DO_SEND_RESTART
 12329 ;;		_I2C_DO_SEND_STOP
 12330 ;;		_I2C_MasterSetIrq
 12331 ;;		_rd1RegCompleteHandler
 12332 ;;		_rd2RegCompleteHandler
 12333 ;;		_rdBlkRegCompleteHandler
 12334 ;;		_wr1RegCompleteHandler
 12335 ;;		_wr2RegCompleteHandler
 12336 ;; This function is called by:
 12337 ;;		_I2C_MasterFsm
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341  106B                     _I2C_DO_TX_EMPTY:	
 12342                           ;psect for function _I2C_DO_TX_EMPTY
 12343                           
 12344                           
 12345                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 12346                           
 12347                           ;incstack = 0
 12348                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12349  106B  0024               	movlb	4	; select bank4
 12350  106C  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 12351                           
 12352                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 12353  106D  2878               	goto	l3881
 12354  106E                     l3865:
 12355                           
 12356                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 12357  106E  319C  24B5         	fcall	_I2C_DO_SEND_RESTART
 12358  1070  0008               	return
 12359  1071                     l3869:
 12360                           
 12361                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 12362  1071  319C  24A2         	fcall	_I2C_MasterSetIrq
 12363                           
 12364                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 12365  1073  3003               	movlw	3
 12366  1074  0008               	return
 12367  1075                     l3875:
 12368                           
 12369                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 12370  1075  319C  24B9         	fcall	_I2C_DO_SEND_STOP
 12371  1077  0008               	return
 12372  1078                     l3881:
 12373  1078  082C               	movf	(low ((_I2C_Status| (0+512)+12)))^0,w
 12374  1079  0020               	movlb	0	; select bank0
 12375  107A  00B4               	movwf	??_I2C_DO_TX_EMPTY
 12376  107B  0834               	movf	??_I2C_DO_TX_EMPTY,w
 12377  107C  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 12378  107D  0024               	movlb	4	; select bank4
 12379  107E  0821               	movf	(_I2C_Status+1)^(0+512),w
 12380  107F  008A               	movwf	10
 12381  1080  0820               	movf	_I2C_Status^(0+512),w
 12382  1081  000A               	callw
 12383  1082  3190               	pagesel	$
 12384  1083  0020               	movlb	0	; select bank0
 12385  1084  00B5               	movwf	??_I2C_DO_TX_EMPTY+1
 12386  1085  01B6               	clrf	??_I2C_DO_TX_EMPTY+2
 12387                           
 12388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12389                           ; Switch size 1, requested type "simple"
 12390                           ; Number of cases is 1, Range of values is 0 to 0
 12391                           ; switch strategies available:
 12392                           ; Name         Instructions Cycles
 12393                           ; simple_byte            4     3 (average)
 12394                           ; direct_byte            8     6 (fixed)
 12395                           ; jumptable            260     6 (fixed)
 12396                           ;	Chosen strategy is simple_byte
 12397  1086  0836               	movf	??_I2C_DO_TX_EMPTY+2,w
 12398  1087  3A00               	xorlw	0	; case 0
 12399  1088  1903               	skipnz
 12400  1089  288B               	goto	l6847
 12401  108A  2875               	goto	l3875
 12402  108B                     l6847:
 12403                           
 12404                           ; Switch size 1, requested type "simple"
 12405                           ; Number of cases is 4, Range of values is 1 to 4
 12406                           ; switch strategies available:
 12407                           ; Name         Instructions Cycles
 12408                           ; simple_byte           13     7 (average)
 12409                           ; direct_byte           17     9 (fixed)
 12410                           ; jumptable            263     9 (fixed)
 12411                           ;	Chosen strategy is simple_byte
 12412  108B  0835               	movf	??_I2C_DO_TX_EMPTY+1,w
 12413  108C  3A01               	xorlw	1	; case 1
 12414  108D  1903               	skipnz
 12415  108E  2875               	goto	l3875
 12416  108F  3A03               	xorlw	3	; case 2
 12417  1090  1903               	skipnz
 12418  1091  286E               	goto	l3865
 12419  1092  3A01               	xorlw	1	; case 3
 12420  1093  1903               	skipnz
 12421  1094  286E               	goto	l3865
 12422  1095  3A07               	xorlw	7	; case 4
 12423  1096  1903               	skipnz
 12424  1097  2871               	goto	l3869
 12425  1098  2875               	goto	l3875
 12426  1099  0008               	return
 12427  109A                     __end_of_I2C_DO_TX_EMPTY:
 12428                           
 12429                           	psect	text57
 12430  1CA2                     __ptext57:	
 12431 ;; *************** function _I2C_MasterSetIrq *****************
 12432 ;; Defined at:
 12433 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;		None
 12438 ;; Return value:  Size  Location     Type
 12439 ;;                  1    wreg      void 
 12440 ;; Registers used:
 12441 ;;		None
 12442 ;; Tracked objects:
 12443 ;;		On entry : 0/0
 12444 ;;		On exit  : 0/0
 12445 ;;		Unchanged: 0/0
 12446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12447 ;;      Params:         0       0       0       0       0       0       0       0
 12448 ;;      Locals:         0       0       0       0       0       0       0       0
 12449 ;;      Temps:          0       0       0       0       0       0       0       0
 12450 ;;      Totals:         0       0       0       0       0       0       0       0
 12451 ;;Total ram usage:        0 bytes
 12452 ;; Hardware stack levels used: 1
 12453 ;; Hardware stack levels required when called: 4
 12454 ;; This function calls:
 12455 ;;		Nothing
 12456 ;; This function is called by:
 12457 ;;		_I2C_DO_TX_EMPTY
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461  1CA2                     _I2C_MasterSetIrq:	
 12462                           ;psect for function _I2C_MasterSetIrq
 12463                           
 12464                           
 12465                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
 12466                           
 12467                           ;incstack = 0
 12468                           ; Regs used in _I2C_MasterSetIrq: []
 12469  1CA2  0020               	movlb	0	; select bank0
 12470  1CA3  1591               	bsf	17,3	;volatile
 12471  1CA4  0008               	return
 12472  1CA5                     __end_of_I2C_MasterSetIrq:
 12473                           
 12474                           	psect	text58
 12475  1CE9                     __ptext58:	
 12476 ;; *************** function _I2C_MasterIsNack *****************
 12477 ;; Defined at:
 12478 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 12479 ;; Parameters:    Size  Location     Type
 12480 ;;		None
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;		None
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      _Bool 
 12485 ;; Registers used:
 12486 ;;		wreg, status,2, status,0
 12487 ;; Tracked objects:
 12488 ;;		On entry : 0/0
 12489 ;;		On exit  : 0/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12492 ;;      Params:         0       0       0       0       0       0       0       0
 12493 ;;      Locals:         0       0       0       0       0       0       0       0
 12494 ;;      Temps:          0       0       0       0       0       0       0       0
 12495 ;;      Totals:         0       0       0       0       0       0       0       0
 12496 ;;Total ram usage:        0 bytes
 12497 ;; Hardware stack levels used: 1
 12498 ;; Hardware stack levels required when called: 4
 12499 ;; This function calls:
 12500 ;;		Nothing
 12501 ;; This function is called by:
 12502 ;;		_I2C_MasterFsm
 12503 ;;		_I2C_DO_TX
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507  1CE9                     _I2C_MasterIsNack:	
 12508                           ;psect for function _I2C_MasterIsNack
 12509                           
 12510                           
 12511                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 12512                           
 12513                           ;incstack = 0
 12514                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 12515  1CE9  0024               	movlb	4	; select bank4
 12516  1CEA  0E16               	swapf	22,w	;volatile
 12517  1CEB  0C89               	rrf	9,f
 12518  1CEC  0C89               	rrf	9,f
 12519  1CED  3901               	andlw	1
 12520  1CEE  0008               	return
 12521  1CEF                     __end_of_I2C_MasterIsNack:
 12522                           
 12523                           	psect	text59
 12524  1CE3                     __ptext59:	
 12525 ;; *************** function _I2C_MasterSendTxData *****************
 12526 ;; Defined at:
 12527 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  data            1    wreg     unsigned char 
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;  data            1   10[BANK0 ] unsigned char 
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      void 
 12534 ;; Registers used:
 12535 ;;		wreg
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/0
 12538 ;;		On exit  : 0/0
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12541 ;;      Params:         0       0       0       0       0       0       0       0
 12542 ;;      Locals:         0       1       0       0       0       0       0       0
 12543 ;;      Temps:          0       0       0       0       0       0       0       0
 12544 ;;      Totals:         0       1       0       0       0       0       0       0
 12545 ;;Total ram usage:        1 bytes
 12546 ;; Hardware stack levels used: 1
 12547 ;; Hardware stack levels required when called: 4
 12548 ;; This function calls:
 12549 ;;		Nothing
 12550 ;; This function is called by:
 12551 ;;		_I2C_DO_SEND_ADR_READ
 12552 ;;		_I2C_DO_SEND_ADR_WRITE
 12553 ;;		_I2C_DO_TX
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557  1CE3                     _I2C_MasterSendTxData:	
 12558                           ;psect for function _I2C_MasterSendTxData
 12559                           
 12560                           
 12561                           ;incstack = 0
 12562                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 12563                           ;I2C_MasterSendTxData@data stored from wreg
 12564  1CE3  0020               	movlb	0	; select bank0
 12565  1CE4  00AA               	movwf	I2C_MasterSendTxData@data
 12566                           
 12567                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
 12568  1CE5  082A               	movf	I2C_MasterSendTxData@data,w
 12569  1CE6  0024               	movlb	4	; select bank4
 12570  1CE7  0091               	movwf	17	;volatile
 12571  1CE8  0008               	return
 12572  1CE9                     __end_of_I2C_MasterSendTxData:
 12573                           
 12574                           	psect	text60
 12575  1CA9                     __ptext60:	
 12576 ;; *************** function _I2C_MasterSendAck *****************
 12577 ;; Defined at:
 12578 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;		None
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;		None
 12583 ;; Return value:  Size  Location     Type
 12584 ;;                  1    wreg      void 
 12585 ;; Registers used:
 12586 ;;		None
 12587 ;; Tracked objects:
 12588 ;;		On entry : 0/0
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12592 ;;      Params:         0       0       0       0       0       0       0       0
 12593 ;;      Locals:         0       0       0       0       0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0
 12595 ;;      Totals:         0       0       0       0       0       0       0       0
 12596 ;;Total ram usage:        0 bytes
 12597 ;; Hardware stack levels used: 1
 12598 ;; Hardware stack levels required when called: 4
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_I2C_DO_RX
 12603 ;;		_I2C_DO_RX_ACK
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607  1CA9                     _I2C_MasterSendAck:	
 12608                           ;psect for function _I2C_MasterSendAck
 12609                           
 12610                           
 12611                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 12612                           
 12613                           ;incstack = 0
 12614                           ; Regs used in _I2C_MasterSendAck: []
 12615  1CA9  0024               	movlb	4	; select bank4
 12616  1CAA  1296               	bcf	22,5	;volatile
 12617                           
 12618                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 12619  1CAB  1616               	bsf	22,4	;volatile
 12620  1CAC  0008               	return
 12621  1CAD                     __end_of_I2C_MasterSendAck:
 12622                           
 12623                           	psect	text61
 12624  1C9F                     __ptext61:	
 12625 ;; *************** function _I2C_MasterGetRxData *****************
 12626 ;; Defined at:
 12627 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;		None
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  1    wreg      unsigned char 
 12634 ;; Registers used:
 12635 ;;		wreg
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12641 ;;      Params:         0       0       0       0       0       0       0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0
 12644 ;;      Totals:         0       0       0       0       0       0       0       0
 12645 ;;Total ram usage:        0 bytes
 12646 ;; Hardware stack levels used: 1
 12647 ;; Hardware stack levels required when called: 4
 12648 ;; This function calls:
 12649 ;;		Nothing
 12650 ;; This function is called by:
 12651 ;;		_I2C_DO_RX
 12652 ;; This function uses a non-reentrant model
 12653 ;;
 12654                           
 12655  1C9F                     _I2C_MasterGetRxData:	
 12656                           ;psect for function _I2C_MasterGetRxData
 12657                           
 12658                           
 12659                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
 12660                           
 12661                           ;incstack = 0
 12662                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 12663  1C9F  0024               	movlb	4	; select bank4
 12664  1CA0  0811               	movf	17,w	;volatile
 12665  1CA1  0008               	return
 12666  1CA2                     __end_of_I2C_MasterGetRxData:
 12667                           
 12668                           	psect	text62
 12669  1CA5                     __ptext62:	
 12670 ;; *************** function _I2C_MasterSendNack *****************
 12671 ;; Defined at:
 12672 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;		None
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		None
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12686 ;;      Params:         0       0       0       0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0       0
 12689 ;;      Totals:         0       0       0       0       0       0       0       0
 12690 ;;Total ram usage:        0 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 4
 12693 ;; This function calls:
 12694 ;;		Nothing
 12695 ;; This function is called by:
 12696 ;;		_I2C_DO_RX_NACK_STOP
 12697 ;;		_I2C_DO_RX_NACK_RESTART
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701  1CA5                     _I2C_MasterSendNack:	
 12702                           ;psect for function _I2C_MasterSendNack
 12703                           
 12704                           
 12705                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 12706                           
 12707                           ;incstack = 0
 12708                           ; Regs used in _I2C_MasterSendNack: []
 12709  1CA5  0024               	movlb	4	; select bank4
 12710  1CA6  1696               	bsf	22,5	;volatile
 12711                           
 12712                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 12713  1CA7  1616               	bsf	22,4	;volatile
 12714  1CA8  0008               	return
 12715  1CA9                     __end_of_I2C_MasterSendNack:
 12716                           
 12717                           	psect	text63
 12718  1C9C                     __ptext63:	
 12719 ;; *************** function _I2C_MasterStartRx *****************
 12720 ;; Defined at:
 12721 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		None
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12735 ;;      Params:         0       0       0       0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used: 1
 12741 ;; Hardware stack levels required when called: 4
 12742 ;; This function calls:
 12743 ;;		Nothing
 12744 ;; This function is called by:
 12745 ;;		_I2C_DO_RCEN
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749  1C9C                     _I2C_MasterStartRx:	
 12750                           ;psect for function _I2C_MasterStartRx
 12751                           
 12752                           
 12753                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
 12754                           
 12755                           ;incstack = 0
 12756                           ; Regs used in _I2C_MasterStartRx: []
 12757  1C9C  0024               	movlb	4	; select bank4
 12758  1C9D  1596               	bsf	22,3	;volatile
 12759  1C9E  0008               	return
 12760  1C9F                     __end_of_I2C_MasterStartRx:
 12761                           
 12762                           	psect	text64
 12763  1000                     __ptext64:	
 12764 ;; *************** function _I2C_CallbackReturnReset *****************
 12765 ;; Defined at:
 12766 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  funPtr          1   19[BANK0 ] PTR void 
 12769 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12770 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      enum E360
 12775 ;; Registers used:
 12776 ;;		wreg
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12782 ;;      Params:         0       1       0       0       0       0       0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0       0
 12785 ;;      Totals:         0       1       0       0       0       0       0       0
 12786 ;;Total ram usage:        1 bytes
 12787 ;; Hardware stack levels used: 1
 12788 ;; Hardware stack levels required when called: 4
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_I2C_Open
 12793 ;;		_I2C_DO_TX
 12794 ;;		_I2C_DO_RX
 12795 ;;		_I2C_DO_TX_EMPTY
 12796 ;;		_I2C_DO_ADDRESS_NACK
 12797 ;;		_I2C_DO_RX_EMPTY
 12798 ;; This function uses a non-reentrant model
 12799 ;;
 12800                           
 12801  1000                     _I2C_CallbackReturnReset:	
 12802                           ;psect for function _I2C_CallbackReturnReset
 12803                           
 12804                           
 12805                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 12809  1000  3005               	movlw	5
 12810  1001  0008               	return
 12811  1002                     __end_of_I2C_CallbackReturnReset:
 12812                           
 12813                           	psect	text65
 12814  1C88                     __ptext65:	
 12815 ;; *************** function _I2C_CallbackReturnStop *****************
 12816 ;; Defined at:
 12817 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;  funPtr          1   19[BANK0 ] PTR void 
 12820 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12821 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;		None
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      enum E360
 12826 ;; Registers used:
 12827 ;;		wreg
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12833 ;;      Params:         0       1       0       0       0       0       0       0
 12834 ;;      Locals:         0       0       0       0       0       0       0       0
 12835 ;;      Temps:          0       0       0       0       0       0       0       0
 12836 ;;      Totals:         0       1       0       0       0       0       0       0
 12837 ;;Total ram usage:        1 bytes
 12838 ;; Hardware stack levels used: 1
 12839 ;; Hardware stack levels required when called: 4
 12840 ;; This function calls:
 12841 ;;		Nothing
 12842 ;; This function is called by:
 12843 ;;		_I2C_Open
 12844 ;;		_I2C_SetCallback
 12845 ;;		_I2C_DO_TX
 12846 ;;		_I2C_DO_RX
 12847 ;;		_I2C_DO_TX_EMPTY
 12848 ;;		_I2C_DO_ADDRESS_NACK
 12849 ;;		_I2C_DO_RX_EMPTY
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853  1C88                     _I2C_CallbackReturnStop:	
 12854                           ;psect for function _I2C_CallbackReturnStop
 12855                           
 12856                           
 12857                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12858                           
 12859                           ;incstack = 0
 12860                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 12861  1C88  3001               	movlw	1
 12862  1C89  0008               	return
 12863  1C8A                     __end_of_I2C_CallbackReturnStop:
 12864                           
 12865                           	psect	text66
 12866  1E7B                     __ptext66:	
 12867 ;; *************** function _rdBlkRegCompleteHandler *****************
 12868 ;; Defined at:
 12869 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  ptr             1   19[BANK0 ] PTR void 
 12872 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12873 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;		None
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      enum E360
 12878 ;; Registers used:
 12879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12885 ;;      Params:         0       1       0       0       0       0       0       0
 12886 ;;      Locals:         0       0       0       0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0
 12888 ;;      Totals:         0       1       0       0       0       0       0       0
 12889 ;;Total ram usage:        1 bytes
 12890 ;; Hardware stack levels used: 1
 12891 ;; Hardware stack levels required when called: 6
 12892 ;; This function calls:
 12893 ;;		_I2C_SetBuffer
 12894 ;;		_I2C_SetDataCompleteCallback
 12895 ;; This function is called by:
 12896 ;;		_I2C_ReadDataBlock
 12897 ;;		_I2C_DO_TX
 12898 ;;		_I2C_DO_RX
 12899 ;;		_I2C_DO_TX_EMPTY
 12900 ;;		_I2C_DO_ADDRESS_NACK
 12901 ;;		_I2C_DO_RX_EMPTY
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905  1E7B                     _rdBlkRegCompleteHandler:	
 12906                           ;psect for function _rdBlkRegCompleteHandler
 12907                           
 12908                           
 12909                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12910                           
 12911                           ;incstack = 0
 12912                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 12913  1E7B  0020               	movlb	0	; select bank0
 12914  1E7C  0833               	movf	rdBlkRegCompleteHandler@ptr,w
 12915  1E7D  0086               	movwf	6
 12916  1E7E  0187               	clrf	7
 12917  1E7F  3F40               	moviw [0]fsr1
 12918  1E80  00AA               	movwf	I2C_SetBuffer@bufferSize
 12919  1E81  3F41               	moviw [1]fsr1
 12920  1E82  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 12921  1E83  0833               	movf	rdBlkRegCompleteHandler@ptr,w
 12922  1E84  3E02               	addlw	2
 12923  1E85  0086               	movwf	6
 12924  1E86  0187               	clrf	7
 12925  1E87  0801               	movf	1,w
 12926  1E88  319E  2624  319E   	fcall	_I2C_SetBuffer
 12927                           
 12928                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12929  1E8B  3000               	movlw	0
 12930  1E8C  0020               	movlb	0	; select bank0
 12931  1E8D  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 12932  1E8E  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 12933  1E8F  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 12934  1E90  319D  259E         	fcall	_I2C_SetDataCompleteCallback
 12935                           
 12936                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12937  1E92  3002               	movlw	2
 12938  1E93  0008               	return
 12939  1E94                     __end_of_rdBlkRegCompleteHandler:
 12940                           
 12941                           	psect	text67
 12942  1002                     __ptext67:	
 12943 ;; *************** function _wr1RegCompleteHandler *****************
 12944 ;; Defined at:
 12945 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  ptr             1   19[BANK0 ] PTR void 
 12948 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12949 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;		None
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  1    wreg      enum E360
 12954 ;; Registers used:
 12955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12961 ;;      Params:         0       1       0       0       0       0       0       0
 12962 ;;      Locals:         0       0       0       0       0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0       0       0       0
 12964 ;;      Totals:         0       1       0       0       0       0       0       0
 12965 ;;Total ram usage:        1 bytes
 12966 ;; Hardware stack levels used: 1
 12967 ;; Hardware stack levels required when called: 6
 12968 ;; This function calls:
 12969 ;;		_I2C_SetBuffer
 12970 ;;		_I2C_SetDataCompleteCallback
 12971 ;; This function is called by:
 12972 ;;		_I2C_Write1ByteRegister
 12973 ;;		_I2C_DO_TX
 12974 ;;		_I2C_DO_RX
 12975 ;;		_I2C_DO_TX_EMPTY
 12976 ;;		_I2C_DO_ADDRESS_NACK
 12977 ;;		_I2C_DO_RX_EMPTY
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981  1002                     _wr1RegCompleteHandler:	
 12982                           ;psect for function _wr1RegCompleteHandler
 12983                           
 12984                           
 12985                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12986                           
 12987                           ;incstack = 0
 12988                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12989  1002  3001               	movlw	1
 12990  1003  0020               	movlb	0	; select bank0
 12991  1004  00AA               	movwf	I2C_SetBuffer@bufferSize
 12992  1005  3000               	movlw	0
 12993  1006  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 12994  1007  0833               	movf	wr1RegCompleteHandler@ptr,w
 12995  1008  319E  2624  3190   	fcall	_I2C_SetBuffer
 12996                           
 12997                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12998  100B  3000               	movlw	0
 12999  100C  0020               	movlb	0	; select bank0
 13000  100D  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 13001  100E  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 13002  100F  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 13003  1010  319D  259E         	fcall	_I2C_SetDataCompleteCallback
 13004                           
 13005                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 13006  1012  3004               	movlw	4
 13007  1013  0008               	return
 13008  1014                     __end_of_wr1RegCompleteHandler:
 13009                           
 13010                           	psect	text68
 13011  1DFD                     __ptext68:	
 13012 ;; *************** function _rd2RegCompleteHandler *****************
 13013 ;; Defined at:
 13014 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  ptr             1   19[BANK0 ] PTR void 
 13017 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13018 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      enum E360
 13023 ;; Registers used:
 13024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13030 ;;      Params:         0       1       0       0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0       0       0       0
 13033 ;;      Totals:         0       1       0       0       0       0       0       0
 13034 ;;Total ram usage:        1 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 6
 13037 ;; This function calls:
 13038 ;;		_I2C_SetBuffer
 13039 ;;		_I2C_SetDataCompleteCallback
 13040 ;; This function is called by:
 13041 ;;		_I2C_Read2ByteRegister
 13042 ;;		_I2C_DO_TX
 13043 ;;		_I2C_DO_RX
 13044 ;;		_I2C_DO_TX_EMPTY
 13045 ;;		_I2C_DO_ADDRESS_NACK
 13046 ;;		_I2C_DO_RX_EMPTY
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050  1DFD                     _rd2RegCompleteHandler:	
 13051                           ;psect for function _rd2RegCompleteHandler
 13052                           
 13053                           
 13054                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 13055                           
 13056                           ;incstack = 0
 13057                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13058  1DFD  3002               	movlw	2
 13059  1DFE  0020               	movlb	0	; select bank0
 13060  1DFF  00AA               	movwf	I2C_SetBuffer@bufferSize
 13061  1E00  3000               	movlw	0
 13062  1E01  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 13063  1E02  0833               	movf	rd2RegCompleteHandler@ptr,w
 13064  1E03  319E  2624  319D   	fcall	_I2C_SetBuffer
 13065                           
 13066                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13067  1E06  3000               	movlw	0
 13068  1E07  0020               	movlb	0	; select bank0
 13069  1E08  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 13070  1E09  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 13071  1E0A  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 13072  1E0B  319D  259E         	fcall	_I2C_SetDataCompleteCallback
 13073                           
 13074                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 13075  1E0D  3002               	movlw	2
 13076  1E0E  0008               	return
 13077  1E0F                     __end_of_rd2RegCompleteHandler:
 13078                           
 13079                           	psect	text69
 13080  1DEB                     __ptext69:	
 13081 ;; *************** function _rd1RegCompleteHandler *****************
 13082 ;; Defined at:
 13083 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  ptr             1   19[BANK0 ] PTR void 
 13086 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13087 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;		None
 13090 ;; Return value:  Size  Location     Type
 13091 ;;                  1    wreg      enum E360
 13092 ;; Registers used:
 13093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13094 ;; Tracked objects:
 13095 ;;		On entry : 0/0
 13096 ;;		On exit  : 0/0
 13097 ;;		Unchanged: 0/0
 13098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13099 ;;      Params:         0       1       0       0       0       0       0       0
 13100 ;;      Locals:         0       0       0       0       0       0       0       0
 13101 ;;      Temps:          0       0       0       0       0       0       0       0
 13102 ;;      Totals:         0       1       0       0       0       0       0       0
 13103 ;;Total ram usage:        1 bytes
 13104 ;; Hardware stack levels used: 1
 13105 ;; Hardware stack levels required when called: 6
 13106 ;; This function calls:
 13107 ;;		_I2C_SetBuffer
 13108 ;;		_I2C_SetDataCompleteCallback
 13109 ;; This function is called by:
 13110 ;;		_I2C_Read1ByteRegister
 13111 ;;		_I2C_DO_TX
 13112 ;;		_I2C_DO_RX
 13113 ;;		_I2C_DO_TX_EMPTY
 13114 ;;		_I2C_DO_ADDRESS_NACK
 13115 ;;		_I2C_DO_RX_EMPTY
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119  1DEB                     _rd1RegCompleteHandler:	
 13120                           ;psect for function _rd1RegCompleteHandler
 13121                           
 13122                           
 13123                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 13124                           
 13125                           ;incstack = 0
 13126                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13127  1DEB  3001               	movlw	1
 13128  1DEC  0020               	movlb	0	; select bank0
 13129  1DED  00AA               	movwf	I2C_SetBuffer@bufferSize
 13130  1DEE  3000               	movlw	0
 13131  1DEF  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 13132  1DF0  0833               	movf	rd1RegCompleteHandler@ptr,w
 13133  1DF1  319E  2624  319D   	fcall	_I2C_SetBuffer
 13134                           
 13135                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13136  1DF4  3000               	movlw	0
 13137  1DF5  0020               	movlb	0	; select bank0
 13138  1DF6  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 13139  1DF7  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 13140  1DF8  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 13141  1DF9  319D  259E         	fcall	_I2C_SetDataCompleteCallback
 13142                           
 13143                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 13144  1DFB  3002               	movlw	2
 13145  1DFC  0008               	return
 13146  1DFD                     __end_of_rd1RegCompleteHandler:
 13147                           
 13148                           	psect	text70
 13149  1DD9                     __ptext70:	
 13150 ;; *************** function _wr2RegCompleteHandler *****************
 13151 ;; Defined at:
 13152 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;  ptr             1   19[BANK0 ] PTR void 
 13155 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13156 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13157 ;; Auto vars:     Size  Location     Type
 13158 ;;		None
 13159 ;; Return value:  Size  Location     Type
 13160 ;;                  1    wreg      enum E360
 13161 ;; Registers used:
 13162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13163 ;; Tracked objects:
 13164 ;;		On entry : 0/0
 13165 ;;		On exit  : 0/0
 13166 ;;		Unchanged: 0/0
 13167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13168 ;;      Params:         0       1       0       0       0       0       0       0
 13169 ;;      Locals:         0       0       0       0       0       0       0       0
 13170 ;;      Temps:          0       0       0       0       0       0       0       0
 13171 ;;      Totals:         0       1       0       0       0       0       0       0
 13172 ;;Total ram usage:        1 bytes
 13173 ;; Hardware stack levels used: 1
 13174 ;; Hardware stack levels required when called: 6
 13175 ;; This function calls:
 13176 ;;		_I2C_SetBuffer
 13177 ;;		_I2C_SetDataCompleteCallback
 13178 ;; This function is called by:
 13179 ;;		_I2C_Write2ByteRegister
 13180 ;;		_I2C_DO_TX
 13181 ;;		_I2C_DO_RX
 13182 ;;		_I2C_DO_TX_EMPTY
 13183 ;;		_I2C_DO_ADDRESS_NACK
 13184 ;;		_I2C_DO_RX_EMPTY
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188  1DD9                     _wr2RegCompleteHandler:	
 13189                           ;psect for function _wr2RegCompleteHandler
 13190                           
 13191                           
 13192                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 13193                           
 13194                           ;incstack = 0
 13195                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13196  1DD9  3002               	movlw	2
 13197  1DDA  0020               	movlb	0	; select bank0
 13198  1DDB  00AA               	movwf	I2C_SetBuffer@bufferSize
 13199  1DDC  3000               	movlw	0
 13200  1DDD  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 13201  1DDE  0833               	movf	wr2RegCompleteHandler@ptr,w
 13202  1DDF  319E  2624  319D   	fcall	_I2C_SetBuffer
 13203                           
 13204                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 13205  1DE2  3000               	movlw	0
 13206  1DE3  0020               	movlb	0	; select bank0
 13207  1DE4  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 13208  1DE5  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 13209  1DE6  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 13210  1DE7  319D  259E         	fcall	_I2C_SetDataCompleteCallback
 13211                           
 13212                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 13213  1DE9  3004               	movlw	4
 13214  1DEA  0008               	return
 13215  1DEB                     __end_of_wr2RegCompleteHandler:
 13216                           
 13217                           	psect	text71
 13218  1D9E                     __ptext71:	
 13219 ;; *************** function _I2C_SetDataCompleteCallback *****************
 13220 ;; Defined at:
 13221 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  cb              2   15[BANK0 ] PTR FTN(PTR void ,)enum 
 13224 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13225 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13226 ;;  ptr             1   17[BANK0 ] PTR void 
 13227 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13228 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      void 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13240 ;;      Params:         0       3       0       0       0       0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0
 13242 ;;      Temps:          0       1       0       0       0       0       0       0
 13243 ;;      Totals:         0       4       0       0       0       0       0       0
 13244 ;;Total ram usage:        4 bytes
 13245 ;; Hardware stack levels used: 1
 13246 ;; Hardware stack levels required when called: 5
 13247 ;; This function calls:
 13248 ;;		_I2C_SetCallback
 13249 ;; This function is called by:
 13250 ;;		_rd1RegCompleteHandler
 13251 ;;		_rd2RegCompleteHandler
 13252 ;;		_wr1RegCompleteHandler
 13253 ;;		_wr2RegCompleteHandler
 13254 ;;		_rdBlkRegCompleteHandler
 13255 ;;		_I2C_Read1ByteRegister
 13256 ;;		_I2C_Read2ByteRegister
 13257 ;;		_I2C_Write1ByteRegister
 13258 ;;		_I2C_Write2ByteRegister
 13259 ;;		_I2C_ReadDataBlock
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263  1D9E                     _I2C_SetDataCompleteCallback:	
 13264                           ;psect for function _I2C_SetDataCompleteCallback
 13265                           
 13266                           
 13267                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 13268                           
 13269                           ;incstack = 0
 13270                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13271  1D9E  0020               	movlb	0	; select bank0
 13272  1D9F  0830               	movf	I2C_SetDataCompleteCallback@cb+1,w
 13273  1DA0  00AB               	movwf	I2C_SetCallback@cb+1
 13274  1DA1  082F               	movf	I2C_SetDataCompleteCallback@cb,w
 13275  1DA2  00AA               	movwf	I2C_SetCallback@cb
 13276  1DA3  0831               	movf	I2C_SetDataCompleteCallback@ptr,w
 13277  1DA4  00B2               	movwf	??_I2C_SetDataCompleteCallback
 13278  1DA5  0832               	movf	??_I2C_SetDataCompleteCallback,w
 13279  1DA6  00AC               	movwf	I2C_SetCallback@ptr
 13280  1DA7  3000               	movlw	0
 13281  1DA8  319F  27B7         	fcall	_I2C_SetCallback
 13282  1DAA  0008               	return
 13283  1DAB                     __end_of_I2C_SetDataCompleteCallback:
 13284                           
 13285                           	psect	text72
 13286  1FB7                     __ptext72:	
 13287 ;; *************** function _I2C_SetCallback *****************
 13288 ;; Defined at:
 13289 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  idx             1    wreg     enum E3903
 13292 ;;  cb              2   10[BANK0 ] PTR FTN(PTR void ,)enum 
 13293 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13294 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 13295 ;;  ptr             1   12[BANK0 ] PTR void 
 13296 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13297 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  idx             1   14[BANK0 ] enum E3903
 13300 ;; Return value:  Size  Location     Type
 13301 ;;                  1    wreg      void 
 13302 ;; Registers used:
 13303 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13304 ;; Tracked objects:
 13305 ;;		On entry : 0/0
 13306 ;;		On exit  : 0/0
 13307 ;;		Unchanged: 0/0
 13308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13309 ;;      Params:         0       3       0       0       0       0       0       0
 13310 ;;      Locals:         0       1       0       0       0       0       0       0
 13311 ;;      Temps:          0       1       0       0       0       0       0       0
 13312 ;;      Totals:         0       5       0       0       0       0       0       0
 13313 ;;Total ram usage:        5 bytes
 13314 ;; Hardware stack levels used: 1
 13315 ;; Hardware stack levels required when called: 4
 13316 ;; This function calls:
 13317 ;;		Nothing
 13318 ;; This function is called by:
 13319 ;;		_I2C_SetDataCompleteCallback
 13320 ;;		_I2C_SetAddressNackCallback
 13321 ;;		_I2C_SetWriteCollisionCallback
 13322 ;;		_I2C_SetDataNackCallback
 13323 ;;		_I2C_SetTimeoutCallback
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327  1FB7                     _I2C_SetCallback:	
 13328                           ;psect for function _I2C_SetCallback
 13329                           
 13330                           
 13331                           ;incstack = 0
 13332                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13333                           ;I2C_SetCallback@idx stored from wreg
 13334  1FB7  0020               	movlb	0	; select bank0
 13335  1FB8  00AE               	movwf	I2C_SetCallback@idx
 13336                           
 13337                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 13338  1FB9  082A               	movf	I2C_SetCallback@cb,w
 13339  1FBA  042B               	iorwf	I2C_SetCallback@cb+1,w
 13340  1FBB  1903               	btfsc	3,2
 13341  1FBC  2FD0               	goto	l3651
 13342                           
 13343                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 13344  1FBD  352E               	lslf	I2C_SetCallback@idx,w
 13345  1FBE  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 13346  1FBF  0086               	movwf	6
 13347  1FC0  3002               	movlw	2	; select bank4/5
 13348  1FC1  0087               	movwf	7
 13349  1FC2  082A               	movf	I2C_SetCallback@cb,w
 13350  1FC3  3FC0               	movwi [0]fsr1
 13351  1FC4  082B               	movf	I2C_SetCallback@cb+1,w
 13352  1FC5  3FC1               	movwi [1]fsr1
 13353                           
 13354                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 13355  1FC6  082C               	movf	I2C_SetCallback@ptr,w
 13356  1FC7  00AD               	movwf	??_I2C_SetCallback
 13357  1FC8  082E               	movf	I2C_SetCallback@idx,w
 13358  1FC9  3E2C               	addlw	(low ((_I2C_Status| (0+512)+12)))& (0+255)
 13359  1FCA  0086               	movwf	6
 13360  1FCB  3002               	movlw	2	; select bank4/5
 13361  1FCC  0087               	movwf	7
 13362  1FCD  082D               	movf	??_I2C_SetCallback,w
 13363  1FCE  0081               	movwf	1
 13364                           
 13365                           ;mcc_generated_files/i2c_master.c: 304:     }
 13366  1FCF  0008               	return
 13367  1FD0                     l3651:
 13368                           
 13369                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 13370  1FD0  352E               	lslf	I2C_SetCallback@idx,w
 13371  1FD1  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 13372  1FD2  0086               	movwf	6
 13373  1FD3  3002               	movlw	2	; select bank4/5
 13374  1FD4  0087               	movwf	7
 13375  1FD5  3088               	movlw	low _I2C_CallbackReturnStop
 13376  1FD6  3FC0               	movwi [0]fsr1
 13377  1FD7  301C               	movlw	high _I2C_CallbackReturnStop
 13378  1FD8  3FC1               	movwi [1]fsr1
 13379                           
 13380                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 13381  1FD9  082E               	movf	I2C_SetCallback@idx,w
 13382  1FDA  3E2C               	addlw	(low ((_I2C_Status| (0+512)+12)))& (0+255)
 13383  1FDB  0086               	movwf	6
 13384  1FDC  3002               	movlw	2	; select bank4/5
 13385  1FDD  0087               	movwf	7
 13386  1FDE  0181               	clrf	1
 13387  1FDF  0008               	return
 13388  1FE0                     __end_of_I2C_SetCallback:
 13389                           
 13390                           	psect	text73
 13391  1E24                     __ptext73:	
 13392 ;; *************** function _I2C_SetBuffer *****************
 13393 ;; Defined at:
 13394 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  buffer          1    wreg     PTR void 
 13397 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 13398 ;;		 -> MCP3422_ReadVoltage@data(3), MCP3422_Write@data(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
 13399 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 13400 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 13401 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 13402 ;;  bufferSize      2   10[BANK0 ] unsigned int 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;  buffer          1   13[BANK0 ] PTR void 
 13405 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 13406 ;;		 -> MCP3422_ReadVoltage@data(3), MCP3422_Write@data(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
 13407 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 13408 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 13409 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  1    wreg      void 
 13412 ;; Registers used:
 13413 ;;		wreg
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13419 ;;      Params:         0       2       0       0       0       0       0       0
 13420 ;;      Locals:         0       1       0       0       0       0       0       0
 13421 ;;      Temps:          0       1       0       0       0       0       0       0
 13422 ;;      Totals:         0       4       0       0       0       0       0       0
 13423 ;;Total ram usage:        4 bytes
 13424 ;; Hardware stack levels used: 1
 13425 ;; Hardware stack levels required when called: 4
 13426 ;; This function calls:
 13427 ;;		Nothing
 13428 ;; This function is called by:
 13429 ;;		_I2C_WriteNBytes
 13430 ;;		_I2C_ReadNBytes
 13431 ;;		_rd1RegCompleteHandler
 13432 ;;		_rd2RegCompleteHandler
 13433 ;;		_wr1RegCompleteHandler
 13434 ;;		_wr2RegCompleteHandler
 13435 ;;		_rdBlkRegCompleteHandler
 13436 ;;		_I2C_Read1ByteRegister
 13437 ;;		_I2C_Read2ByteRegister
 13438 ;;		_I2C_Write1ByteRegister
 13439 ;;		_I2C_Write2ByteRegister
 13440 ;;		_I2C_ReadDataBlock
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444  1E24                     _I2C_SetBuffer:	
 13445                           ;psect for function _I2C_SetBuffer
 13446                           
 13447                           
 13448                           ;incstack = 0
 13449                           ; Regs used in _I2C_SetBuffer: [wreg]
 13450                           ;I2C_SetBuffer@buffer stored from wreg
 13451  1E24  0020               	movlb	0	; select bank0
 13452  1E25  00AD               	movwf	I2C_SetBuffer@buffer
 13453                           
 13454                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 13455  1E26  0024               	movlb	4	; select bank4
 13456  1E27  1DBC               	btfss	(_I2C_Status^(0+512)+28),3
 13457  1E28  0008               	return
 13458                           
 13459                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 13460  1E29  0020               	movlb	0	; select bank0
 13461  1E2A  082D               	movf	I2C_SetBuffer@buffer,w
 13462  1E2B  00AC               	movwf	??_I2C_SetBuffer
 13463  1E2C  082C               	movf	??_I2C_SetBuffer,w
 13464  1E2D  0024               	movlb	4	; select bank4
 13465  1E2E  00B7               	movwf	(low ((_I2C_Status| (0+512)+23)))^0
 13466                           
 13467                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 13468  1E2F  0020               	movlb	0	; select bank0
 13469  1E30  082B               	movf	I2C_SetBuffer@bufferSize+1,w
 13470  1E31  0024               	movlb	4	; select bank4
 13471  1E32  00B9               	movwf	((_I2C_Status+1)^(0+512)+24)
 13472  1E33  0020               	movlb	0	; select bank0
 13473  1E34  082A               	movf	I2C_SetBuffer@bufferSize,w
 13474  1E35  0024               	movlb	4	; select bank4
 13475  1E36  00B8               	movwf	(_I2C_Status^(0+512)+24)
 13476                           
 13477                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 13478  1E37  11BC               	bcf	(_I2C_Status^(0+512)+28),3
 13479  1E38  0008               	return
 13480  1E39                     __end_of_I2C_SetBuffer:
 13481                           
 13482                           	psect	text74
 13483  1C99                     __ptext74:	
 13484 ;; *************** function _I2C_MasterStop *****************
 13485 ;; Defined at:
 13486 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		None
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13500 ;;      Params:         0       0       0       0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0
 13502 ;;      Temps:          0       0       0       0       0       0       0       0
 13503 ;;      Totals:         0       0       0       0       0       0       0       0
 13504 ;;Total ram usage:        0 bytes
 13505 ;; Hardware stack levels used: 1
 13506 ;; Hardware stack levels required when called: 4
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_I2C_DO_SEND_STOP
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514  1C99                     _I2C_MasterStop:	
 13515                           ;psect for function _I2C_MasterStop
 13516                           
 13517                           
 13518                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
 13519                           
 13520                           ;incstack = 0
 13521                           ; Regs used in _I2C_MasterStop: []
 13522  1C99  0024               	movlb	4	; select bank4
 13523  1C9A  1516               	bsf	22,2	;volatile
 13524  1C9B  0008               	return
 13525  1C9C                     __end_of_I2C_MasterStop:
 13526                           
 13527                           	psect	text75
 13528  1C96                     __ptext75:	
 13529 ;; *************** function _I2C_MasterEnableRestart *****************
 13530 ;; Defined at:
 13531 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;		None
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;		None
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		None
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13545 ;;      Params:         0       0       0       0       0       0       0       0
 13546 ;;      Locals:         0       0       0       0       0       0       0       0
 13547 ;;      Temps:          0       0       0       0       0       0       0       0
 13548 ;;      Totals:         0       0       0       0       0       0       0       0
 13549 ;;Total ram usage:        0 bytes
 13550 ;; Hardware stack levels used: 1
 13551 ;; Hardware stack levels required when called: 4
 13552 ;; This function calls:
 13553 ;;		Nothing
 13554 ;; This function is called by:
 13555 ;;		_I2C_DO_SEND_RESTART_READ
 13556 ;;		_I2C_DO_SEND_RESTART_WRITE
 13557 ;;		_I2C_DO_SEND_RESTART
 13558 ;;		_I2C_DO_RX_EMPTY
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562  1C96                     _I2C_MasterEnableRestart:	
 13563                           ;psect for function _I2C_MasterEnableRestart
 13564                           
 13565                           
 13566                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
 13567                           
 13568                           ;incstack = 0
 13569                           ; Regs used in _I2C_MasterEnableRestart: []
 13570  1C96  0024               	movlb	4	; select bank4
 13571  1C97  1496               	bsf	22,1	;volatile
 13572  1C98  0008               	return
 13573  1C99                     __end_of_I2C_MasterEnableRestart:
 13574                           
 13575                           	psect	text76
 13576  1C93                     __ptext76:	
 13577 ;; *************** function _I2C_MasterStart *****************
 13578 ;; Defined at:
 13579 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;		None
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;		None
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      void 
 13586 ;; Registers used:
 13587 ;;		None
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13593 ;;      Params:         0       0       0       0       0       0       0       0
 13594 ;;      Locals:         0       0       0       0       0       0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0
 13596 ;;      Totals:         0       0       0       0       0       0       0       0
 13597 ;;Total ram usage:        0 bytes
 13598 ;; Hardware stack levels used: 1
 13599 ;; Hardware stack levels required when called: 4
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_I2C_MasterOperation
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607  1C93                     _I2C_MasterStart:	
 13608                           ;psect for function _I2C_MasterStart
 13609                           
 13610                           
 13611                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
 13612                           
 13613                           ;incstack = 0
 13614                           ; Regs used in _I2C_MasterStart: []
 13615  1C93  0024               	movlb	4	; select bank4
 13616  1C94  1416               	bsf	22,0	;volatile
 13617  1C95  0008               	return
 13618  1C96                     __end_of_I2C_MasterStart:
 13619                           
 13620                           	psect	text77
 13621  1ECA                     __ptext77:	
 13622 ;; *************** function _I2C_Close *****************
 13623 ;; Defined at:
 13624 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;		None
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;  returnValue     1   11[BANK0 ] enum E355
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      enum E355
 13631 ;; Registers used:
 13632 ;;		wreg, status,2, status,0, pclath, cstack
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13638 ;;      Params:         0       0       0       0       0       0       0       0
 13639 ;;      Locals:         0       1       0       0       0       0       0       0
 13640 ;;      Temps:          0       1       0       0       0       0       0       0
 13641 ;;      Totals:         0       2       0       0       0       0       0       0
 13642 ;;Total ram usage:        2 bytes
 13643 ;; Hardware stack levels used: 1
 13644 ;; Hardware stack levels required when called: 5
 13645 ;; This function calls:
 13646 ;;		_I2C_MasterClearIrq
 13647 ;;		_I2C_MasterClose
 13648 ;;		_I2C_MasterDisableIrq
 13649 ;; This function is called by:
 13650 ;;		_I2C_WriteNBytes
 13651 ;;		_I2C_ReadNBytes
 13652 ;;		_I2C_Read1ByteRegister
 13653 ;;		_I2C_Read2ByteRegister
 13654 ;;		_I2C_Write1ByteRegister
 13655 ;;		_I2C_Write2ByteRegister
 13656 ;;		_I2C_ReadDataBlock
 13657 ;; This function uses a non-reentrant model
 13658 ;;
 13659                           
 13660  1ECA                     _I2C_Close:	
 13661                           ;psect for function _I2C_Close
 13662                           
 13663                           
 13664                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 13665                           
 13666                           ;incstack = 0
 13667                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
 13668  1ECA  0020               	movlb	0	; select bank0
 13669  1ECB  01AB               	clrf	I2C_Close@returnValue
 13670  1ECC  0AAB               	incf	I2C_Close@returnValue,f
 13671                           
 13672                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 13673  1ECD  0024               	movlb	4	; select bank4
 13674  1ECE  18BC               	btfsc	(_I2C_Status^(0+512)+28),1
 13675  1ECF  2EE5               	goto	l4031
 13676                           
 13677                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 13678  1ED0  113C               	bcf	(_I2C_Status^(0+512)+28),2
 13679                           
 13680                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 13681  1ED1  30FF               	movlw	255
 13682  1ED2  0020               	movlb	0	; select bank0
 13683  1ED3  00AA               	movwf	??_I2C_Close
 13684  1ED4  082A               	movf	??_I2C_Close,w
 13685  1ED5  0024               	movlb	4	; select bank4
 13686  1ED6  00B6               	movwf	(_I2C_Status^(0+512)+22)
 13687                           
 13688                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 13689  1ED7  319C  248A  319E   	fcall	_I2C_MasterClearIrq
 13690                           
 13691                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 13692  1EDA  319C  2490  319E   	fcall	_I2C_MasterDisableIrq
 13693                           
 13694                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 13695  1EDD  319C  248D         	fcall	_I2C_MasterClose
 13696                           
 13697                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 13698  1EDF  0024               	movlb	4	; select bank4
 13699  1EE0  083B               	movf	(_I2C_Status^(0+512)+27),w
 13700  1EE1  0020               	movlb	0	; select bank0
 13701  1EE2  00AA               	movwf	??_I2C_Close
 13702  1EE3  082A               	movf	??_I2C_Close,w
 13703  1EE4  00AB               	movwf	I2C_Close@returnValue
 13704  1EE5                     l4031:
 13705                           
 13706                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 13707  1EE5  0020               	movlb	0	; select bank0
 13708  1EE6  082B               	movf	I2C_Close@returnValue,w
 13709  1EE7  0008               	return
 13710  1EE8                     __end_of_I2C_Close:
 13711                           
 13712                           	psect	text78
 13713  1C90                     __ptext78:	
 13714 ;; *************** function _I2C_MasterDisableIrq *****************
 13715 ;; Defined at:
 13716 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 13717 ;; Parameters:    Size  Location     Type
 13718 ;;		None
 13719 ;; Auto vars:     Size  Location     Type
 13720 ;;		None
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  1    wreg      void 
 13723 ;; Registers used:
 13724 ;;		None
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13730 ;;      Params:         0       0       0       0       0       0       0       0
 13731 ;;      Locals:         0       0       0       0       0       0       0       0
 13732 ;;      Temps:          0       0       0       0       0       0       0       0
 13733 ;;      Totals:         0       0       0       0       0       0       0       0
 13734 ;;Total ram usage:        0 bytes
 13735 ;; Hardware stack levels used: 1
 13736 ;; Hardware stack levels required when called: 4
 13737 ;; This function calls:
 13738 ;;		Nothing
 13739 ;; This function is called by:
 13740 ;;		_I2C_Close
 13741 ;;		_I2C_SetTimeOut
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           
 13745  1C90                     _I2C_MasterDisableIrq:	
 13746                           ;psect for function _I2C_MasterDisableIrq
 13747                           
 13748                           
 13749                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
 13750                           
 13751                           ;incstack = 0
 13752                           ; Regs used in _I2C_MasterDisableIrq: []
 13753  1C90  0021               	movlb	1	; select bank1
 13754  1C91  1191               	bcf	17,3	;volatile
 13755  1C92  0008               	return
 13756  1C93                     __end_of_I2C_MasterDisableIrq:
 13757                           
 13758                           	psect	text79
 13759  1C8D                     __ptext79:	
 13760 ;; *************** function _I2C_MasterClose *****************
 13761 ;; Defined at:
 13762 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 13763 ;; Parameters:    Size  Location     Type
 13764 ;;		None
 13765 ;; Auto vars:     Size  Location     Type
 13766 ;;		None
 13767 ;; Return value:  Size  Location     Type
 13768 ;;                  1    wreg      void 
 13769 ;; Registers used:
 13770 ;;		None
 13771 ;; Tracked objects:
 13772 ;;		On entry : 0/0
 13773 ;;		On exit  : 0/0
 13774 ;;		Unchanged: 0/0
 13775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13776 ;;      Params:         0       0       0       0       0       0       0       0
 13777 ;;      Locals:         0       0       0       0       0       0       0       0
 13778 ;;      Temps:          0       0       0       0       0       0       0       0
 13779 ;;      Totals:         0       0       0       0       0       0       0       0
 13780 ;;Total ram usage:        0 bytes
 13781 ;; Hardware stack levels used: 1
 13782 ;; Hardware stack levels required when called: 4
 13783 ;; This function calls:
 13784 ;;		Nothing
 13785 ;; This function is called by:
 13786 ;;		_I2C_Close
 13787 ;; This function uses a non-reentrant model
 13788 ;;
 13789                           
 13790  1C8D                     _I2C_MasterClose:	
 13791                           ;psect for function _I2C_MasterClose
 13792                           
 13793                           
 13794                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 13795                           
 13796                           ;incstack = 0
 13797                           ; Regs used in _I2C_MasterClose: []
 13798  1C8D  0024               	movlb	4	; select bank4
 13799  1C8E  1295               	bcf	21,5	;volatile
 13800  1C8F  0008               	return
 13801  1C90                     __end_of_I2C_MasterClose:
 13802                           
 13803                           	psect	text80
 13804  1C8A                     __ptext80:	
 13805 ;; *************** function _I2C_MasterClearIrq *****************
 13806 ;; Defined at:
 13807 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;		None
 13810 ;; Auto vars:     Size  Location     Type
 13811 ;;		None
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      void 
 13814 ;; Registers used:
 13815 ;;		None
 13816 ;; Tracked objects:
 13817 ;;		On entry : 0/0
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13821 ;;      Params:         0       0       0       0       0       0       0       0
 13822 ;;      Locals:         0       0       0       0       0       0       0       0
 13823 ;;      Temps:          0       0       0       0       0       0       0       0
 13824 ;;      Totals:         0       0       0       0       0       0       0       0
 13825 ;;Total ram usage:        0 bytes
 13826 ;; Hardware stack levels used: 1
 13827 ;; Hardware stack levels required when called: 4
 13828 ;; This function calls:
 13829 ;;		Nothing
 13830 ;; This function is called by:
 13831 ;;		_I2C_Open
 13832 ;;		_I2C_Close
 13833 ;;		_I2C_MasterFsm
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837  1C8A                     _I2C_MasterClearIrq:	
 13838                           ;psect for function _I2C_MasterClearIrq
 13839                           
 13840                           
 13841                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _I2C_MasterClearIrq: []
 13845  1C8A  0020               	movlb	0	; select bank0
 13846  1C8B  1191               	bcf	17,3	;volatile
 13847  1C8C  0008               	return
 13848  1C8D                     __end_of_I2C_MasterClearIrq:
 13849                           
 13850                           	psect	text81
 13851  1E0F                     __ptext81:	
 13852 ;; *************** function _InitModbusSlave *****************
 13853 ;; Defined at:
 13854 ;;		line 17 in file "modbus_slave.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;  u8SlaveId       1    wreg     unsigned char 
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;  u8SlaveId       1   11[BANK0 ] unsigned char 
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      void 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13868 ;;      Params:         0       0       0       0       0       0       0       0
 13869 ;;      Locals:         0       1       0       0       0       0       0       0
 13870 ;;      Temps:          0       1       0       0       0       0       0       0
 13871 ;;      Totals:         0       2       0       0       0       0       0       0
 13872 ;;Total ram usage:        2 bytes
 13873 ;; Hardware stack levels used: 1
 13874 ;; Hardware stack levels required when called: 4
 13875 ;; This function calls:
 13876 ;;		Nothing
 13877 ;; This function is called by:
 13878 ;;		_main
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882  1E0F                     _InitModbusSlave:	
 13883                           ;psect for function _InitModbusSlave
 13884                           
 13885                           
 13886                           ;incstack = 0
 13887                           ; Regs used in _InitModbusSlave: [wreg+status,2]
 13888                           ;InitModbusSlave@u8SlaveId stored from wreg
 13889  1E0F  0020               	movlb	0	; select bank0
 13890  1E10  00AB               	movwf	InitModbusSlave@u8SlaveId
 13891                           
 13892                           ;modbus_slave.c: 17: void InitModbusSlave(uint8_t u8SlaveId);modbus_slave.c: 18: {;modbu
      +                          s_slave.c: 19:     modbusSlaveData.flags.all = 0U;
 13893  1E11  0023               	movlb	3	; select bank3
 13894  1E12  01CA               	clrf	(_modbusSlaveData^(0+384)+42)	;volatile
 13895  1E13  01CB               	clrf	((_modbusSlaveData+1)^(0+384)+42)	;volatile
 13896                           
 13897                           ;modbus_slave.c: 21:     modbusSlaveData.address = u8SlaveId;
 13898  1E14  0020               	movlb	0	; select bank0
 13899  1E15  082B               	movf	InitModbusSlave@u8SlaveId,w
 13900  1E16  00AA               	movwf	??_InitModbusSlave
 13901  1E17  082A               	movf	??_InitModbusSlave,w
 13902  1E18  0023               	movlb	3	; select bank3
 13903  1E19  00CC               	movwf	(_modbusSlaveData^(0+384)+44)	;volatile
 13904                           
 13905                           ;modbus_slave.c: 23:     modbusSlaveData.RxPointer = 0U;
 13906  1E1A  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 13907                           
 13908                           ;modbus_slave.c: 24:     modbusSlaveData.TotalRxValue = 8;
 13909  1E1B  3008               	movlw	8
 13910  1E1C  0020               	movlb	0	; select bank0
 13911  1E1D  00AA               	movwf	??_InitModbusSlave
 13912  1E1E  082A               	movf	??_InitModbusSlave,w
 13913  1E1F  0023               	movlb	3	; select bank3
 13914  1E20  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 13915  1E21  0022               	movlb	2	; select bank2
 13916  1E22  138E               	bcf	14,7	;volatile
 13917  1E23  0008               	return
 13918  1E24                     __end_of_InitModbusSlave:
 13919                           
 13920                           	psect	text82
 13921  127E                     __ptext82:	
 13922 ;; *************** function _FLASH_WriteBlock *****************
 13923 ;; Defined at:
 13924 ;;		line 94 in file "mcc_generated_files/memory.c"
 13925 ;; Parameters:    Size  Location     Type
 13926 ;;  writeAddr       2   13[BANK0 ] unsigned short 
 13927 ;;  flashWordArr    1   15[BANK0 ] PTR unsigned short 
 13928 ;;		 -> main@u16CalBuffer(16), 
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;  blockStartAd    2   19[BANK0 ] unsigned short 
 13931 ;;  i               1   22[BANK0 ] unsigned char 
 13932 ;;  GIEBitValue     1   21[BANK0 ] unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  1    wreg      char 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13942 ;;      Params:         0       3       0       0       0       0       0       0
 13943 ;;      Locals:         0       4       0       0       0       0       0       0
 13944 ;;      Temps:          0       3       0       0       0       0       0       0
 13945 ;;      Totals:         0      10       0       0       0       0       0       0
 13946 ;;Total ram usage:       10 bytes
 13947 ;; Hardware stack levels used: 1
 13948 ;; Hardware stack levels required when called: 5
 13949 ;; This function calls:
 13950 ;;		_FLASH_EraseBlock
 13951 ;; This function is called by:
 13952 ;;		_main
 13953 ;;		_FLASH_WriteWord
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957  127E                     _FLASH_WriteBlock:	
 13958                           ;psect for function _FLASH_WriteBlock
 13959                           
 13960                           
 13961                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x2000 -1) ^ (32 -1)));
 13962                           
 13963                           ;incstack = 0
 13964                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13965  127E  30E0               	movlw	224
 13966  127F  0020               	movlb	0	; select bank0
 13967  1280  052D               	andwf	FLASH_WriteBlock@writeAddr,w
 13968  1281  00B3               	movwf	FLASH_WriteBlock@blockStartAddr
 13969  1282  301F               	movlw	31
 13970  1283  052E               	andwf	FLASH_WriteBlock@writeAddr+1,w
 13971  1284  00B4               	movwf	FLASH_WriteBlock@blockStartAddr+1
 13972                           
 13973                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
 13974  1285  3000               	movlw	0
 13975  1286  1B8B               	btfsc	11,7	;volatile
 13976  1287  3001               	movlw	1
 13977  1288  00B5               	movwf	FLASH_WriteBlock@GIEBitValue
 13978                           
 13979                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 101:    
      +                           if( writeAddr != blockStartAddr )
 13980  1289  0834               	movf	FLASH_WriteBlock@blockStartAddr+1,w
 13981  128A  062E               	xorwf	FLASH_WriteBlock@writeAddr+1,w
 13982  128B  1D03               	skipz
 13983  128C  2A8F               	goto	u4095
 13984  128D  0833               	movf	FLASH_WriteBlock@blockStartAddr,w
 13985  128E  062D               	xorwf	FLASH_WriteBlock@writeAddr,w
 13986  128F                     u4095:
 13987  128F  1D03               	btfss	3,2
 13988  1290  0008               	return
 13989                           
 13990                           ;mcc_generated_files/memory.c: 106:     INTCONbits.GIE = 0;
 13991                           
 13992                           ;mcc_generated_files/memory.c: 104:     }
 13993  1291  138B               	bcf	11,7	;volatile
 13994                           
 13995                           ;mcc_generated_files/memory.c: 109:     FLASH_EraseBlock(writeAddr);
 13996  1292  082E               	movf	FLASH_WriteBlock@writeAddr+1,w
 13997  1293  00AB               	movwf	FLASH_EraseBlock@startAddr+1
 13998  1294  082D               	movf	FLASH_WriteBlock@writeAddr,w
 13999  1295  00AA               	movwf	FLASH_EraseBlock@startAddr
 14000  1296  319F  2726  3192   	fcall	_FLASH_EraseBlock
 14001                           
 14002                           ;mcc_generated_files/memory.c: 112:     PMCON1bits.CFGS = 0;
 14003  1299  0023               	movlb	3	; select bank3
 14004  129A  1315               	bcf	21,6	;volatile
 14005                           
 14006                           ;mcc_generated_files/memory.c: 113:     PMCON1bits.WREN = 1;
 14007  129B  1515               	bsf	21,2	;volatile
 14008                           
 14009                           ;mcc_generated_files/memory.c: 114:     PMCON1bits.LWLO = 1;
 14010  129C  1695               	bsf	21,5	;volatile
 14011                           
 14012                           ;mcc_generated_files/memory.c: 116:     for (i=0; i<32; i++)
 14013  129D  0020               	movlb	0	; select bank0
 14014  129E  01B6               	clrf	FLASH_WriteBlock@i
 14015  129F                     l5079:
 14016                           
 14017                           ;mcc_generated_files/memory.c: 117:     {;mcc_generated_files/memory.c: 119:         PMA
      +                          DRL = (writeAddr & 0xFF);
 14018  129F  082D               	movf	FLASH_WriteBlock@writeAddr,w
 14019  12A0  0023               	movlb	3	; select bank3
 14020  12A1  0091               	movwf	17	;volatile
 14021                           
 14022                           ;mcc_generated_files/memory.c: 121:         PMADRH = ((writeAddr & 0xFF00) >> 8);
 14023  12A2  0020               	movlb	0	; select bank0
 14024  12A3  082E               	movf	FLASH_WriteBlock@writeAddr+1,w
 14025  12A4  0023               	movlb	3	; select bank3
 14026  12A5  0092               	movwf	18	;volatile
 14027                           
 14028                           ;mcc_generated_files/memory.c: 124:         PMDATL = flashWordArray[i];
 14029  12A6  0020               	movlb	0	; select bank0
 14030  12A7  3536               	lslf	FLASH_WriteBlock@i,w
 14031  12A8  072F               	addwf	FLASH_WriteBlock@flashWordArray,w
 14032  12A9  00B0               	movwf	??_FLASH_WriteBlock
 14033  12AA  0830               	movf	??_FLASH_WriteBlock,w
 14034  12AB  0086               	movwf	6
 14035  12AC  3001               	movlw	1	; select bank2/3
 14036  12AD  0087               	movwf	7
 14037  12AE  0801               	movf	1,w
 14038  12AF  0023               	movlb	3	; select bank3
 14039  12B0  0093               	movwf	19	;volatile
 14040                           
 14041                           ;mcc_generated_files/memory.c: 125:         PMDATH = ((flashWordArray[i] & 0xFF00) >> 8)
      +                          ;
 14042  12B1  0020               	movlb	0	; select bank0
 14043  12B2  3536               	lslf	FLASH_WriteBlock@i,w
 14044  12B3  072F               	addwf	FLASH_WriteBlock@flashWordArray,w
 14045  12B4  00B0               	movwf	??_FLASH_WriteBlock
 14046  12B5  0830               	movf	??_FLASH_WriteBlock,w
 14047  12B6  0086               	movwf	6
 14048  12B7  3001               	movlw	1	; select bank2/3
 14049  12B8  0087               	movwf	7
 14050  12B9  3F40               	moviw [0]fsr1
 14051  12BA  00B1               	movwf	??_FLASH_WriteBlock+1
 14052  12BB  3F41               	moviw [1]fsr1
 14053  12BC  00B2               	movwf	??_FLASH_WriteBlock+2
 14054  12BD  0832               	movf	??_FLASH_WriteBlock+2,w
 14055  12BE  0023               	movlb	3	; select bank3
 14056  12BF  0094               	movwf	20	;volatile
 14057                           
 14058                           ;mcc_generated_files/memory.c: 127:         if(i == (32 -1))
 14059  12C0  301F               	movlw	31
 14060  12C1  0020               	movlb	0	; select bank0
 14061  12C2  0636               	xorwf	FLASH_WriteBlock@i,w
 14062  12C3  1D03               	btfss	3,2
 14063  12C4  2AC7               	goto	l5091
 14064                           
 14065                           ;mcc_generated_files/memory.c: 128:         {;mcc_generated_files/memory.c: 130:        
      +                               PMCON1bits.LWLO = 0;
 14066  12C5  0023               	movlb	3	; select bank3
 14067  12C6  1295               	bcf	21,5	;volatile
 14068  12C7                     l5091:
 14069                           
 14070                           ;mcc_generated_files/memory.c: 133:         PMCON2 = 0x55;
 14071  12C7  3055               	movlw	85
 14072  12C8  0023               	movlb	3	; select bank3
 14073  12C9  0096               	movwf	22	;volsfr
 14074                           
 14075                           ;mcc_generated_files/memory.c: 134:         PMCON2 = 0xAA;
 14076  12CA  30AA               	movlw	170
 14077  12CB  0096               	movwf	22	;volsfr
 14078                           
 14079                           ;mcc_generated_files/memory.c: 135:         PMCON1bits.WR = 1;
 14080  12CC  1495               	bsf	21,1	;volatile
 14081                           
 14082                           ;mcc_generated_files/memory.c: 136:         __nop();
 14083  12CD  0000               	nop
 14084                           
 14085                           ;mcc_generated_files/memory.c: 137:         __nop();
 14086  12CE  0000               	nop
 14087                           
 14088                           ;mcc_generated_files/memory.c: 139:      writeAddr++;
 14089  12CF  3001               	movlw	1
 14090  12D0  0020               	movlb	0	; select bank0
 14091  12D1  07AD               	addwf	FLASH_WriteBlock@writeAddr,f
 14092  12D2  3000               	movlw	0
 14093  12D3  3DAE               	addwfc	FLASH_WriteBlock@writeAddr+1,f
 14094                           
 14095                           ;mcc_generated_files/memory.c: 140:     }
 14096  12D4  3001               	movlw	1
 14097  12D5  00B0               	movwf	??_FLASH_WriteBlock
 14098  12D6  0830               	movf	??_FLASH_WriteBlock,w
 14099  12D7  07B6               	addwf	FLASH_WriteBlock@i,f
 14100  12D8  3020               	movlw	32
 14101  12D9  0236               	subwf	FLASH_WriteBlock@i,w
 14102  12DA  1C03               	skipc
 14103  12DB  2A9F               	goto	l5079
 14104                           
 14105                           ;mcc_generated_files/memory.c: 142:     PMCON1bits.WREN = 0;
 14106  12DC  0023               	movlb	3	; select bank3
 14107  12DD  1115               	bcf	21,2	;volatile
 14108                           
 14109                           ;mcc_generated_files/memory.c: 143:     INTCONbits.GIE = GIEBitValue;
 14110  12DE  0020               	movlb	0	; select bank0
 14111  12DF  0C35               	rrf	FLASH_WriteBlock@GIEBitValue,w
 14112  12E0  1C03               	skipc
 14113  12E1  138B               	bcf	11,7	;volatile
 14114  12E2  1803               	skipnc
 14115  12E3  178B               	bsf	11,7	;volatile
 14116  12E4  0008               	return
 14117  12E5                     __end_of_FLASH_WriteBlock:
 14118                           
 14119                           	psect	text83
 14120  1F26                     __ptext83:	
 14121 ;; *************** function _FLASH_EraseBlock *****************
 14122 ;; Defined at:
 14123 ;;		line 148 in file "mcc_generated_files/memory.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  startAddr       2   10[BANK0 ] unsigned short 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  1    wreg      void 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2, status,0
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14137 ;;      Params:         0       2       0       0       0       0       0       0
 14138 ;;      Locals:         0       1       0       0       0       0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0
 14140 ;;      Totals:         0       3       0       0       0       0       0       0
 14141 ;;Total ram usage:        3 bytes
 14142 ;; Hardware stack levels used: 1
 14143 ;; Hardware stack levels required when called: 4
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_FLASH_WriteBlock
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151  1F26                     _FLASH_EraseBlock:	
 14152                           ;psect for function _FLASH_EraseBlock
 14153                           
 14154                           
 14155                           ;mcc_generated_files/memory.c: 148: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 149: {;mcc_generated_files/memory.c: 150:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
 14156                           
 14157                           ;incstack = 0
 14158                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
 14159  1F26  3000               	movlw	0
 14160  1F27  1B8B               	btfsc	11,7	;volatile
 14161  1F28  3001               	movlw	1
 14162  1F29  0020               	movlb	0	; select bank0
 14163  1F2A  00AC               	movwf	FLASH_EraseBlock@GIEBitValue
 14164                           
 14165                           ;mcc_generated_files/memory.c: 153:     INTCONbits.GIE = 0;
 14166  1F2B  138B               	bcf	11,7	;volatile
 14167                           
 14168                           ;mcc_generated_files/memory.c: 155:     PMADRL = (startAddr & 0xFF);
 14169  1F2C  082A               	movf	FLASH_EraseBlock@startAddr,w
 14170  1F2D  0023               	movlb	3	; select bank3
 14171  1F2E  0091               	movwf	17	;volatile
 14172                           
 14173                           ;mcc_generated_files/memory.c: 157:     PMADRH = ((startAddr & 0xFF00) >> 8);
 14174  1F2F  0020               	movlb	0	; select bank0
 14175  1F30  082B               	movf	FLASH_EraseBlock@startAddr+1,w
 14176  1F31  0023               	movlb	3	; select bank3
 14177  1F32  0092               	movwf	18	;volatile
 14178                           
 14179                           ;mcc_generated_files/memory.c: 160:     PMCON1bits.CFGS = 0;
 14180  1F33  1315               	bcf	21,6	;volatile
 14181                           
 14182                           ;mcc_generated_files/memory.c: 161:     PMCON1bits.FREE = 1;
 14183  1F34  1615               	bsf	21,4	;volatile
 14184                           
 14185                           ;mcc_generated_files/memory.c: 162:     PMCON1bits.WREN = 1;
 14186  1F35  1515               	bsf	21,2	;volatile
 14187                           
 14188                           ;mcc_generated_files/memory.c: 165:     PMCON2 = 0x55;
 14189  1F36  3055               	movlw	85
 14190  1F37  0096               	movwf	22	;volsfr
 14191                           
 14192                           ;mcc_generated_files/memory.c: 166:     PMCON2 = 0xAA;
 14193  1F38  30AA               	movlw	170
 14194  1F39  0096               	movwf	22	;volsfr
 14195                           
 14196                           ;mcc_generated_files/memory.c: 167:     PMCON1bits.WR = 1;
 14197  1F3A  1495               	bsf	21,1	;volatile
 14198                           
 14199                           ;mcc_generated_files/memory.c: 168:     __nop();
 14200  1F3B  0000               	nop
 14201                           
 14202                           ;mcc_generated_files/memory.c: 169:     __nop();
 14203  1F3C  0000               	nop
 14204                           
 14205                           ;mcc_generated_files/memory.c: 171:     PMCON1bits.WREN = 0;
 14206  1F3D  0023               	movlb	3	; select bank3
 14207  1F3E  1115               	bcf	21,2	;volatile
 14208                           
 14209                           ;mcc_generated_files/memory.c: 172:     INTCONbits.GIE = GIEBitValue;
 14210  1F3F  0020               	movlb	0	; select bank0
 14211  1F40  0C2C               	rrf	FLASH_EraseBlock@GIEBitValue,w
 14212  1F41  1C03               	skipc
 14213  1F42  138B               	bcf	11,7	;volatile
 14214  1F43  1803               	skipnc
 14215  1F44  178B               	bsf	11,7	;volatile
 14216  1F45  0008               	return
 14217  1F46                     __end_of_FLASH_EraseBlock:
 14218                           
 14219                           	psect	text84
 14220  1F06                     __ptext84:	
 14221 ;; *************** function _FLASH_ReadWord *****************
 14222 ;; Defined at:
 14223 ;;		line 58 in file "mcc_generated_files/memory.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;  flashAddr       2   10[BANK0 ] unsigned short 
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  2   10[BANK0 ] unsigned short 
 14230 ;; Registers used:
 14231 ;;		wreg, status,2, status,0
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14237 ;;      Params:         0       2       0       0       0       0       0       0
 14238 ;;      Locals:         0       1       0       0       0       0       0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0
 14240 ;;      Totals:         0       3       0       0       0       0       0       0
 14241 ;;Total ram usage:        3 bytes
 14242 ;; Hardware stack levels used: 1
 14243 ;; Hardware stack levels required when called: 4
 14244 ;; This function calls:
 14245 ;;		Nothing
 14246 ;; This function is called by:
 14247 ;;		_main
 14248 ;;		_FLASH_WriteWord
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252  1F06                     _FLASH_ReadWord:	
 14253                           ;psect for function _FLASH_ReadWord
 14254                           
 14255                           
 14256                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
 14257                           
 14258                           ;incstack = 0
 14259                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 14260  1F06  3000               	movlw	0
 14261  1F07  1B8B               	btfsc	11,7	;volatile
 14262  1F08  3001               	movlw	1
 14263  1F09  0020               	movlb	0	; select bank0
 14264  1F0A  00AC               	movwf	FLASH_ReadWord@GIEBitValue
 14265                           
 14266                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
 14267  1F0B  138B               	bcf	11,7	;volatile
 14268                           
 14269                           ;mcc_generated_files/memory.c: 63:     PMADRL = (flashAddr & 0x00FF);
 14270  1F0C  082A               	movf	FLASH_ReadWord@flashAddr,w
 14271  1F0D  0023               	movlb	3	; select bank3
 14272  1F0E  0091               	movwf	17	;volatile
 14273                           
 14274                           ;mcc_generated_files/memory.c: 64:     PMADRH = ((flashAddr & 0xFF00) >> 8);
 14275  1F0F  0020               	movlb	0	; select bank0
 14276  1F10  082B               	movf	FLASH_ReadWord@flashAddr+1,w
 14277  1F11  0023               	movlb	3	; select bank3
 14278  1F12  0092               	movwf	18	;volatile
 14279                           
 14280                           ;mcc_generated_files/memory.c: 66:     PMCON1bits.CFGS = 0;
 14281  1F13  1315               	bcf	21,6	;volatile
 14282                           
 14283                           ;mcc_generated_files/memory.c: 67:     PMCON1bits.RD = 1;
 14284  1F14  1415               	bsf	21,0	;volatile
 14285                           
 14286                           ;mcc_generated_files/memory.c: 68:     __nop();
 14287  1F15  0000               	nop
 14288                           
 14289                           ;mcc_generated_files/memory.c: 69:     __nop();
 14290  1F16  0000               	nop
 14291                           
 14292                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
 14293  1F17  0020               	movlb	0	; select bank0
 14294  1F18  0C2C               	rrf	FLASH_ReadWord@GIEBitValue,w
 14295  1F19  1C03               	skipc
 14296  1F1A  138B               	bcf	11,7	;volatile
 14297  1F1B  1803               	skipnc
 14298  1F1C  178B               	bsf	11,7	;volatile
 14299                           
 14300                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((PMDATH << 8) | PMDATL));
 14301  1F1D  0023               	movlb	3	; select bank3
 14302  1F1E  0814               	movf	20,w	;volatile
 14303  1F1F  0020               	movlb	0	; select bank0
 14304  1F20  00AB               	movwf	?_FLASH_ReadWord+1
 14305  1F21  0023               	movlb	3	; select bank3
 14306  1F22  0813               	movf	19,w	;volatile
 14307  1F23  0020               	movlb	0	; select bank0
 14308  1F24  00AA               	movwf	?_FLASH_ReadWord
 14309  1F25  0008               	return
 14310  1F26                     __end_of_FLASH_ReadWord:
 14311                           
 14312                           	psect	intentry
 14313  0004                     __pintentry:	
 14314 ;; *************** function _INTERRUPT_InterruptManager *****************
 14315 ;; Defined at:
 14316 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1    wreg      void 
 14323 ;; Registers used:
 14324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/0
 14327 ;;		On exit  : 0/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14330 ;;      Params:         0       0       0       0       0       0       0       0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0
 14332 ;;      Temps:          0       0       0       0       0       0       0       0
 14333 ;;      Totals:         0       0       0       0       0       0       0       0
 14334 ;;Total ram usage:        0 bytes
 14335 ;; Hardware stack levels used: 1
 14336 ;; Hardware stack levels required when called: 3
 14337 ;; This function calls:
 14338 ;;		Absolute function
 14339 ;;		_TMR0_ISR
 14340 ;;		_TMR1_ISR
 14341 ;;		_mbus_rx_handler
 14342 ;;		_mbus_tx_handler
 14343 ;; This function is called by:
 14344 ;;		Interrupt level 1
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348  0004                     _INTERRUPT_InterruptManager:
 14349                           
 14350                           ;incstack = 0
 14351  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14352                           
 14353                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14354  0005  3180               	pagesel	$
 14355                           
 14356                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14357  0006  1A8B               	btfsc	11,5	;volatile
 14358  0007  1D0B               	btfss	11,2	;volatile
 14359  0008  280D               	goto	i1l121
 14360                           
 14361                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 14362  0009  319D  250D  3180   	fcall	_TMR0_ISR
 14363                           
 14364                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 14365  000C  2831               	goto	i1l131
 14366  000D                     i1l121:	
 14367                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 14368                           
 14369  000D  1F0B               	btfss	11,6	;volatile
 14370  000E  2831               	goto	i1l131
 14371                           
 14372                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 14373  000F  0021               	movlb	1	; select bank1
 14374  0010  1E11               	btfss	17,4	;volatile
 14375  0011  281C               	goto	i1l124
 14376  0012  0020               	movlb	0	; select bank0
 14377  0013  1E11               	btfss	17,4	;volatile
 14378  0014  281C               	goto	i1l124
 14379                           
 14380                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
 14381  0015  0023               	movlb	3	; select bank3
 14382  0016  086F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384),w
 14383  0017  008A               	movwf	10
 14384  0018  086E               	movf	_EUSART_TxDefaultInterruptHandler^(0+384),w
 14385  0019  000A               	callw
 14386  001A  3180               	pagesel	$
 14387                           
 14388                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 14389  001B  2831               	goto	i1l131
 14390  001C                     i1l124:	
 14391                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 14392                           
 14393  001C  0021               	movlb	1	; select bank1
 14394  001D  1E91               	btfss	17,5	;volatile
 14395  001E  2829               	goto	i1l126
 14396  001F  0020               	movlb	0	; select bank0
 14397  0020  1E91               	btfss	17,5	;volatile
 14398  0021  2829               	goto	i1l126
 14399                           
 14400                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
 14401  0022  0023               	movlb	3	; select bank3
 14402  0023  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 14403  0024  008A               	movwf	10
 14404  0025  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 14405  0026  000A               	callw
 14406  0027  3180               	pagesel	$
 14407                           
 14408                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 14409  0028  2831               	goto	i1l131
 14410  0029                     i1l126:	
 14411                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 14412                           
 14413  0029  0021               	movlb	1	; select bank1
 14414  002A  1C11               	btfss	17,0	;volatile
 14415  002B  2831               	goto	i1l131
 14416  002C  0020               	movlb	0	; select bank0
 14417  002D  1C11               	btfss	17,0	;volatile
 14418  002E  2831               	goto	i1l131
 14419                           
 14420                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
 14421  002F  319D  2586         	fcall	_TMR1_ISR
 14422  0031                     i1l131:	
 14423                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 14424                           
 14425                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 14426                           
 14427  0031  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14428  0032  0009               	retfie
 14429  0033                     __end_of_INTERRUPT_InterruptManager:
 14430                           
 14431                           	psect	text86
 14432  1F8E                     __ptext86:	
 14433 ;; *************** function _mbus_tx_handler *****************
 14434 ;; Defined at:
 14435 ;;		line 64 in file "modbus_slave.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;		None
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      void 
 14442 ;; Registers used:
 14443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14449 ;;      Params:         0       0       0       0       0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0
 14451 ;;      Temps:          1       0       0       0       0       0       0       0
 14452 ;;      Totals:         1       0       0       0       0       0       0       0
 14453 ;;Total ram usage:        1 bytes
 14454 ;; Hardware stack levels used: 1
 14455 ;; This function calls:
 14456 ;;		Nothing
 14457 ;; This function is called by:
 14458 ;;		_EUSART_Initialize
 14459 ;;		_INTERRUPT_InterruptManager
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463  1F8E                     _mbus_tx_handler:	
 14464                           ;psect for function _mbus_tx_handler
 14465                           
 14466                           
 14467                           ;modbus_slave.c: 66:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 14468                           
 14469                           ;incstack = 0
 14470                           ; Regs used in _mbus_tx_handler: [wreg+fsr1l+fsr1h+status,2+status,0]
 14471  1F8E  0020               	movlb	0	; select bank0
 14472  1F8F  0196               	clrf	22	;volatile
 14473  1F90  30E0               	movlw	224
 14474  1F91  0097               	movwf	23	;volatile
 14475  1F92  1011               	bcf	17,0	;volatile
 14476                           
 14477                           ;modbus_slave.c: 67:     if(modbusSlaveData.TxPointer < modbusSlaveData.TotalTxValue)
 14478  1F93  0023               	movlb	3	; select bank3
 14479  1F94  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 14480  1F95  0246               	subwf	(_modbusSlaveData^(0+384)+38),w	;volatile
 14481  1F96  1803               	skipnc
 14482  1F97  2FA3               	goto	i1l5175
 14483                           
 14484                           ;modbus_slave.c: 68:     {;modbus_slave.c: 69:         TXREG = modbusSlaveData.ModbusFra
      +                          me[modbusSlaveData.TxPointer++];
 14485  1F98  0846               	movf	(_modbusSlaveData^(0+384)+38),w	;volatile
 14486  1F99  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14487  1F9A  0086               	movwf	6
 14488  1F9B  3001               	movlw	1	; select bank3/4
 14489  1F9C  0087               	movwf	7
 14490  1F9D  0801               	movf	1,w
 14491  1F9E  009A               	movwf	26	;volatile
 14492  1F9F  3001               	movlw	1
 14493  1FA0  00F0               	movwf	??_mbus_tx_handler
 14494  1FA1  0870               	movf	??_mbus_tx_handler,w
 14495  1FA2  07C6               	addwf	(_modbusSlaveData^(0+384)+38),f	;volatile
 14496  1FA3                     i1l5175:
 14497                           
 14498                           ;modbus_slave.c: 71:     if(modbusSlaveData.TxPointer == modbusSlaveData.TotalTxValue)
 14499  1FA3  0846               	movf	(_modbusSlaveData^(0+384)+38),w	;volatile
 14500  1FA4  0648               	xorwf	(_modbusSlaveData^(0+384)+40),w	;volatile
 14501  1FA5  1D03               	skipz
 14502  1FA6  0008               	return
 14503  1FA7                     i1l951:
 14504  1FA7  1C9E               	btfss	30,1	;volatile
 14505  1FA8  2FA7               	goto	i1l951
 14506                           
 14507                           ;modbus_slave.c: 74:         PIE1bits.TXIE = 0; TXSTAbits.TXEN = 0;
 14508  1FA9  0021               	movlb	1	; select bank1
 14509  1FAA  1211               	bcf	17,4	;volatile
 14510  1FAB  0023               	movlb	3	; select bank3
 14511  1FAC  129E               	bcf	30,5	;volatile
 14512                           
 14513                           ;modbus_slave.c: 76:         modbusSlaveData.RxPointer = 0; modbusSlaveData.TotalRxValue
      +                           = 8;;
 14514  1FAD  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 14515  1FAE  3008               	movlw	8
 14516  1FAF  00F0               	movwf	??_mbus_tx_handler
 14517  1FB0  0870               	movf	??_mbus_tx_handler,w
 14518  1FB1  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 14519  1FB2  0022               	movlb	2	; select bank2
 14520  1FB3  138E               	bcf	14,7	;volatile
 14521                           
 14522                           ;modbus_slave.c: 78:         T1CONbits.TMR1ON = 1;
 14523  1FB4  0020               	movlb	0	; select bank0
 14524  1FB5  1418               	bsf	24,0	;volatile
 14525  1FB6  0008               	return
 14526  1FB7                     __end_of_mbus_tx_handler:
 14527                           
 14528                           	psect	text87
 14529  103E                     __ptext87:	
 14530 ;; *************** function _mbus_rx_handler *****************
 14531 ;; Defined at:
 14532 ;;		line 45 in file "modbus_slave.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;		None
 14535 ;; Auto vars:     Size  Location     Type
 14536 ;;		None
 14537 ;; Return value:  Size  Location     Type
 14538 ;;                  1    wreg      void 
 14539 ;; Registers used:
 14540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14541 ;; Tracked objects:
 14542 ;;		On entry : 0/0
 14543 ;;		On exit  : 0/0
 14544 ;;		Unchanged: 0/0
 14545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14546 ;;      Params:         0       0       0       0       0       0       0       0
 14547 ;;      Locals:         0       0       0       0       0       0       0       0
 14548 ;;      Temps:          0       1       0       0       0       0       0       0
 14549 ;;      Totals:         0       1       0       0       0       0       0       0
 14550 ;;Total ram usage:        1 bytes
 14551 ;; Hardware stack levels used: 1
 14552 ;; Hardware stack levels required when called: 2
 14553 ;; This function calls:
 14554 ;;		_ModbusSlaveProcessReceivedQuery
 14555 ;; This function is called by:
 14556 ;;		_EUSART_Initialize
 14557 ;;		_INTERRUPT_InterruptManager
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561  103E                     _mbus_rx_handler:	
 14562                           ;psect for function _mbus_rx_handler
 14563                           
 14564                           
 14565                           ;modbus_slave.c: 47:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 14566                           
 14567                           ;incstack = 0
 14568                           ; Regs used in _mbus_rx_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14569  103E  0020               	movlb	0	; select bank0
 14570  103F  0196               	clrf	22	;volatile
 14571  1040  30E0               	movlw	224
 14572  1041  0097               	movwf	23	;volatile
 14573  1042  1011               	bcf	17,0	;volatile
 14574                           
 14575                           ;modbus_slave.c: 48:     modbusSlaveData.ModbusFrame[modbusSlaveData.RxPointer++] = RCRE
      +                          G;
 14576  1043  0023               	movlb	3	; select bank3
 14577  1044  0819               	movf	25,w	;volatile
 14578  1045  0020               	movlb	0	; select bank0
 14579  1046  00A9               	movwf	??_mbus_rx_handler
 14580  1047  0023               	movlb	3	; select bank3
 14581  1048  0847               	movf	(_modbusSlaveData^(0+384)+39),w	;volatile
 14582  1049  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14583  104A  0086               	movwf	6
 14584  104B  3001               	movlw	1	; select bank3/4
 14585  104C  0087               	movwf	7
 14586  104D  0020               	movlb	0	; select bank0
 14587  104E  0829               	movf	??_mbus_rx_handler,w
 14588  104F  0081               	movwf	1
 14589  1050  3001               	movlw	1
 14590  1051  00A9               	movwf	??_mbus_rx_handler
 14591  1052  0829               	movf	??_mbus_rx_handler,w
 14592  1053  0023               	movlb	3	; select bank3
 14593  1054  07C7               	addwf	(_modbusSlaveData^(0+384)+39),f	;volatile
 14594                           
 14595                           ;modbus_slave.c: 50:     if(modbusSlaveData.RxPointer == 7U)
 14596  1055  3007               	movlw	7
 14597  1056  0647               	xorwf	(_modbusSlaveData^(0+384)+39),w	;volatile
 14598  1057  1D03               	btfss	3,2
 14599  1058  2864               	goto	i1l6547
 14600                           
 14601                           ;modbus_slave.c: 51:     {;modbus_slave.c: 52:         if(modbusSlaveData.ModbusFrame[1U
      +                          ] == 16U)
 14602  1059  3010               	movlw	16
 14603  105A  0631               	xorwf	(_modbusSlaveData^(0+384)+17),w	;volatile
 14604  105B  1D03               	btfss	3,2
 14605  105C  2864               	goto	i1l6547
 14606                           
 14607                           ;modbus_slave.c: 53:         {;modbus_slave.c: 54:             modbusSlaveData.TotalRxVa
      +                          lue += (modbusSlaveData.ModbusFrame[6U]+1U);
 14608  105D  0836               	movf	(_modbusSlaveData^(0+384)+22),w	;volatile
 14609  105E  3E01               	addlw	1
 14610  105F  0020               	movlb	0	; select bank0
 14611  1060  00A9               	movwf	??_mbus_rx_handler
 14612  1061  0829               	movf	??_mbus_rx_handler,w
 14613  1062  0023               	movlb	3	; select bank3
 14614  1063  07C9               	addwf	(_modbusSlaveData^(0+384)+41),f	;volatile
 14615  1064                     i1l6547:
 14616                           
 14617                           ;modbus_slave.c: 58:     if(modbusSlaveData.RxPointer == modbusSlaveData.TotalRxValue)
 14618  1064  0847               	movf	(_modbusSlaveData^(0+384)+39),w	;volatile
 14619  1065  0649               	xorwf	(_modbusSlaveData^(0+384)+41),w	;volatile
 14620  1066  1D03               	skipz
 14621  1067  0008               	return
 14622                           
 14623                           ;modbus_slave.c: 59:     {;modbus_slave.c: 60:         ModbusSlaveProcessReceivedQuery()
      +                          ;
 14624  1068  3188  20A3         	fcall	_ModbusSlaveProcessReceivedQuery
 14625  106A  0008               	return
 14626  106B                     __end_of_mbus_rx_handler:
 14627                           
 14628                           	psect	text88
 14629  08A3                     __ptext88:	
 14630 ;; *************** function _ModbusSlaveProcessReceivedQuery *****************
 14631 ;; Defined at:
 14632 ;;		line 88 in file "modbus_slave.c"
 14633 ;; Parameters:    Size  Location     Type
 14634 ;;		None
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  u16Data         2    3[BANK0 ] unsigned short 
 14637 ;;  u8ReadReg       1    0[BANK0 ] unsigned char 
 14638 ;;  i               2    7[BANK0 ] unsigned int 
 14639 ;;  j               2    5[BANK0 ] unsigned int 
 14640 ;;  k               2    1[BANK0 ] unsigned int 
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1    wreg      void 
 14643 ;; Registers used:
 14644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14650 ;;      Params:         0       0       0       0       0       0       0       0
 14651 ;;      Locals:         0       9       0       0       0       0       0       0
 14652 ;;      Temps:          6       0       0       0       0       0       0       0
 14653 ;;      Totals:         6       9       0       0       0       0       0       0
 14654 ;;Total ram usage:       15 bytes
 14655 ;; Hardware stack levels used: 1
 14656 ;; Hardware stack levels required when called: 1
 14657 ;; This function calls:
 14658 ;;		_calculate_crc
 14659 ;; This function is called by:
 14660 ;;		_mbus_rx_handler
 14661 ;; This function uses a non-reentrant model
 14662 ;;
 14663                           
 14664  08A3                     _ModbusSlaveProcessReceivedQuery:	
 14665                           ;psect for function _ModbusSlaveProcessReceivedQuery
 14666                           
 14667                           
 14668                           ;modbus_slave.c: 90:    unsigned int i, j, k;;modbus_slave.c: 92:     crcModbusSlave = 0
      +                          xFFFF;
 14669                           
 14670                           ;incstack = 0
 14671                           ; Regs used in _ModbusSlaveProcessReceivedQuery: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14672  08A3  30FF               	movlw	255
 14673  08A4  0020               	movlb	0	; select bank0
 14674  08A5  00E4               	movwf	_crcModbusSlave
 14675  08A6  30FF               	movlw	255
 14676  08A7  00E5               	movwf	_crcModbusSlave+1
 14677                           
 14678                           ;modbus_slave.c: 93:     for(i=0; i<modbusSlaveData.TotalRxValue-2; i++)
 14679  08A8  01A7               	clrf	ModbusSlaveProcessReceivedQuery@i
 14680  08A9  01A8               	clrf	ModbusSlaveProcessReceivedQuery@i+1
 14681  08AA                     i1l6373:
 14682  08AA  0023               	movlb	3	; select bank3
 14683  08AB  0849               	movf	(_modbusSlaveData^(0+384)+41),w	;volatile
 14684  08AC  3EFE               	addlw	254
 14685  08AD  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14686  08AE  30FF               	movlw	255
 14687  08AF  1803               	skipnc
 14688  08B0  3000               	movlw	0
 14689  08B1  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 14690  08B2  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14691  08B3  0020               	movlb	0	; select bank0
 14692  08B4  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 14693  08B5  1D03               	skipz
 14694  08B6  28B9               	goto	u602_25
 14695  08B7  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14696  08B8  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 14697  08B9                     u602_25:
 14698  08B9  1803               	btfsc	3,0
 14699  08BA  28CA               	goto	i1l6375
 14700                           
 14701                           ;modbus_slave.c: 94:     {;modbus_slave.c: 95:         calculate_crc(modbusSlaveData.Mod
      +                          busFrame[i]);
 14702  08BB  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 14703  08BC  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14704  08BD  0086               	movwf	6
 14705  08BE  3001               	movlw	1	; select bank3/4
 14706  08BF  0087               	movwf	7
 14707  08C0  0801               	movf	1,w
 14708  08C1  319F  2766  3188   	fcall	_calculate_crc
 14709                           
 14710                           ;modbus_slave.c: 96:     }
 14711  08C4  3001               	movlw	1
 14712  08C5  0020               	movlb	0	; select bank0
 14713  08C6  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 14714  08C7  3000               	movlw	0
 14715  08C8  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 14716  08C9  28AA               	goto	i1l6373
 14717  08CA                     i1l6375:
 14718                           
 14719                           ;modbus_slave.c: 98:     if(modbusSlaveData.ModbusFrame[i++] != (crcModbusSlave & 0xFF))
 14720  08CA  30FF               	movlw	255
 14721  08CB  0564               	andwf	_crcModbusSlave,w
 14722  08CC  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14723  08CD  3000               	movlw	0
 14724  08CE  0565               	andwf	_crcModbusSlave+1,w
 14725  08CF  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 14726  08D0  0828               	movf	ModbusSlaveProcessReceivedQuery@i+1,w
 14727  08D1  00F9               	movwf	??_ModbusSlaveProcessReceivedQuery+3
 14728  08D2  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 14729  08D3  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 14730  08D4  0AA7               	incf	ModbusSlaveProcessReceivedQuery@i,f
 14731  08D5  1903               	skipnz
 14732  08D6  0AA8               	incf	ModbusSlaveProcessReceivedQuery@i+1,f
 14733  08D7  0878               	movf	??_ModbusSlaveProcessReceivedQuery+2,w
 14734  08D8  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14735  08D9  0086               	movwf	6
 14736  08DA  3001               	movlw	1	; select bank3/4
 14737  08DB  0087               	movwf	7
 14738  08DC  0801               	movf	1,w
 14739  08DD  00FA               	movwf	??_ModbusSlaveProcessReceivedQuery+4
 14740  08DE  01FB               	clrf	??_ModbusSlaveProcessReceivedQuery+5
 14741  08DF  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14742  08E0  067B               	xorwf	??_ModbusSlaveProcessReceivedQuery+5,w
 14743  08E1  1D03               	skipz
 14744  08E2  28E5               	goto	u603_25
 14745  08E3  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14746  08E4  067A               	xorwf	??_ModbusSlaveProcessReceivedQuery+4,w
 14747  08E5                     u603_25:
 14748  08E5  1903               	skipnz
 14749  08E6  28EA               	goto	i1l6379
 14750  08E7                     i1l6377:
 14751                           
 14752                           ;modbus_slave.c: 99:     {;modbus_slave.c: 100:         modbusSlaveData.flags.bitValue.e
      +                          rror = 1;
 14753  08E7  0023               	movlb	3	; select bank3
 14754  08E8  15CA               	bsf	(_modbusSlaveData^(0+384)+42),3	;volatile
 14755                           
 14756                           ;modbus_slave.c: 101:         return;
 14757  08E9  0008               	return
 14758  08EA                     i1l6379:
 14759                           
 14760                           ;modbus_slave.c: 104:     if(modbusSlaveData.ModbusFrame[i] != (crcModbusSlave>>8))
 14761  08EA  0865               	movf	_crcModbusSlave+1,w
 14762  08EB  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 14763  08EC  0864               	movf	_crcModbusSlave,w
 14764  08ED  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14765  08EE  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14766  08EF  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14767  08F0  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 14768  08F1  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 14769  08F2  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14770  08F3  0086               	movwf	6
 14771  08F4  3001               	movlw	1	; select bank3/4
 14772  08F5  0087               	movwf	7
 14773  08F6  0801               	movf	1,w
 14774  08F7  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 14775  08F8  01F9               	clrf	??_ModbusSlaveProcessReceivedQuery+3
 14776  08F9  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14777  08FA  0679               	xorwf	??_ModbusSlaveProcessReceivedQuery+3,w
 14778  08FB  1D03               	skipz
 14779  08FC  28FF               	goto	u604_25
 14780  08FD  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14781  08FE  0678               	xorwf	??_ModbusSlaveProcessReceivedQuery+2,w
 14782  08FF                     u604_25:
 14783  08FF  1D03               	btfss	3,2
 14784  0900  28E7               	goto	i1l6377
 14785                           
 14786                           ;modbus_slave.c: 110:     if(modbusSlaveData.ModbusFrame[0] != modbusSlaveData.address)
 14787  0901  0023               	movlb	3	; select bank3
 14788  0902  084C               	movf	(_modbusSlaveData^(0+384)+44),w	;volatile
 14789  0903  0630               	xorwf	(_modbusSlaveData^(0+384)+16),w	;volatile
 14790  0904  1D03               	btfss	3,2
 14791  0905  0008               	return
 14792                           
 14793                           ;modbus_slave.c: 114:     modbusSlaveData.TotalTxValue = 0;
 14794  0906  01C8               	clrf	(_modbusSlaveData^(0+384)+40)	;volatile
 14795                           
 14796                           ;modbus_slave.c: 115:     switch(modbusSlaveData.ModbusFrame[1])
 14797  0907  29E3               	goto	i1l6433
 14798  0908                     i1l6389:
 14799                           
 14800                           ;modbus_slave.c: 118:             modbusSlaveData.TotalTxValue = 2;
 14801  0908  3002               	movlw	2
 14802  0909  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14803  090A  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14804  090B  00C8               	movwf	(_modbusSlaveData^(0+384)+40)	;volatile
 14805                           
 14806                           ;modbus_slave.c: 119:             j = (modbusSlaveData.ModbusFrame[2] << 8U) | modbusSla
      +                          veData.ModbusFrame[3];
 14807  090C  0832               	movf	(_modbusSlaveData^(0+384)+18),w	;volatile
 14808  090D  0020               	movlb	0	; select bank0
 14809  090E  00A6               	movwf	ModbusSlaveProcessReceivedQuery@j+1
 14810  090F  0023               	movlb	3	; select bank3
 14811  0910  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 14812  0911  0020               	movlb	0	; select bank0
 14813  0912  00A5               	movwf	ModbusSlaveProcessReceivedQuery@j
 14814                           
 14815                           ;modbus_slave.c: 121:             modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxVal
      +                          ue++] = modbusSlaveData.ModbusFrame[5]<<1;
 14816  0913  0023               	movlb	3	; select bank3
 14817  0914  3535               	lslf	(_modbusSlaveData^(0+384)+21),w	;volatile
 14818  0915  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14819  0916  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 14820  0917  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14821  0918  0086               	movwf	6
 14822  0919  3001               	movlw	1	; select bank3/4
 14823  091A  0087               	movwf	7
 14824  091B  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14825  091C  0081               	movwf	1
 14826  091D  3001               	movlw	1
 14827  091E  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14828  091F  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14829  0920  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 14830                           
 14831                           ;modbus_slave.c: 122:             uint8_t u8ReadReg = modbusSlaveData.ModbusFrame[5];
 14832  0921  0835               	movf	(_modbusSlaveData^(0+384)+21),w	;volatile
 14833  0922  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14834  0923  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14835  0924  0020               	movlb	0	; select bank0
 14836  0925  00A0               	movwf	ModbusSlaveProcessReceivedQuery@u8ReadReg
 14837                           
 14838                           ;modbus_slave.c: 123:             for(i=j; i<(u8ReadReg+j); i++)
 14839  0926  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 14840  0927  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 14841  0928  0825               	movf	ModbusSlaveProcessReceivedQuery@j,w
 14842  0929  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 14843  092A                     i1l6407:
 14844  092A  0820               	movf	ModbusSlaveProcessReceivedQuery@u8ReadReg,w
 14845  092B  0725               	addwf	ModbusSlaveProcessReceivedQuery@j,w
 14846  092C  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14847  092D  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 14848  092E  1803               	skipnc
 14849  092F  0A26               	incf	ModbusSlaveProcessReceivedQuery@j+1,w
 14850  0930  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 14851  0931  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14852  0932  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 14853  0933  1D03               	skipz
 14854  0934  2937               	goto	u606_25
 14855  0935  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14856  0936  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 14857  0937                     u606_25:
 14858  0937  1803               	btfsc	3,0
 14859  0938  29F6               	goto	i1l6435
 14860                           
 14861                           ;modbus_slave.c: 124:             {;modbus_slave.c: 125:                 modbusSlaveData
      +                          .ModbusFrame[modbusSlaveData.TotalTxValue++] = (modbusSlaveData.ModbusHoldingRegister[i]
      +                           >> 8U) & 0xFF;
 14862  0939  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 14863  093A  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 14864  093B  0086               	movwf	6
 14865  093C  3001               	movlw	1	; select bank3/4
 14866  093D  0087               	movwf	7
 14867  093E  3F40               	moviw [0]fsr1
 14868  093F  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14869  0940  3F41               	moviw [1]fsr1
 14870  0941  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 14871  0942  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14872  0943  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 14873  0944  0023               	movlb	3	; select bank3
 14874  0945  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 14875  0946  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14876  0947  0086               	movwf	6
 14877  0948  3001               	movlw	1	; select bank3/4
 14878  0949  0087               	movwf	7
 14879  094A  0878               	movf	??_ModbusSlaveProcessReceivedQuery+2,w
 14880  094B  0081               	movwf	1
 14881  094C  3001               	movlw	1
 14882  094D  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14883  094E  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14884  094F  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 14885                           
 14886                           ;modbus_slave.c: 126:                 modbusSlaveData.ModbusFrame[modbusSlaveData.TotalT
      +                          xValue++] = modbusSlaveData.ModbusHoldingRegister[i] & 0xFF;
 14887  0950  0020               	movlb	0	; select bank0
 14888  0951  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 14889  0952  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 14890  0953  0086               	movwf	6
 14891  0954  3001               	movlw	1	; select bank3/4
 14892  0955  0087               	movwf	7
 14893  0956  0801               	movf	1,w
 14894  0957  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14895  0958  0023               	movlb	3	; select bank3
 14896  0959  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 14897  095A  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 14898  095B  0086               	movwf	6
 14899  095C  3001               	movlw	1	; select bank3/4
 14900  095D  0087               	movwf	7
 14901  095E  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14902  095F  0081               	movwf	1
 14903  0960  3001               	movlw	1
 14904  0961  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14905  0962  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14906  0963  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 14907                           
 14908                           ;modbus_slave.c: 127:             }
 14909  0964  3001               	movlw	1
 14910  0965  0020               	movlb	0	; select bank0
 14911  0966  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 14912  0967  3000               	movlw	0
 14913  0968  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 14914  0969  292A               	goto	i1l6407
 14915  096A                     i1l6409:
 14916                           
 14917                           ;modbus_slave.c: 131:             i = modbusSlaveData.ModbusFrame[2];
 14918  096A  0832               	movf	(_modbusSlaveData^(0+384)+18),w	;volatile
 14919  096B  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14920  096C  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 14921  096D  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14922  096E  0020               	movlb	0	; select bank0
 14923  096F  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 14924  0970  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14925  0971  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 14926                           
 14927                           ;modbus_slave.c: 132:             i <<= 8U;
 14928  0972  3008               	movlw	8
 14929  0973                     u607_25:
 14930  0973  35A7               	lslf	ModbusSlaveProcessReceivedQuery@i,f
 14931  0974  0DA8               	rlf	ModbusSlaveProcessReceivedQuery@i+1,f
 14932  0975  0B89               	decfsz	9,f
 14933  0976  2973               	goto	u607_25
 14934                           
 14935                           ;modbus_slave.c: 133:             i |= modbusSlaveData.ModbusFrame[3];
 14936  0977  0023               	movlb	3	; select bank3
 14937  0978  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 14938  0979  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14939  097A  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 14940  097B  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14941  097C  0020               	movlb	0	; select bank0
 14942  097D  04A7               	iorwf	ModbusSlaveProcessReceivedQuery@i,f
 14943  097E  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14944  097F  04A8               	iorwf	ModbusSlaveProcessReceivedQuery@i+1,f
 14945                           
 14946                           ;modbus_slave.c: 135:             uint16_t u16Data = modbusSlaveData.ModbusFrame[4];
 14947  0980  0023               	movlb	3	; select bank3
 14948  0981  0834               	movf	(_modbusSlaveData^(0+384)+20),w	;volatile
 14949  0982  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14950  0983  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 14951  0984  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14952  0985  0020               	movlb	0	; select bank0
 14953  0986  00A3               	movwf	ModbusSlaveProcessReceivedQuery@u16Data
 14954  0987  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14955  0988  00A4               	movwf	ModbusSlaveProcessReceivedQuery@u16Data+1
 14956                           
 14957                           ;modbus_slave.c: 136:             u16Data <<= 8U;
 14958  0989  3008               	movlw	8
 14959  098A                     u608_25:
 14960  098A  35A3               	lslf	ModbusSlaveProcessReceivedQuery@u16Data,f
 14961  098B  0DA4               	rlf	ModbusSlaveProcessReceivedQuery@u16Data+1,f
 14962  098C  0B89               	decfsz	9,f
 14963  098D  298A               	goto	u608_25
 14964                           
 14965                           ;modbus_slave.c: 137:             u16Data |= modbusSlaveData.ModbusFrame[5];
 14966  098E  0023               	movlb	3	; select bank3
 14967  098F  0835               	movf	(_modbusSlaveData^(0+384)+21),w	;volatile
 14968  0990  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14969  0991  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 14970  0992  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14971  0993  0020               	movlb	0	; select bank0
 14972  0994  04A3               	iorwf	ModbusSlaveProcessReceivedQuery@u16Data,f
 14973  0995  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 14974  0996  04A4               	iorwf	ModbusSlaveProcessReceivedQuery@u16Data+1,f
 14975                           
 14976                           ;modbus_slave.c: 138:             modbusSlaveData.ModbusHoldingRegister[i] = u16Data;
 14977  0997  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 14978  0998  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 14979  0999  0086               	movwf	6
 14980  099A  3001               	movlw	1	; select bank3/4
 14981  099B  0087               	movwf	7
 14982  099C  0823               	movf	ModbusSlaveProcessReceivedQuery@u16Data,w
 14983  099D  3FC0               	movwi [0]fsr1
 14984  099E  0824               	movf	ModbusSlaveProcessReceivedQuery@u16Data+1,w
 14985  099F  3FC1               	movwi [1]fsr1
 14986  09A0                     i1l6413:
 14987                           
 14988                           ;modbus_slave.c: 139:             modbusSlaveData.TotalTxValue = 6;
 14989  09A0  3006               	movlw	6
 14990  09A1  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 14991  09A2  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 14992  09A3  0023               	movlb	3	; select bank3
 14993  09A4  00C8               	movwf	(_modbusSlaveData^(0+384)+40)	;volatile
 14994                           
 14995                           ;modbus_slave.c: 140:             break;
 14996  09A5  29F6               	goto	i1l6435
 14997  09A6                     i1l6415:
 14998                           
 14999                           ;modbus_slave.c: 143:             j = modbusSlaveData.ModbusFrame[3]<<1;
 15000  09A6  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 15001  09A7  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15002  09A8  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 15003  09A9  35F6               	lslf	??_ModbusSlaveProcessReceivedQuery,f
 15004  09AA  0DF7               	rlf	??_ModbusSlaveProcessReceivedQuery+1,f
 15005  09AB  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15006  09AC  0020               	movlb	0	; select bank0
 15007  09AD  00A5               	movwf	ModbusSlaveProcessReceivedQuery@j
 15008  09AE  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 15009  09AF  00A6               	movwf	ModbusSlaveProcessReceivedQuery@j+1
 15010                           
 15011                           ;modbus_slave.c: 144:             k = 7;
 15012  09B0  3007               	movlw	7
 15013  09B1  00A1               	movwf	ModbusSlaveProcessReceivedQuery@k
 15014  09B2  3000               	movlw	0
 15015  09B3  00A2               	movwf	ModbusSlaveProcessReceivedQuery@k+1
 15016                           
 15017                           ;modbus_slave.c: 145:             for(i=j; i<(modbusSlaveData.ModbusFrame[6]+j); i++)
 15018  09B4  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 15019  09B5  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 15020  09B6  0825               	movf	ModbusSlaveProcessReceivedQuery@j,w
 15021  09B7  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 15022  09B8                     i1l6427:
 15023  09B8  0023               	movlb	3	; select bank3
 15024  09B9  0836               	movf	(_modbusSlaveData^(0+384)+22),w	;volatile
 15025  09BA  0020               	movlb	0	; select bank0
 15026  09BB  0725               	addwf	ModbusSlaveProcessReceivedQuery@j,w
 15027  09BC  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15028  09BD  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 15029  09BE  1803               	skipnc
 15030  09BF  0A26               	incf	ModbusSlaveProcessReceivedQuery@j+1,w
 15031  09C0  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 15032  09C1  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 15033  09C2  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 15034  09C3  1D03               	skipz
 15035  09C4  29C7               	goto	u609_25
 15036  09C5  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15037  09C6  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 15038  09C7                     u609_25:
 15039  09C7  1803               	btfsc	3,0
 15040  09C8  29A0               	goto	i1l6413
 15041                           
 15042                           ;modbus_slave.c: 146:             {;modbus_slave.c: 147:                 modbusSlaveData
      +                          .ModbusHoldingRegister[i] = modbusSlaveData.ModbusFrame[k++];
 15043  09C9  0821               	movf	ModbusSlaveProcessReceivedQuery@k,w
 15044  09CA  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15045  09CB  0086               	movwf	6
 15046  09CC  3001               	movlw	1	; select bank3/4
 15047  09CD  0087               	movwf	7
 15048  09CE  0801               	movf	1,w
 15049  09CF  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15050  09D0  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 15051  09D1  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 15052  09D2  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 15053  09D3  0086               	movwf	6
 15054  09D4  3001               	movlw	1	; select bank3/4
 15055  09D5  0087               	movwf	7
 15056  09D6  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15057  09D7  3FC0               	movwi [0]fsr1
 15058  09D8  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 15059  09D9  3FC1               	movwi [1]fsr1
 15060  09DA  3001               	movlw	1
 15061  09DB  07A1               	addwf	ModbusSlaveProcessReceivedQuery@k,f
 15062  09DC  3000               	movlw	0
 15063  09DD  3DA2               	addwfc	ModbusSlaveProcessReceivedQuery@k+1,f
 15064                           
 15065                           ;modbus_slave.c: 148:             }
 15066  09DE  3001               	movlw	1
 15067  09DF  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 15068  09E0  3000               	movlw	0
 15069  09E1  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 15070  09E2  29B8               	goto	i1l6427
 15071  09E3                     i1l6433:
 15072  09E3  0831               	movf	(_modbusSlaveData^(0+384)+17),w	;volatile
 15073  09E4  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15074  09E5  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 15075                           
 15076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15077                           ; Switch size 1, requested type "simple"
 15078                           ; Number of cases is 1, Range of values is 0 to 0
 15079                           ; switch strategies available:
 15080                           ; Name         Instructions Cycles
 15081                           ; simple_byte            4     3 (average)
 15082                           ; direct_byte            8     6 (fixed)
 15083                           ; jumptable            260     6 (fixed)
 15084                           ;	Chosen strategy is simple_byte
 15085  09E6  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 15086  09E7  3A00               	xorlw	0	; case 0
 15087  09E8  1903               	skipnz
 15088  09E9  29EB               	goto	i1l6849
 15089  09EA  29F6               	goto	i1l6435
 15090  09EB                     i1l6849:
 15091                           
 15092                           ; Switch size 1, requested type "simple"
 15093                           ; Number of cases is 3, Range of values is 3 to 16
 15094                           ; switch strategies available:
 15095                           ; Name         Instructions Cycles
 15096                           ; simple_byte           10     6 (average)
 15097                           ; direct_byte           37     9 (fixed)
 15098                           ; jumptable            263     9 (fixed)
 15099                           ;	Chosen strategy is simple_byte
 15100  09EB  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15101  09EC  3A03               	xorlw	3	; case 3
 15102  09ED  1903               	skipnz
 15103  09EE  2908               	goto	i1l6389
 15104  09EF  3A05               	xorlw	5	; case 6
 15105  09F0  1903               	skipnz
 15106  09F1  296A               	goto	i1l6409
 15107  09F2  3A16               	xorlw	22	; case 16
 15108  09F3  1903               	skipnz
 15109  09F4  29A6               	goto	i1l6415
 15110  09F5  29F6               	goto	i1l6435
 15111  09F6                     i1l6435:
 15112                           
 15113                           ;modbus_slave.c: 156:     crcModbusSlave = 0xFFFF;
 15114  09F6  30FF               	movlw	255
 15115  09F7  0020               	movlb	0	; select bank0
 15116  09F8  00E4               	movwf	_crcModbusSlave
 15117  09F9  30FF               	movlw	255
 15118  09FA  00E5               	movwf	_crcModbusSlave+1
 15119                           
 15120                           ;modbus_slave.c: 157:     for(i=0; i<modbusSlaveData.TotalTxValue; i++)
 15121  09FB  01A7               	clrf	ModbusSlaveProcessReceivedQuery@i
 15122  09FC  01A8               	clrf	ModbusSlaveProcessReceivedQuery@i+1
 15123  09FD                     i1l6443:
 15124  09FD  0023               	movlb	3	; select bank3
 15125  09FE  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 15126  09FF  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15127  0A00  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 15128  0A01  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 15129  0A02  0020               	movlb	0	; select bank0
 15130  0A03  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 15131  0A04  1D03               	skipz
 15132  0A05  2A08               	goto	u610_25
 15133  0A06  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15134  0A07  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 15135  0A08                     u610_25:
 15136  0A08  1803               	btfsc	3,0
 15137  0A09  2A19               	goto	i1l6445
 15138                           
 15139                           ;modbus_slave.c: 158:     {;modbus_slave.c: 159:         calculate_crc(modbusSlaveData.M
      +                          odbusFrame[i]);
 15140  0A0A  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 15141  0A0B  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15142  0A0C  0086               	movwf	6
 15143  0A0D  3001               	movlw	1	; select bank3/4
 15144  0A0E  0087               	movwf	7
 15145  0A0F  0801               	movf	1,w
 15146  0A10  319F  2766  3188   	fcall	_calculate_crc
 15147                           
 15148                           ;modbus_slave.c: 160:     }
 15149  0A13  3001               	movlw	1
 15150  0A14  0020               	movlb	0	; select bank0
 15151  0A15  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 15152  0A16  3000               	movlw	0
 15153  0A17  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 15154  0A18  29FD               	goto	i1l6443
 15155  0A19                     i1l6445:
 15156                           
 15157                           ;modbus_slave.c: 161:     modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxValue++] = 
      +                          crcModbusSlave & 0xFF;
 15158  0A19  0864               	movf	_crcModbusSlave,w
 15159  0A1A  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15160  0A1B  0023               	movlb	3	; select bank3
 15161  0A1C  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 15162  0A1D  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15163  0A1E  0086               	movwf	6
 15164  0A1F  3001               	movlw	1	; select bank3/4
 15165  0A20  0087               	movwf	7
 15166  0A21  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15167  0A22  0081               	movwf	1
 15168  0A23  3001               	movlw	1
 15169  0A24  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15170  0A25  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15171  0A26  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 15172                           
 15173                           ;modbus_slave.c: 162:     modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxValue++] = 
      +                          crcModbusSlave >> 8;
 15174  0A27  0020               	movlb	0	; select bank0
 15175  0A28  0865               	movf	_crcModbusSlave+1,w
 15176  0A29  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15177  0A2A  0023               	movlb	3	; select bank3
 15178  0A2B  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 15179  0A2C  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15180  0A2D  0086               	movwf	6
 15181  0A2E  3001               	movlw	1	; select bank3/4
 15182  0A2F  0087               	movwf	7
 15183  0A30  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15184  0A31  0081               	movwf	1
 15185  0A32  3001               	movlw	1
 15186  0A33  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 15187  0A34  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 15188  0A35  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 15189                           
 15190                           ;modbus_slave.c: 164:     T1CONbits.TMR1ON = 0;
 15191  0A36  0020               	movlb	0	; select bank0
 15192  0A37  1018               	bcf	24,0	;volatile
 15193                           
 15194                           ;modbus_slave.c: 165:     modbusSlaveData.TxPointer = 0;
 15195  0A38  0023               	movlb	3	; select bank3
 15196  0A39  01C6               	clrf	(_modbusSlaveData^(0+384)+38)	;volatile
 15197  0A3A  0022               	movlb	2	; select bank2
 15198  0A3B  178E               	bsf	14,7	;volatile
 15199                           
 15200                           ;modbus_slave.c: 167:     PIE1bits.TXIE = 1; TXSTAbits.TXEN = 1;
 15201  0A3C  0021               	movlb	1	; select bank1
 15202  0A3D  1611               	bsf	17,4	;volatile
 15203  0A3E  0023               	movlb	3	; select bank3
 15204  0A3F  169E               	bsf	30,5	;volatile
 15205  0A40  0008               	return
 15206  0A41                     __end_of_ModbusSlaveProcessReceivedQuery:
 15207                           
 15208                           	psect	text89
 15209  1F66                     __ptext89:	
 15210 ;; *************** function _calculate_crc *****************
 15211 ;; Defined at:
 15212 ;;		line 28 in file "modbus_slave.c"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;  crcreg          1    wreg     unsigned char 
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;  crcreg          1    2[COMMON] unsigned char 
 15217 ;;  i               1    5[COMMON] unsigned char 
 15218 ;;  crcbit          2    3[COMMON] unsigned short 
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1    wreg      void 
 15221 ;; Registers used:
 15222 ;;		wreg, status,2, status,0
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15228 ;;      Params:         0       0       0       0       0       0       0       0
 15229 ;;      Locals:         4       0       0       0       0       0       0       0
 15230 ;;      Temps:          2       0       0       0       0       0       0       0
 15231 ;;      Totals:         6       0       0       0       0       0       0       0
 15232 ;;Total ram usage:        6 bytes
 15233 ;; Hardware stack levels used: 1
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_ModbusSlaveProcessReceivedQuery
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241  1F66                     _calculate_crc:	
 15242                           ;psect for function _calculate_crc
 15243                           
 15244                           
 15245                           ;incstack = 0
 15246                           ; Regs used in _calculate_crc: [wreg+status,2+status,0]
 15247                           ;calculate_crc@crcreg stored from wreg
 15248  1F66  00F2               	movwf	calculate_crc@crcreg
 15249                           
 15250                           ;modbus_slave.c: 28: void calculate_crc(uint8_t crcreg);modbus_slave.c: 29: {;modbus_sla
      +                          ve.c: 30:     uint16_t crcbit;;modbus_slave.c: 32:     crcModbusSlave ^= crcreg;
 15251  1F67  0872               	movf	calculate_crc@crcreg,w
 15252  1F68  00F0               	movwf	??_calculate_crc
 15253  1F69  01F1               	clrf	??_calculate_crc+1
 15254  1F6A  0870               	movf	??_calculate_crc,w
 15255  1F6B  0020               	movlb	0	; select bank0
 15256  1F6C  06E4               	xorwf	_crcModbusSlave,f
 15257  1F6D  0871               	movf	??_calculate_crc+1,w
 15258  1F6E  06E5               	xorwf	_crcModbusSlave+1,f
 15259                           
 15260                           ;modbus_slave.c: 33:     for(uint8_t i=0; i<=7; i++)
 15261  1F6F  01F5               	clrf	calculate_crc@i
 15262  1F70                     i1l4291:
 15263                           
 15264                           ;modbus_slave.c: 34:     {;modbus_slave.c: 35:         crcbit = 0;
 15265  1F70  01F3               	clrf	calculate_crc@crcbit
 15266  1F71  01F4               	clrf	calculate_crc@crcbit+1
 15267                           
 15268                           ;modbus_slave.c: 36:         if((crcModbusSlave & 0x0001) == 0x0001)
 15269  1F72  1C64               	btfss	_crcModbusSlave,0
 15270  1F73  2F78               	goto	i1l4297
 15271                           
 15272                           ;modbus_slave.c: 37:             crcbit = 1;
 15273  1F74  3001               	movlw	1
 15274  1F75  00F3               	movwf	calculate_crc@crcbit
 15275  1F76  3000               	movlw	0
 15276  1F77  00F4               	movwf	calculate_crc@crcbit+1
 15277  1F78                     i1l4297:
 15278                           
 15279                           ;modbus_slave.c: 39:         crcModbusSlave >>= 1;
 15280  1F78  3001               	movlw	1
 15281  1F79                     u304_25:
 15282  1F79  36E5               	lsrf	_crcModbusSlave+1,f
 15283  1F7A  0CE4               	rrf	_crcModbusSlave,f
 15284  1F7B  0B89               	decfsz	9,f
 15285  1F7C  2F79               	goto	u304_25
 15286                           
 15287                           ;modbus_slave.c: 40:         if(crcbit)
 15288  1F7D  0873               	movf	calculate_crc@crcbit,w
 15289  1F7E  0474               	iorwf	calculate_crc@crcbit+1,w
 15290  1F7F  1903               	btfsc	3,2
 15291  1F80  2F85               	goto	i1l4303
 15292                           
 15293                           ;modbus_slave.c: 41:             crcModbusSlave ^= 0xa001;
 15294  1F81  3001               	movlw	1
 15295  1F82  06E4               	xorwf	_crcModbusSlave,f
 15296  1F83  30A0               	movlw	160
 15297  1F84  06E5               	xorwf	_crcModbusSlave+1,f
 15298  1F85                     i1l4303:
 15299                           
 15300                           ;modbus_slave.c: 42:     }
 15301  1F85  3001               	movlw	1
 15302  1F86  00F0               	movwf	??_calculate_crc
 15303  1F87  0870               	movf	??_calculate_crc,w
 15304  1F88  07F5               	addwf	calculate_crc@i,f
 15305  1F89  3008               	movlw	8
 15306  1F8A  0275               	subwf	calculate_crc@i,w
 15307  1F8B  1803               	btfsc	3,0
 15308  1F8C  0008               	return
 15309  1F8D  2F70               	goto	i1l4291
 15310  1F8E                     __end_of_calculate_crc:
 15311                           
 15312                           	psect	text90
 15313  1D86                     __ptext90:	
 15314 ;; *************** function _TMR1_ISR *****************
 15315 ;; Defined at:
 15316 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 15317 ;; Parameters:    Size  Location     Type
 15318 ;;		None
 15319 ;; Auto vars:     Size  Location     Type
 15320 ;;		None
 15321 ;; Return value:  Size  Location     Type
 15322 ;;                  1    wreg      void 
 15323 ;; Registers used:
 15324 ;;		wreg, status,2, status,0, pclath, cstack
 15325 ;; Tracked objects:
 15326 ;;		On entry : 0/0
 15327 ;;		On exit  : 0/0
 15328 ;;		Unchanged: 0/0
 15329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15330 ;;      Params:         0       0       0       0       0       0       0       0
 15331 ;;      Locals:         0       0       0       0       0       0       0       0
 15332 ;;      Temps:          0       0       0       0       0       0       0       0
 15333 ;;      Totals:         0       0       0       0       0       0       0       0
 15334 ;;Total ram usage:        0 bytes
 15335 ;; Hardware stack levels used: 1
 15336 ;; Hardware stack levels required when called: 2
 15337 ;; This function calls:
 15338 ;;		_TMR1_CallBack
 15339 ;;		_TMR1_WriteTimer
 15340 ;; This function is called by:
 15341 ;;		_INTERRUPT_InterruptManager
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345  1D86                     _TMR1_ISR:	
 15346                           ;psect for function _TMR1_ISR
 15347                           
 15348                           
 15349                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 15350                           
 15351                           ;incstack = 0
 15352                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15353  1D86  0020               	movlb	0	; select bank0
 15354  1D87  1011               	bcf	17,0	;volatile
 15355                           
 15356                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 15357  1D88  0861               	movf	_timer1ReloadVal+1,w	;volatile
 15358  1D89  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15359  1D8A  0860               	movf	_timer1ReloadVal,w	;volatile
 15360  1D8B  00F0               	movwf	TMR1_WriteTimer@timerVal
 15361  1D8C  319D  25B9  319D   	fcall	_TMR1_WriteTimer
 15362                           
 15363                           ;mcc_generated_files/tmr1.c: 167:     TMR1_CallBack();
 15364  1D8F  319D  256F         	fcall	_TMR1_CallBack
 15365  1D91  0008               	return
 15366  1D92                     __end_of_TMR1_ISR:
 15367                           
 15368                           	psect	text91
 15369  1DB9                     __ptext91:	
 15370 ;; *************** function _TMR1_WriteTimer *****************
 15371 ;; Defined at:
 15372 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  timerVal        2    0[COMMON] unsigned short 
 15375 ;; Auto vars:     Size  Location     Type
 15376 ;;		None
 15377 ;; Return value:  Size  Location     Type
 15378 ;;                  1    wreg      void 
 15379 ;; Registers used:
 15380 ;;		wreg, status,2
 15381 ;; Tracked objects:
 15382 ;;		On entry : 0/0
 15383 ;;		On exit  : 0/0
 15384 ;;		Unchanged: 0/0
 15385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15386 ;;      Params:         2       0       0       0       0       0       0       0
 15387 ;;      Locals:         0       0       0       0       0       0       0       0
 15388 ;;      Temps:          0       0       0       0       0       0       0       0
 15389 ;;      Totals:         2       0       0       0       0       0       0       0
 15390 ;;Total ram usage:        2 bytes
 15391 ;; Hardware stack levels used: 1
 15392 ;; This function calls:
 15393 ;;		Nothing
 15394 ;; This function is called by:
 15395 ;;		_TMR1_ISR
 15396 ;;		_TMR1_Reload
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400  1DB9                     _TMR1_WriteTimer:	
 15401                           ;psect for function _TMR1_WriteTimer
 15402                           
 15403                           
 15404                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.nT1SYNC == 1)
 15405                           
 15406                           ;incstack = 0
 15407                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15408  1DB9  0020               	movlb	0	; select bank0
 15409  1DBA  1D18               	btfss	24,2	;volatile
 15410  1DBB  2DC3               	goto	i1l4749
 15411                           
 15412                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 15413  1DBC  1018               	bcf	24,0	;volatile
 15414                           
 15415                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
 15416  1DBD  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15417  1DBE  0097               	movwf	23	;volatile
 15418                           
 15419                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
 15420  1DBF  0870               	movf	TMR1_WriteTimer@timerVal,w
 15421  1DC0  0096               	movwf	22	;volatile
 15422                           
 15423                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 15424  1DC1  1418               	bsf	24,0	;volatile
 15425                           
 15426                           ;mcc_generated_files/tmr1.c: 134:     }
 15427  1DC2  0008               	return
 15428  1DC3                     i1l4749:
 15429                           
 15430                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15431  1DC3  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15432  1DC4  0097               	movwf	23	;volatile
 15433                           
 15434                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
 15435  1DC5  0870               	movf	TMR1_WriteTimer@timerVal,w
 15436  1DC6  0096               	movwf	22	;volatile
 15437  1DC7  0008               	return
 15438  1DC8                     __end_of_TMR1_WriteTimer:
 15439                           
 15440                           	psect	text92
 15441  1D6F                     __ptext92:	
 15442 ;; *************** function _TMR1_CallBack *****************
 15443 ;; Defined at:
 15444 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;		None
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, status,2, status,0, pclath, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15458 ;;      Params:         0       0       0       0       0       0       0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0
 15460 ;;      Temps:          0       0       0       0       0       0       0       0
 15461 ;;      Totals:         0       0       0       0       0       0       0       0
 15462 ;;Total ram usage:        0 bytes
 15463 ;; Hardware stack levels used: 1
 15464 ;; Hardware stack levels required when called: 1
 15465 ;; This function calls:
 15466 ;;		Absolute function
 15467 ;;		_mbus_timer_handler
 15468 ;; This function is called by:
 15469 ;;		_TMR1_ISR
 15470 ;; This function uses a non-reentrant model
 15471 ;;
 15472                           
 15473  1D6F                     _TMR1_CallBack:	
 15474                           ;psect for function _TMR1_CallBack
 15475                           
 15476                           
 15477                           ;mcc_generated_files/tmr1.c: 173:     if(TMR1_InterruptHandler)
 15478                           
 15479                           ;incstack = 0
 15480                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15481  1D6F  0020               	movlb	0	; select bank0
 15482  1D70  085E               	movf	_TMR1_InterruptHandler,w
 15483  1D71  045F               	iorwf	_TMR1_InterruptHandler+1,w
 15484  1D72  1903               	btfsc	3,2
 15485  1D73  0008               	return
 15486                           
 15487                           ;mcc_generated_files/tmr1.c: 174:     {;mcc_generated_files/tmr1.c: 175:         TMR1_In
      +                          terruptHandler();
 15488  1D74  085F               	movf	_TMR1_InterruptHandler+1,w
 15489  1D75  008A               	movwf	10
 15490  1D76  085E               	movf	_TMR1_InterruptHandler,w
 15491  1D77  000A               	callw
 15492  1D78  319D               	pagesel	$
 15493  1D79  0008               	return
 15494  1D7A                     __end_of_TMR1_CallBack:
 15495                           
 15496                           	psect	text93
 15497  1D7A                     __ptext93:	
 15498 ;; *************** function _mbus_timer_handler *****************
 15499 ;; Defined at:
 15500 ;;		line 82 in file "modbus_slave.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15514 ;;      Params:         0       0       0       0       0       0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0
 15516 ;;      Temps:          1       0       0       0       0       0       0       0
 15517 ;;      Totals:         1       0       0       0       0       0       0       0
 15518 ;;Total ram usage:        1 bytes
 15519 ;; Hardware stack levels used: 1
 15520 ;; This function calls:
 15521 ;;		Nothing
 15522 ;; This function is called by:
 15523 ;;		_TMR1_Initialize
 15524 ;;		_TMR1_CallBack
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528  1D7A                     _mbus_timer_handler:	
 15529                           ;psect for function _mbus_timer_handler
 15530                           
 15531                           
 15532                           ;modbus_slave.c: 84:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 15533                           
 15534                           ;incstack = 0
 15535                           ; Regs used in _mbus_timer_handler: [wreg+status,2]
 15536  1D7A  0020               	movlb	0	; select bank0
 15537  1D7B  0196               	clrf	22	;volatile
 15538  1D7C  30E0               	movlw	224
 15539  1D7D  0097               	movwf	23	;volatile
 15540  1D7E  1011               	bcf	17,0	;volatile
 15541                           
 15542                           ;modbus_slave.c: 85:     modbusSlaveData.RxPointer = 0; modbusSlaveData.TotalRxValue = 8
      +                          ;;
 15543  1D7F  0023               	movlb	3	; select bank3
 15544  1D80  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 15545  1D81  3008               	movlw	8
 15546  1D82  00F0               	movwf	??_mbus_timer_handler
 15547  1D83  0870               	movf	??_mbus_timer_handler,w
 15548  1D84  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 15549  1D85  0008               	return
 15550  1D86                     __end_of_mbus_timer_handler:
 15551                           
 15552                           	psect	text94
 15553  1D0D                     __ptext94:	
 15554 ;; *************** function _TMR0_ISR *****************
 15555 ;; Defined at:
 15556 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;		None
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;		None
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg, status,2, status,0, pclath, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15570 ;;      Params:         0       0       0       0       0       0       0       0
 15571 ;;      Locals:         0       0       0       0       0       0       0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0
 15573 ;;      Totals:         0       0       0       0       0       0       0       0
 15574 ;;Total ram usage:        0 bytes
 15575 ;; Hardware stack levels used: 1
 15576 ;; Hardware stack levels required when called: 2
 15577 ;; This function calls:
 15578 ;;		_TMR0_CallBack
 15579 ;; This function is called by:
 15580 ;;		_INTERRUPT_InterruptManager
 15581 ;; This function uses a non-reentrant model
 15582 ;;
 15583                           
 15584  1D0D                     _TMR0_ISR:	
 15585                           ;psect for function _TMR0_ISR
 15586                           
 15587                           
 15588                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 15589                           
 15590                           ;incstack = 0
 15591                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15592  1D0D  110B               	bcf	11,2	;volatile
 15593                           
 15594                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 15595  1D0E  0020               	movlb	0	; select bank0
 15596  1D0F  0862               	movf	_timer0ReloadVal,w	;volatile
 15597  1D10  0095               	movwf	21	;volatile
 15598                           
 15599                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
 15600  1D11  319D  2564         	fcall	_TMR0_CallBack
 15601  1D13  0008               	return
 15602  1D14                     __end_of_TMR0_ISR:
 15603                           
 15604                           	psect	text95
 15605  1D64                     __ptext95:	
 15606 ;; *************** function _TMR0_CallBack *****************
 15607 ;; Defined at:
 15608 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;		None
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1    wreg      void 
 15615 ;; Registers used:
 15616 ;;		wreg, status,2, status,0, pclath, cstack
 15617 ;; Tracked objects:
 15618 ;;		On entry : 0/0
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15622 ;;      Params:         0       0       0       0       0       0       0       0
 15623 ;;      Locals:         0       0       0       0       0       0       0       0
 15624 ;;      Temps:          0       0       0       0       0       0       0       0
 15625 ;;      Totals:         0       0       0       0       0       0       0       0
 15626 ;;Total ram usage:        0 bytes
 15627 ;; Hardware stack levels used: 1
 15628 ;; Hardware stack levels required when called: 1
 15629 ;; This function calls:
 15630 ;;		Absolute function
 15631 ;;		_TMR0_DefaultInterruptHandler
 15632 ;; This function is called by:
 15633 ;;		_TMR0_ISR
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           
 15637  1D64                     _TMR0_CallBack:	
 15638                           ;psect for function _TMR0_CallBack
 15639                           
 15640                           
 15641                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 15642                           
 15643                           ;incstack = 0
 15644                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15645  1D64  0020               	movlb	0	; select bank0
 15646  1D65  085C               	movf	_TMR0_InterruptHandler,w
 15647  1D66  045D               	iorwf	_TMR0_InterruptHandler+1,w
 15648  1D67  1903               	btfsc	3,2
 15649  1D68  0008               	return
 15650                           
 15651                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 15652  1D69  085D               	movf	_TMR0_InterruptHandler+1,w
 15653  1D6A  008A               	movwf	10
 15654  1D6B  085C               	movf	_TMR0_InterruptHandler,w
 15655  1D6C  000A               	callw
 15656  1D6D  319D               	pagesel	$
 15657  1D6E  0008               	return
 15658  1D6F                     __end_of_TMR0_CallBack:
 15659                           
 15660                           	psect	text96
 15661  1C87                     __ptext96:	
 15662 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15663 ;; Defined at:
 15664 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;		None
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;		None
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		None
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15678 ;;      Params:         0       0       0       0       0       0       0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0
 15681 ;;      Totals:         0       0       0       0       0       0       0       0
 15682 ;;Total ram usage:        0 bytes
 15683 ;; Hardware stack levels used: 1
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_TMR0_Initialize
 15688 ;;		_TMR0_CallBack
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692  1C87                     _TMR0_DefaultInterruptHandler:	
 15693                           ;psect for function _TMR0_DefaultInterruptHandler
 15694                           
 15695                           
 15696                           ;incstack = 0
 15697                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15698  1C87  0008               	return
 15699  1C88                     __end_of_TMR0_DefaultInterruptHandler:
 15700  007E                     btemp	set	126	;btemp
 15701  007E                     int$flags	set	126
 15702  007E                     wtemp0	set	126
 15703                           
 15704                           	psect	idloc
 15705                           
 15706                           ;Config register IDLOC0 @ 0x8000
 15707                           ;	unspecified, using default values
 15708  8000                     	org	32768
 15709  8000  3FFF               	dw	16383
 15710                           
 15711                           ;Config register IDLOC1 @ 0x8001
 15712                           ;	unspecified, using default values
 15713  8001                     	org	32769
 15714  8001  3FFF               	dw	16383
 15715                           
 15716                           ;Config register IDLOC2 @ 0x8002
 15717                           ;	unspecified, using default values
 15718  8002                     	org	32770
 15719  8002  3FFF               	dw	16383
 15720                           
 15721                           ;Config register IDLOC3 @ 0x8003
 15722                           ;	unspecified, using default values
 15723  8003                     	org	32771
 15724  8003  3FFF               	dw	16383
 15725                           
 15726                           	psect	config
 15727                           
 15728                           ;Config register CONFIG1 @ 0x8007
 15729                           ;	Oscillator Selection Bits
 15730                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 15731                           ;	Watchdog Timer Enable
 15732                           ;	WDTE = ON, WDT enabled
 15733                           ;	Power-up Timer Enable
 15734                           ;	PWRTE = OFF, PWRT disabled
 15735                           ;	MCLR Pin Function Select
 15736                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15737                           ;	Flash Program Memory Code Protection
 15738                           ;	CP = OFF, Program memory code protection is disabled
 15739                           ;	Brown-out Reset Enable
 15740                           ;	BOREN = ON, Brown-out Reset enabled
 15741                           ;	Clock Out Enable
 15742                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15743                           ;	Internal/External Switchover Mode
 15744                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 15745                           ;	Fail-Safe Clock Monitor Enable
 15746                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15747  8007                     	org	32775
 15748  8007  3FFA               	dw	16378
 15749                           
 15750                           ;Config register CONFIG2 @ 0x8008
 15751                           ;	Flash Memory Self-Write Protection
 15752                           ;	WRT = OFF, Write protection off
 15753                           ;	Stack Overflow/Underflow Reset Enable
 15754                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15755                           ;	Brown-out Reset Voltage Selection
 15756                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15757                           ;	Low-Power Brown Out Reset
 15758                           ;	LPBOR = OFF, Low-Power BOR is disabled
 15759                           ;	Low-Voltage Programming Enable
 15760                           ;	LVP = ON, Low-voltage programming enabled
 15761  8008                     	org	32776
 15762  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    56
    Data        2
    BSS         206
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     49      70
    BANK1            80     79      79
    BANK2            80     78      80
    BANK3            80     26      80
    BANK4            80      0      67
    BANK5            80      0      80
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2283$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2288	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2283	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2282	const PTR FTN()enum E3885 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    MCP3422_Read@data	PTR unsigned char  size(1) Largest target is 3
		 -> MCP3422_ReadVoltage@data(BANK1[3]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 16
		 -> main@u16CalBuffer(BANK3[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_timer_handler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_timer_handler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_rx_handler(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_tx_handler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3885[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_rx_handler(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_tx_handler(), Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> MCP3422_ReadVoltage@data(BANK1[3]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> MCP3422_Write@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mbus_rx_handler->_ModbusSlaveProcessReceivedQuery
    _ModbusSlaveProcessReceivedQuery->_calculate_crc
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_mbus_timer_handler

Critical Paths under _main in BANK0

    _main->___flmul
    _map->___flmul
    ___fltol->___flmul
    _logf->___flmul
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fldiv->___flmul
    ___flge->___xxtofl
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MCP3422_ReadVoltage->___flmul
    ___flmul->___fladd
    _MCP3422_Write->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _MCP3422_Read->_I2C_ReadNBytes
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_mbus_rx_handler
    _mbus_rx_handler->_ModbusSlaveProcessReceivedQuery

Critical Paths under _main in BANK1

    _main->_map
    _map->___fltol
    ___fltol->___fldiv
    _get_ntc_temperature->_logf
    _logf->___fldiv
    ___fldiv->___flmul
    _MCP3422_ReadVoltage->___flmul
    ___flmul->___flsub

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_get_ntc_temperature
    _get_ntc_temperature->_logf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  246345
                                             78 BANK1      1     1      0
                                              0 BANK3     26    26      0
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                    _InitModbusSlave
                _MCP3422_ReadVoltage
                  _SYSTEM_Initialize
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                _get_ntc_temperature
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 32    12     20   24289
                                             66 BANK1     12    12      0
                                              0 BANK2     20     0     20
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4    1147
                                             55 BANK1     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_ntc_temperature                                 16    12      4   39427
                                             67 BANK1      4     0      4
                                             66 BANK2     12    12      0
                            ___fladd
                            ___fldiv
                            ___flsub
                               _logf
 ---------------------------------------------------------------------------------
 (2) _logf                                                78    74      4   24168
                                             55 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                          __Umul8_16 (ARG)
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    5282
                                             24 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    3483
                                             29 BANK1     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     790
                                             24 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     686
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      98
                                             12 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                             12 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP3422_ReadVoltage                                 16    12      4  169759
                                             29 BANK1     16    12      4
                       _MCP3422_Read
                      _MCP3422_Write
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1376
                                             10 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    6233
                                             44 BANK0      5     5      0
                                              8 BANK1     21    13      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                             10 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _MCP3422_Write                                        2     2      0   81835
                                             33 BANK0      2     2      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      4     1      3   81810
                                             29 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3    1870
                                             15 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (2) _MCP3422_Read                                         5     4      1   80093
                                             33 BANK0      5     4      1
                     _I2C_ReadNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       4     1      3   79940
                                             29 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      46
                                             10 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   78300
                                             26 BANK0      3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   78254
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   78254
                                             23 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   19569
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                             15 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3     914
                                             10 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    1352
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                             19 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     265
                                             19 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      24
                                             10 BANK0      2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitModbusSlave                                      2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteBlock                                    10     7      3     760
                                             13 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_EraseBlock                                     3     1      2     143
                                             10 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _FLASH_ReadWord                                       3     1      2     447
                                             10 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     978
                   Absolute function *
                           _TMR0_ISR
                           _TMR1_ISR
                    _mbus_rx_handler *
                    _mbus_tx_handler *
 ---------------------------------------------------------------------------------
 (13) _mbus_tx_handler                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _mbus_rx_handler                                     1     1      0     738
                                              9 BANK0      1     1      0
    _ModbusSlaveProcessReceivedQuery
 ---------------------------------------------------------------------------------
 (14) _ModbusSlaveProcessReceivedQuery                    15    15      0     738
                                              6 COMMON     6     6      0
                                              0 BANK0      9     9      0
                      _calculate_crc
 ---------------------------------------------------------------------------------
 (15) _calculate_crc                                       6     6      0      92
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
                 _mbus_timer_handler *
 ---------------------------------------------------------------------------------
 (15) _mbus_timer_handler                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _FLASH_WriteBlock
     _FLASH_EraseBlock
   _InitModbusSlave
   _MCP3422_ReadVoltage
     _MCP3422_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
     _MCP3422_Write
       _I2C_WriteNBytes
         _I2C_Close
         _I2C_MasterWrite
           _I2C_MasterOperation
         _I2C_Open
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         __Umul8_16 (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   ___flge
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___fldiv (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _get_ntc_temperature
     ___fladd
     ___fldiv
     ___flsub
     _logf
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
       ___xxtofl
   _map
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _mbus_timer_handler *
     _TMR1_WriteTimer
   _mbus_rx_handler *
     _ModbusSlaveProcessReceivedQuery
       _calculate_crc
   _mbus_tx_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1D6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     31      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4F      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     4E      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     1A      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      43      14       83.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     1D6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 06 16:25:06 2023

                ?_EUSART_SetRxInterruptHandler 002A                         ??_I2C_DO_SEND_ADR_READ 002A  
                                 ___fldiv@aexp 00D6                                   ___fldiv@bexp 00D5  
                                 ___fldiv@sign 00CE                        ??_I2C_DO_SEND_ADR_WRITE 002B  
                              _timer0ReloadVal 0062                          ??_I2C_DO_SEND_RESTART 002A  
                          __Umul8_16@word_mpld 0030                                   main@u16TdVal 01D2  
                                          l302 1139                                            l525 1CC9  
                                          l368 11FC                                            l384 119C  
                                          l881 0DBA                                            l886 0E3D  
                                          l887 0E96                                            l897 0F95  
                                          _Lg1 182C                                            _Lg2 1828  
                                          _Lg3 1824                                            _Lg4 1820  
                              _timer1ReloadVal 0060                                            _map 13DC  
                       _I2C_MasterWaitForEvent 1CC9                 ?_EUSART_SetFramingErrorHandler 002A  
                          _MCP3422_ReadVoltage 12E5                              ??_InitModbusSlave 002A  
                                          wreg 0009                                   ___flmul@aexp 00B1  
                                 ___flmul@bexp 00B6                   ??_I2C_SetAddressNackCallback 0032  
                                 ___flmul@sign 00B0                                   ___flmul@temp 00BB  
                                 ___flmul@prod 00B7                 FLASH_WriteBlock@flashWordArray 002F  
                     ??_I2C_CallbackReturnStop 0034                                   _I2C_DO_RESET 1CDE  
                                 ___fltol@exp1 00E1                        ??_rd2RegCompleteHandler 0034  
                                         l1231 137B                                           l1234 13C9  
                                         l1410 153D                                           l1500 0861  
                                         l1254 1262                                           l1431 1644  
                                         l1432 165C                                           l1360 06BC  
                                         l1434 1669                                           l1354 0646  
                                         l1507 0875                                           l1508 087F  
                                         l1462 0D00                                           l1358 06D9  
                                         l4031 1EE5                                           l1375 075C  
                                         l1396 07D3                                           l1388 07BB  
                                         l1469 1F57                                           l1494 082B  
                                         l6001 15C8                                           l6003 1591  
                                         l4261 1EAF                                           l6021 15EA  
                                         l6005 15CD                                           l6031 1603  
                                         l4257 07F9                                           l4249 07DD  
                                         l6105 0A9E                                           l6041 162C  
                                         l5091 12C7                                           l3651 1FD0  
                                         l3803 11D3                                           l4267 1EC3  
                                         l6027 1601                                           l6019 15D3  
                                         l6213 083A                                           ?_map 0120  
                                         l5079 129F                                           l6207 0823  
                                         l6055 1665                                           l3817 1216  
                                         l3809 11D6                                           l3905 10A3  
                                         l6241 089A                                           l6217 083E  
                                         l5193 1395                                           l3843 11A1  
                                         l3915 10A9                                           l3931 1026  
                                         l6075 0A5F                                           l6227 0873  
                                         l6219 084E                                           l6307 018D  
                                         l3909 10A6                                           l3941 1D50  
                                         l6165 0C7F                                           l6157 0C49  
                                         l6093 0A86                                           l6077 0A61  
                                         l6229 0866                                           l5197 13AF  
                                         l3839 119E                                           l6183 0CD0  
                                         l6159 0C60                                           l6095 0A88  
                                         l6079 0A69                                           l6319 01A8  
                                         l3865 106E                                           l3881 1078  
                                         l3849 11A4                                           l6169 0C82  
                                         l6097 0A90                                           l5721 0613  
                                         l6601 0D8D                                           l3875 1075  
                                         l3795 11CD                                           l3971 1EFE  
                                         l6179 0CB9                                           l5811 06E7  
                                         l5803 06D4                                           l6291 0100  
                                         l6283 0096                                           l6611 0DA7  
                                         l3869 1071                                           l6189 0CE9  
                                         l5821 06FB                                           l5725 0616  
                                         l6285 00B3                                           l6613 0DAB  
                                         l6605 0D98                                           l3799 11D0  
                                         l3975 1F03                                           l5727 061E  
                                         l6471 122B                                           l6607 0D9C  
                                         l3969 1EF9                                           l5905 1F51  
                                         l5745 063B                                           l5819 06F9  
                                         l5755 0650                                           l6299 0153  
                                         l6467 1222                                           l6635 0E13  
                                         l6627 0DEE                                           l5941 1519  
                                         l5861 0782                                           l5829 070A  
                                         l5749 063E                                           l5935 150E  
                                         l5855 077B                                           l5847 076E  
                                         l5839 0754                                           l5863 0784  
                                         l6487 1250                                           l6663 0E64  
                                         l6671 0E90                                           l6841 10C0  
                                         l5873 078F                                           l5793 06C4  
                                         l5785 068C                                           l6497 126F  
                                         l6489 125E                                           l6681 0F33  
                                         l6673 0E96                                           l6593 0D7C  
                                         l6843 11B7                                           l5955 1532  
                                         l5939 1511                                           l5891 07CB  
                                         l5795 06C6                                           l6659 0E45  
                                         l6595 0D7E                                           l6845 11EE  
                                         l5869 078D                                           l6685 0F64  
                                         l6669 0E83                                           l6847 108B  
                                         l5975 1568                                           l5959 1535  
                                         l5895 07CF                                           l6695 0FFD  
                                         l6839 0E88                                           l6599 0D89  
                                         l5969 155C                                           l5995 15AF  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u5035 076F  
                                         u4095 128F                                           u5215 1F58  
                                         u5135 07A6                                           u6015 01C1  
                                         u5325 1599                                           u6125 1234  
                                         u6215 1318                                           u5415 15DF  
                                         u5335 15A0                                           u6225 1321  
                                         u5505 164E                                           u5355 15A9  
                                         u6155 1251                                           u5605 0B53  
                                         u5365 15BD                                           u6350 0D22  
                                         u5615 0B8C                                           u6440 0DEC  
                                         u5625 0BF9                                           u6185 1266  
                                         u5635 0C1E                                           u5395 15D6  
                                         u4915 06CA                                           u5645 0C34  
                                         u5485 161A                                           u4870 06AB  
                                         u5655 0C4C                                           u5815 0847  
                                         u5495 1635                                           u4880 06AC  
                                         u5745 0CA0                                           u4865 06A0  
                                         u5755 0CC4                                           u5675 0C55  
                                         u5835 085B                                           u5765 0CDC  
                                         u5855 086D                                           u5935 00A7  
                                         u6567 0D2C                                           u4993 071C  
                                         u4985 06FF                                           u6577 0DB3  
                                         u5955 00C4                                           u6587 0E33  
                                         u6597 12F8                                           u5895 0887  
                                         u5975 0111                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                      ??_wr2RegCompleteHandler 0034                                           _main 0D0F  
                     ?_I2C_CallbackReturnReset 0033                                           _logf 0065  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         map@x 0120                               __end_of_I2C_Open 113C  
                                         btemp 007E                              ?_FLASH_WriteBlock 002D  
                                         start 0033                           ?_MCP3422_ReadVoltage 00BD  
                              ___fldiv@new_exp 00CF                             ??_FLASH_WriteBlock 0030  
                   ??_TMR1_SetInterruptHandler 002C                           __end_of_MCP3422_Read 1DD9  
                                        ??_map 00E2                               ?_I2C_MasterClose 0070  
                      __end_of_TMR0_Initialize 1E4E                                _I2C_WriteNBytes 07DB  
               ??_TMR0_DefaultInterruptHandler 0070                               ?_I2C_MasterStart 0070  
                                _I2C_DO_RX_ACK 1CBD                               ?_I2C_MasterWrite 0070  
                __end_of_OSCILLATOR_Initialize 1CFB                                  ___fltol@sign1 00E0  
                              __end_of___fladd 07DB                                          ?_main 0070  
                                        ?_logf 00D7                                __end_of___fldiv 166E  
                              __end_of___flmul 0D0F                                __end_of___flsub 10FE  
                              __end_of___fltol 127E                                          _T1CON 0018  
                                        i1l121 000D                                          i1l131 0031  
                                        i1l124 001C                                          i1l126 0029  
                                        i1l951 1FA7                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0034  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TXREG 019A  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 002A  
                             __end_of_TMR0_ISR 1D14                               __end_of_TMR1_ISR 1D92  
                            __end_of_I2C_DO_RX 11C6                              __end_of_I2C_DO_TX 1218  
                               _WDT_Initialize 1CD5                                          _errno 016E  
                            __end_of_I2C_Close 1EE8                 I2C_MasterOperation@returnValue 003C  
                      _I2C_MasterEnableRestart 1C96                                          logf@R 0120  
                      __end_of_TMR1_Initialize 1E7B                                          logf@f 015A  
                                        logf@k 013C                                          logf@s 0146  
                                        logf@u 0156                                          logf@w 014E  
                                        logf@x 00D7                                          logf@z 014A  
                                        pclath 000A                               ?_I2C_SetCallback 002A  
                 I2C_SetAddressNackCallback@cb 002F                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                        ??_MCP3422_ReadVoltage 00C1                   MCP3422_ReadVoltage@adc_value 00C9  
                              _TMR1_WriteTimer 1DB9                     __end_of_mbus_timer_handler 1D86  
                           ??_I2C_DO_SEND_STOP 002A                                __initialization 0035  
                                 __end_of_main 1000                                   __end_of_logf 05F9  
                    ?_I2C_DO_SEND_RESTART_READ 0070                          __end_of_MCP3422_Write 1DB9  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 002C                                         ??_main 00EE  
                                       ??_logf 00DB                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 002A  
                            __end_of_HEFregion 2020                         __end_of_WDT_Initialize 1CD9  
                           ??_I2C_MasterSetIrq 002A              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 025F                      FLASH_WriteBlock@writeAddr 002D  
              __end_of_I2C_CallbackReturnReset 1002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 002F                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _T1GCON 0019  
                                 ??_I2C_Poller 003A                        TMR1_WriteTimer@timerVal 0070  
                                       i1l4303 1F85                                         i1l4291 1F70  
                                       i1l5175 1FA3                                         i1l4297 1F78  
                                       i1l6413 09A0                                         i1l6415 09A6  
                                       i1l6407 092A                                         i1l6409 096A  
                                       i1l6433 09E3                                         i1l6443 09FD  
                                       i1l6427 09B8                                         i1l6435 09F6  
                                       i1l4749 1DC3                                         i1l6445 0A19  
                                       i1l6373 08AA                                         i1l6375 08CA  
                                       i1l6377 08E7                                         i1l6379 08EA  
                                       i1l6547 1064                                         i1l6389 0908  
                                       i1l6849 09EB                                         u304_25 1F79  
                                       _PMADRH 0192                                         _PMADRL 0191  
                                       _PMDATH 0194                                         u610_25 0A08  
                                       u602_25 08B9                                         _PMDATL 0193  
                                       u603_25 08E5                                         _PMCON2 0196  
                                       u604_25 08FF                                         u606_25 0937  
                                       u607_25 0973                                         u608_25 098A  
                                       u609_25 09C7                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 08A3  
     ModbusSlaveProcessReceivedQuery@u8ReadReg 0020                            _I2C_MasterGetRxData 1C9F  
                      __end_of_I2C_WriteNBytes 0800                                         ___flge 1360  
                                    ??___fladd 0040                                         _ln2_hi 1834  
                                    ??___fldiv 00C5                                  _I2C_MasterFsm 1014  
                                       _ln2_lo 1830                                      ??___flmul 004C  
                                    ??___flsub 004C                                      ??___fltol 00DB  
                               main@fTdVoltage 01E8                               ?_TMR0_Initialize 0070  
                            I2C_SetCallback@cb 002A                                  _I2C_SetBuffer 1E24  
                           __end_of_I2C_Poller 1D5A                   __end_of_I2C_MasterDisableIrq 1C93  
                                       logf@t1 0124                                         logf@t2 0128  
                                       logf@dk 0142                                         logf@ix 015E  
                          _I2C_DO_ADDRESS_NACK 109A                        FLASH_ReadWord@flashAddr 002A  
                         ?_I2C_MasterGetRxData 0070                                      ?_I2C_Open 0070  
           __end_of_I2C_SetAddressNackCallback 080D                     _I2C_SetAddressNackCallback 0800  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 002A  
                        __end_of_TMR0_CallBack 1D6F       TMR0_SetInterruptHandler@InterruptHandler 002A  
     TMR1_SetInterruptHandler@InterruptHandler 002A                        __end_of_TMR1_WriteTimer 1DC8  
                             main@u16CalBuffer 01D8               ModbusSlaveProcessReceivedQuery@i 0027  
             ModbusSlaveProcessReceivedQuery@j 0025               ModbusSlaveProcessReceivedQuery@k 0021  
                        __end_of_TMR1_CallBack 1D7A                                     ___flge@ff1 0038  
                                   ___flge@ff2 003C                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0034                                   ___xxtofl@exp 0033  
                            _SYSTEM_Initialize 1E4E                                   ___xxtofl@val 002A  
                  __end_of_get_ntc_temperature 1800                        __end_of__initialization 0061  
                      get_ntc_temperature@temp 016A                        get_ntc_temperature@rntc 0162  
                          _I2C_MasterOperation 1EE8                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                                     ___fltol@f1 00D7  
         __end_of_EUSART_SetTxInterruptHandler 1D50                   _EUSART_SetTxInterruptHandler 1D47  
                      _rdBlkRegCompleteHandler 1E7B                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                ??_I2C_DO_RX_ACK 002A  
                                 __pidataBANK0 0002                         _I2C_CallbackReturnStop 1C88  
                              _InitModbusSlave 1E0F                            ??_SYSTEM_Initialize 002D  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                               ?_I2C_SetBuffer 002A                        ?_I2C_MasterWaitForEvent 0070  
                __end_of_I2C_DO_SEND_ADR_WRITE 1D1B                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterGetRxData 002A  
                               _OPTION_REGbits 0095                          I2C_ReadNBytes@address 0040  
                                   ??_I2C_Open 002A                           _eusartRxStatusBuffer 023D  
                   __end_of_I2C_MasterClearIrq 1C8D                    FLASH_WriteBlock@GIEBitValue 0035  
              ??_EUSART_SetOverrunErrorHandler 002C                                   _MCP3422_Read 1DC8  
                    __end_of_SYSTEM_Initialize 1E63                              _I2C_MasterSendAck 1CA9  
                                   __pbssBANK0 0051                                     __pbssBANK2 016E  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
                                   __pbssBANK5 02A0                                 _crcModbusSlave 0064  
                                ??_I2C_DO_IDLE 002A                                  ??_I2C_DO_RCEN 002A  
                __end_of_rd2RegCompleteHandler 1E0F                   __end_of_I2C_MasterSendTxData 1CE9  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 1C9C  
                        ??_I2C_DO_ADDRESS_NACK 0034                  __end_of_wr2RegCompleteHandler 1DEB  
                            ??_mbus_rx_handler 0029                            _I2C_DO_RX_NACK_STOP 1CC1  
                        _rd1RegCompleteHandler 1DEB                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 1CA9                              __end_of__Umul8_16 1F66  
                             ?_I2C_WriteNBytes 003D                         I2C_WriteNBytes@address 0040  
                        _wr1RegCompleteHandler 1002                                     __pmaintext 0D0F  
                          ??_I2C_MasterSendAck 002A                       rd1RegCompleteHandler@ptr 0033  
                                      ?___flge 0038                  ?_EUSART_SetTxInterruptHandler 002A  
             _EUSART_TxDefaultInterruptHandler 01EE                    __end_of_I2C_DO_SEND_RESTART 1CB9  
                              _I2C_DO_TX_EMPTY 106B               __end_of_TMR0_SetInterruptHandler 1D01  
                          I2C_SetBuffer@buffer 002D                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                              ??_mbus_tx_handler 0070  
                                   __pintentry 0004                 __end_of_I2C_MasterWaitForEvent 1CCD  
                          ??_I2C_MasterStartRx 002A                                        _BAUDCON 019F  
                        ??_I2C_MasterOperation 003A                 I2C_SetDataCompleteCallback@ptr 0031  
                     ??_I2C_DO_RX_NACK_RESTART 002A                                 _FLASH_ReadWord 1F06  
            __end_of_I2C_DO_SEND_RESTART_WRITE 1CB5                           ?_I2C_DO_RX_NACK_STOP 0070  
                get_ntc_temperature@adcVoltage 00E3                                  _eusartRxCount 007C  
                                    ?___xxtofl 002A                      __end_of_I2C_MasterSendAck 1CAD  
                                      _SSP1ADD 0212                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 002C                                 calculate_crc@i 0075  
                             ?_TMR1_WriteTimer 0070                      __end_of_I2C_MasterStartRx 1C9F  
                         I2C_Close@returnValue 002B                   ?_I2C_SetDataCompleteCallback 002F  
                                    _I2C_DO_RX 117F                                      _I2C_DO_TX 11C6  
             __end_of_I2C_DO_SEND_RESTART_READ 1CB1                               _FLASH_EraseBlock 1F26  
                                    _I2C_Close 1ECA                      ??_rdBlkRegCompleteHandler 0034  
                      __end_of_InitModbusSlave 1E24                           _I2C_MasterDisableIrq 1C90  
                              ??_I2C_MasterFsm 0037                                 _I2C_ReadNBytes 1EAD  
                          __end_of_I2C_DO_IDLE 1CDE                            __end_of_I2C_DO_RCEN 1CF5  
                                      ___fladd 05F9                                        ___fldiv 14F4  
                                      ___flmul 0A41                                        ___flsub 10C9  
                                      ___fltol 1218                                ??_I2C_SetBuffer 002C  
                      I2C_SetBuffer@bufferSize 002A                             I2C_ReadNBytes@data 003D  
      __end_of_ModbusSlaveProcessReceivedQuery 0A41              ??_ModbusSlaveProcessReceivedQuery 0076  
             ?_ModbusSlaveProcessReceivedQuery 0070                _ModbusSlaveProcessReceivedQuery 08A3  
                               _I2C_MasterRead 1CCD                                 _I2C_MasterOpen 1D92  
                       __end_of_FLASH_ReadWord 1F26                                 _I2C_MasterStop 1C99  
                               _I2C_Initialize 1D5A                                        __ptext1 13DC  
                                      __ptext2 1218                                        __ptext3 166E  
                                      __ptext4 0065                                        __ptext5 10C9  
                                      __ptext6 05F9                                        __ptext7 14F4  
                                      __ptext8 1360                                        __ptext9 1E4E  
                        ??_I2C_DO_RX_NACK_STOP 002A                             _mbus_timer_handler 1D7A  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 1CF5  
                                   ??___xxtofl 002E                             I2C_SetCallback@idx 002E  
                     ??_PIN_MANAGER_Initialize 002A                  I2C_CallbackReturnReset@funPtr 0033  
                    ?_TMR1_SetInterruptHandler 002A                             I2C_SetCallback@ptr 002C  
                                      _tempNTC 01CD                       wr1RegCompleteHandler@ptr 0033  
                          ?_mbus_timer_handler 0070                                        clrloop0 1D08  
                  __end_of_MCP3422_ReadVoltage 1360                                main@fNtcVoltage 01D4  
                                    _HEFregion 1FE0                           end_of_initialization 0061  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 1D3E                  _EUSART_SetOverrunErrorHandler 1D35  
                      MCP3422_ReadVoltage@data 00C6                                     ?_I2C_Close 0070  
                       ?_rd1RegCompleteHandler 0033                        __end_of_I2C_DO_TX_EMPTY 109A  
                        ?_I2C_MasterDisableIrq 0070                         __end_of_I2C_ReadNBytes 1ECA  
                                _calculate_crc 1F66                              _EUSART_Initialize 113C  
                       ?_wr1RegCompleteHandler 0033                             ?_EUSART_Initialize 0070  
                         ??_mbus_timer_handler 0070                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterRead 1CD1                         __end_of_I2C_MasterOpen 1D9E  
                       __end_of_I2C_MasterStop 1C9C                         __end_of_I2C_Initialize 1D64  
                    FLASH_ReadWord@GIEBitValue 002C                                ?_FLASH_ReadWord 002A  
                          ??_EUSART_Initialize 002C                               ??_WDT_Initialize 002A  
               ??_EUSART_SetTxInterruptHandler 002C                       _TMR0_SetInterruptHandler 1CFB  
              __end_of_rdBlkRegCompleteHandler 1E94                           _I2C_MasterSendTxData 1CE3  
                                  ___fladd@grs 004B                                  ___xxtofl@sign 0032  
                  ?_I2C_SetAddressNackCallback 002F                                    ___fldiv@grs 00D1  
                                  ___fldiv@rem 00CA                                     map@out_max 0130  
                                   map@out_min 012C                                    ___flmul@grs 00B2  
                    __end_of_EUSART_Initialize 117F                                    _I2C_DO_IDLE 1CD9  
                                  _I2C_DO_RCEN 1CEF                     rdBlkRegCompleteHandler@ptr 0033  
                               ?_calculate_crc 0070                                      _TXSTAbits 019E  
                             ?_InitModbusSlave 0070                                ?_I2C_ReadNBytes 003D  
                      ?_I2C_CallbackReturnStop 0033                       _I2C_DO_SEND_RESTART_READ 1CAD  
                            FLASH_WriteBlock@i 0036                              _HEFregion_absaddr 1FE0  
                 I2C_CallbackReturnStop@funPtr 0033                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 1000  
                               __end_of___flge 13DC                     _EUSART_DefaultErrorHandler 0000  
                               __end_of_ln2_hi 1838                                 __end_of_ln2_lo 1834  
                             _FLASH_WriteBlock 127E                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 002A  
                          start_initialization 0035                                    __end_of_Lg1 1830  
                                  __end_of_Lg2 182C                                    __end_of_Lg3 1828  
                                  __end_of_Lg4 1824                       InitModbusSlave@u8SlaveId 002B  
                              _mbus_rx_handler 103E                                    __end_of_map 14F4  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 002A  
 EUSART_SetTxInterruptHandler@interruptHandler 002A                                    ??_I2C_DO_RX 0034  
                                  ??_I2C_DO_TX 0034                              ??_I2C_MasterClose 002A  
                              _mbus_tx_handler 1F8E                         ??_I2C_MasterDisableIrq 002A  
                                  ??_I2C_Close 002A                              ??_I2C_MasterStart 002A  
                            ??_I2C_MasterWrite 003D                 __end_of_I2C_CallbackReturnStop 1C8A  
                       _I2C_DO_RX_NACK_RESTART 1CC5                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 1C8A                 ?_EUSART_SetOverrunErrorHandler 002A  
                   _EUSART_FramingErrorHandler 0261                                       ??___flge 0040  
                       _EUSART_SetErrorHandler 1D23                            ?_I2C_MasterClearIrq 0070  
                                    __Umul8_16 1F46                    __end_of_I2C_MasterGetRxData 1CA2  
                                  __pdataBANK0 0064                          __end_of_I2C_DO_RX_ACK 1CC1  
                  FLASH_EraseBlock@GIEBitValue 002C                                  _MCP3422_Write 1DAB  
                     __end_of_FLASH_EraseBlock 1F46                               _I2C_DO_SEND_STOP 1CB9  
                            ??_I2C_SetCallback 002D                            I2C_Open@returnValue 002C  
                           _I2C_MasterSendNack 1CA5                       ?_I2C_MasterEnableRestart 0070  
                            __p_HEFregion_text 1FE0                                      ___fladd@a 003C  
                                    ___fladd@b 0038                              _i2c_fsmStateTable 1800  
                                    ___fldiv@a 00BD                                      ___fldiv@b 00C1  
                        _I2C_DO_SEND_ADR_WRITE 1D14                                      ___flmul@a 00AC  
                                    ___flmul@b 00A8                                    __pbssCOMMON 007C  
                                    ___flsub@a 00A0                                      ___flsub@b 00A4  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                                __pcstackBANK3 01D2                                 ??_I2C_DO_RESET 002A  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 1D23  
                         ??_I2C_MasterClearIrq 002A                    __end_of_I2C_DO_ADDRESS_NACK 10C9  
                              ??_calculate_crc 0070                               _I2C_MasterIsNack 1CE9  
                    _I2C_DO_SEND_RESTART_WRITE 1CB1               _EUSART_RxDefaultInterruptHandler 01EC  
                             _I2C_MasterSetIrq 1CA2                          _TMR0_InterruptHandler 005C  
                                    __pnvBANK0 005C                                      __pnvBANK3 01EC  
                                    __pnvBANK4 025D                          _rd2RegCompleteHandler 1DFD  
                       _PIN_MANAGER_Initialize 1E94                          _wr2RegCompleteHandler 1DD9  
                    ??_I2C_CallbackReturnReset 0034                       _get_ntc_temperature$2276 0166  
                  __end_of_I2C_MasterOperation 1F06                           ??_I2C_MasterSendNack 002A  
                     rd2RegCompleteHandler@ptr 0033               __end_of_TMR1_SetInterruptHandler 1D07  
                                     ?___fladd 0038                                       ?___fldiv 00BD  
                                     ?___flmul 00A8                                       ?___flsub 00A0  
                                     ?___fltol 00D7                                     ?__Umul8_16 002A  
                               ?_MCP3422_Write 0070                                   _eusartRxHead 0059  
                                 _eusartTxHead 005B                                   _eusartRxTail 007D  
                       ??_I2C_MasterSendTxData 002A                                   _eusartTxTail 005A  
                    __end_of_i2c_fsmStateTable 1820                                      _logf$2280 0134  
                                    _logf$2281 0138                                      _logf$2277 0152  
                                    _logf$2278 012C                                      _logf$2279 0130  
                 ??_INTERRUPT_InterruptManager 007C                        __end_of_mbus_rx_handler 106B  
                      _eusartTxBufferRemaining 0063                        I2C_MasterOperation@read 003B  
                                     _I2C_Open 10FE                        __end_of_mbus_tx_handler 1FB7  
                            I2C_ReadNBytes@len 003E                                  _TMR0_CallBack 1D64  
                      ??_rd1RegCompleteHandler 0034                 FLASH_WriteBlock@blockStartAddr 0033  
                               _eusartRxBuffer 024D                        ??_wr1RegCompleteHandler 0034  
                                _TMR1_CallBack 1D6F                              ??_TMR0_Initialize 002C  
                               _eusartTxBuffer 02A0         EUSART_SetErrorHandler@interruptHandler 002A  
                                     _LATCbits 010E                                      clear_ram0 1D07  
                                     _PIE1bits 0091                              _eusartRxLastError 0058  
                   ??_TMR0_SetInterruptHandler 002C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 002C                                       _PIR2bits 0012  
                    FLASH_EraseBlock@startAddr 002A                               ??_FLASH_ReadWord 002C  
                        __end_of_I2C_MasterFsm 103E                                      main@F4497 02E0  
                  __end_of_I2C_DO_RX_NACK_STOP 1CC5                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                                       _TMR0_ISR 1D0D  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 1D86  
              __end_of_I2C_MasterEnableRestart 1C99                                       _SSP1STAT 0214  
                        __end_of_I2C_SetBuffer 1E39                                      map@in_max 0128  
                                    map@in_min 0124                              ??_TMR1_Initialize 002C  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 002A  
                     wr2RegCompleteHandler@ptr 0033                                 ?_TMR0_CallBack 0070  
                   ??_I2C_DO_SEND_RESTART_READ 002A                       ?_rdBlkRegCompleteHandler 0033  
                             ??_I2C_ReadNBytes 0040                                 ?_TMR1_CallBack 0070  
                                   _I2C_Poller 1D50                                     _I2C_Status 0220  
                                 ?_I2C_DO_IDLE 0070                                       _bCalMode 01D1  
                                 ?_I2C_DO_RCEN 0070                     MCP3422_ReadVoltage@channel 00C5  
                     __end_of_FLASH_WriteBlock 12E5                         ?_rd2RegCompleteHandler 0033  
                             ??_I2C_MasterRead 003D                            I2C_WriteNBytes@data 003D  
                             ??_I2C_MasterOpen 002A                         ?_wr2RegCompleteHandler 0033  
                             ??_I2C_MasterStop 002A                       ??_I2C_MasterWaitForEvent 002A  
                             ??_I2C_Initialize 002A                                ??_MCP3422_Write 0041  
                         __end_of_I2C_DO_RESET 1CE3                        ??_OSCILLATOR_Initialize 002A  
                                  ??__Umul8_16 002C                            _EUSART_ErrorHandler 025D  
                         _I2C_DO_SEND_ADR_READ 1D1B                                       _map$2275 00EA  
                     _TMR1_SetInterruptHandler 1D01                               ?_mbus_rx_handler 0070  
                            MCP3422_Read@count 0041                          _TMR1_InterruptHandler 005E  
                              _I2C_MasterClose 1C8D                  I2C_SetAddressNackCallback@ptr 0031  
                              I2C_Open@address 002B                                       ___xxtofl 080D  
                              _I2C_MasterStart 1C93                                _I2C_MasterWrite 1CD1  
                          _get_ntc_temperature 166E                              ??_I2C_WriteNBytes 0040  
                                ?_MCP3422_Read 0041                               ?_mbus_tx_handler 0070  
                                     __ptext10 1CD5                                       __ptext11 1E63  
                                     __ptext20 1D3E                                       __ptext12 1D01  
                                     __ptext21 1D35                                       __ptext13 1E39  
                                   _T1GCONbits 0019                                       __ptext30 0800  
                                     __ptext22 1D2C                                       __ptext14 1CFB  
                                     __ptext31 1CD1                                       __ptext23 1D23  
                                     __ptext15 1E94                                       __ptext40 1014  
                                     __ptext32 1DC8                                       __ptext24 12E5  
                                     __ptext16 1CF5                                       __ptext41 109A  
                                     __ptext33 1EAD                                       __ptext25 080D  
                                     __ptext17 1D5A                                       __ptext50 1CEF  
                                     __ptext42 1CDE                                       __ptext34 10FE  
                                     __ptext26 0A41                                       __ptext18 113C  
                                     __ptext51 117F                                       __ptext43 1CC5  
                                     __ptext35 1D92                                       __ptext27 1F46  
                                     __ptext19 1D47                                       __ptext60 1CA9  
                                     __ptext52 11C6                                       __ptext44 1CC1  
                                     __ptext36 1CCD                                       __ptext28 1DAB  
                                     __ptext61 1C9F                                       __ptext53 1D14  
                                     __ptext45 1CBD                                       __ptext37 1EE8  
                                     __ptext29 07DB                                       __ptext70 1DD9  
                                     __ptext62 1CA5                                       __ptext54 1D1B  
                                     __ptext46 1CB9                                       __ptext38 1D50  
                                     __ptext71 1D9E                                       __ptext63 1C9C  
                                     __ptext55 1CD9                                       __ptext47 1CB5  
                                     __ptext39 1CC9                                       __ptext80 1C8A  
                                     __ptext72 1FB7                                       __ptext64 1000  
                                     __ptext56 106B                                       __ptext48 1CB1  
                                     __ptext81 1E0F                                       __ptext73 1E24  
                                     __ptext65 1C88                                       __ptext57 1CA2  
                                     __ptext49 1CAD                                       __ptext90 1D86  
                                     __ptext82 127E                                       __ptext74 1C99  
                                     __ptext66 1E7B                                       __ptext58 1CE9  
                                     __ptext91 1DB9                                       __ptext83 1F26  
                                     __ptext75 1C96                                       __ptext67 1002  
                                     __ptext59 1CE3                                       __ptext92 1D6F  
                                     __ptext84 1F06                                       __ptext76 1C93  
                                     __ptext68 1DFD                                       __ptext93 1D7A  
                                     __ptext77 1ECA                                       __ptext69 1DEB  
                                     __ptext94 1D0D                                       __ptext86 1F8E  
                                     __ptext78 1C90                                       __ptext95 1D64  
                                     __ptext87 103E                                       __ptext79 1C8D  
                                     __ptext96 1C87                                       __ptext88 08A3  
                                     __ptext89 1F66                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 1DAB  
                  _I2C_SetDataCompleteCallback 1D9E                        ?_I2C_DO_RX_NACK_RESTART 0070  
                              _modbusSlaveData 01A0                       __end_of_I2C_DO_SEND_STOP 1CBD  
         __end_of_TMR0_DefaultInterruptHandler 1C88                   _TMR0_DefaultInterruptHandler 1C87  
                      ?_EUSART_SetErrorHandler 002A                                _I2C_SetCallback 1FB7  
                ??_I2C_SetDataCompleteCallback 0032                           ?_get_ntc_temperature 00E3  
EUSART_SetOverrunErrorHandler@interruptHandler 002A                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0033  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 1D35  
                _EUSART_SetFramingErrorHandler 1D2C                                   _SSP1STATbits 0214  
                            ??_TMR1_WriteTimer 0072                       MCP3422_ReadVoltage@F4487 0055  
                     __end_of_I2C_MasterIsNack 1CEF         ModbusSlaveProcessReceivedQuery@u16Data 0023  
                            ?_FLASH_EraseBlock 002A                                       logf@F472 0051  
                     __end_of_I2C_MasterSetIrq 1CA5                             ??_FLASH_EraseBlock 002C  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 003E  
                              ??_TMR0_CallBack 0070                                 ??_MCP3422_Read 0042  
                                     logf@hfsq 013E                 __end_of_I2C_DO_RX_NACK_RESTART 1CC9  
                              ??_TMR1_CallBack 0071                               MCP3422_Read@data 0045  
                                     intlevel1 0000                                    ?_I2C_Poller 0070  
                                   _PMCON1bits 0195                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 1D2C                            _I2C_DO_SEND_RESTART 1CB5  
         __end_of_EUSART_SetRxInterruptHandler 1D47                   _EUSART_SetRxInterruptHandler 1D3E  
                        ??_get_ntc_temperature 0051                  ?_TMR0_DefaultInterruptHandler 0070  
EUSART_SetFramingErrorHandler@interruptHandler 002A                        __end_of_I2C_MasterClose 1C90  
                      __end_of_I2C_MasterStart 1C96                        __end_of_I2C_MasterWrite 1CD5  
                                __pstringtext1 1800                                  __pstringtext2 1820  
                                __pstringtext3 1824                                  __pstringtext4 1828  
                                __pstringtext5 182C                                  __pstringtext6 1830  
                                __pstringtext7 1834                         __Umul8_16@multiplicand 002A  
                         ?_I2C_DO_SEND_RESTART 0070                                     _OPTION_REG 0095  
                            MCP3422_Write@data 0042                                _TMR0_Initialize 1E39  
                                ___fladd@signs 0048                        __end_of_I2C_SetCallback 1FE0  
               __end_of_PIN_MANAGER_Initialize 1EAD                            calculate_crc@crcbit 0073  
                          calculate_crc@crcreg 0072                  __end_of_rd1RegCompleteHandler 1DFD  
                                 ___fladd@aexp 0049                                   ___fladd@bexp 004A  
                        __end_of_calculate_crc 1F8E                           __Umul8_16@multiplier 0032  
                __end_of_wr1RegCompleteHandler 1014                                _TMR1_Initialize 1E63  
                            __Umul8_16@product 002E  
