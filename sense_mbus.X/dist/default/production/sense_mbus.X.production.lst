

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 06 16:53:38 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	_HEFregion_text,global,class=STRCODE,delta=2,noexec
    13                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    26                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	text18,local,class=CODE,merge=1,delta=2
    49                           	psect	text19,local,class=CODE,merge=1,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2
    51                           	psect	text21,local,class=CODE,merge=1,delta=2
    52                           	psect	text22,local,class=CODE,merge=1,delta=2
    53                           	psect	text23,local,class=CODE,merge=1,delta=2
    54                           	psect	text24,local,class=CODE,merge=1,delta=2
    55                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text28,local,class=CODE,merge=1,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,delta=2
    61                           	psect	text31,local,class=CODE,merge=1,delta=2
    62                           	psect	text32,local,class=CODE,merge=1,delta=2
    63                           	psect	text33,local,class=CODE,merge=1,delta=2
    64                           	psect	text34,local,class=CODE,merge=1,delta=2
    65                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text36,local,class=CODE,merge=1,delta=2
    67                           	psect	text37,local,class=CODE,merge=1,delta=2
    68                           	psect	text38,local,class=CODE,merge=1,delta=2
    69                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text41,local,class=CODE,merge=1,delta=2
    72                           	psect	text42,local,class=CODE,merge=1,delta=2
    73                           	psect	text43,local,class=CODE,merge=1,delta=2
    74                           	psect	text44,local,class=CODE,merge=1,delta=2
    75                           	psect	text45,local,class=CODE,merge=1,delta=2
    76                           	psect	text46,local,class=CODE,merge=1,delta=2
    77                           	psect	text47,local,class=CODE,merge=1,delta=2
    78                           	psect	text48,local,class=CODE,merge=1,delta=2
    79                           	psect	text49,local,class=CODE,merge=1,delta=2
    80                           	psect	text50,local,class=CODE,merge=1,delta=2
    81                           	psect	text51,local,class=CODE,merge=1,delta=2
    82                           	psect	text52,local,class=CODE,merge=1,delta=2
    83                           	psect	text53,local,class=CODE,merge=1,delta=2
    84                           	psect	text54,local,class=CODE,merge=1,delta=2
    85                           	psect	text55,local,class=CODE,merge=1,delta=2
    86                           	psect	text56,local,class=CODE,merge=1,delta=2
    87                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text64,local,class=CODE,merge=1,delta=2
    95                           	psect	text65,local,class=CODE,merge=1,delta=2
    96                           	psect	text66,local,class=CODE,merge=1,delta=2
    97                           	psect	text67,local,class=CODE,merge=1,delta=2
    98                           	psect	text68,local,class=CODE,merge=1,delta=2
    99                           	psect	text69,local,class=CODE,merge=1,delta=2
   100                           	psect	text70,local,class=CODE,merge=1,delta=2
   101                           	psect	text71,local,class=CODE,merge=1,delta=2
   102                           	psect	text72,local,class=CODE,merge=1,delta=2
   103                           	psect	text73,local,class=CODE,merge=1,delta=2
   104                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text77,local,class=CODE,merge=1,delta=2
   108                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text81,local,class=CODE,merge=1,delta=2
   112                           	psect	text82,local,class=CODE,merge=1,delta=2
   113                           	psect	text83,local,class=CODE,merge=1,delta=2
   114                           	psect	text84,local,class=CODE,merge=1,delta=2
   115                           	psect	intentry,global,class=CODE,delta=2
   116                           	psect	text86,local,class=CODE,merge=1,delta=2
   117                           	psect	text87,local,class=CODE,merge=1,delta=2
   118                           	psect	text88,local,class=CODE,merge=1,delta=2
   119                           	psect	text89,local,class=CODE,merge=1,delta=2
   120                           	psect	text90,local,class=CODE,merge=1,delta=2
   121                           	psect	text91,local,class=CODE,merge=1,delta=2
   122                           	psect	text92,local,class=CODE,merge=1,delta=2
   123                           	psect	text93,local,class=CODE,merge=1,delta=2
   124                           	psect	text94,local,class=CODE,merge=1,delta=2
   125                           	psect	text95,local,class=CODE,merge=1,delta=2
   126                           	psect	text96,local,class=CODE,merge=1,delta=2
   127                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   128                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   129                           	dabs	1,0x7E,2
   130  0000                     
   131                           ; Version 2.40
   132                           ; Generated 17/11/2021 GMT
   133                           ; 
   134                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   135                           ; All rights reserved.
   136                           ; 
   137                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   138                           ; 
   139                           ; Redistribution and use in source and binary forms, with or without modification, are
   140                           ; permitted provided that the following conditions are met:
   141                           ; 
   142                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   143                           ;        conditions and the following disclaimer.
   144                           ; 
   145                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   146                           ;        of conditions and the following disclaimer in the documentation and/or other
   147                           ;        materials provided with the distribution. Publication is not required when
   148                           ;        this file is used in an embedded application.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC16F1509 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  0111                     	;# 
   214  0112                     	;# 
   215  0113                     	;# 
   216  0114                     	;# 
   217  0115                     	;# 
   218  0116                     	;# 
   219  0117                     	;# 
   220  0118                     	;# 
   221  0119                     	;# 
   222  011D                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  020D                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0391                     	;# 
   261  0392                     	;# 
   262  0393                     	;# 
   263  0394                     	;# 
   264  0395                     	;# 
   265  0396                     	;# 
   266  0498                     	;# 
   267  0498                     	;# 
   268  0499                     	;# 
   269  049A                     	;# 
   270  049B                     	;# 
   271  049B                     	;# 
   272  049C                     	;# 
   273  049D                     	;# 
   274  049E                     	;# 
   275  049F                     	;# 
   276  0611                     	;# 
   277  0612                     	;# 
   278  0613                     	;# 
   279  0613                     	;# 
   280  0614                     	;# 
   281  0615                     	;# 
   282  0616                     	;# 
   283  0616                     	;# 
   284  0617                     	;# 
   285  0618                     	;# 
   286  0619                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061B                     	;# 
   290  061C                     	;# 
   291  061C                     	;# 
   292  0691                     	;# 
   293  0692                     	;# 
   294  0693                     	;# 
   295  0694                     	;# 
   296  0695                     	;# 
   297  0F0F                     	;# 
   298  0F10                     	;# 
   299  0F11                     	;# 
   300  0F12                     	;# 
   301  0F13                     	;# 
   302  0F14                     	;# 
   303  0F15                     	;# 
   304  0F16                     	;# 
   305  0F17                     	;# 
   306  0F18                     	;# 
   307  0F19                     	;# 
   308  0F1A                     	;# 
   309  0F1B                     	;# 
   310  0F1C                     	;# 
   311  0F1D                     	;# 
   312  0F1E                     	;# 
   313  0F1F                     	;# 
   314  0F20                     	;# 
   315  0F21                     	;# 
   316  0F22                     	;# 
   317  0F23                     	;# 
   318  0F24                     	;# 
   319  0F25                     	;# 
   320  0F26                     	;# 
   321  0F27                     	;# 
   322  0F28                     	;# 
   323  0F29                     	;# 
   324  0F2A                     	;# 
   325  0F2B                     	;# 
   326  0F2C                     	;# 
   327  0F2D                     	;# 
   328  0F2E                     	;# 
   329  0F2F                     	;# 
   330  0F8C                     	;# 
   331  0F8D                     	;# 
   332  0F91                     	;# 
   333  0F95                     	;# 
   334  0F96                     	;# 
   335  0F97                     	;# 
   336  0F9C                     	;# 
   337  0F9D                     	;# 
   338  0F9E                     	;# 
   339  0FE3                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0095                     	;# 
   385  0096                     	;# 
   386  0097                     	;# 
   387  0099                     	;# 
   388  009A                     	;# 
   389  009B                     	;# 
   390  009B                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  0111                     	;# 
   399  0112                     	;# 
   400  0113                     	;# 
   401  0114                     	;# 
   402  0115                     	;# 
   403  0116                     	;# 
   404  0117                     	;# 
   405  0118                     	;# 
   406  0119                     	;# 
   407  011D                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  018E                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  019A                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019C                     	;# 
   425  019D                     	;# 
   426  019E                     	;# 
   427  019F                     	;# 
   428  020C                     	;# 
   429  020D                     	;# 
   430  0211                     	;# 
   431  0211                     	;# 
   432  0212                     	;# 
   433  0212                     	;# 
   434  0213                     	;# 
   435  0213                     	;# 
   436  0214                     	;# 
   437  0214                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0215                     	;# 
   441  0216                     	;# 
   442  0216                     	;# 
   443  0217                     	;# 
   444  0217                     	;# 
   445  0391                     	;# 
   446  0392                     	;# 
   447  0393                     	;# 
   448  0394                     	;# 
   449  0395                     	;# 
   450  0396                     	;# 
   451  0498                     	;# 
   452  0498                     	;# 
   453  0499                     	;# 
   454  049A                     	;# 
   455  049B                     	;# 
   456  049B                     	;# 
   457  049C                     	;# 
   458  049D                     	;# 
   459  049E                     	;# 
   460  049F                     	;# 
   461  0611                     	;# 
   462  0612                     	;# 
   463  0613                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0615                     	;# 
   467  0616                     	;# 
   468  0616                     	;# 
   469  0617                     	;# 
   470  0618                     	;# 
   471  0619                     	;# 
   472  0619                     	;# 
   473  061A                     	;# 
   474  061B                     	;# 
   475  061C                     	;# 
   476  061C                     	;# 
   477  0691                     	;# 
   478  0692                     	;# 
   479  0693                     	;# 
   480  0694                     	;# 
   481  0695                     	;# 
   482  0F0F                     	;# 
   483  0F10                     	;# 
   484  0F11                     	;# 
   485  0F12                     	;# 
   486  0F13                     	;# 
   487  0F14                     	;# 
   488  0F15                     	;# 
   489  0F16                     	;# 
   490  0F17                     	;# 
   491  0F18                     	;# 
   492  0F19                     	;# 
   493  0F1A                     	;# 
   494  0F1B                     	;# 
   495  0F1C                     	;# 
   496  0F1D                     	;# 
   497  0F1E                     	;# 
   498  0F1F                     	;# 
   499  0F20                     	;# 
   500  0F21                     	;# 
   501  0F22                     	;# 
   502  0F23                     	;# 
   503  0F24                     	;# 
   504  0F25                     	;# 
   505  0F26                     	;# 
   506  0F27                     	;# 
   507  0F28                     	;# 
   508  0F29                     	;# 
   509  0F2A                     	;# 
   510  0F2B                     	;# 
   511  0F2C                     	;# 
   512  0F2D                     	;# 
   513  0F2E                     	;# 
   514  0F2F                     	;# 
   515  0F8C                     	;# 
   516  0F8D                     	;# 
   517  0F91                     	;# 
   518  0F95                     	;# 
   519  0F96                     	;# 
   520  0F97                     	;# 
   521  0F9C                     	;# 
   522  0F9D                     	;# 
   523  0F9E                     	;# 
   524  0FE3                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0016                     	;# 
   557  0017                     	;# 
   558  0018                     	;# 
   559  0019                     	;# 
   560  001A                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  008C                     	;# 
   564  008D                     	;# 
   565  008E                     	;# 
   566  0091                     	;# 
   567  0092                     	;# 
   568  0093                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0099                     	;# 
   573  009A                     	;# 
   574  009B                     	;# 
   575  009B                     	;# 
   576  009C                     	;# 
   577  009D                     	;# 
   578  009E                     	;# 
   579  009F                     	;# 
   580  010C                     	;# 
   581  010D                     	;# 
   582  010E                     	;# 
   583  0111                     	;# 
   584  0112                     	;# 
   585  0113                     	;# 
   586  0114                     	;# 
   587  0115                     	;# 
   588  0116                     	;# 
   589  0117                     	;# 
   590  0118                     	;# 
   591  0119                     	;# 
   592  011D                     	;# 
   593  018C                     	;# 
   594  018D                     	;# 
   595  018E                     	;# 
   596  0191                     	;# 
   597  0191                     	;# 
   598  0192                     	;# 
   599  0193                     	;# 
   600  0193                     	;# 
   601  0194                     	;# 
   602  0195                     	;# 
   603  0196                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  0211                     	;# 
   616  0211                     	;# 
   617  0212                     	;# 
   618  0212                     	;# 
   619  0213                     	;# 
   620  0213                     	;# 
   621  0214                     	;# 
   622  0214                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0216                     	;# 
   627  0216                     	;# 
   628  0217                     	;# 
   629  0217                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  0498                     	;# 
   637  0498                     	;# 
   638  0499                     	;# 
   639  049A                     	;# 
   640  049B                     	;# 
   641  049B                     	;# 
   642  049C                     	;# 
   643  049D                     	;# 
   644  049E                     	;# 
   645  049F                     	;# 
   646  0611                     	;# 
   647  0612                     	;# 
   648  0613                     	;# 
   649  0613                     	;# 
   650  0614                     	;# 
   651  0615                     	;# 
   652  0616                     	;# 
   653  0616                     	;# 
   654  0617                     	;# 
   655  0618                     	;# 
   656  0619                     	;# 
   657  0619                     	;# 
   658  061A                     	;# 
   659  061B                     	;# 
   660  061C                     	;# 
   661  061C                     	;# 
   662  0691                     	;# 
   663  0692                     	;# 
   664  0693                     	;# 
   665  0694                     	;# 
   666  0695                     	;# 
   667  0F0F                     	;# 
   668  0F10                     	;# 
   669  0F11                     	;# 
   670  0F12                     	;# 
   671  0F13                     	;# 
   672  0F14                     	;# 
   673  0F15                     	;# 
   674  0F16                     	;# 
   675  0F17                     	;# 
   676  0F18                     	;# 
   677  0F19                     	;# 
   678  0F1A                     	;# 
   679  0F1B                     	;# 
   680  0F1C                     	;# 
   681  0F1D                     	;# 
   682  0F1E                     	;# 
   683  0F1F                     	;# 
   684  0F20                     	;# 
   685  0F21                     	;# 
   686  0F22                     	;# 
   687  0F23                     	;# 
   688  0F24                     	;# 
   689  0F25                     	;# 
   690  0F26                     	;# 
   691  0F27                     	;# 
   692  0F28                     	;# 
   693  0F29                     	;# 
   694  0F2A                     	;# 
   695  0F2B                     	;# 
   696  0F2C                     	;# 
   697  0F2D                     	;# 
   698  0F2E                     	;# 
   699  0F2F                     	;# 
   700  0F8C                     	;# 
   701  0F8D                     	;# 
   702  0F91                     	;# 
   703  0F95                     	;# 
   704  0F96                     	;# 
   705  0F97                     	;# 
   706  0F9C                     	;# 
   707  0F9D                     	;# 
   708  0F9E                     	;# 
   709  0FE3                     	;# 
   710  0FE4                     	;# 
   711  0FE5                     	;# 
   712  0FE6                     	;# 
   713  0FE7                     	;# 
   714  0FE8                     	;# 
   715  0FE9                     	;# 
   716  0FEA                     	;# 
   717  0FEB                     	;# 
   718  0FED                     	;# 
   719  0FEE                     	;# 
   720  0FEF                     	;# 
   721  0000                     	;# 
   722  0001                     	;# 
   723  0002                     	;# 
   724  0003                     	;# 
   725  0004                     	;# 
   726  0005                     	;# 
   727  0006                     	;# 
   728  0007                     	;# 
   729  0008                     	;# 
   730  0009                     	;# 
   731  000A                     	;# 
   732  000B                     	;# 
   733  000C                     	;# 
   734  000D                     	;# 
   735  000E                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0099                     	;# 
   758  009A                     	;# 
   759  009B                     	;# 
   760  009B                     	;# 
   761  009C                     	;# 
   762  009D                     	;# 
   763  009E                     	;# 
   764  009F                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  0111                     	;# 
   769  0112                     	;# 
   770  0113                     	;# 
   771  0114                     	;# 
   772  0115                     	;# 
   773  0116                     	;# 
   774  0117                     	;# 
   775  0118                     	;# 
   776  0119                     	;# 
   777  011D                     	;# 
   778  018C                     	;# 
   779  018D                     	;# 
   780  018E                     	;# 
   781  0191                     	;# 
   782  0191                     	;# 
   783  0192                     	;# 
   784  0193                     	;# 
   785  0193                     	;# 
   786  0194                     	;# 
   787  0195                     	;# 
   788  0196                     	;# 
   789  0197                     	;# 
   790  0199                     	;# 
   791  019A                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0216                     	;# 
   812  0216                     	;# 
   813  0217                     	;# 
   814  0217                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  0394                     	;# 
   819  0395                     	;# 
   820  0396                     	;# 
   821  0498                     	;# 
   822  0498                     	;# 
   823  0499                     	;# 
   824  049A                     	;# 
   825  049B                     	;# 
   826  049B                     	;# 
   827  049C                     	;# 
   828  049D                     	;# 
   829  049E                     	;# 
   830  049F                     	;# 
   831  0611                     	;# 
   832  0612                     	;# 
   833  0613                     	;# 
   834  0613                     	;# 
   835  0614                     	;# 
   836  0615                     	;# 
   837  0616                     	;# 
   838  0616                     	;# 
   839  0617                     	;# 
   840  0618                     	;# 
   841  0619                     	;# 
   842  0619                     	;# 
   843  061A                     	;# 
   844  061B                     	;# 
   845  061C                     	;# 
   846  061C                     	;# 
   847  0691                     	;# 
   848  0692                     	;# 
   849  0693                     	;# 
   850  0694                     	;# 
   851  0695                     	;# 
   852  0F0F                     	;# 
   853  0F10                     	;# 
   854  0F11                     	;# 
   855  0F12                     	;# 
   856  0F13                     	;# 
   857  0F14                     	;# 
   858  0F15                     	;# 
   859  0F16                     	;# 
   860  0F17                     	;# 
   861  0F18                     	;# 
   862  0F19                     	;# 
   863  0F1A                     	;# 
   864  0F1B                     	;# 
   865  0F1C                     	;# 
   866  0F1D                     	;# 
   867  0F1E                     	;# 
   868  0F1F                     	;# 
   869  0F20                     	;# 
   870  0F21                     	;# 
   871  0F22                     	;# 
   872  0F23                     	;# 
   873  0F24                     	;# 
   874  0F25                     	;# 
   875  0F26                     	;# 
   876  0F27                     	;# 
   877  0F28                     	;# 
   878  0F29                     	;# 
   879  0F2A                     	;# 
   880  0F2B                     	;# 
   881  0F2C                     	;# 
   882  0F2D                     	;# 
   883  0F2E                     	;# 
   884  0F2F                     	;# 
   885  0F8C                     	;# 
   886  0F8D                     	;# 
   887  0F91                     	;# 
   888  0F95                     	;# 
   889  0F96                     	;# 
   890  0F97                     	;# 
   891  0F9C                     	;# 
   892  0F9D                     	;# 
   893  0F9E                     	;# 
   894  0FE3                     	;# 
   895  0FE4                     	;# 
   896  0FE5                     	;# 
   897  0FE6                     	;# 
   898  0FE7                     	;# 
   899  0FE8                     	;# 
   900  0FE9                     	;# 
   901  0FEA                     	;# 
   902  0FEB                     	;# 
   903  0FED                     	;# 
   904  0FEE                     	;# 
   905  0FEF                     	;# 
   906  0000                     	;# 
   907  0001                     	;# 
   908  0002                     	;# 
   909  0003                     	;# 
   910  0004                     	;# 
   911  0005                     	;# 
   912  0006                     	;# 
   913  0007                     	;# 
   914  0008                     	;# 
   915  0009                     	;# 
   916  000A                     	;# 
   917  000B                     	;# 
   918  000C                     	;# 
   919  000D                     	;# 
   920  000E                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0015                     	;# 
   925  0016                     	;# 
   926  0016                     	;# 
   927  0017                     	;# 
   928  0018                     	;# 
   929  0019                     	;# 
   930  001A                     	;# 
   931  001B                     	;# 
   932  001C                     	;# 
   933  008C                     	;# 
   934  008D                     	;# 
   935  008E                     	;# 
   936  0091                     	;# 
   937  0092                     	;# 
   938  0093                     	;# 
   939  0095                     	;# 
   940  0096                     	;# 
   941  0097                     	;# 
   942  0099                     	;# 
   943  009A                     	;# 
   944  009B                     	;# 
   945  009B                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  009F                     	;# 
   950  010C                     	;# 
   951  010D                     	;# 
   952  010E                     	;# 
   953  0111                     	;# 
   954  0112                     	;# 
   955  0113                     	;# 
   956  0114                     	;# 
   957  0115                     	;# 
   958  0116                     	;# 
   959  0117                     	;# 
   960  0118                     	;# 
   961  0119                     	;# 
   962  011D                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  018E                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019D                     	;# 
   981  019E                     	;# 
   982  019F                     	;# 
   983  020C                     	;# 
   984  020D                     	;# 
   985  0211                     	;# 
   986  0211                     	;# 
   987  0212                     	;# 
   988  0212                     	;# 
   989  0213                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0214                     	;# 
   993  0215                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0216                     	;# 
   997  0216                     	;# 
   998  0217                     	;# 
   999  0217                     	;# 
  1000  0391                     	;# 
  1001  0392                     	;# 
  1002  0393                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  0498                     	;# 
  1007  0498                     	;# 
  1008  0499                     	;# 
  1009  049A                     	;# 
  1010  049B                     	;# 
  1011  049B                     	;# 
  1012  049C                     	;# 
  1013  049D                     	;# 
  1014  049E                     	;# 
  1015  049F                     	;# 
  1016  0611                     	;# 
  1017  0612                     	;# 
  1018  0613                     	;# 
  1019  0613                     	;# 
  1020  0614                     	;# 
  1021  0615                     	;# 
  1022  0616                     	;# 
  1023  0616                     	;# 
  1024  0617                     	;# 
  1025  0618                     	;# 
  1026  0619                     	;# 
  1027  0619                     	;# 
  1028  061A                     	;# 
  1029  061B                     	;# 
  1030  061C                     	;# 
  1031  061C                     	;# 
  1032  0691                     	;# 
  1033  0692                     	;# 
  1034  0693                     	;# 
  1035  0694                     	;# 
  1036  0695                     	;# 
  1037  0F0F                     	;# 
  1038  0F10                     	;# 
  1039  0F11                     	;# 
  1040  0F12                     	;# 
  1041  0F13                     	;# 
  1042  0F14                     	;# 
  1043  0F15                     	;# 
  1044  0F16                     	;# 
  1045  0F17                     	;# 
  1046  0F18                     	;# 
  1047  0F19                     	;# 
  1048  0F1A                     	;# 
  1049  0F1B                     	;# 
  1050  0F1C                     	;# 
  1051  0F1D                     	;# 
  1052  0F1E                     	;# 
  1053  0F1F                     	;# 
  1054  0F20                     	;# 
  1055  0F21                     	;# 
  1056  0F22                     	;# 
  1057  0F23                     	;# 
  1058  0F24                     	;# 
  1059  0F25                     	;# 
  1060  0F26                     	;# 
  1061  0F27                     	;# 
  1062  0F28                     	;# 
  1063  0F29                     	;# 
  1064  0F2A                     	;# 
  1065  0F2B                     	;# 
  1066  0F2C                     	;# 
  1067  0F2D                     	;# 
  1068  0F2E                     	;# 
  1069  0F2F                     	;# 
  1070  0F8C                     	;# 
  1071  0F8D                     	;# 
  1072  0F91                     	;# 
  1073  0F95                     	;# 
  1074  0F96                     	;# 
  1075  0F97                     	;# 
  1076  0F9C                     	;# 
  1077  0F9D                     	;# 
  1078  0F9E                     	;# 
  1079  0FE3                     	;# 
  1080  0FE4                     	;# 
  1081  0FE5                     	;# 
  1082  0FE6                     	;# 
  1083  0FE7                     	;# 
  1084  0FE8                     	;# 
  1085  0FE9                     	;# 
  1086  0FEA                     	;# 
  1087  0FEB                     	;# 
  1088  0FED                     	;# 
  1089  0FEE                     	;# 
  1090  0FEF                     	;# 
  1091  0000                     	;# 
  1092  0001                     	;# 
  1093  0002                     	;# 
  1094  0003                     	;# 
  1095  0004                     	;# 
  1096  0005                     	;# 
  1097  0006                     	;# 
  1098  0007                     	;# 
  1099  0008                     	;# 
  1100  0009                     	;# 
  1101  000A                     	;# 
  1102  000B                     	;# 
  1103  000C                     	;# 
  1104  000D                     	;# 
  1105  000E                     	;# 
  1106  0011                     	;# 
  1107  0012                     	;# 
  1108  0013                     	;# 
  1109  0015                     	;# 
  1110  0016                     	;# 
  1111  0016                     	;# 
  1112  0017                     	;# 
  1113  0018                     	;# 
  1114  0019                     	;# 
  1115  001A                     	;# 
  1116  001B                     	;# 
  1117  001C                     	;# 
  1118  008C                     	;# 
  1119  008D                     	;# 
  1120  008E                     	;# 
  1121  0091                     	;# 
  1122  0092                     	;# 
  1123  0093                     	;# 
  1124  0095                     	;# 
  1125  0096                     	;# 
  1126  0097                     	;# 
  1127  0099                     	;# 
  1128  009A                     	;# 
  1129  009B                     	;# 
  1130  009B                     	;# 
  1131  009C                     	;# 
  1132  009D                     	;# 
  1133  009E                     	;# 
  1134  009F                     	;# 
  1135  010C                     	;# 
  1136  010D                     	;# 
  1137  010E                     	;# 
  1138  0111                     	;# 
  1139  0112                     	;# 
  1140  0113                     	;# 
  1141  0114                     	;# 
  1142  0115                     	;# 
  1143  0116                     	;# 
  1144  0117                     	;# 
  1145  0118                     	;# 
  1146  0119                     	;# 
  1147  011D                     	;# 
  1148  018C                     	;# 
  1149  018D                     	;# 
  1150  018E                     	;# 
  1151  0191                     	;# 
  1152  0191                     	;# 
  1153  0192                     	;# 
  1154  0193                     	;# 
  1155  0193                     	;# 
  1156  0194                     	;# 
  1157  0195                     	;# 
  1158  0196                     	;# 
  1159  0197                     	;# 
  1160  0199                     	;# 
  1161  019A                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019C                     	;# 
  1165  019D                     	;# 
  1166  019E                     	;# 
  1167  019F                     	;# 
  1168  020C                     	;# 
  1169  020D                     	;# 
  1170  0211                     	;# 
  1171  0211                     	;# 
  1172  0212                     	;# 
  1173  0212                     	;# 
  1174  0213                     	;# 
  1175  0213                     	;# 
  1176  0214                     	;# 
  1177  0214                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0391                     	;# 
  1186  0392                     	;# 
  1187  0393                     	;# 
  1188  0394                     	;# 
  1189  0395                     	;# 
  1190  0396                     	;# 
  1191  0498                     	;# 
  1192  0498                     	;# 
  1193  0499                     	;# 
  1194  049A                     	;# 
  1195  049B                     	;# 
  1196  049B                     	;# 
  1197  049C                     	;# 
  1198  049D                     	;# 
  1199  049E                     	;# 
  1200  049F                     	;# 
  1201  0611                     	;# 
  1202  0612                     	;# 
  1203  0613                     	;# 
  1204  0613                     	;# 
  1205  0614                     	;# 
  1206  0615                     	;# 
  1207  0616                     	;# 
  1208  0616                     	;# 
  1209  0617                     	;# 
  1210  0618                     	;# 
  1211  0619                     	;# 
  1212  0619                     	;# 
  1213  061A                     	;# 
  1214  061B                     	;# 
  1215  061C                     	;# 
  1216  061C                     	;# 
  1217  0691                     	;# 
  1218  0692                     	;# 
  1219  0693                     	;# 
  1220  0694                     	;# 
  1221  0695                     	;# 
  1222  0F0F                     	;# 
  1223  0F10                     	;# 
  1224  0F11                     	;# 
  1225  0F12                     	;# 
  1226  0F13                     	;# 
  1227  0F14                     	;# 
  1228  0F15                     	;# 
  1229  0F16                     	;# 
  1230  0F17                     	;# 
  1231  0F18                     	;# 
  1232  0F19                     	;# 
  1233  0F1A                     	;# 
  1234  0F1B                     	;# 
  1235  0F1C                     	;# 
  1236  0F1D                     	;# 
  1237  0F1E                     	;# 
  1238  0F1F                     	;# 
  1239  0F20                     	;# 
  1240  0F21                     	;# 
  1241  0F22                     	;# 
  1242  0F23                     	;# 
  1243  0F24                     	;# 
  1244  0F25                     	;# 
  1245  0F26                     	;# 
  1246  0F27                     	;# 
  1247  0F28                     	;# 
  1248  0F29                     	;# 
  1249  0F2A                     	;# 
  1250  0F2B                     	;# 
  1251  0F2C                     	;# 
  1252  0F2D                     	;# 
  1253  0F2E                     	;# 
  1254  0F2F                     	;# 
  1255  0F8C                     	;# 
  1256  0F8D                     	;# 
  1257  0F91                     	;# 
  1258  0F95                     	;# 
  1259  0F96                     	;# 
  1260  0F97                     	;# 
  1261  0F9C                     	;# 
  1262  0F9D                     	;# 
  1263  0F9E                     	;# 
  1264  0FE3                     	;# 
  1265  0FE4                     	;# 
  1266  0FE5                     	;# 
  1267  0FE6                     	;# 
  1268  0FE7                     	;# 
  1269  0FE8                     	;# 
  1270  0FE9                     	;# 
  1271  0FEA                     	;# 
  1272  0FEB                     	;# 
  1273  0FED                     	;# 
  1274  0FEE                     	;# 
  1275  0FEF                     	;# 
  1276  0000                     	;# 
  1277  0001                     	;# 
  1278  0002                     	;# 
  1279  0003                     	;# 
  1280  0004                     	;# 
  1281  0005                     	;# 
  1282  0006                     	;# 
  1283  0007                     	;# 
  1284  0008                     	;# 
  1285  0009                     	;# 
  1286  000A                     	;# 
  1287  000B                     	;# 
  1288  000C                     	;# 
  1289  000D                     	;# 
  1290  000E                     	;# 
  1291  0011                     	;# 
  1292  0012                     	;# 
  1293  0013                     	;# 
  1294  0015                     	;# 
  1295  0016                     	;# 
  1296  0016                     	;# 
  1297  0017                     	;# 
  1298  0018                     	;# 
  1299  0019                     	;# 
  1300  001A                     	;# 
  1301  001B                     	;# 
  1302  001C                     	;# 
  1303  008C                     	;# 
  1304  008D                     	;# 
  1305  008E                     	;# 
  1306  0091                     	;# 
  1307  0092                     	;# 
  1308  0093                     	;# 
  1309  0095                     	;# 
  1310  0096                     	;# 
  1311  0097                     	;# 
  1312  0099                     	;# 
  1313  009A                     	;# 
  1314  009B                     	;# 
  1315  009B                     	;# 
  1316  009C                     	;# 
  1317  009D                     	;# 
  1318  009E                     	;# 
  1319  009F                     	;# 
  1320  010C                     	;# 
  1321  010D                     	;# 
  1322  010E                     	;# 
  1323  0111                     	;# 
  1324  0112                     	;# 
  1325  0113                     	;# 
  1326  0114                     	;# 
  1327  0115                     	;# 
  1328  0116                     	;# 
  1329  0117                     	;# 
  1330  0118                     	;# 
  1331  0119                     	;# 
  1332  011D                     	;# 
  1333  018C                     	;# 
  1334  018D                     	;# 
  1335  018E                     	;# 
  1336  0191                     	;# 
  1337  0191                     	;# 
  1338  0192                     	;# 
  1339  0193                     	;# 
  1340  0193                     	;# 
  1341  0194                     	;# 
  1342  0195                     	;# 
  1343  0196                     	;# 
  1344  0197                     	;# 
  1345  0199                     	;# 
  1346  019A                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019C                     	;# 
  1350  019D                     	;# 
  1351  019E                     	;# 
  1352  019F                     	;# 
  1353  020C                     	;# 
  1354  020D                     	;# 
  1355  0211                     	;# 
  1356  0211                     	;# 
  1357  0212                     	;# 
  1358  0212                     	;# 
  1359  0213                     	;# 
  1360  0213                     	;# 
  1361  0214                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0216                     	;# 
  1367  0216                     	;# 
  1368  0217                     	;# 
  1369  0217                     	;# 
  1370  0391                     	;# 
  1371  0392                     	;# 
  1372  0393                     	;# 
  1373  0394                     	;# 
  1374  0395                     	;# 
  1375  0396                     	;# 
  1376  0498                     	;# 
  1377  0498                     	;# 
  1378  0499                     	;# 
  1379  049A                     	;# 
  1380  049B                     	;# 
  1381  049B                     	;# 
  1382  049C                     	;# 
  1383  049D                     	;# 
  1384  049E                     	;# 
  1385  049F                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  0615                     	;# 
  1392  0616                     	;# 
  1393  0616                     	;# 
  1394  0617                     	;# 
  1395  0618                     	;# 
  1396  0619                     	;# 
  1397  0619                     	;# 
  1398  061A                     	;# 
  1399  061B                     	;# 
  1400  061C                     	;# 
  1401  061C                     	;# 
  1402  0691                     	;# 
  1403  0692                     	;# 
  1404  0693                     	;# 
  1405  0694                     	;# 
  1406  0695                     	;# 
  1407  0F0F                     	;# 
  1408  0F10                     	;# 
  1409  0F11                     	;# 
  1410  0F12                     	;# 
  1411  0F13                     	;# 
  1412  0F14                     	;# 
  1413  0F15                     	;# 
  1414  0F16                     	;# 
  1415  0F17                     	;# 
  1416  0F18                     	;# 
  1417  0F19                     	;# 
  1418  0F1A                     	;# 
  1419  0F1B                     	;# 
  1420  0F1C                     	;# 
  1421  0F1D                     	;# 
  1422  0F1E                     	;# 
  1423  0F1F                     	;# 
  1424  0F20                     	;# 
  1425  0F21                     	;# 
  1426  0F22                     	;# 
  1427  0F23                     	;# 
  1428  0F24                     	;# 
  1429  0F25                     	;# 
  1430  0F26                     	;# 
  1431  0F27                     	;# 
  1432  0F28                     	;# 
  1433  0F29                     	;# 
  1434  0F2A                     	;# 
  1435  0F2B                     	;# 
  1436  0F2C                     	;# 
  1437  0F2D                     	;# 
  1438  0F2E                     	;# 
  1439  0F2F                     	;# 
  1440  0F8C                     	;# 
  1441  0F8D                     	;# 
  1442  0F91                     	;# 
  1443  0F95                     	;# 
  1444  0F96                     	;# 
  1445  0F97                     	;# 
  1446  0F9C                     	;# 
  1447  0F9D                     	;# 
  1448  0F9E                     	;# 
  1449  0FE3                     	;# 
  1450  0FE4                     	;# 
  1451  0FE5                     	;# 
  1452  0FE6                     	;# 
  1453  0FE7                     	;# 
  1454  0FE8                     	;# 
  1455  0FE9                     	;# 
  1456  0FEA                     	;# 
  1457  0FEB                     	;# 
  1458  0FED                     	;# 
  1459  0FEE                     	;# 
  1460  0FEF                     	;# 
  1461  0000                     	;# 
  1462  0001                     	;# 
  1463  0002                     	;# 
  1464  0003                     	;# 
  1465  0004                     	;# 
  1466  0005                     	;# 
  1467  0006                     	;# 
  1468  0007                     	;# 
  1469  0008                     	;# 
  1470  0009                     	;# 
  1471  000A                     	;# 
  1472  000B                     	;# 
  1473  000C                     	;# 
  1474  000D                     	;# 
  1475  000E                     	;# 
  1476  0011                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0015                     	;# 
  1480  0016                     	;# 
  1481  0016                     	;# 
  1482  0017                     	;# 
  1483  0018                     	;# 
  1484  0019                     	;# 
  1485  001A                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  008C                     	;# 
  1489  008D                     	;# 
  1490  008E                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0093                     	;# 
  1494  0095                     	;# 
  1495  0096                     	;# 
  1496  0097                     	;# 
  1497  0099                     	;# 
  1498  009A                     	;# 
  1499  009B                     	;# 
  1500  009B                     	;# 
  1501  009C                     	;# 
  1502  009D                     	;# 
  1503  009E                     	;# 
  1504  009F                     	;# 
  1505  010C                     	;# 
  1506  010D                     	;# 
  1507  010E                     	;# 
  1508  0111                     	;# 
  1509  0112                     	;# 
  1510  0113                     	;# 
  1511  0114                     	;# 
  1512  0115                     	;# 
  1513  0116                     	;# 
  1514  0117                     	;# 
  1515  0118                     	;# 
  1516  0119                     	;# 
  1517  011D                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  018E                     	;# 
  1521  0191                     	;# 
  1522  0191                     	;# 
  1523  0192                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0197                     	;# 
  1530  0199                     	;# 
  1531  019A                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019C                     	;# 
  1535  019D                     	;# 
  1536  019E                     	;# 
  1537  019F                     	;# 
  1538  020C                     	;# 
  1539  020D                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0216                     	;# 
  1552  0216                     	;# 
  1553  0217                     	;# 
  1554  0217                     	;# 
  1555  0391                     	;# 
  1556  0392                     	;# 
  1557  0393                     	;# 
  1558  0394                     	;# 
  1559  0395                     	;# 
  1560  0396                     	;# 
  1561  0498                     	;# 
  1562  0498                     	;# 
  1563  0499                     	;# 
  1564  049A                     	;# 
  1565  049B                     	;# 
  1566  049B                     	;# 
  1567  049C                     	;# 
  1568  049D                     	;# 
  1569  049E                     	;# 
  1570  049F                     	;# 
  1571  0611                     	;# 
  1572  0612                     	;# 
  1573  0613                     	;# 
  1574  0613                     	;# 
  1575  0614                     	;# 
  1576  0615                     	;# 
  1577  0616                     	;# 
  1578  0616                     	;# 
  1579  0617                     	;# 
  1580  0618                     	;# 
  1581  0619                     	;# 
  1582  0619                     	;# 
  1583  061A                     	;# 
  1584  061B                     	;# 
  1585  061C                     	;# 
  1586  061C                     	;# 
  1587  0691                     	;# 
  1588  0692                     	;# 
  1589  0693                     	;# 
  1590  0694                     	;# 
  1591  0695                     	;# 
  1592  0F0F                     	;# 
  1593  0F10                     	;# 
  1594  0F11                     	;# 
  1595  0F12                     	;# 
  1596  0F13                     	;# 
  1597  0F14                     	;# 
  1598  0F15                     	;# 
  1599  0F16                     	;# 
  1600  0F17                     	;# 
  1601  0F18                     	;# 
  1602  0F19                     	;# 
  1603  0F1A                     	;# 
  1604  0F1B                     	;# 
  1605  0F1C                     	;# 
  1606  0F1D                     	;# 
  1607  0F1E                     	;# 
  1608  0F1F                     	;# 
  1609  0F20                     	;# 
  1610  0F21                     	;# 
  1611  0F22                     	;# 
  1612  0F23                     	;# 
  1613  0F24                     	;# 
  1614  0F25                     	;# 
  1615  0F26                     	;# 
  1616  0F27                     	;# 
  1617  0F28                     	;# 
  1618  0F29                     	;# 
  1619  0F2A                     	;# 
  1620  0F2B                     	;# 
  1621  0F2C                     	;# 
  1622  0F2D                     	;# 
  1623  0F2E                     	;# 
  1624  0F2F                     	;# 
  1625  0F8C                     	;# 
  1626  0F8D                     	;# 
  1627  0F91                     	;# 
  1628  0F95                     	;# 
  1629  0F96                     	;# 
  1630  0F97                     	;# 
  1631  0F9C                     	;# 
  1632  0F9D                     	;# 
  1633  0F9E                     	;# 
  1634  0FE3                     	;# 
  1635  0FE4                     	;# 
  1636  0FE5                     	;# 
  1637  0FE6                     	;# 
  1638  0FE7                     	;# 
  1639  0FE8                     	;# 
  1640  0FE9                     	;# 
  1641  0FEA                     	;# 
  1642  0FEB                     	;# 
  1643  0FED                     	;# 
  1644  0FEE                     	;# 
  1645  0FEF                     	;# 
  1646  0000                     	;# 
  1647  0001                     	;# 
  1648  0002                     	;# 
  1649  0003                     	;# 
  1650  0004                     	;# 
  1651  0005                     	;# 
  1652  0006                     	;# 
  1653  0007                     	;# 
  1654  0008                     	;# 
  1655  0009                     	;# 
  1656  000A                     	;# 
  1657  000B                     	;# 
  1658  000C                     	;# 
  1659  000D                     	;# 
  1660  000E                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0015                     	;# 
  1665  0016                     	;# 
  1666  0016                     	;# 
  1667  0017                     	;# 
  1668  0018                     	;# 
  1669  0019                     	;# 
  1670  001A                     	;# 
  1671  001B                     	;# 
  1672  001C                     	;# 
  1673  008C                     	;# 
  1674  008D                     	;# 
  1675  008E                     	;# 
  1676  0091                     	;# 
  1677  0092                     	;# 
  1678  0093                     	;# 
  1679  0095                     	;# 
  1680  0096                     	;# 
  1681  0097                     	;# 
  1682  0099                     	;# 
  1683  009A                     	;# 
  1684  009B                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  009F                     	;# 
  1690  010C                     	;# 
  1691  010D                     	;# 
  1692  010E                     	;# 
  1693  0111                     	;# 
  1694  0112                     	;# 
  1695  0113                     	;# 
  1696  0114                     	;# 
  1697  0115                     	;# 
  1698  0116                     	;# 
  1699  0117                     	;# 
  1700  0118                     	;# 
  1701  0119                     	;# 
  1702  011D                     	;# 
  1703  018C                     	;# 
  1704  018D                     	;# 
  1705  018E                     	;# 
  1706  0191                     	;# 
  1707  0191                     	;# 
  1708  0192                     	;# 
  1709  0193                     	;# 
  1710  0193                     	;# 
  1711  0194                     	;# 
  1712  0195                     	;# 
  1713  0196                     	;# 
  1714  0197                     	;# 
  1715  0199                     	;# 
  1716  019A                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019C                     	;# 
  1720  019D                     	;# 
  1721  019E                     	;# 
  1722  019F                     	;# 
  1723  020C                     	;# 
  1724  020D                     	;# 
  1725  0211                     	;# 
  1726  0211                     	;# 
  1727  0212                     	;# 
  1728  0212                     	;# 
  1729  0213                     	;# 
  1730  0213                     	;# 
  1731  0214                     	;# 
  1732  0214                     	;# 
  1733  0215                     	;# 
  1734  0215                     	;# 
  1735  0215                     	;# 
  1736  0216                     	;# 
  1737  0216                     	;# 
  1738  0217                     	;# 
  1739  0217                     	;# 
  1740  0391                     	;# 
  1741  0392                     	;# 
  1742  0393                     	;# 
  1743  0394                     	;# 
  1744  0395                     	;# 
  1745  0396                     	;# 
  1746  0498                     	;# 
  1747  0498                     	;# 
  1748  0499                     	;# 
  1749  049A                     	;# 
  1750  049B                     	;# 
  1751  049B                     	;# 
  1752  049C                     	;# 
  1753  049D                     	;# 
  1754  049E                     	;# 
  1755  049F                     	;# 
  1756  0611                     	;# 
  1757  0612                     	;# 
  1758  0613                     	;# 
  1759  0613                     	;# 
  1760  0614                     	;# 
  1761  0615                     	;# 
  1762  0616                     	;# 
  1763  0616                     	;# 
  1764  0617                     	;# 
  1765  0618                     	;# 
  1766  0619                     	;# 
  1767  0619                     	;# 
  1768  061A                     	;# 
  1769  061B                     	;# 
  1770  061C                     	;# 
  1771  061C                     	;# 
  1772  0691                     	;# 
  1773  0692                     	;# 
  1774  0693                     	;# 
  1775  0694                     	;# 
  1776  0695                     	;# 
  1777  0F0F                     	;# 
  1778  0F10                     	;# 
  1779  0F11                     	;# 
  1780  0F12                     	;# 
  1781  0F13                     	;# 
  1782  0F14                     	;# 
  1783  0F15                     	;# 
  1784  0F16                     	;# 
  1785  0F17                     	;# 
  1786  0F18                     	;# 
  1787  0F19                     	;# 
  1788  0F1A                     	;# 
  1789  0F1B                     	;# 
  1790  0F1C                     	;# 
  1791  0F1D                     	;# 
  1792  0F1E                     	;# 
  1793  0F1F                     	;# 
  1794  0F20                     	;# 
  1795  0F21                     	;# 
  1796  0F22                     	;# 
  1797  0F23                     	;# 
  1798  0F24                     	;# 
  1799  0F25                     	;# 
  1800  0F26                     	;# 
  1801  0F27                     	;# 
  1802  0F28                     	;# 
  1803  0F29                     	;# 
  1804  0F2A                     	;# 
  1805  0F2B                     	;# 
  1806  0F2C                     	;# 
  1807  0F2D                     	;# 
  1808  0F2E                     	;# 
  1809  0F2F                     	;# 
  1810  0F8C                     	;# 
  1811  0F8D                     	;# 
  1812  0F91                     	;# 
  1813  0F95                     	;# 
  1814  0F96                     	;# 
  1815  0F97                     	;# 
  1816  0F9C                     	;# 
  1817  0F9D                     	;# 
  1818  0F9E                     	;# 
  1819  0FE3                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  008C                     	;# 
  1859  008D                     	;# 
  1860  008E                     	;# 
  1861  0091                     	;# 
  1862  0092                     	;# 
  1863  0093                     	;# 
  1864  0095                     	;# 
  1865  0096                     	;# 
  1866  0097                     	;# 
  1867  0099                     	;# 
  1868  009A                     	;# 
  1869  009B                     	;# 
  1870  009B                     	;# 
  1871  009C                     	;# 
  1872  009D                     	;# 
  1873  009E                     	;# 
  1874  009F                     	;# 
  1875  010C                     	;# 
  1876  010D                     	;# 
  1877  010E                     	;# 
  1878  0111                     	;# 
  1879  0112                     	;# 
  1880  0113                     	;# 
  1881  0114                     	;# 
  1882  0115                     	;# 
  1883  0116                     	;# 
  1884  0117                     	;# 
  1885  0118                     	;# 
  1886  0119                     	;# 
  1887  011D                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  0191                     	;# 
  1892  0191                     	;# 
  1893  0192                     	;# 
  1894  0193                     	;# 
  1895  0193                     	;# 
  1896  0194                     	;# 
  1897  0195                     	;# 
  1898  0196                     	;# 
  1899  0197                     	;# 
  1900  0199                     	;# 
  1901  019A                     	;# 
  1902  019B                     	;# 
  1903  019B                     	;# 
  1904  019C                     	;# 
  1905  019D                     	;# 
  1906  019E                     	;# 
  1907  019F                     	;# 
  1908  020C                     	;# 
  1909  020D                     	;# 
  1910  0211                     	;# 
  1911  0211                     	;# 
  1912  0212                     	;# 
  1913  0212                     	;# 
  1914  0213                     	;# 
  1915  0213                     	;# 
  1916  0214                     	;# 
  1917  0214                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0215                     	;# 
  1921  0216                     	;# 
  1922  0216                     	;# 
  1923  0217                     	;# 
  1924  0217                     	;# 
  1925  0391                     	;# 
  1926  0392                     	;# 
  1927  0393                     	;# 
  1928  0394                     	;# 
  1929  0395                     	;# 
  1930  0396                     	;# 
  1931  0498                     	;# 
  1932  0498                     	;# 
  1933  0499                     	;# 
  1934  049A                     	;# 
  1935  049B                     	;# 
  1936  049B                     	;# 
  1937  049C                     	;# 
  1938  049D                     	;# 
  1939  049E                     	;# 
  1940  049F                     	;# 
  1941  0611                     	;# 
  1942  0612                     	;# 
  1943  0613                     	;# 
  1944  0613                     	;# 
  1945  0614                     	;# 
  1946  0615                     	;# 
  1947  0616                     	;# 
  1948  0616                     	;# 
  1949  0617                     	;# 
  1950  0618                     	;# 
  1951  0619                     	;# 
  1952  0619                     	;# 
  1953  061A                     	;# 
  1954  061B                     	;# 
  1955  061C                     	;# 
  1956  061C                     	;# 
  1957  0691                     	;# 
  1958  0692                     	;# 
  1959  0693                     	;# 
  1960  0694                     	;# 
  1961  0695                     	;# 
  1962  0F0F                     	;# 
  1963  0F10                     	;# 
  1964  0F11                     	;# 
  1965  0F12                     	;# 
  1966  0F13                     	;# 
  1967  0F14                     	;# 
  1968  0F15                     	;# 
  1969  0F16                     	;# 
  1970  0F17                     	;# 
  1971  0F18                     	;# 
  1972  0F19                     	;# 
  1973  0F1A                     	;# 
  1974  0F1B                     	;# 
  1975  0F1C                     	;# 
  1976  0F1D                     	;# 
  1977  0F1E                     	;# 
  1978  0F1F                     	;# 
  1979  0F20                     	;# 
  1980  0F21                     	;# 
  1981  0F22                     	;# 
  1982  0F23                     	;# 
  1983  0F24                     	;# 
  1984  0F25                     	;# 
  1985  0F26                     	;# 
  1986  0F27                     	;# 
  1987  0F28                     	;# 
  1988  0F29                     	;# 
  1989  0F2A                     	;# 
  1990  0F2B                     	;# 
  1991  0F2C                     	;# 
  1992  0F2D                     	;# 
  1993  0F2E                     	;# 
  1994  0F2F                     	;# 
  1995  0F8C                     	;# 
  1996  0F8D                     	;# 
  1997  0F91                     	;# 
  1998  0F95                     	;# 
  1999  0F96                     	;# 
  2000  0F97                     	;# 
  2001  0F9C                     	;# 
  2002  0F9D                     	;# 
  2003  0F9E                     	;# 
  2004  0FE3                     	;# 
  2005  0FE4                     	;# 
  2006  0FE5                     	;# 
  2007  0FE6                     	;# 
  2008  0FE7                     	;# 
  2009  0FE8                     	;# 
  2010  0FE9                     	;# 
  2011  0FEA                     	;# 
  2012  0FEB                     	;# 
  2013  0FED                     	;# 
  2014  0FEE                     	;# 
  2015  0FEF                     	;# 
  2016                           
  2017 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2018  0000                     
  2019 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2020  0000                     
  2021 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2022  0000                     
  2023                           	psect	idataBANK0
  2024  07FE                     __pidataBANK0:
  2025                           
  2026                           ;initializer for _crcModbusSlave
  2027  07FE  34FF               	retlw	255
  2028  07FF  34FF               	retlw	255
  2029  1FE0                     _HEFregion_absaddr	set	8160
  2030                           
  2031                           	psect	stringtext1
  2032  1800                     __pstringtext1:
  2033  1800                     _i2c_fsmStateTable:
  2034  1800  34A1               	retlw	low _I2C_DO_IDLE
  2035  1801  341A               	retlw	high _I2C_DO_IDLE
  2036  1802  3419               	retlw	low _I2C_DO_SEND_ADR_READ
  2037  1803  341B               	retlw	high _I2C_DO_SEND_ADR_READ
  2038  1804  3411               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2039  1805  341B               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2040  1806  340F               	retlw	low _I2C_DO_TX
  2041  1807  3410               	retlw	high _I2C_DO_TX
  2042  1808  3494               	retlw	low _I2C_DO_RX
  2043  1809  341F               	retlw	high _I2C_DO_RX
  2044  180A  3402               	retlw	low _I2C_DO_RCEN
  2045  180B  341B               	retlw	high _I2C_DO_RCEN
  2046  180C  3473               	retlw	low _I2C_DO_TX_EMPTY
  2047  180D  341E               	retlw	high _I2C_DO_TX_EMPTY
  2048  180E  34A6               	retlw	low _I2C_DO_SEND_RESTART_READ
  2049  180F  341A               	retlw	high _I2C_DO_SEND_RESTART_READ
  2050  1810  34AB               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2051  1811  341A               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2052  1812  34B0               	retlw	low _I2C_DO_SEND_RESTART
  2053  1813  341A               	retlw	high _I2C_DO_SEND_RESTART
  2054  1814  34B5               	retlw	low _I2C_DO_SEND_STOP
  2055  1815  341A               	retlw	high _I2C_DO_SEND_STOP
  2056  1816  34BA               	retlw	low _I2C_DO_RX_ACK
  2057  1817  341A               	retlw	high _I2C_DO_RX_ACK
  2058  1818  34BF               	retlw	low _I2C_DO_RX_NACK_STOP
  2059  1819  341A               	retlw	high _I2C_DO_RX_NACK_STOP
  2060  181A  34C4               	retlw	low _I2C_DO_RX_NACK_RESTART
  2061  181B  341A               	retlw	high _I2C_DO_RX_NACK_RESTART
  2062  181C  34C9               	retlw	low _I2C_DO_RESET
  2063  181D  341A               	retlw	high _I2C_DO_RESET
  2064  181E  3442               	retlw	low _I2C_DO_ADDRESS_NACK
  2065  181F  341E               	retlw	high _I2C_DO_ADDRESS_NACK
  2066  1820                     __end_of_i2c_fsmStateTable:
  2067                           
  2068                           	psect	stringtext2
  2069  1820                     __pstringtext2:
  2070  1820                     _Lg4:
  2071  1820  3426               	retlw	38
  2072  1821  349E               	retlw	158
  2073  1822  3478               	retlw	120
  2074  1823  343E               	retlw	62
  2075  1824                     __end_of_Lg4:
  2076                           
  2077                           	psect	stringtext3
  2078  1824                     __pstringtext3:
  2079  1824                     _Lg3:
  2080  1824  34EE               	retlw	238
  2081  1825  34E9               	retlw	233
  2082  1826  3491               	retlw	145
  2083  1827  343E               	retlw	62
  2084  1828                     __end_of_Lg3:
  2085                           
  2086                           	psect	stringtext4
  2087  1828                     __pstringtext4:
  2088  1828                     _Lg2:
  2089  1828  3413               	retlw	19
  2090  1829  34CE               	retlw	206
  2091  182A  34CC               	retlw	204
  2092  182B  343E               	retlw	62
  2093  182C                     __end_of_Lg2:
  2094                           
  2095                           	psect	stringtext5
  2096  182C                     __pstringtext5:
  2097  182C                     _Lg1:
  2098  182C  34AA               	retlw	170
  2099  182D  34AA               	retlw	170
  2100  182E  342A               	retlw	42
  2101  182F  343F               	retlw	63
  2102  1830                     __end_of_Lg1:
  2103                           
  2104                           	psect	stringtext6
  2105  1830                     __pstringtext6:
  2106  1830                     _ln2_lo:
  2107  1830  34D1               	retlw	209
  2108  1831  34F7               	retlw	247
  2109  1832  3417               	retlw	23
  2110  1833  3437               	retlw	55
  2111  1834                     __end_of_ln2_lo:
  2112                           
  2113                           	psect	stringtext7
  2114  1834                     __pstringtext7:
  2115  1834                     _ln2_hi:
  2116  1834  3480               	retlw	128
  2117  1835  3471               	retlw	113
  2118  1836  3431               	retlw	49
  2119  1837  343F               	retlw	63
  2120  1838                     __end_of_ln2_hi:
  2121  1FE0                     _HEFregion_absaddr	set	8160
  2122                           
  2123                           	psect	_HEFregion_text
  2124  1FE0                     __p_HEFregion_text:
  2125  1FE0                     _HEFregion:
  2126  1FE0  3400               	retlw	0
  2127  1FE1  3400               	retlw	0
  2128  1FE2  3400               	retlw	0
  2129  1FE3  3400               	retlw	0
  2130  1FE4  3400               	retlw	0
  2131  1FE5  3400               	retlw	0
  2132  1FE6  3400               	retlw	0
  2133  1FE7  3400               	retlw	0
  2134  1FE8  3400               	retlw	0
  2135  1FE9  3400               	retlw	0
  2136  1FEA  3400               	retlw	0
  2137  1FEB  3400               	retlw	0
  2138  1FEC  3400               	retlw	0
  2139  1FED  3400               	retlw	0
  2140  1FEE  3400               	retlw	0
  2141  1FEF  3400               	retlw	0
  2142  1FF0  3400               	retlw	0
  2143  1FF1  3400               	retlw	0
  2144  1FF2  3400               	retlw	0
  2145  1FF3  3400               	retlw	0
  2146  1FF4  3400               	retlw	0
  2147  1FF5  3400               	retlw	0
  2148  1FF6  3400               	retlw	0
  2149  1FF7  3400               	retlw	0
  2150  1FF8  3400               	retlw	0
  2151  1FF9  3400               	retlw	0
  2152  1FFA  3400               	retlw	0
  2153  1FFB  3400               	retlw	0
  2154  1FFC  3400               	retlw	0
  2155  1FFD  3400               	retlw	0
  2156  1FFE  3400               	retlw	0
  2157  1FFF  3400               	retlw	0
  2158  2000  3400               	retlw	0
  2159  2001  3400               	retlw	0
  2160  2002  3400               	retlw	0
  2161  2003  3400               	retlw	0
  2162  2004  3400               	retlw	0
  2163  2005  3400               	retlw	0
  2164  2006  3400               	retlw	0
  2165  2007  3400               	retlw	0
  2166  2008  3400               	retlw	0
  2167  2009  3400               	retlw	0
  2168  200A  3400               	retlw	0
  2169  200B  3400               	retlw	0
  2170  200C  3400               	retlw	0
  2171  200D  3400               	retlw	0
  2172  200E  3400               	retlw	0
  2173  200F  3400               	retlw	0
  2174  2010  3400               	retlw	0
  2175  2011  3400               	retlw	0
  2176  2012  3400               	retlw	0
  2177  2013  3400               	retlw	0
  2178  2014  3400               	retlw	0
  2179  2015  3400               	retlw	0
  2180  2016  3400               	retlw	0
  2181  2017  3400               	retlw	0
  2182  2018  3400               	retlw	0
  2183  2019  3400               	retlw	0
  2184  201A  3400               	retlw	0
  2185  201B  3400               	retlw	0
  2186  201C  3400               	retlw	0
  2187  201D  3400               	retlw	0
  2188  201E  3400               	retlw	0
  2189  201F  3400               	retlw	0
  2190  2020                     __end_of_HEFregion:
  2191                           
  2192                           	psect	nvBANK0
  2193  005C                     __pnvBANK0:
  2194  005C                     _TMR0_InterruptHandler:
  2195  005C                     	ds	2
  2196  005E                     _TMR1_InterruptHandler:
  2197  005E                     	ds	2
  2198  0060                     _timer1ReloadVal:
  2199  0060                     	ds	2
  2200  0062                     _timer0ReloadVal:
  2201  0062                     	ds	1
  2202  0063                     _eusartTxBufferRemaining:
  2203  0063                     	ds	1
  2204                           
  2205                           	psect	nvBANK3
  2206  01EC                     __pnvBANK3:
  2207  01EC                     _EUSART_RxDefaultInterruptHandler:
  2208  01EC                     	ds	2
  2209  01EE                     _EUSART_TxDefaultInterruptHandler:
  2210  01EE                     	ds	2
  2211                           
  2212                           	psect	nvBANK4
  2213  025D                     __pnvBANK4:
  2214  025D                     _EUSART_ErrorHandler:
  2215  025D                     	ds	2
  2216  025F                     _EUSART_OverrunErrorHandler:
  2217  025F                     	ds	2
  2218  0261                     _EUSART_FramingErrorHandler:
  2219  0261                     	ds	2
  2220  0015                     _TMR0	set	21
  2221  0019                     _T1GCONbits	set	25
  2222  0018                     _T1CONbits	set	24
  2223  0018                     _T1CON	set	24
  2224  0016                     _TMR1L	set	22
  2225  0017                     _TMR1H	set	23
  2226  0019                     _T1GCON	set	25
  2227  0012                     _PIR2bits	set	18
  2228  0011                     _PIR1bits	set	17
  2229  000B                     _INTCONbits	set	11
  2230  0095                     _OPTION_REG	set	149
  2231  0097                     _WDTCON	set	151
  2232  0099                     _OSCCON	set	153
  2233  0095                     _OPTION_REGbits	set	149
  2234  008E                     _TRISC	set	142
  2235  008D                     _TRISB	set	141
  2236  008C                     _TRISA	set	140
  2237  0091                     _PIE1bits	set	145
  2238  010E                     _LATCbits	set	270
  2239  0116                     _BORCON	set	278
  2240  011D                     _APFCON	set	285
  2241  010E                     _LATC	set	270
  2242  010D                     _LATB	set	269
  2243  010C                     _LATA	set	268
  2244  0196                     _PMCON2	set	406
  2245  0193                     _PMDATL	set	403
  2246  0194                     _PMDATH	set	404
  2247  0195                     _PMCON1bits	set	405
  2248  0192                     _PMADRH	set	402
  2249  0191                     _PMADRL	set	401
  2250  0199                     _RCREG	set	409
  2251  019D                     _RCSTAbits	set	413
  2252  019A                     _TXREG	set	410
  2253  019E                     _TXSTAbits	set	414
  2254  019C                     _SPBRGH	set	412
  2255  019B                     _SPBRGL	set	411
  2256  019E                     _TXSTA	set	414
  2257  019D                     _RCSTA	set	413
  2258  019F                     _BAUDCON	set	415
  2259  018C                     _ANSELA	set	396
  2260  018D                     _ANSELB	set	397
  2261  018E                     _ANSELC	set	398
  2262  0214                     _SSP1STATbits	set	532
  2263  0216                     _SSP1CON2bits	set	534
  2264  0211                     _SSP1BUF	set	529
  2265  0215                     _SSP1CON1bits	set	533
  2266  0212                     _SSP1ADD	set	530
  2267  0216                     _SSP1CON2	set	534
  2268  0215                     _SSP1CON1	set	533
  2269  0214                     _SSP1STAT	set	532
  2270  020C                     _WPUA	set	524
  2271  020D                     _WPUB	set	525
  2272                           
  2273                           	psect	cinit
  2274  004A                     start_initialization:	
  2275                           ; #config settings
  2276                           
  2277  004A                     __initialization:
  2278                           
  2279                           ; Initialize objects allocated to BANK0
  2280  004A  3187  27FE  3180   	fcall	__pidataBANK0	;fetch initializer
  2281  004D  00E4               	movwf	__pdataBANK0& (0+127)
  2282  004E  3187  27FF  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2283  0051  00E5               	movwf	(__pdataBANK0+1)& (0+127)
  2284                           
  2285                           ; Clear objects allocated to COMMON
  2286  0052  01FC               	clrf	__pbssCOMMON& (0+127)
  2287  0053  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2288                           
  2289                           ; Clear objects allocated to BANK0
  2290  0054  3051               	movlw	low __pbssBANK0
  2291  0055  0084               	movwf	4
  2292  0056  3000               	movlw	high __pbssBANK0
  2293  0057  0085               	movwf	5
  2294  0058  300B               	movlw	11
  2295  0059  319A  22FC  3180   	fcall	clear_ram0
  2296                           
  2297                           ; Clear objects allocated to BANK2
  2298  005C  0022               	movlb	2	; select bank2
  2299  005D  01EE               	clrf	__pbssBANK2& (0+127)
  2300  005E  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  2301                           
  2302                           ; Clear objects allocated to BANK3
  2303  005F  30A0               	movlw	low __pbssBANK3
  2304  0060  0084               	movwf	4
  2305  0061  3001               	movlw	high __pbssBANK3
  2306  0062  0085               	movwf	5
  2307  0063  3032               	movlw	50
  2308  0064  319A  22FC  3180   	fcall	clear_ram0
  2309                           
  2310                           ; Clear objects allocated to BANK4
  2311  0067  3020               	movlw	low __pbssBANK4
  2312  0068  0084               	movwf	4
  2313  0069  3002               	movlw	high __pbssBANK4
  2314  006A  0085               	movwf	5
  2315  006B  303D               	movlw	61
  2316  006C  319A  22FC  3180   	fcall	clear_ram0
  2317                           
  2318                           ; Clear objects allocated to BANK5
  2319  006F  30A0               	movlw	low __pbssBANK5
  2320  0070  0084               	movwf	4
  2321  0071  3002               	movlw	high __pbssBANK5
  2322  0072  0085               	movwf	5
  2323  0073  3050               	movlw	80
  2324  0074  319A  22FC  3180   	fcall	clear_ram0
  2325  0077                     end_of_initialization:	
  2326                           ;End of C runtime variable initialization code
  2327                           
  2328  0077                     __end_of__initialization:
  2329  0077  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2330  0078  0020               	movlb	0
  2331  0079  318C  2C9D         	ljmp	_main	;jump to C main() function
  2332                           
  2333                           	psect	bssCOMMON
  2334  007C                     __pbssCOMMON:
  2335  007C                     _eusartRxCount:
  2336  007C                     	ds	1
  2337  007D                     _eusartRxTail:
  2338  007D                     	ds	1
  2339                           
  2340                           	psect	bssBANK0
  2341  0051                     __pbssBANK0:
  2342  0051                     logf@F472:
  2343  0051                     	ds	4
  2344  0055                     MCP3422_ReadVoltage@F4502:
  2345  0055                     	ds	3
  2346  0058                     _eusartRxLastError:
  2347  0058                     	ds	1
  2348  0059                     _eusartRxHead:
  2349  0059                     	ds	1
  2350  005A                     _eusartTxTail:
  2351  005A                     	ds	1
  2352  005B                     _eusartTxHead:
  2353  005B                     	ds	1
  2354                           
  2355                           	psect	dataBANK0
  2356  0064                     __pdataBANK0:
  2357  0064                     _crcModbusSlave:
  2358  0064                     	ds	2
  2359                           
  2360                           	psect	bssBANK2
  2361  016E                     __pbssBANK2:
  2362  016E                     _errno:
  2363  016E                     	ds	2
  2364                           
  2365                           	psect	bssBANK3
  2366  01A0                     __pbssBANK3:
  2367  01A0                     _modbusSlaveData:
  2368  01A0                     	ds	45
  2369  01CD                     _tempNTC:
  2370  01CD                     	ds	4
  2371  01D1                     _bCalMode:
  2372  01D1                     	ds	1
  2373                           
  2374                           	psect	bssBANK4
  2375  0220                     __pbssBANK4:
  2376  0220                     _I2C_Status:
  2377  0220                     	ds	29
  2378  023D                     _eusartRxStatusBuffer:
  2379  023D                     	ds	16
  2380  024D                     _eusartRxBuffer:
  2381  024D                     	ds	16
  2382                           
  2383                           	psect	bssBANK5
  2384  02A0                     __pbssBANK5:
  2385  02A0                     _eusartTxBuffer:
  2386  02A0                     	ds	64
  2387  02E0                     main@F4512:
  2388  02E0                     	ds	16
  2389                           
  2390                           	psect	clrtext
  2391  1AFC                     clear_ram0:	
  2392                           ;	Called with FSR0 containing the base address, and
  2393                           ;	WREG with the size to clear
  2394                           
  2395  1AFC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2396  1AFD                     clrloop0:
  2397  1AFD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2398  1AFE  3101               	addfsr 0,1
  2399  1AFF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2400  1B00  2AFD               	goto	clrloop0	;have we reached the end yet?
  2401  1B01  3400               	retlw	0	;all done for this memory range, return
  2402                           
  2403                           	psect	cstackBANK3
  2404  01D2                     __pcstackBANK3:
  2405  01D2                     main@u16TdVal:
  2406                           
  2407                           ; 2 bytes @ 0x0
  2408  01D2                     	ds	2
  2409  01D4                     main@fNtcVoltage:
  2410                           
  2411                           ; 4 bytes @ 0x2
  2412  01D4                     	ds	4
  2413  01D8                     main@u16CalBuffer:
  2414                           
  2415                           ; 16 bytes @ 0x6
  2416  01D8                     	ds	16
  2417  01E8                     main@fTdVoltage:
  2418                           
  2419                           ; 4 bytes @ 0x16
  2420  01E8                     	ds	4
  2421                           
  2422                           	psect	cstackBANK2
  2423  0120                     __pcstackBANK2:
  2424  0120                     ?_map:
  2425  0120                     map@x:	
  2426                           ; 4 bytes @ 0x0
  2427                           
  2428  0120                     logf@R:	
  2429                           ; 4 bytes @ 0x0
  2430                           
  2431                           
  2432                           ; 4 bytes @ 0x0
  2433  0120                     	ds	4
  2434  0124                     map@in_min:
  2435  0124                     logf@t1:	
  2436                           ; 4 bytes @ 0x4
  2437                           
  2438                           
  2439                           ; 4 bytes @ 0x4
  2440  0124                     	ds	4
  2441  0128                     map@in_max:
  2442  0128                     logf@t2:	
  2443                           ; 4 bytes @ 0x8
  2444                           
  2445                           
  2446                           ; 4 bytes @ 0x8
  2447  0128                     	ds	4
  2448  012C                     map@out_min:
  2449  012C                     _logf$2278:	
  2450                           ; 4 bytes @ 0xC
  2451                           
  2452                           
  2453                           ; 4 bytes @ 0xC
  2454  012C                     	ds	4
  2455  0130                     map@out_max:
  2456  0130                     _logf$2279:	
  2457                           ; 4 bytes @ 0x10
  2458                           
  2459                           
  2460                           ; 4 bytes @ 0x10
  2461  0130                     	ds	4
  2462  0134                     _logf$2280:
  2463                           
  2464                           ; 4 bytes @ 0x14
  2465  0134                     	ds	4
  2466  0138                     _logf$2281:
  2467                           
  2468                           ; 4 bytes @ 0x18
  2469  0138                     	ds	4
  2470  013C                     logf@k:
  2471                           
  2472                           ; 2 bytes @ 0x1C
  2473  013C                     	ds	2
  2474  013E                     logf@hfsq:
  2475                           
  2476                           ; 4 bytes @ 0x1E
  2477  013E                     	ds	4
  2478  0142                     logf@dk:
  2479                           
  2480                           ; 4 bytes @ 0x22
  2481  0142                     	ds	4
  2482  0146                     logf@s:
  2483                           
  2484                           ; 4 bytes @ 0x26
  2485  0146                     	ds	4
  2486  014A                     logf@z:
  2487                           
  2488                           ; 4 bytes @ 0x2A
  2489  014A                     	ds	4
  2490  014E                     logf@w:
  2491                           
  2492                           ; 4 bytes @ 0x2E
  2493  014E                     	ds	4
  2494  0152                     _logf$2277:
  2495                           
  2496                           ; 4 bytes @ 0x32
  2497  0152                     	ds	4
  2498  0156                     logf@u:
  2499                           
  2500                           ; 4 bytes @ 0x36
  2501  0156                     	ds	4
  2502  015A                     logf@f:
  2503                           
  2504                           ; 4 bytes @ 0x3A
  2505  015A                     	ds	4
  2506  015E                     logf@ix:
  2507                           
  2508                           ; 4 bytes @ 0x3E
  2509  015E                     	ds	4
  2510  0162                     get_ntc_temperature@rntc:
  2511                           
  2512                           ; 4 bytes @ 0x42
  2513  0162                     	ds	4
  2514  0166                     _get_ntc_temperature$2276:
  2515                           
  2516                           ; 4 bytes @ 0x46
  2517  0166                     	ds	4
  2518  016A                     get_ntc_temperature@temp:
  2519                           
  2520                           ; 4 bytes @ 0x4A
  2521  016A                     	ds	4
  2522                           
  2523                           	psect	cstackBANK1
  2524  00A0                     __pcstackBANK1:
  2525  00A0                     ?___flsub:
  2526  00A0                     ___flsub@a:	
  2527                           ; 4 bytes @ 0x0
  2528                           
  2529                           
  2530                           ; 4 bytes @ 0x0
  2531  00A0                     	ds	4
  2532  00A4                     ___flsub@b:
  2533                           
  2534                           ; 4 bytes @ 0x4
  2535  00A4                     	ds	4
  2536  00A8                     ?___flmul:
  2537  00A8                     ___flmul@b:	
  2538                           ; 4 bytes @ 0x8
  2539                           
  2540                           
  2541                           ; 4 bytes @ 0x8
  2542  00A8                     	ds	4
  2543  00AC                     ___flmul@a:
  2544                           
  2545                           ; 4 bytes @ 0xC
  2546  00AC                     	ds	4
  2547  00B0                     ___flmul@sign:
  2548                           
  2549                           ; 1 bytes @ 0x10
  2550  00B0                     	ds	1
  2551  00B1                     ___flmul@aexp:
  2552                           
  2553                           ; 1 bytes @ 0x11
  2554  00B1                     	ds	1
  2555  00B2                     ___flmul@grs:
  2556                           
  2557                           ; 4 bytes @ 0x12
  2558  00B2                     	ds	4
  2559  00B6                     ___flmul@bexp:
  2560                           
  2561                           ; 1 bytes @ 0x16
  2562  00B6                     	ds	1
  2563  00B7                     ___flmul@prod:
  2564                           
  2565                           ; 4 bytes @ 0x17
  2566  00B7                     	ds	4
  2567  00BB                     ___flmul@temp:
  2568                           
  2569                           ; 2 bytes @ 0x1B
  2570  00BB                     	ds	2
  2571  00BD                     ?_MCP3422_ReadVoltage:
  2572  00BD                     ?___fldiv:	
  2573                           ; 4 bytes @ 0x1D
  2574                           
  2575  00BD                     ___fldiv@a:	
  2576                           ; 4 bytes @ 0x1D
  2577                           
  2578                           
  2579                           ; 4 bytes @ 0x1D
  2580  00BD                     	ds	4
  2581  00C1                     ??_MCP3422_ReadVoltage:
  2582  00C1                     ___fldiv@b:	
  2583                           ; 1 bytes @ 0x21
  2584                           
  2585                           
  2586                           ; 4 bytes @ 0x21
  2587  00C1                     	ds	4
  2588  00C5                     ??___fldiv:
  2589  00C5                     MCP3422_ReadVoltage@channel:	
  2590                           ; 1 bytes @ 0x25
  2591                           
  2592                           
  2593                           ; 1 bytes @ 0x25
  2594  00C5                     	ds	1
  2595  00C6                     MCP3422_ReadVoltage@data:
  2596                           
  2597                           ; 3 bytes @ 0x26
  2598  00C6                     	ds	3
  2599  00C9                     MCP3422_ReadVoltage@adc_value:
  2600                           
  2601                           ; 4 bytes @ 0x29
  2602  00C9                     	ds	1
  2603  00CA                     ___fldiv@rem:
  2604                           
  2605                           ; 4 bytes @ 0x2A
  2606  00CA                     	ds	4
  2607  00CE                     ___fldiv@sign:
  2608                           
  2609                           ; 1 bytes @ 0x2E
  2610  00CE                     	ds	1
  2611  00CF                     ___fldiv@new_exp:
  2612                           
  2613                           ; 2 bytes @ 0x2F
  2614  00CF                     	ds	2
  2615  00D1                     ___fldiv@grs:
  2616                           
  2617                           ; 4 bytes @ 0x31
  2618  00D1                     	ds	4
  2619  00D5                     ___fldiv@bexp:
  2620                           
  2621                           ; 1 bytes @ 0x35
  2622  00D5                     	ds	1
  2623  00D6                     ___fldiv@aexp:
  2624                           
  2625                           ; 1 bytes @ 0x36
  2626  00D6                     	ds	1
  2627  00D7                     ?_logf:
  2628  00D7                     ?___fltol:	
  2629                           ; 4 bytes @ 0x37
  2630                           
  2631  00D7                     ___fltol@f1:	
  2632                           ; 4 bytes @ 0x37
  2633                           
  2634  00D7                     logf@x:	
  2635                           ; 4 bytes @ 0x37
  2636                           
  2637                           
  2638                           ; 4 bytes @ 0x37
  2639  00D7                     	ds	4
  2640  00DB                     ??_logf:
  2641  00DB                     ??___fltol:	
  2642                           ; 1 bytes @ 0x3B
  2643                           
  2644                           
  2645                           ; 1 bytes @ 0x3B
  2646  00DB                     	ds	5
  2647  00E0                     ___fltol@sign1:
  2648                           
  2649                           ; 1 bytes @ 0x40
  2650  00E0                     	ds	1
  2651  00E1                     ___fltol@exp1:
  2652                           
  2653                           ; 1 bytes @ 0x41
  2654  00E1                     	ds	1
  2655  00E2                     ??_map:
  2656                           
  2657                           ; 1 bytes @ 0x42
  2658  00E2                     	ds	1
  2659  00E3                     ?_get_ntc_temperature:
  2660  00E3                     get_ntc_temperature@adcVoltage:	
  2661                           ; 1 bytes @ 0x43
  2662                           
  2663                           
  2664                           ; 4 bytes @ 0x43
  2665  00E3                     	ds	7
  2666  00EA                     _map$2275:
  2667                           
  2668                           ; 4 bytes @ 0x4A
  2669  00EA                     	ds	4
  2670  00EE                     ??_main:
  2671                           
  2672                           ; 1 bytes @ 0x4E
  2673  00EE                     	ds	1
  2674                           
  2675                           	psect	cstackCOMMON
  2676  0070                     __pcstackCOMMON:
  2677  0070                     ?_I2C_Open:
  2678  0070                     ?_I2C_MasterWrite:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0070                     ?_I2C_Close:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0070                     ?_I2C_MasterRead:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0070                     ?_TMR0_ISR:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0070                     ??_TMR0_ISR:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693  0070                     ?_TMR1_ISR:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696  0070                     ?_I2C_Initialize:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     ?_OSCILLATOR_Initialize:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702  0070                     ?_WDT_Initialize:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705  0070                     ?_TMR1_Initialize:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708  0070                     ?_TMR0_Initialize:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0070                     ?_EUSART_Initialize:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0070                     ?_I2C_DO_IDLE:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0070                     ?_I2C_DO_TX:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0070                     ?_I2C_DO_RX:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0070                     ?_I2C_DO_RCEN:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0070                     ?_I2C_DO_TX_EMPTY:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0070                     ?_I2C_DO_SEND_RESTART:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0070                     ?_I2C_DO_SEND_STOP:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0070                     ?_I2C_DO_RX_ACK:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756  0070                     ?_I2C_DO_RESET:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762  0070                     ?_I2C_MasterClearIrq:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765  0070                     ?_I2C_MasterOpen:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768  0070                     ?_I2C_MasterDisableIrq:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  0070                     ?_I2C_MasterClose:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774  0070                     ?_I2C_MasterStart:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777  0070                     ?_I2C_Poller:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780  0070                     ?_I2C_MasterWaitForEvent:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783  0070                     ?_I2C_MasterFsm:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786  0070                     ?_I2C_MasterIsNack:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789  0070                     ?_I2C_MasterSendTxData:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792  0070                     ?_I2C_MasterGetRxData:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795  0070                     ?_I2C_MasterSendAck:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798  0070                     ?_I2C_MasterStartRx:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801  0070                     ?_I2C_MasterSetIrq:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804  0070                     ?_I2C_MasterEnableRestart:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807  0070                     ?_I2C_MasterStop:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810  0070                     ?_I2C_MasterSendNack:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813  0070                     ?_mbus_rx_handler:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     ?_mbus_tx_handler:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     ??_mbus_tx_handler:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     ?_mbus_timer_handler:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     ??_mbus_timer_handler:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     ?_TMR1_CallBack:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     ?_TMR0_DefaultInterruptHandler:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0070                     ??_TMR0_DefaultInterruptHandler:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0070                     ?_TMR0_CallBack:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0070                     ??_TMR0_CallBack:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0070                     ?_InitModbusSlave:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_ModbusSlaveProcessReceivedQuery:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_INTERRUPT_InterruptManager:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_PIN_MANAGER_Initialize:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ?_SYSTEM_Initialize:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ?_I2C_MasterOperation:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ?_TMR1_WriteTimer:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ?_MCP3422_Write:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ?_main:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_calculate_crc:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ??_calculate_crc:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     TMR1_WriteTimer@timerVal:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879                           
  2880                           ; 2 bytes @ 0x0
  2881  0070                     	ds	1
  2882  0071                     ??_TMR1_CallBack:
  2883                           
  2884                           ; 1 bytes @ 0x1
  2885  0071                     	ds	1
  2886  0072                     ??_TMR1_ISR:
  2887  0072                     ??_TMR1_WriteTimer:	
  2888                           ; 1 bytes @ 0x2
  2889                           
  2890  0072                     calculate_crc@crcreg:	
  2891                           ; 1 bytes @ 0x2
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0x2
  2895  0072                     	ds	1
  2896  0073                     calculate_crc@crcbit:
  2897                           
  2898                           ; 2 bytes @ 0x3
  2899  0073                     	ds	2
  2900  0075                     calculate_crc@i:
  2901                           
  2902                           ; 1 bytes @ 0x5
  2903  0075                     	ds	1
  2904  0076                     ??_ModbusSlaveProcessReceivedQuery:
  2905                           
  2906                           ; 1 bytes @ 0x6
  2907  0076                     	ds	6
  2908  007C                     ??_INTERRUPT_InterruptManager:
  2909                           
  2910                           	psect	cstackBANK0
  2911  0020                     __pcstackBANK0:	
  2912                           ; 1 bytes @ 0xC
  2913                           
  2914  0020                     ModbusSlaveProcessReceivedQuery@u8ReadReg:
  2915                           
  2916                           ; 1 bytes @ 0x0
  2917  0020                     	ds	1
  2918  0021                     ModbusSlaveProcessReceivedQuery@k:
  2919                           
  2920                           ; 2 bytes @ 0x1
  2921  0021                     	ds	2
  2922  0023                     ModbusSlaveProcessReceivedQuery@u16Data:
  2923                           
  2924                           ; 2 bytes @ 0x3
  2925  0023                     	ds	2
  2926  0025                     ModbusSlaveProcessReceivedQuery@j:
  2927                           
  2928                           ; 2 bytes @ 0x5
  2929  0025                     	ds	2
  2930  0027                     ModbusSlaveProcessReceivedQuery@i:
  2931                           
  2932                           ; 2 bytes @ 0x7
  2933  0027                     	ds	2
  2934  0029                     ??_mbus_rx_handler:
  2935                           
  2936                           ; 1 bytes @ 0x9
  2937  0029                     	ds	1
  2938  002A                     ??_I2C_Open:
  2939  002A                     ?_I2C_SetBuffer:	
  2940                           ; 1 bytes @ 0xA
  2941                           
  2942  002A                     ??_I2C_Close:	
  2943                           ; 1 bytes @ 0xA
  2944                           
  2945  002A                     ??_I2C_Initialize:	
  2946                           ; 1 bytes @ 0xA
  2947                           
  2948  002A                     ??_OSCILLATOR_Initialize:	
  2949                           ; 1 bytes @ 0xA
  2950                           
  2951  002A                     ??_WDT_Initialize:	
  2952                           ; 1 bytes @ 0xA
  2953                           
  2954  002A                     ??_I2C_DO_IDLE:	
  2955                           ; 1 bytes @ 0xA
  2956                           
  2957  002A                     ??_I2C_DO_SEND_ADR_READ:	
  2958                           ; 1 bytes @ 0xA
  2959                           
  2960  002A                     ??_I2C_DO_RCEN:	
  2961                           ; 1 bytes @ 0xA
  2962                           
  2963  002A                     ??_I2C_DO_SEND_RESTART_READ:	
  2964                           ; 1 bytes @ 0xA
  2965                           
  2966  002A                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2967                           ; 1 bytes @ 0xA
  2968                           
  2969  002A                     ??_I2C_DO_SEND_RESTART:	
  2970                           ; 1 bytes @ 0xA
  2971                           
  2972  002A                     ??_I2C_DO_SEND_STOP:	
  2973                           ; 1 bytes @ 0xA
  2974                           
  2975  002A                     ??_I2C_DO_RX_ACK:	
  2976                           ; 1 bytes @ 0xA
  2977                           
  2978  002A                     ??_I2C_DO_RX_NACK_STOP:	
  2979                           ; 1 bytes @ 0xA
  2980                           
  2981  002A                     ??_I2C_DO_RX_NACK_RESTART:	
  2982                           ; 1 bytes @ 0xA
  2983                           
  2984  002A                     ??_I2C_DO_RESET:	
  2985                           ; 1 bytes @ 0xA
  2986                           
  2987  002A                     ??_I2C_MasterClearIrq:	
  2988                           ; 1 bytes @ 0xA
  2989                           
  2990  002A                     ??_I2C_MasterOpen:	
  2991                           ; 1 bytes @ 0xA
  2992                           
  2993  002A                     ??_I2C_MasterDisableIrq:	
  2994                           ; 1 bytes @ 0xA
  2995                           
  2996  002A                     ??_I2C_MasterClose:	
  2997                           ; 1 bytes @ 0xA
  2998                           
  2999  002A                     ??_I2C_MasterStart:	
  3000                           ; 1 bytes @ 0xA
  3001                           
  3002  002A                     ?_I2C_SetCallback:	
  3003                           ; 1 bytes @ 0xA
  3004                           
  3005  002A                     ??_I2C_MasterWaitForEvent:	
  3006                           ; 1 bytes @ 0xA
  3007                           
  3008  002A                     ??_I2C_MasterIsNack:	
  3009                           ; 1 bytes @ 0xA
  3010                           
  3011  002A                     ??_I2C_MasterSendTxData:	
  3012                           ; 1 bytes @ 0xA
  3013                           
  3014  002A                     ??_I2C_MasterGetRxData:	
  3015                           ; 1 bytes @ 0xA
  3016                           
  3017  002A                     ??_I2C_MasterSendAck:	
  3018                           ; 1 bytes @ 0xA
  3019                           
  3020  002A                     ??_I2C_MasterStartRx:	
  3021                           ; 1 bytes @ 0xA
  3022                           
  3023  002A                     ??_I2C_MasterSetIrq:	
  3024                           ; 1 bytes @ 0xA
  3025                           
  3026  002A                     ??_I2C_MasterEnableRestart:	
  3027                           ; 1 bytes @ 0xA
  3028                           
  3029  002A                     ??_I2C_MasterStop:	
  3030                           ; 1 bytes @ 0xA
  3031                           
  3032  002A                     ??_I2C_MasterSendNack:	
  3033                           ; 1 bytes @ 0xA
  3034                           
  3035  002A                     ?_EUSART_SetRxInterruptHandler:	
  3036                           ; 1 bytes @ 0xA
  3037                           
  3038  002A                     ?_EUSART_SetTxInterruptHandler:	
  3039                           ; 1 bytes @ 0xA
  3040                           
  3041  002A                     ?_EUSART_SetFramingErrorHandler:	
  3042                           ; 1 bytes @ 0xA
  3043                           
  3044  002A                     ?_EUSART_SetOverrunErrorHandler:	
  3045                           ; 1 bytes @ 0xA
  3046                           
  3047  002A                     ?_EUSART_SetErrorHandler:	
  3048                           ; 1 bytes @ 0xA
  3049                           
  3050  002A                     ?_TMR1_SetInterruptHandler:	
  3051                           ; 1 bytes @ 0xA
  3052                           
  3053  002A                     ?_TMR0_SetInterruptHandler:	
  3054                           ; 1 bytes @ 0xA
  3055                           
  3056  002A                     ?_FLASH_EraseBlock:	
  3057                           ; 1 bytes @ 0xA
  3058                           
  3059  002A                     ??_InitModbusSlave:	
  3060                           ; 1 bytes @ 0xA
  3061                           
  3062  002A                     ??_PIN_MANAGER_Initialize:	
  3063                           ; 1 bytes @ 0xA
  3064                           
  3065  002A                     ?__Umul8_16:	
  3066                           ; 1 bytes @ 0xA
  3067                           
  3068  002A                     ?_FLASH_ReadWord:	
  3069                           ; 2 bytes @ 0xA
  3070                           
  3071  002A                     ?___xxtofl:	
  3072                           ; 2 bytes @ 0xA
  3073                           
  3074  002A                     I2C_MasterSendTxData@data:	
  3075                           ; 4 bytes @ 0xA
  3076                           
  3077  002A                     __Umul8_16@multiplicand:	
  3078                           ; 1 bytes @ 0xA
  3079                           
  3080  002A                     I2C_SetBuffer@bufferSize:	
  3081                           ; 1 bytes @ 0xA
  3082                           
  3083  002A                     I2C_SetCallback@cb:	
  3084                           ; 2 bytes @ 0xA
  3085                           
  3086  002A                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3087                           ; 2 bytes @ 0xA
  3088                           
  3089  002A                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3090                           ; 2 bytes @ 0xA
  3091                           
  3092  002A                     EUSART_SetErrorHandler@interruptHandler:	
  3093                           ; 2 bytes @ 0xA
  3094                           
  3095  002A                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3096                           ; 2 bytes @ 0xA
  3097                           
  3098  002A                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3099                           ; 2 bytes @ 0xA
  3100                           
  3101  002A                     TMR1_SetInterruptHandler@InterruptHandler:	
  3102                           ; 2 bytes @ 0xA
  3103                           
  3104  002A                     TMR0_SetInterruptHandler@InterruptHandler:	
  3105                           ; 2 bytes @ 0xA
  3106                           
  3107  002A                     FLASH_ReadWord@flashAddr:	
  3108                           ; 2 bytes @ 0xA
  3109                           
  3110  002A                     FLASH_EraseBlock@startAddr:	
  3111                           ; 2 bytes @ 0xA
  3112                           
  3113  002A                     ___xxtofl@val:	
  3114                           ; 2 bytes @ 0xA
  3115                           
  3116                           
  3117                           ; 4 bytes @ 0xA
  3118  002A                     	ds	1
  3119  002B                     ??_I2C_DO_SEND_ADR_WRITE:
  3120  002B                     I2C_Open@address:	
  3121                           ; 1 bytes @ 0xB
  3122                           
  3123  002B                     I2C_Close@returnValue:	
  3124                           ; 1 bytes @ 0xB
  3125                           
  3126  002B                     InitModbusSlave@u8SlaveId:	
  3127                           ; 1 bytes @ 0xB
  3128                           
  3129                           
  3130                           ; 1 bytes @ 0xB
  3131  002B                     	ds	1
  3132  002C                     ??_I2C_SetBuffer:
  3133  002C                     ??_TMR1_Initialize:	
  3134                           ; 1 bytes @ 0xC
  3135                           
  3136  002C                     ??_TMR0_Initialize:	
  3137                           ; 1 bytes @ 0xC
  3138                           
  3139  002C                     ??_EUSART_Initialize:	
  3140                           ; 1 bytes @ 0xC
  3141                           
  3142  002C                     ??_EUSART_SetRxInterruptHandler:	
  3143                           ; 1 bytes @ 0xC
  3144                           
  3145  002C                     ??_EUSART_SetTxInterruptHandler:	
  3146                           ; 1 bytes @ 0xC
  3147                           
  3148  002C                     ??_EUSART_SetFramingErrorHandler:	
  3149                           ; 1 bytes @ 0xC
  3150                           
  3151  002C                     ??_EUSART_SetOverrunErrorHandler:	
  3152                           ; 1 bytes @ 0xC
  3153                           
  3154  002C                     ??_EUSART_SetErrorHandler:	
  3155                           ; 1 bytes @ 0xC
  3156                           
  3157  002C                     ??_TMR1_SetInterruptHandler:	
  3158                           ; 1 bytes @ 0xC
  3159                           
  3160  002C                     ??_TMR0_SetInterruptHandler:	
  3161                           ; 1 bytes @ 0xC
  3162                           
  3163  002C                     ??_FLASH_EraseBlock:	
  3164                           ; 1 bytes @ 0xC
  3165                           
  3166  002C                     ??__Umul8_16:	
  3167                           ; 1 bytes @ 0xC
  3168                           
  3169  002C                     ??_FLASH_ReadWord:	
  3170                           ; 1 bytes @ 0xC
  3171                           
  3172  002C                     I2C_Open@returnValue:	
  3173                           ; 1 bytes @ 0xC
  3174                           
  3175  002C                     I2C_SetCallback@ptr:	
  3176                           ; 1 bytes @ 0xC
  3177                           
  3178  002C                     FLASH_ReadWord@GIEBitValue:	
  3179                           ; 1 bytes @ 0xC
  3180                           
  3181  002C                     FLASH_EraseBlock@GIEBitValue:	
  3182                           ; 1 bytes @ 0xC
  3183                           
  3184                           
  3185                           ; 1 bytes @ 0xC
  3186  002C                     	ds	1
  3187  002D                     ??_I2C_SetCallback:
  3188  002D                     ?_FLASH_WriteBlock:	
  3189                           ; 1 bytes @ 0xD
  3190                           
  3191  002D                     ??_SYSTEM_Initialize:	
  3192                           ; 1 bytes @ 0xD
  3193                           
  3194  002D                     I2C_SetBuffer@buffer:	
  3195                           ; 1 bytes @ 0xD
  3196                           
  3197  002D                     FLASH_WriteBlock@writeAddr:	
  3198                           ; 1 bytes @ 0xD
  3199                           
  3200                           
  3201                           ; 2 bytes @ 0xD
  3202  002D                     	ds	1
  3203  002E                     ??___xxtofl:
  3204  002E                     I2C_SetCallback@idx:	
  3205                           ; 1 bytes @ 0xE
  3206                           
  3207  002E                     __Umul8_16@product:	
  3208                           ; 1 bytes @ 0xE
  3209                           
  3210                           
  3211                           ; 2 bytes @ 0xE
  3212  002E                     	ds	1
  3213  002F                     ?_I2C_SetDataCompleteCallback:
  3214  002F                     ?_I2C_SetAddressNackCallback:	
  3215                           ; 1 bytes @ 0xF
  3216                           
  3217  002F                     FLASH_WriteBlock@flashWordArray:	
  3218                           ; 1 bytes @ 0xF
  3219                           
  3220  002F                     I2C_SetDataCompleteCallback@cb:	
  3221                           ; 1 bytes @ 0xF
  3222                           
  3223  002F                     I2C_SetAddressNackCallback@cb:	
  3224                           ; 2 bytes @ 0xF
  3225                           
  3226                           
  3227                           ; 2 bytes @ 0xF
  3228  002F                     	ds	1
  3229  0030                     ??_FLASH_WriteBlock:
  3230  0030                     __Umul8_16@word_mpld:	
  3231                           ; 1 bytes @ 0x10
  3232                           
  3233                           
  3234                           ; 2 bytes @ 0x10
  3235  0030                     	ds	1
  3236  0031                     I2C_SetDataCompleteCallback@ptr:
  3237  0031                     I2C_SetAddressNackCallback@ptr:	
  3238                           ; 1 bytes @ 0x11
  3239                           
  3240                           
  3241                           ; 1 bytes @ 0x11
  3242  0031                     	ds	1
  3243  0032                     ??_I2C_SetDataCompleteCallback:
  3244  0032                     ??_I2C_SetAddressNackCallback:	
  3245                           ; 1 bytes @ 0x12
  3246                           
  3247  0032                     __Umul8_16@multiplier:	
  3248                           ; 1 bytes @ 0x12
  3249                           
  3250  0032                     ___xxtofl@sign:	
  3251                           ; 1 bytes @ 0x12
  3252                           
  3253                           
  3254                           ; 1 bytes @ 0x12
  3255  0032                     	ds	1
  3256  0033                     ?_rd1RegCompleteHandler:
  3257  0033                     ?_rd2RegCompleteHandler:	
  3258                           ; 1 bytes @ 0x13
  3259                           
  3260  0033                     ?_wr1RegCompleteHandler:	
  3261                           ; 1 bytes @ 0x13
  3262                           
  3263  0033                     ?_wr2RegCompleteHandler:	
  3264                           ; 1 bytes @ 0x13
  3265                           
  3266  0033                     ?_rdBlkRegCompleteHandler:	
  3267                           ; 1 bytes @ 0x13
  3268                           
  3269  0033                     ?_I2C_CallbackReturnStop:	
  3270                           ; 1 bytes @ 0x13
  3271                           
  3272  0033                     ?_I2C_CallbackReturnReset:	
  3273                           ; 1 bytes @ 0x13
  3274                           
  3275  0033                     rd1RegCompleteHandler@ptr:	
  3276                           ; 1 bytes @ 0x13
  3277                           
  3278  0033                     rd2RegCompleteHandler@ptr:	
  3279                           ; 1 bytes @ 0x13
  3280                           
  3281  0033                     wr1RegCompleteHandler@ptr:	
  3282                           ; 1 bytes @ 0x13
  3283                           
  3284  0033                     wr2RegCompleteHandler@ptr:	
  3285                           ; 1 bytes @ 0x13
  3286                           
  3287  0033                     rdBlkRegCompleteHandler@ptr:	
  3288                           ; 1 bytes @ 0x13
  3289                           
  3290  0033                     I2C_CallbackReturnStop@funPtr:	
  3291                           ; 1 bytes @ 0x13
  3292                           
  3293  0033                     I2C_CallbackReturnReset@funPtr:	
  3294                           ; 1 bytes @ 0x13
  3295                           
  3296  0033                     ___xxtofl@exp:	
  3297                           ; 1 bytes @ 0x13
  3298                           
  3299  0033                     FLASH_WriteBlock@blockStartAddr:	
  3300                           ; 1 bytes @ 0x13
  3301                           
  3302                           
  3303                           ; 2 bytes @ 0x13
  3304  0033                     	ds	1
  3305  0034                     ??_rd1RegCompleteHandler:
  3306  0034                     ??_rd2RegCompleteHandler:	
  3307                           ; 1 bytes @ 0x14
  3308                           
  3309  0034                     ??_wr1RegCompleteHandler:	
  3310                           ; 1 bytes @ 0x14
  3311                           
  3312  0034                     ??_wr2RegCompleteHandler:	
  3313                           ; 1 bytes @ 0x14
  3314                           
  3315  0034                     ??_rdBlkRegCompleteHandler:	
  3316                           ; 1 bytes @ 0x14
  3317                           
  3318  0034                     ??_I2C_DO_TX:	
  3319                           ; 1 bytes @ 0x14
  3320                           
  3321  0034                     ??_I2C_DO_RX:	
  3322                           ; 1 bytes @ 0x14
  3323                           
  3324  0034                     ??_I2C_DO_TX_EMPTY:	
  3325                           ; 1 bytes @ 0x14
  3326                           
  3327  0034                     ??_I2C_DO_ADDRESS_NACK:	
  3328                           ; 1 bytes @ 0x14
  3329                           
  3330  0034                     ??_I2C_CallbackReturnStop:	
  3331                           ; 1 bytes @ 0x14
  3332                           
  3333  0034                     ??_I2C_CallbackReturnReset:	
  3334                           ; 1 bytes @ 0x14
  3335                           
  3336  0034                     ___xxtofl@arg:	
  3337                           ; 1 bytes @ 0x14
  3338                           
  3339                           
  3340                           ; 4 bytes @ 0x14
  3341  0034                     	ds	1
  3342  0035                     FLASH_WriteBlock@GIEBitValue:
  3343                           
  3344                           ; 1 bytes @ 0x15
  3345  0035                     	ds	1
  3346  0036                     FLASH_WriteBlock@i:
  3347                           
  3348                           ; 1 bytes @ 0x16
  3349  0036                     	ds	1
  3350  0037                     ??_I2C_MasterFsm:
  3351                           
  3352                           ; 1 bytes @ 0x17
  3353  0037                     	ds	1
  3354  0038                     ?___flge:
  3355  0038                     ?___fladd:	
  3356                           ; 1 bit 
  3357                           
  3358  0038                     ___flge@ff1:	
  3359                           ; 4 bytes @ 0x18
  3360                           
  3361  0038                     ___fladd@b:	
  3362                           ; 4 bytes @ 0x18
  3363                           
  3364                           
  3365                           ; 4 bytes @ 0x18
  3366  0038                     	ds	2
  3367  003A                     ??_I2C_Poller:
  3368  003A                     ??_I2C_MasterOperation:	
  3369                           ; 1 bytes @ 0x1A
  3370                           
  3371                           
  3372                           ; 1 bytes @ 0x1A
  3373  003A                     	ds	1
  3374  003B                     I2C_MasterOperation@read:
  3375                           
  3376                           ; 1 bytes @ 0x1B
  3377  003B                     	ds	1
  3378  003C                     I2C_MasterOperation@returnValue:
  3379  003C                     ___flge@ff2:	
  3380                           ; 1 bytes @ 0x1C
  3381                           
  3382  003C                     ___fladd@a:	
  3383                           ; 4 bytes @ 0x1C
  3384                           
  3385                           
  3386                           ; 4 bytes @ 0x1C
  3387  003C                     	ds	1
  3388  003D                     ??_I2C_MasterWrite:
  3389  003D                     ??_I2C_MasterRead:	
  3390                           ; 1 bytes @ 0x1D
  3391                           
  3392  003D                     ?_I2C_WriteNBytes:	
  3393                           ; 1 bytes @ 0x1D
  3394                           
  3395  003D                     ?_I2C_ReadNBytes:	
  3396                           ; 1 bytes @ 0x1D
  3397                           
  3398  003D                     I2C_WriteNBytes@data:	
  3399                           ; 1 bytes @ 0x1D
  3400                           
  3401  003D                     I2C_ReadNBytes@data:	
  3402                           ; 1 bytes @ 0x1D
  3403                           
  3404                           
  3405                           ; 1 bytes @ 0x1D
  3406  003D                     	ds	1
  3407  003E                     I2C_WriteNBytes@len:
  3408  003E                     I2C_ReadNBytes@len:	
  3409                           ; 2 bytes @ 0x1E
  3410                           
  3411                           
  3412                           ; 2 bytes @ 0x1E
  3413  003E                     	ds	2
  3414  0040                     ??_I2C_WriteNBytes:
  3415  0040                     ??_I2C_ReadNBytes:	
  3416                           ; 1 bytes @ 0x20
  3417                           
  3418  0040                     ??___flge:	
  3419                           ; 1 bytes @ 0x20
  3420                           
  3421  0040                     ??___fladd:	
  3422                           ; 1 bytes @ 0x20
  3423                           
  3424  0040                     I2C_WriteNBytes@address:	
  3425                           ; 1 bytes @ 0x20
  3426                           
  3427  0040                     I2C_ReadNBytes@address:	
  3428                           ; 1 bytes @ 0x20
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x20
  3432  0040                     	ds	1
  3433  0041                     ??_MCP3422_Write:
  3434  0041                     ?_MCP3422_Read:	
  3435                           ; 1 bytes @ 0x21
  3436                           
  3437  0041                     MCP3422_Read@count:	
  3438                           ; 1 bytes @ 0x21
  3439                           
  3440                           
  3441                           ; 1 bytes @ 0x21
  3442  0041                     	ds	1
  3443  0042                     ??_MCP3422_Read:
  3444  0042                     MCP3422_Write@data:	
  3445                           ; 1 bytes @ 0x22
  3446                           
  3447                           
  3448                           ; 1 bytes @ 0x22
  3449  0042                     	ds	3
  3450  0045                     MCP3422_Read@data:
  3451                           
  3452                           ; 1 bytes @ 0x25
  3453  0045                     	ds	3
  3454  0048                     ___fladd@signs:
  3455                           
  3456                           ; 1 bytes @ 0x28
  3457  0048                     	ds	1
  3458  0049                     ___fladd@aexp:
  3459                           
  3460                           ; 1 bytes @ 0x29
  3461  0049                     	ds	1
  3462  004A                     ___fladd@bexp:
  3463                           
  3464                           ; 1 bytes @ 0x2A
  3465  004A                     	ds	1
  3466  004B                     ___fladd@grs:
  3467                           
  3468                           ; 1 bytes @ 0x2B
  3469  004B                     	ds	1
  3470  004C                     ??___flsub:
  3471  004C                     ??___flmul:	
  3472                           ; 1 bytes @ 0x2C
  3473                           
  3474                           
  3475                           ; 1 bytes @ 0x2C
  3476  004C                     	ds	5
  3477  0051                     ??_get_ntc_temperature:
  3478                           
  3479                           	psect	maintext
  3480  0C9D                     __pmaintext:	
  3481                           ; 1 bytes @ 0x31
  3482 ;;
  3483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3484 ;;
  3485 ;; *************** function _main *****************
  3486 ;; Defined at:
  3487 ;;		line 147 in file "main.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  u16CalBuffer   16    6[BANK3 ] unsigned short [8]
  3492 ;;  fTdVoltage      4   22[BANK3 ] float 
  3493 ;;  fNtcVoltage     4    2[BANK3 ] float 
  3494 ;;  u16TdVal        2    0[BANK3 ] unsigned short 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : B1F/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3504 ;;      Params:         0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0      26       0       0       0
  3506 ;;      Temps:          0       0       1       0       0       0       0       0
  3507 ;;      Totals:         0       0       1       0      26       0       0       0
  3508 ;;Total ram usage:       27 bytes
  3509 ;; Hardware stack levels required when called: 15
  3510 ;; This function calls:
  3511 ;;		_FLASH_ReadWord
  3512 ;;		_FLASH_WriteBlock
  3513 ;;		_InitModbusSlave
  3514 ;;		_MCP3422_ReadVoltage
  3515 ;;		_SYSTEM_Initialize
  3516 ;;		___flge
  3517 ;;		___flmul
  3518 ;;		___fltol
  3519 ;;		___xxtofl
  3520 ;;		_get_ntc_temperature
  3521 ;;		_map
  3522 ;; This function is called by:
  3523 ;;		Startup code after reset
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527  0C9D                     _main:	
  3528                           ;psect for function _main
  3529                           
  3530  0C9D                     l6571:	
  3531                           ;incstack = 0
  3532                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3533                           
  3534                           
  3535                           ;main.c: 150:     float fTdVoltage = 0.0f;
  3536  0C9D  3000               	movlw	0
  3537  0C9E  0023               	movlb	3	; select bank3
  3538  0C9F  00EB               	movwf	(main@fTdVoltage+3)^(0+384)
  3539  0CA0  3000               	movlw	0
  3540  0CA1  00EA               	movwf	(main@fTdVoltage+2)^(0+384)
  3541  0CA2  3000               	movlw	0
  3542  0CA3  00E9               	movwf	(main@fTdVoltage+1)^(0+384)
  3543  0CA4  3000               	movlw	0
  3544  0CA5  00E8               	movwf	main@fTdVoltage^(0+384)
  3545  0CA6                     l6573:
  3546                           
  3547                           ;main.c: 151:     uint16_t u16TdVal = 0.0f;
  3548  0CA6  01D2               	clrf	main@u16TdVal^(0+384)
  3549  0CA7  01D3               	clrf	(main@u16TdVal+1)^(0+384)
  3550  0CA8                     l6575:
  3551                           
  3552                           ;main.c: 152:     uint16_t u16CalBuffer[8] = {0U};
  3553  0CA8  30D8               	movlw	low main@u16CalBuffer
  3554  0CA9  0086               	movwf	6
  3555  0CAA  3001               	movlw	high main@u16CalBuffer
  3556  0CAB  0087               	movwf	7
  3557  0CAC  3010               	movlw	16
  3558  0CAD  0021               	movlb	1	; select bank1
  3559  0CAE  00EE               	movwf	??_main^(0+128)
  3560  0CAF  3000               	movlw	0
  3561  0CB0                     u6350:
  3562  0CB0  001E               	movwi fsr1++
  3563  0CB1  0BEE               	decfsz	??_main^(0+128),f
  3564  0CB2  2CB0               	goto	u6350
  3565  0CB3                     l6577:
  3566                           
  3567                           ;main.c: 154:     SYSTEM_Initialize();
  3568  0CB3  319C  244C  318C   	fcall	_SYSTEM_Initialize
  3569  0CB6                     l6579:
  3570                           
  3571                           ;main.c: 157:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3572  0CB6  301A               	movlw	26
  3573  0CB7  0021               	movlb	1	; select bank1
  3574  0CB8  00EE               	movwf	??_main^(0+128)
  3575  0CB9  30F8               	movlw	248
  3576  0CBA                     u6567:
  3577  0CBA  0B89               	decfsz	9,f
  3578  0CBB  2CBA               	goto	u6567
  3579  0CBC  0BEE               	decfsz	??_main^(0+128),f
  3580  0CBD  2CBA               	goto	u6567
  3581  0CBE  0000               	nop
  3582  0CBF                     l6581:
  3583                           
  3584                           ;main.c: 159:     u16CalBuffer[0] = FLASH_ReadWord(0x1FE0);
  3585  0CBF  30E0               	movlw	224
  3586  0CC0  0020               	movlb	0	; select bank0
  3587  0CC1  00AA               	movwf	FLASH_ReadWord@flashAddr
  3588  0CC2  301F               	movlw	31
  3589  0CC3  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3590  0CC4  319C  24C5  318C   	fcall	_FLASH_ReadWord
  3591  0CC7  0020               	movlb	0	; select bank0
  3592  0CC8  082B               	movf	?_FLASH_ReadWord+1,w
  3593  0CC9  0023               	movlb	3	; select bank3
  3594  0CCA  00D9               	movwf	(main@u16CalBuffer+1)^(0+384)
  3595  0CCB  0020               	movlb	0	; select bank0
  3596  0CCC  082A               	movf	?_FLASH_ReadWord,w
  3597  0CCD  0023               	movlb	3	; select bank3
  3598  0CCE  00D8               	movwf	main@u16CalBuffer^(0+384)
  3599  0CCF                     l6583:
  3600                           
  3601                           ;main.c: 160:     u16CalBuffer[1] = FLASH_ReadWord(0x1FE0 +1);
  3602  0CCF  30E1               	movlw	225
  3603  0CD0  0020               	movlb	0	; select bank0
  3604  0CD1  00AA               	movwf	FLASH_ReadWord@flashAddr
  3605  0CD2  301F               	movlw	31
  3606  0CD3  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3607  0CD4  319C  24C5  318C   	fcall	_FLASH_ReadWord
  3608  0CD7  0020               	movlb	0	; select bank0
  3609  0CD8  082B               	movf	?_FLASH_ReadWord+1,w
  3610  0CD9  0023               	movlb	3	; select bank3
  3611  0CDA  00DB               	movwf	((main@u16CalBuffer+1)^(0+384)+2)
  3612  0CDB  0020               	movlb	0	; select bank0
  3613  0CDC  082A               	movf	?_FLASH_ReadWord,w
  3614  0CDD  0023               	movlb	3	; select bank3
  3615  0CDE  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  3616  0CDF                     l6585:
  3617                           
  3618                           ;main.c: 161:     u16CalBuffer[2] = FLASH_ReadWord(0x1FE0 +2);
  3619  0CDF  30E2               	movlw	226
  3620  0CE0  0020               	movlb	0	; select bank0
  3621  0CE1  00AA               	movwf	FLASH_ReadWord@flashAddr
  3622  0CE2  301F               	movlw	31
  3623  0CE3  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3624  0CE4  319C  24C5  318C   	fcall	_FLASH_ReadWord
  3625  0CE7  0020               	movlb	0	; select bank0
  3626  0CE8  082B               	movf	?_FLASH_ReadWord+1,w
  3627  0CE9  0023               	movlb	3	; select bank3
  3628  0CEA  00DD               	movwf	((main@u16CalBuffer+1)^(0+384)+4)
  3629  0CEB  0020               	movlb	0	; select bank0
  3630  0CEC  082A               	movf	?_FLASH_ReadWord,w
  3631  0CED  0023               	movlb	3	; select bank3
  3632  0CEE  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  3633  0CEF                     l6587:
  3634                           
  3635                           ;main.c: 162:     u16CalBuffer[3] = FLASH_ReadWord(0x1FE0 +3);
  3636  0CEF  30E3               	movlw	227
  3637  0CF0  0020               	movlb	0	; select bank0
  3638  0CF1  00AA               	movwf	FLASH_ReadWord@flashAddr
  3639  0CF2  301F               	movlw	31
  3640  0CF3  00AB               	movwf	FLASH_ReadWord@flashAddr+1
  3641  0CF4  319C  24C5  318C   	fcall	_FLASH_ReadWord
  3642  0CF7  0020               	movlb	0	; select bank0
  3643  0CF8  082B               	movf	?_FLASH_ReadWord+1,w
  3644  0CF9  0023               	movlb	3	; select bank3
  3645  0CFA  00DF               	movwf	((main@u16CalBuffer+1)^(0+384)+6)
  3646  0CFB  0020               	movlb	0	; select bank0
  3647  0CFC  082A               	movf	?_FLASH_ReadWord,w
  3648  0CFD  0023               	movlb	3	; select bank3
  3649  0CFE  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  3650  0CFF                     l6589:
  3651                           
  3652                           ;main.c: 165:     if((0x3FFFU == u16CalBuffer[0]) || (0x3400U == u16CalBuffer[0]))
  3653  0CFF  0A58               	incf	main@u16CalBuffer^(0+384),w
  3654  0D00  303F               	movlw	63
  3655  0D01  1903               	skipnz
  3656  0D02  0659               	xorwf	(main@u16CalBuffer+1)^(0+384),w
  3657  0D03  1903               	btfsc	3,2
  3658  0D04  2D06               	goto	u6361
  3659  0D05  2D07               	goto	u6360
  3660  0D06                     u6361:
  3661  0D06  2D0E               	goto	l6593
  3662  0D07                     u6360:
  3663  0D07                     l6591:
  3664  0D07  3034               	movlw	52
  3665  0D08  0659               	xorwf	(main@u16CalBuffer+1)^(0+384),w
  3666  0D09  0458               	iorwf	main@u16CalBuffer^(0+384),w
  3667  0D0A  1D03               	btfss	3,2
  3668  0D0B  2D0D               	goto	u6371
  3669  0D0C  2D0E               	goto	u6370
  3670  0D0D                     u6371:
  3671  0D0D  2D10               	goto	l6595
  3672  0D0E                     u6370:
  3673  0D0E                     l6593:
  3674                           
  3675                           ;main.c: 166:     {;main.c: 167:         u16CalBuffer[0] = 0;
  3676  0D0E  01D8               	clrf	main@u16CalBuffer^(0+384)
  3677  0D0F  01D9               	clrf	(main@u16CalBuffer+1)^(0+384)
  3678  0D10                     l6595:
  3679                           
  3680                           ;main.c: 169:     if((0x3FFFU == u16CalBuffer[2]) || (0x3400U == u16CalBuffer[2]))
  3681  0D10  0A5C               	incf	(main@u16CalBuffer^(0+384)+4),w
  3682  0D11  303F               	movlw	63
  3683  0D12  1903               	skipnz
  3684  0D13  065D               	xorwf	((main@u16CalBuffer+1)^(0+384)+4),w
  3685  0D14  1903               	btfsc	3,2
  3686  0D15  2D17               	goto	u6381
  3687  0D16  2D18               	goto	u6380
  3688  0D17                     u6381:
  3689  0D17  2D1F               	goto	l6599
  3690  0D18                     u6380:
  3691  0D18                     l6597:
  3692  0D18  3034               	movlw	52
  3693  0D19  065D               	xorwf	((main@u16CalBuffer+1)^(0+384)+4),w
  3694  0D1A  045C               	iorwf	(main@u16CalBuffer^(0+384)+4),w
  3695  0D1B  1D03               	btfss	3,2
  3696  0D1C  2D1E               	goto	u6391
  3697  0D1D  2D1F               	goto	u6390
  3698  0D1E                     u6391:
  3699  0D1E  2D23               	goto	l6601
  3700  0D1F                     u6390:
  3701  0D1F                     l6599:
  3702                           
  3703                           ;main.c: 170:     {;main.c: 171:         u16CalBuffer[2] = 400;
  3704  0D1F  3090               	movlw	144
  3705  0D20  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  3706  0D21  3001               	movlw	1
  3707  0D22  00DD               	movwf	(main@u16CalBuffer^(0+384)+5)
  3708  0D23                     l6601:
  3709                           
  3710                           ;main.c: 173:     if((0x3FFFU == u16CalBuffer[1]) || (0x3400U == u16CalBuffer[1]))
  3711  0D23  0A5A               	incf	(main@u16CalBuffer^(0+384)+2),w
  3712  0D24  303F               	movlw	63
  3713  0D25  1903               	skipnz
  3714  0D26  065B               	xorwf	((main@u16CalBuffer+1)^(0+384)+2),w
  3715  0D27  1903               	btfsc	3,2
  3716  0D28  2D2A               	goto	u6401
  3717  0D29  2D2B               	goto	u6400
  3718  0D2A                     u6401:
  3719  0D2A  2D32               	goto	l6605
  3720  0D2B                     u6400:
  3721  0D2B                     l6603:
  3722  0D2B  3034               	movlw	52
  3723  0D2C  065B               	xorwf	((main@u16CalBuffer+1)^(0+384)+2),w
  3724  0D2D  045A               	iorwf	(main@u16CalBuffer^(0+384)+2),w
  3725  0D2E  1D03               	btfss	3,2
  3726  0D2F  2D31               	goto	u6411
  3727  0D30  2D32               	goto	u6410
  3728  0D31                     u6411:
  3729  0D31  2D36               	goto	l6607
  3730  0D32                     u6410:
  3731  0D32                     l6605:
  3732                           
  3733                           ;main.c: 174:     {;main.c: 175:         u16CalBuffer[1] = 900;
  3734  0D32  3084               	movlw	132
  3735  0D33  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  3736  0D34  3003               	movlw	3
  3737  0D35  00DB               	movwf	(main@u16CalBuffer^(0+384)+3)
  3738  0D36                     l6607:
  3739                           
  3740                           ;main.c: 177:     if((0x3FFFU == u16CalBuffer[3]) || (0x3400U == u16CalBuffer[3]))
  3741  0D36  0A5E               	incf	(main@u16CalBuffer^(0+384)+6),w
  3742  0D37  303F               	movlw	63
  3743  0D38  1903               	skipnz
  3744  0D39  065F               	xorwf	((main@u16CalBuffer+1)^(0+384)+6),w
  3745  0D3A  1903               	btfsc	3,2
  3746  0D3B  2D3D               	goto	u6421
  3747  0D3C  2D3E               	goto	u6420
  3748  0D3D                     u6421:
  3749  0D3D  2D45               	goto	l6611
  3750  0D3E                     u6420:
  3751  0D3E                     l6609:
  3752  0D3E  3034               	movlw	52
  3753  0D3F  065F               	xorwf	((main@u16CalBuffer+1)^(0+384)+6),w
  3754  0D40  045E               	iorwf	(main@u16CalBuffer^(0+384)+6),w
  3755  0D41  1D03               	btfss	3,2
  3756  0D42  2D44               	goto	u6431
  3757  0D43  2D45               	goto	u6430
  3758  0D44                     u6431:
  3759  0D44  2D49               	goto	l6613
  3760  0D45                     u6430:
  3761  0D45                     l6611:
  3762                           
  3763                           ;main.c: 178:     {;main.c: 179:         u16CalBuffer[3] = 1800;
  3764  0D45  3008               	movlw	8
  3765  0D46  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  3766  0D47  3007               	movlw	7
  3767  0D48  00DF               	movwf	(main@u16CalBuffer^(0+384)+7)
  3768  0D49                     l6613:
  3769                           
  3770                           ;main.c: 187:     InitModbusSlave(1U);
  3771  0D49  3001               	movlw	1
  3772  0D4A  319C  2421  318C   	fcall	_InitModbusSlave
  3773  0D4D                     l6615:
  3774                           
  3775                           ;main.c: 188:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3776  0D4D  301A               	movlw	26
  3777  0D4E  0021               	movlb	1	; select bank1
  3778  0D4F  00EE               	movwf	??_main^(0+128)
  3779  0D50  30F8               	movlw	248
  3780  0D51                     u6577:
  3781  0D51  0B89               	decfsz	9,f
  3782  0D52  2D51               	goto	u6577
  3783  0D53  0BEE               	decfsz	??_main^(0+128),f
  3784  0D54  2D51               	goto	u6577
  3785  0D55  0000               	nop
  3786  0D56                     l6617:
  3787                           
  3788                           ;main.c: 190:     (INTCONbits.GIE = 1);
  3789  0D56  178B               	bsf	11,7	;volatile
  3790  0D57                     l6619:
  3791                           
  3792                           ;main.c: 193:     (INTCONbits.PEIE = 1);
  3793  0D57  170B               	bsf	11,6	;volatile
  3794  0D58                     l881:	
  3795                           ;main.c: 200:     while (1)
  3796                           
  3797  0D58  0064               	clrwdt	;# 
  3798  0D59                     l6621:
  3799                           
  3800                           ;main.c: 205:         fTdVoltage = MCP3422_ReadVoltage(0x80);
  3801  0D59  3080               	movlw	128
  3802  0D5A  3191  214B  318C   	fcall	_MCP3422_ReadVoltage
  3803  0D5D  0021               	movlb	1	; select bank1
  3804  0D5E  0840               	movf	(?_MCP3422_ReadVoltage+3)^(0+128),w
  3805  0D5F  0023               	movlb	3	; select bank3
  3806  0D60  00EB               	movwf	(main@fTdVoltage+3)^(0+384)
  3807  0D61  0021               	movlb	1	; select bank1
  3808  0D62  083F               	movf	(?_MCP3422_ReadVoltage+2)^(0+128),w
  3809  0D63  0023               	movlb	3	; select bank3
  3810  0D64  00EA               	movwf	(main@fTdVoltage+2)^(0+384)
  3811  0D65  0021               	movlb	1	; select bank1
  3812  0D66  083E               	movf	(?_MCP3422_ReadVoltage+1)^(0+128),w
  3813  0D67  0023               	movlb	3	; select bank3
  3814  0D68  00E9               	movwf	(main@fTdVoltage+1)^(0+384)
  3815  0D69  0021               	movlb	1	; select bank1
  3816  0D6A  083D               	movf	?_MCP3422_ReadVoltage^(0+128),w
  3817  0D6B  0023               	movlb	3	; select bank3
  3818  0D6C  00E8               	movwf	main@fTdVoltage^(0+384)
  3819  0D6D                     l6623:
  3820                           
  3821                           ;main.c: 206:         fNtcVoltage = MCP3422_ReadVoltage(0xA0);
  3822  0D6D  30A0               	movlw	160
  3823  0D6E  3191  214B  318C   	fcall	_MCP3422_ReadVoltage
  3824  0D71  0021               	movlb	1	; select bank1
  3825  0D72  0840               	movf	(?_MCP3422_ReadVoltage+3)^(0+128),w
  3826  0D73  0023               	movlb	3	; select bank3
  3827  0D74  00D7               	movwf	(main@fNtcVoltage+3)^(0+384)
  3828  0D75  0021               	movlb	1	; select bank1
  3829  0D76  083F               	movf	(?_MCP3422_ReadVoltage+2)^(0+128),w
  3830  0D77  0023               	movlb	3	; select bank3
  3831  0D78  00D6               	movwf	(main@fNtcVoltage+2)^(0+384)
  3832  0D79  0021               	movlb	1	; select bank1
  3833  0D7A  083E               	movf	(?_MCP3422_ReadVoltage+1)^(0+128),w
  3834  0D7B  0023               	movlb	3	; select bank3
  3835  0D7C  00D5               	movwf	(main@fNtcVoltage+1)^(0+384)
  3836  0D7D  0021               	movlb	1	; select bank1
  3837  0D7E  083D               	movf	?_MCP3422_ReadVoltage^(0+128),w
  3838  0D7F  0023               	movlb	3	; select bank3
  3839  0D80  00D4               	movwf	main@fNtcVoltage^(0+384)
  3840  0D81                     l6625:
  3841  0D81  1003               	clrc
  3842  0D82  0022               	movlb	2	; select bank2
  3843  0D83  1F0E               	btfss	14,6	;volatile
  3844  0D84  1403               	setc
  3845  0D85  1803               	btfsc	3,0
  3846  0D86  2D88               	goto	u6441
  3847  0D87  2D8B               	goto	u6440
  3848  0D88                     u6441:
  3849  0D88  0022               	movlb	2	; select bank2
  3850  0D89  170E               	bsf	14,6	;volatile
  3851  0D8A  2D8D               	goto	u6454
  3852  0D8B                     u6440:
  3853  0D8B  0022               	movlb	2	; select bank2
  3854  0D8C  130E               	bcf	14,6	;volatile
  3855  0D8D                     u6454:
  3856  0D8D                     l6627:
  3857                           
  3858                           ;main.c: 208:         get_ntc_temperature(fNtcVoltage);
  3859  0D8D  0023               	movlb	3	; select bank3
  3860  0D8E  0857               	movf	(main@fNtcVoltage+3)^(0+384),w
  3861  0D8F  0021               	movlb	1	; select bank1
  3862  0D90  00E6               	movwf	(get_ntc_temperature@adcVoltage+3)^(0+128)
  3863  0D91  0023               	movlb	3	; select bank3
  3864  0D92  0856               	movf	(main@fNtcVoltage+2)^(0+384),w
  3865  0D93  0021               	movlb	1	; select bank1
  3866  0D94  00E5               	movwf	(get_ntc_temperature@adcVoltage+2)^(0+128)
  3867  0D95  0023               	movlb	3	; select bank3
  3868  0D96  0855               	movf	(main@fNtcVoltage+1)^(0+384),w
  3869  0D97  0021               	movlb	1	; select bank1
  3870  0D98  00E4               	movwf	(get_ntc_temperature@adcVoltage+1)^(0+128)
  3871  0D99  0023               	movlb	3	; select bank3
  3872  0D9A  0854               	movf	main@fNtcVoltage^(0+384),w
  3873  0D9B  0021               	movlb	1	; select bank1
  3874  0D9C  00E3               	movwf	get_ntc_temperature@adcVoltage^(0+128)
  3875  0D9D  3188  2011  318C   	fcall	_get_ntc_temperature
  3876  0DA0                     l6629:
  3877                           
  3878                           ;main.c: 210:         if((modbusSlaveData.ModbusHoldingRegister[4U] == 9588U) && (bCalMo
      +                          de == 0))
  3879  0DA0  3074               	movlw	116
  3880  0DA1  0023               	movlb	3	; select bank3
  3881  0DA2  0628               	xorwf	(_modbusSlaveData^(0+384)+8),w	;volatile
  3882  0DA3  3025               	movlw	37
  3883  0DA4  1903               	skipnz
  3884  0DA5  0629               	xorwf	((_modbusSlaveData+1)^(0+384)+8),w	;volatile
  3885  0DA6  1D03               	btfss	3,2
  3886  0DA7  2DA9               	goto	u6461
  3887  0DA8  2DAA               	goto	u6460
  3888  0DA9                     u6461:
  3889  0DA9  2DB6               	goto	l6635
  3890  0DAA                     u6460:
  3891  0DAA                     l6631:
  3892  0DAA  0851               	movf	_bCalMode^(0+384),w
  3893  0DAB  1D03               	btfss	3,2
  3894  0DAC  2DAE               	goto	u6471
  3895  0DAD  2DAF               	goto	u6470
  3896  0DAE                     u6471:
  3897  0DAE  2DB6               	goto	l6635
  3898  0DAF                     u6470:
  3899  0DAF                     l6633:
  3900                           
  3901                           ;main.c: 211:         {;main.c: 212:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 1U;
  3902  0DAF  3000               	movlw	0
  3903  0DB0  00A9               	movwf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3904  0DB1  3001               	movlw	1
  3905  0DB2  00A8               	movwf	(_modbusSlaveData^(0+384)+8)	;volatile
  3906                           
  3907                           ;main.c: 214:             bCalMode = 1;
  3908  0DB3  01D1               	clrf	_bCalMode^(0+384)
  3909  0DB4  0AD1               	incf	_bCalMode^(0+384),f
  3910                           
  3911                           ;main.c: 215:         }
  3912  0DB5  2E40               	goto	l6673
  3913  0DB6                     l6635:
  3914  0DB6  3019               	movlw	25
  3915  0DB7  0628               	xorwf	(_modbusSlaveData^(0+384)+8),w	;volatile
  3916  0DB8  3012               	movlw	18
  3917  0DB9  1903               	skipnz
  3918  0DBA  0629               	xorwf	((_modbusSlaveData+1)^(0+384)+8),w	;volatile
  3919  0DBB  1D03               	btfss	3,2
  3920  0DBC  2DBE               	goto	u6481
  3921  0DBD  2DBF               	goto	u6480
  3922  0DBE                     u6481:
  3923  0DBE  2DE4               	goto	l886
  3924  0DBF                     u6480:
  3925  0DBF                     l6637:
  3926  0DBF  0351               	decf	_bCalMode^(0+384),w
  3927  0DC0  1D03               	btfss	3,2
  3928  0DC1  2DC3               	goto	u6491
  3929  0DC2  2DC4               	goto	u6490
  3930  0DC3                     u6491:
  3931  0DC3  2DE4               	goto	l886
  3932  0DC4                     u6490:
  3933  0DC4                     l6639:
  3934                           
  3935                           ;main.c: 217:         {;main.c: 218:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 0U;
  3936  0DC4  01A8               	clrf	(_modbusSlaveData^(0+384)+8)	;volatile
  3937  0DC5  01A9               	clrf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3938  0DC6                     l6641:
  3939                           
  3940                           ;main.c: 219:             (INTCONbits.GIE = 0);
  3941  0DC6  138B               	bcf	11,7	;volatile
  3942  0DC7                     l6643:
  3943                           
  3944                           ;main.c: 220:             (INTCONbits.PEIE = 0);
  3945  0DC7  130B               	bcf	11,6	;volatile
  3946  0DC8                     l6645:
  3947                           
  3948                           ;main.c: 221:             FLASH_WriteBlock(0x1FE0,&u16CalBuffer);
  3949  0DC8  30E0               	movlw	224
  3950  0DC9  0020               	movlb	0	; select bank0
  3951  0DCA  00AD               	movwf	FLASH_WriteBlock@writeAddr
  3952  0DCB  301F               	movlw	31
  3953  0DCC  00AE               	movwf	FLASH_WriteBlock@writeAddr+1
  3954  0DCD  30D8               	movlw	(low (main@u16CalBuffer| (0+256)))& (0+255)
  3955  0DCE  0021               	movlb	1	; select bank1
  3956  0DCF  00EE               	movwf	??_main^(0+128)
  3957  0DD0  086E               	movf	??_main^(0+128),w
  3958  0DD1  0020               	movlb	0	; select bank0
  3959  0DD2  00AF               	movwf	FLASH_WriteBlock@flashWordArray
  3960  0DD3  3190  2068  318C   	fcall	_FLASH_WriteBlock
  3961  0DD6                     l6647:
  3962                           
  3963                           ;main.c: 222:             _delay((unsigned long)((50)*(8000000/4000.0)));
  3964  0DD6  3082               	movlw	130
  3965  0DD7  0021               	movlb	1	; select bank1
  3966  0DD8  00EE               	movwf	??_main^(0+128)
  3967  0DD9  30DD               	movlw	221
  3968  0DDA                     u6587:
  3969  0DDA  0B89               	decfsz	9,f
  3970  0DDB  2DDA               	goto	u6587
  3971  0DDC  0BEE               	decfsz	??_main^(0+128),f
  3972  0DDD  2DDA               	goto	u6587
  3973  0DDE  3200               	nop2
  3974  0DDF                     l6649:
  3975                           
  3976                           ;main.c: 223:             (INTCONbits.GIE = 1);
  3977  0DDF  178B               	bsf	11,7	;volatile
  3978  0DE0                     l6651:
  3979                           
  3980                           ;main.c: 224:             (INTCONbits.PEIE = 1);
  3981  0DE0  170B               	bsf	11,6	;volatile
  3982  0DE1                     l6653:
  3983                           
  3984                           ;main.c: 225:             bCalMode = 0;
  3985  0DE1  0023               	movlb	3	; select bank3
  3986  0DE2  01D1               	clrf	_bCalMode^(0+384)
  3987                           
  3988                           ;main.c: 226:         }
  3989  0DE3  2E40               	goto	l6673
  3990  0DE4                     l886:	
  3991                           ;main.c: 227:         else
  3992                           
  3993                           
  3994                           ;main.c: 228:         {;main.c: 229:             modbusSlaveData.ModbusHoldingRegister[4
      +                          U] = 1U;
  3995  0DE4  3000               	movlw	0
  3996  0DE5  00A9               	movwf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  3997  0DE6  3001               	movlw	1
  3998  0DE7  00A8               	movwf	(_modbusSlaveData^(0+384)+8)	;volatile
  3999  0DE8                     l6655:
  4000                           
  4001                           ;main.c: 230:             if(1 == bCalMode)
  4002  0DE8  0351               	decf	_bCalMode^(0+384),w
  4003  0DE9  1D03               	btfss	3,2
  4004  0DEA  2DEC               	goto	u6501
  4005  0DEB  2DED               	goto	u6500
  4006  0DEC                     u6501:
  4007  0DEC  2E39               	goto	l6671
  4008  0DED                     u6500:
  4009  0DED  2E2C               	goto	l6669
  4010  0DEE                     l6659:
  4011                           
  4012                           ;main.c: 235:                         u16CalBuffer[0] = modbusSlaveData.ModbusHoldingReg
      +                          ister[6U];
  4013  0DEE  082D               	movf	((_modbusSlaveData+1)^(0+384)+12),w	;volatile
  4014  0DEF  00D9               	movwf	(main@u16CalBuffer+1)^(0+384)
  4015  0DF0  082C               	movf	(_modbusSlaveData^(0+384)+12),w	;volatile
  4016  0DF1  00D8               	movwf	main@u16CalBuffer^(0+384)
  4017  0DF2                     l6661:
  4018                           
  4019                           ;main.c: 236:                         u16CalBuffer[1] = (uint16_t)fTdVoltage;
  4020  0DF2  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4021  0DF3  0021               	movlb	1	; select bank1
  4022  0DF4  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4023  0DF5  0023               	movlb	3	; select bank3
  4024  0DF6  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4025  0DF7  0021               	movlb	1	; select bank1
  4026  0DF8  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4027  0DF9  0023               	movlb	3	; select bank3
  4028  0DFA  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4029  0DFB  0021               	movlb	1	; select bank1
  4030  0DFC  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4031  0DFD  0023               	movlb	3	; select bank3
  4032  0DFE  0868               	movf	main@fTdVoltage^(0+384),w
  4033  0DFF  0021               	movlb	1	; select bank1
  4034  0E00  00D7               	movwf	___fltol@f1^(0+128)
  4035  0E01  3190  20D6  318C   	fcall	___fltol
  4036  0E04  0021               	movlb	1	; select bank1
  4037  0E05  0858               	movf	(?___fltol+1)^(0+128),w
  4038  0E06  0023               	movlb	3	; select bank3
  4039  0E07  00DB               	movwf	((main@u16CalBuffer+1)^(0+384)+2)
  4040  0E08  0021               	movlb	1	; select bank1
  4041  0E09  0857               	movf	?___fltol^(0+128),w
  4042  0E0A  0023               	movlb	3	; select bank3
  4043  0E0B  00DA               	movwf	(main@u16CalBuffer^(0+384)+2)
  4044                           
  4045                           ;main.c: 237:                         break;
  4046  0E0C  2E40               	goto	l6673
  4047  0E0D                     l6663:
  4048                           
  4049                           ;main.c: 239:                         u16CalBuffer[2] = modbusSlaveData.ModbusHoldingReg
      +                          ister[6U];
  4050  0E0D  082D               	movf	((_modbusSlaveData+1)^(0+384)+12),w	;volatile
  4051  0E0E  00DD               	movwf	((main@u16CalBuffer+1)^(0+384)+4)
  4052  0E0F  082C               	movf	(_modbusSlaveData^(0+384)+12),w	;volatile
  4053  0E10  00DC               	movwf	(main@u16CalBuffer^(0+384)+4)
  4054  0E11                     l6665:
  4055                           
  4056                           ;main.c: 240:                         u16CalBuffer[3] = (uint16_t)fTdVoltage;
  4057  0E11  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4058  0E12  0021               	movlb	1	; select bank1
  4059  0E13  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4060  0E14  0023               	movlb	3	; select bank3
  4061  0E15  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4062  0E16  0021               	movlb	1	; select bank1
  4063  0E17  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4064  0E18  0023               	movlb	3	; select bank3
  4065  0E19  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4066  0E1A  0021               	movlb	1	; select bank1
  4067  0E1B  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4068  0E1C  0023               	movlb	3	; select bank3
  4069  0E1D  0868               	movf	main@fTdVoltage^(0+384),w
  4070  0E1E  0021               	movlb	1	; select bank1
  4071  0E1F  00D7               	movwf	___fltol@f1^(0+128)
  4072  0E20  3190  20D6  318C   	fcall	___fltol
  4073  0E23  0021               	movlb	1	; select bank1
  4074  0E24  0858               	movf	(?___fltol+1)^(0+128),w
  4075  0E25  0023               	movlb	3	; select bank3
  4076  0E26  00DF               	movwf	((main@u16CalBuffer+1)^(0+384)+6)
  4077  0E27  0021               	movlb	1	; select bank1
  4078  0E28  0857               	movf	?___fltol^(0+128),w
  4079  0E29  0023               	movlb	3	; select bank3
  4080  0E2A  00DE               	movwf	(main@u16CalBuffer^(0+384)+6)
  4081                           
  4082                           ;main.c: 241:                         break;
  4083  0E2B  2E40               	goto	l6673
  4084  0E2C                     l6669:
  4085                           
  4086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4087                           ; Switch size 1, requested type "simple"
  4088                           ; Number of cases is 1, Range of values is 0 to 0
  4089                           ; switch strategies available:
  4090                           ; Name         Instructions Cycles
  4091                           ; simple_byte            4     3 (average)
  4092                           ; direct_byte            8     6 (fixed)
  4093                           ; jumptable            260     6 (fixed)
  4094                           ;	Chosen strategy is simple_byte
  4095  0E2C  082B               	movf	((_modbusSlaveData+1)^(0+384)+10),w	;volatile
  4096  0E2D  3A00               	xorlw	0	; case 0
  4097  0E2E  1903               	skipnz
  4098  0E2F  2E31               	goto	l6839
  4099  0E30  2E40               	goto	l887
  4100  0E31                     l6839:
  4101                           
  4102                           ; Switch size 1, requested type "simple"
  4103                           ; Number of cases is 2, Range of values is 1 to 2
  4104                           ; switch strategies available:
  4105                           ; Name         Instructions Cycles
  4106                           ; simple_byte            7     4 (average)
  4107                           ; direct_byte           13     9 (fixed)
  4108                           ; jumptable            263     9 (fixed)
  4109                           ;	Chosen strategy is simple_byte
  4110  0E31  082A               	movf	(_modbusSlaveData^(0+384)+10),w	;volatile
  4111  0E32  3A01               	xorlw	1	; case 1
  4112  0E33  1903               	skipnz
  4113  0E34  2DEE               	goto	l6659
  4114  0E35  3A03               	xorlw	3	; case 2
  4115  0E36  1903               	skipnz
  4116  0E37  2E0D               	goto	l6663
  4117  0E38  2E40               	goto	l887
  4118  0E39                     l6671:
  4119                           
  4120                           ;main.c: 248:             {;main.c: 249:                 modbusSlaveData.ModbusHoldingRe
      +                          gister[4U] = 0U;
  4121  0E39  01A8               	clrf	(_modbusSlaveData^(0+384)+8)	;volatile
  4122  0E3A  01A9               	clrf	((_modbusSlaveData+1)^(0+384)+8)	;volatile
  4123                           
  4124                           ;main.c: 250:                 modbusSlaveData.ModbusHoldingRegister[5U] = 0U;
  4125  0E3B  01AA               	clrf	(_modbusSlaveData^(0+384)+10)	;volatile
  4126  0E3C  01AB               	clrf	((_modbusSlaveData+1)^(0+384)+10)	;volatile
  4127                           
  4128                           ;main.c: 251:                 modbusSlaveData.ModbusHoldingRegister[6U] = 0U;
  4129  0E3D  01AC               	clrf	(_modbusSlaveData^(0+384)+12)	;volatile
  4130  0E3E  01AD               	clrf	((_modbusSlaveData+1)^(0+384)+12)	;volatile
  4131  0E3F  2E40               	goto	l6673
  4132  0E40                     l887:	
  4133                           ;main.c: 254:         }
  4134                           
  4135  0E40                     l6673:
  4136                           
  4137                           ;main.c: 256:         if(0 == bCalMode)
  4138  0E40  0851               	movf	_bCalMode^(0+384),w
  4139  0E41  1D03               	btfss	3,2
  4140  0E42  2E44               	goto	u6511
  4141  0E43  2E45               	goto	u6510
  4142  0E44                     u6511:
  4143  0E44  2FB3               	goto	l6695
  4144  0E45                     u6510:
  4145  0E45                     l6675:
  4146                           
  4147                           ;main.c: 257:         {;main.c: 258:             if((fTdVoltage >= u16CalBuffer[1]) && (
      +                          fTdVoltage <= u16CalBuffer[3]))
  4148  0E45  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4149  0E46  0020               	movlb	0	; select bank0
  4150  0E47  00BB               	movwf	___flge@ff1+3
  4151  0E48  0023               	movlb	3	; select bank3
  4152  0E49  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4153  0E4A  0020               	movlb	0	; select bank0
  4154  0E4B  00BA               	movwf	___flge@ff1+2
  4155  0E4C  0023               	movlb	3	; select bank3
  4156  0E4D  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4157  0E4E  0020               	movlb	0	; select bank0
  4158  0E4F  00B9               	movwf	___flge@ff1+1
  4159  0E50  0023               	movlb	3	; select bank3
  4160  0E51  0868               	movf	main@fTdVoltage^(0+384),w
  4161  0E52  0020               	movlb	0	; select bank0
  4162  0E53  00B8               	movwf	___flge@ff1
  4163  0E54  0023               	movlb	3	; select bank3
  4164  0E55  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4165  0E56  0020               	movlb	0	; select bank0
  4166  0E57  00AA               	movwf	___xxtofl@val
  4167  0E58  0023               	movlb	3	; select bank3
  4168  0E59  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4169  0E5A  0020               	movlb	0	; select bank0
  4170  0E5B  00AB               	movwf	___xxtofl@val+1
  4171  0E5C  01AC               	clrf	___xxtofl@val+2
  4172  0E5D  01AD               	clrf	___xxtofl@val+3
  4173  0E5E  3000               	movlw	0
  4174  0E5F  3192  2252  318C   	fcall	___xxtofl
  4175  0E62  0020               	movlb	0	; select bank0
  4176  0E63  082D               	movf	?___xxtofl+3,w
  4177  0E64  00BF               	movwf	___flge@ff2+3
  4178  0E65  082C               	movf	?___xxtofl+2,w
  4179  0E66  00BE               	movwf	___flge@ff2+2
  4180  0E67  082B               	movf	?___xxtofl+1,w
  4181  0E68  00BD               	movwf	___flge@ff2+1
  4182  0E69  082A               	movf	?___xxtofl,w
  4183  0E6A  00BC               	movwf	___flge@ff2
  4184  0E6B  3191  21C7  318C   	fcall	___flge
  4185  0E6E  1C03               	btfss	3,0
  4186  0E6F  2E71               	goto	u6521
  4187  0E70  2E72               	goto	u6520
  4188  0E71                     u6521:
  4189  0E71  2EE4               	goto	l6681
  4190  0E72                     u6520:
  4191  0E72                     l6677:
  4192  0E72  0023               	movlb	3	; select bank3
  4193  0E73  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4194  0E74  0020               	movlb	0	; select bank0
  4195  0E75  00AA               	movwf	___xxtofl@val
  4196  0E76  0023               	movlb	3	; select bank3
  4197  0E77  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4198  0E78  0020               	movlb	0	; select bank0
  4199  0E79  00AB               	movwf	___xxtofl@val+1
  4200  0E7A  01AC               	clrf	___xxtofl@val+2
  4201  0E7B  01AD               	clrf	___xxtofl@val+3
  4202  0E7C  3000               	movlw	0
  4203  0E7D  3192  2252  318C   	fcall	___xxtofl
  4204  0E80  0020               	movlb	0	; select bank0
  4205  0E81  082D               	movf	?___xxtofl+3,w
  4206  0E82  00BB               	movwf	___flge@ff1+3
  4207  0E83  082C               	movf	?___xxtofl+2,w
  4208  0E84  00BA               	movwf	___flge@ff1+2
  4209  0E85  082B               	movf	?___xxtofl+1,w
  4210  0E86  00B9               	movwf	___flge@ff1+1
  4211  0E87  082A               	movf	?___xxtofl,w
  4212  0E88  00B8               	movwf	___flge@ff1
  4213  0E89  0023               	movlb	3	; select bank3
  4214  0E8A  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4215  0E8B  0020               	movlb	0	; select bank0
  4216  0E8C  00BF               	movwf	___flge@ff2+3
  4217  0E8D  0023               	movlb	3	; select bank3
  4218  0E8E  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4219  0E8F  0020               	movlb	0	; select bank0
  4220  0E90  00BE               	movwf	___flge@ff2+2
  4221  0E91  0023               	movlb	3	; select bank3
  4222  0E92  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4223  0E93  0020               	movlb	0	; select bank0
  4224  0E94  00BD               	movwf	___flge@ff2+1
  4225  0E95  0023               	movlb	3	; select bank3
  4226  0E96  0868               	movf	main@fTdVoltage^(0+384),w
  4227  0E97  0020               	movlb	0	; select bank0
  4228  0E98  00BC               	movwf	___flge@ff2
  4229  0E99  3191  21C7  318C   	fcall	___flge
  4230  0E9C  1C03               	btfss	3,0
  4231  0E9D  2E9F               	goto	u6531
  4232  0E9E  2EA0               	goto	u6530
  4233  0E9F                     u6531:
  4234  0E9F  2EE4               	goto	l6681
  4235  0EA0                     u6530:
  4236  0EA0                     l6679:
  4237                           
  4238                           ;main.c: 259:             {;main.c: 260:                 u16TdVal = map(fTdVoltage,u16Ca
      +                          lBuffer[1],u16CalBuffer[3],u16CalBuffer[0],u16CalBuffer[2]);
  4239  0EA0  0023               	movlb	3	; select bank3
  4240  0EA1  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4241  0EA2  0022               	movlb	2	; select bank2
  4242  0EA3  00A3               	movwf	(map@x+3)^(0+256)
  4243  0EA4  0023               	movlb	3	; select bank3
  4244  0EA5  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4245  0EA6  0022               	movlb	2	; select bank2
  4246  0EA7  00A2               	movwf	(map@x+2)^(0+256)
  4247  0EA8  0023               	movlb	3	; select bank3
  4248  0EA9  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4249  0EAA  0022               	movlb	2	; select bank2
  4250  0EAB  00A1               	movwf	(map@x+1)^(0+256)
  4251  0EAC  0023               	movlb	3	; select bank3
  4252  0EAD  0868               	movf	main@fTdVoltage^(0+384),w
  4253  0EAE  0022               	movlb	2	; select bank2
  4254  0EAF  00A0               	movwf	map@x^(0+256)
  4255  0EB0  0023               	movlb	3	; select bank3
  4256  0EB1  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4257  0EB2  0022               	movlb	2	; select bank2
  4258  0EB3  00A4               	movwf	map@in_min^(0+256)
  4259  0EB4  0023               	movlb	3	; select bank3
  4260  0EB5  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4261  0EB6  0022               	movlb	2	; select bank2
  4262  0EB7  00A5               	movwf	(map@in_min^(0+256)+1)
  4263  0EB8  01A6               	clrf	(map@in_min^(0+256)+2)
  4264  0EB9  01A7               	clrf	(map@in_min^(0+256)+3)
  4265  0EBA  0023               	movlb	3	; select bank3
  4266  0EBB  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4267  0EBC  0022               	movlb	2	; select bank2
  4268  0EBD  00A8               	movwf	map@in_max^(0+256)
  4269  0EBE  0023               	movlb	3	; select bank3
  4270  0EBF  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4271  0EC0  0022               	movlb	2	; select bank2
  4272  0EC1  00A9               	movwf	(map@in_max^(0+256)+1)
  4273  0EC2  01AA               	clrf	(map@in_max^(0+256)+2)
  4274  0EC3  01AB               	clrf	(map@in_max^(0+256)+3)
  4275  0EC4  0023               	movlb	3	; select bank3
  4276  0EC5  0858               	movf	main@u16CalBuffer^(0+384),w
  4277  0EC6  0022               	movlb	2	; select bank2
  4278  0EC7  00AC               	movwf	map@out_min^(0+256)
  4279  0EC8  0023               	movlb	3	; select bank3
  4280  0EC9  0859               	movf	(main@u16CalBuffer+1)^(0+384),w
  4281  0ECA  0022               	movlb	2	; select bank2
  4282  0ECB  00AD               	movwf	(map@out_min^(0+256)+1)
  4283  0ECC  01AE               	clrf	(map@out_min^(0+256)+2)
  4284  0ECD  01AF               	clrf	(map@out_min^(0+256)+3)
  4285  0ECE  0023               	movlb	3	; select bank3
  4286  0ECF  085C               	movf	(main@u16CalBuffer^(0+384)+4),w
  4287  0ED0  0022               	movlb	2	; select bank2
  4288  0ED1  00B0               	movwf	map@out_max^(0+256)
  4289  0ED2  0023               	movlb	3	; select bank3
  4290  0ED3  085D               	movf	((main@u16CalBuffer+1)^(0+384)+4),w
  4291  0ED4  0022               	movlb	2	; select bank2
  4292  0ED5  00B1               	movwf	(map@out_max^(0+256)+1)
  4293  0ED6  01B2               	clrf	(map@out_max^(0+256)+2)
  4294  0ED7  01B3               	clrf	(map@out_max^(0+256)+3)
  4295  0ED8  3192  22FF  318C   	fcall	_map
  4296  0EDB  0022               	movlb	2	; select bank2
  4297  0EDC  0821               	movf	(?_map+1)^(0+256),w
  4298  0EDD  0023               	movlb	3	; select bank3
  4299  0EDE  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4300  0EDF  0022               	movlb	2	; select bank2
  4301  0EE0  0820               	movf	?_map^(0+256),w
  4302  0EE1  0023               	movlb	3	; select bank3
  4303  0EE2  00D2               	movwf	main@u16TdVal^(0+384)
  4304                           
  4305                           ;main.c: 261:             }
  4306  0EE3  2F4B               	goto	l897
  4307  0EE4                     l6681:
  4308                           
  4309                           ;main.c: 263:             {;main.c: 264:                 if(fTdVoltage < u16CalBuffer[1]
      +                          )
  4310  0EE4  0023               	movlb	3	; select bank3
  4311  0EE5  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4312  0EE6  0020               	movlb	0	; select bank0
  4313  0EE7  00BB               	movwf	___flge@ff1+3
  4314  0EE8  0023               	movlb	3	; select bank3
  4315  0EE9  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4316  0EEA  0020               	movlb	0	; select bank0
  4317  0EEB  00BA               	movwf	___flge@ff1+2
  4318  0EEC  0023               	movlb	3	; select bank3
  4319  0EED  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4320  0EEE  0020               	movlb	0	; select bank0
  4321  0EEF  00B9               	movwf	___flge@ff1+1
  4322  0EF0  0023               	movlb	3	; select bank3
  4323  0EF1  0868               	movf	main@fTdVoltage^(0+384),w
  4324  0EF2  0020               	movlb	0	; select bank0
  4325  0EF3  00B8               	movwf	___flge@ff1
  4326  0EF4  0023               	movlb	3	; select bank3
  4327  0EF5  085A               	movf	(main@u16CalBuffer^(0+384)+2),w
  4328  0EF6  0020               	movlb	0	; select bank0
  4329  0EF7  00AA               	movwf	___xxtofl@val
  4330  0EF8  0023               	movlb	3	; select bank3
  4331  0EF9  085B               	movf	((main@u16CalBuffer+1)^(0+384)+2),w
  4332  0EFA  0020               	movlb	0	; select bank0
  4333  0EFB  00AB               	movwf	___xxtofl@val+1
  4334  0EFC  01AC               	clrf	___xxtofl@val+2
  4335  0EFD  01AD               	clrf	___xxtofl@val+3
  4336  0EFE  3000               	movlw	0
  4337  0EFF  3192  2252  318C   	fcall	___xxtofl
  4338  0F02  0020               	movlb	0	; select bank0
  4339  0F03  082D               	movf	?___xxtofl+3,w
  4340  0F04  00BF               	movwf	___flge@ff2+3
  4341  0F05  082C               	movf	?___xxtofl+2,w
  4342  0F06  00BE               	movwf	___flge@ff2+2
  4343  0F07  082B               	movf	?___xxtofl+1,w
  4344  0F08  00BD               	movwf	___flge@ff2+1
  4345  0F09  082A               	movf	?___xxtofl,w
  4346  0F0A  00BC               	movwf	___flge@ff2
  4347  0F0B  3191  21C7  318C   	fcall	___flge
  4348  0F0E  1803               	btfsc	3,0
  4349  0F0F  2F11               	goto	u6541
  4350  0F10  2F12               	goto	u6540
  4351  0F11                     u6541:
  4352  0F11  2F18               	goto	l6685
  4353  0F12                     u6540:
  4354  0F12                     l6683:
  4355                           
  4356                           ;main.c: 265:                 {;main.c: 266:                     u16TdVal = u16CalBuffer
      +                          [0];
  4357  0F12  0023               	movlb	3	; select bank3
  4358  0F13  0859               	movf	(main@u16CalBuffer+1)^(0+384),w
  4359  0F14  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4360  0F15  0858               	movf	main@u16CalBuffer^(0+384),w
  4361  0F16  00D2               	movwf	main@u16TdVal^(0+384)
  4362                           
  4363                           ;main.c: 267:                 }
  4364  0F17  2F4B               	goto	l897
  4365  0F18                     l6685:
  4366  0F18  0023               	movlb	3	; select bank3
  4367  0F19  085E               	movf	(main@u16CalBuffer^(0+384)+6),w
  4368  0F1A  0020               	movlb	0	; select bank0
  4369  0F1B  00AA               	movwf	___xxtofl@val
  4370  0F1C  0023               	movlb	3	; select bank3
  4371  0F1D  085F               	movf	((main@u16CalBuffer+1)^(0+384)+6),w
  4372  0F1E  0020               	movlb	0	; select bank0
  4373  0F1F  00AB               	movwf	___xxtofl@val+1
  4374  0F20  01AC               	clrf	___xxtofl@val+2
  4375  0F21  01AD               	clrf	___xxtofl@val+3
  4376  0F22  3000               	movlw	0
  4377  0F23  3192  2252  318C   	fcall	___xxtofl
  4378  0F26  0020               	movlb	0	; select bank0
  4379  0F27  082D               	movf	?___xxtofl+3,w
  4380  0F28  00BB               	movwf	___flge@ff1+3
  4381  0F29  082C               	movf	?___xxtofl+2,w
  4382  0F2A  00BA               	movwf	___flge@ff1+2
  4383  0F2B  082B               	movf	?___xxtofl+1,w
  4384  0F2C  00B9               	movwf	___flge@ff1+1
  4385  0F2D  082A               	movf	?___xxtofl,w
  4386  0F2E  00B8               	movwf	___flge@ff1
  4387  0F2F  0023               	movlb	3	; select bank3
  4388  0F30  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4389  0F31  0020               	movlb	0	; select bank0
  4390  0F32  00BF               	movwf	___flge@ff2+3
  4391  0F33  0023               	movlb	3	; select bank3
  4392  0F34  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4393  0F35  0020               	movlb	0	; select bank0
  4394  0F36  00BE               	movwf	___flge@ff2+2
  4395  0F37  0023               	movlb	3	; select bank3
  4396  0F38  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4397  0F39  0020               	movlb	0	; select bank0
  4398  0F3A  00BD               	movwf	___flge@ff2+1
  4399  0F3B  0023               	movlb	3	; select bank3
  4400  0F3C  0868               	movf	main@fTdVoltage^(0+384),w
  4401  0F3D  0020               	movlb	0	; select bank0
  4402  0F3E  00BC               	movwf	___flge@ff2
  4403  0F3F  3191  21C7  318C   	fcall	___flge
  4404  0F42  1803               	btfsc	3,0
  4405  0F43  2F45               	goto	u6551
  4406  0F44  2F46               	goto	u6550
  4407  0F45                     u6551:
  4408  0F45  2F4B               	goto	l897
  4409  0F46                     u6550:
  4410  0F46                     l6687:
  4411                           
  4412                           ;main.c: 269:                 {;main.c: 270:                     u16TdVal = u16CalBuffer
      +                          [2];
  4413  0F46  0023               	movlb	3	; select bank3
  4414  0F47  085D               	movf	((main@u16CalBuffer+1)^(0+384)+4),w
  4415  0F48  00D3               	movwf	(main@u16TdVal+1)^(0+384)
  4416  0F49  085C               	movf	(main@u16CalBuffer^(0+384)+4),w
  4417  0F4A  00D2               	movwf	main@u16TdVal^(0+384)
  4418  0F4B                     l897:	
  4419                           ;main.c: 272:             }
  4420                           
  4421                           
  4422                           ;main.c: 275:             modbusSlaveData.ModbusHoldingRegister[0U] = u16TdVal;
  4423  0F4B  0023               	movlb	3	; select bank3
  4424  0F4C  0853               	movf	(main@u16TdVal+1)^(0+384),w
  4425  0F4D  00A1               	movwf	(_modbusSlaveData+1)^(0+384)	;volatile
  4426  0F4E  0852               	movf	main@u16TdVal^(0+384),w
  4427  0F4F  00A0               	movwf	_modbusSlaveData^(0+384)	;volatile
  4428  0F50                     l6689:
  4429                           
  4430                           ;main.c: 276:             modbusSlaveData.ModbusHoldingRegister[1U] = (uint16_t)fTdVolta
      +                          ge;
  4431  0F50  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4432  0F51  0021               	movlb	1	; select bank1
  4433  0F52  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4434  0F53  0023               	movlb	3	; select bank3
  4435  0F54  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4436  0F55  0021               	movlb	1	; select bank1
  4437  0F56  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4438  0F57  0023               	movlb	3	; select bank3
  4439  0F58  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4440  0F59  0021               	movlb	1	; select bank1
  4441  0F5A  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4442  0F5B  0023               	movlb	3	; select bank3
  4443  0F5C  0868               	movf	main@fTdVoltage^(0+384),w
  4444  0F5D  0021               	movlb	1	; select bank1
  4445  0F5E  00D7               	movwf	___fltol@f1^(0+128)
  4446  0F5F  3190  20D6  318C   	fcall	___fltol
  4447  0F62  0021               	movlb	1	; select bank1
  4448  0F63  0858               	movf	(?___fltol+1)^(0+128),w
  4449  0F64  0023               	movlb	3	; select bank3
  4450  0F65  00A3               	movwf	((_modbusSlaveData+1)^(0+384)+2)	;volatile
  4451  0F66  0021               	movlb	1	; select bank1
  4452  0F67  0857               	movf	?___fltol^(0+128),w
  4453  0F68  0023               	movlb	3	; select bank3
  4454  0F69  00A2               	movwf	(_modbusSlaveData^(0+384)+2)	;volatile
  4455  0F6A                     l6691:
  4456                           
  4457                           ;main.c: 277:             modbusSlaveData.ModbusHoldingRegister[2U] = (uint16_t)(tempNTC
      +                           * 100.0f);
  4458  0F6A  0850               	movf	(_tempNTC+3)^(0+384),w
  4459  0F6B  0021               	movlb	1	; select bank1
  4460  0F6C  00AF               	movwf	(___flmul@a+3)^(0+128)
  4461  0F6D  0023               	movlb	3	; select bank3
  4462  0F6E  084F               	movf	(_tempNTC+2)^(0+384),w
  4463  0F6F  0021               	movlb	1	; select bank1
  4464  0F70  00AE               	movwf	(___flmul@a+2)^(0+128)
  4465  0F71  0023               	movlb	3	; select bank3
  4466  0F72  084E               	movf	(_tempNTC+1)^(0+384),w
  4467  0F73  0021               	movlb	1	; select bank1
  4468  0F74  00AD               	movwf	(___flmul@a+1)^(0+128)
  4469  0F75  0023               	movlb	3	; select bank3
  4470  0F76  084D               	movf	_tempNTC^(0+384),w
  4471  0F77  0021               	movlb	1	; select bank1
  4472  0F78  00AC               	movwf	___flmul@a^(0+128)
  4473  0F79  3042               	movlw	66
  4474  0F7A  00AB               	movwf	(___flmul@b+3)^(0+128)
  4475  0F7B  30C8               	movlw	200
  4476  0F7C  00AA               	movwf	(___flmul@b+2)^(0+128)
  4477  0F7D  3000               	movlw	0
  4478  0F7E  00A9               	movwf	(___flmul@b+1)^(0+128)
  4479  0F7F  3000               	movlw	0
  4480  0F80  00A8               	movwf	___flmul@b^(0+128)
  4481  0F81  3189  21A4  318C   	fcall	___flmul
  4482  0F84  0021               	movlb	1	; select bank1
  4483  0F85  082B               	movf	(?___flmul+3)^(0+128),w
  4484  0F86  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4485  0F87  082A               	movf	(?___flmul+2)^(0+128),w
  4486  0F88  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4487  0F89  0829               	movf	(?___flmul+1)^(0+128),w
  4488  0F8A  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4489  0F8B  0828               	movf	?___flmul^(0+128),w
  4490  0F8C  00D7               	movwf	___fltol@f1^(0+128)
  4491  0F8D  3190  20D6  318C   	fcall	___fltol
  4492  0F90  0021               	movlb	1	; select bank1
  4493  0F91  0858               	movf	(?___fltol+1)^(0+128),w
  4494  0F92  0023               	movlb	3	; select bank3
  4495  0F93  00A5               	movwf	((_modbusSlaveData+1)^(0+384)+4)	;volatile
  4496  0F94  0021               	movlb	1	; select bank1
  4497  0F95  0857               	movf	?___fltol^(0+128),w
  4498  0F96  0023               	movlb	3	; select bank3
  4499  0F97  00A4               	movwf	(_modbusSlaveData^(0+384)+4)	;volatile
  4500  0F98                     l6693:
  4501                           
  4502                           ;main.c: 278:             modbusSlaveData.ModbusHoldingRegister[3U] = (uint16_t)fNtcVolt
      +                          age;
  4503  0F98  0857               	movf	(main@fNtcVoltage+3)^(0+384),w
  4504  0F99  0021               	movlb	1	; select bank1
  4505  0F9A  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4506  0F9B  0023               	movlb	3	; select bank3
  4507  0F9C  0856               	movf	(main@fNtcVoltage+2)^(0+384),w
  4508  0F9D  0021               	movlb	1	; select bank1
  4509  0F9E  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4510  0F9F  0023               	movlb	3	; select bank3
  4511  0FA0  0855               	movf	(main@fNtcVoltage+1)^(0+384),w
  4512  0FA1  0021               	movlb	1	; select bank1
  4513  0FA2  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4514  0FA3  0023               	movlb	3	; select bank3
  4515  0FA4  0854               	movf	main@fNtcVoltage^(0+384),w
  4516  0FA5  0021               	movlb	1	; select bank1
  4517  0FA6  00D7               	movwf	___fltol@f1^(0+128)
  4518  0FA7  3190  20D6  318C   	fcall	___fltol
  4519  0FAA  0021               	movlb	1	; select bank1
  4520  0FAB  0858               	movf	(?___fltol+1)^(0+128),w
  4521  0FAC  0023               	movlb	3	; select bank3
  4522  0FAD  00A7               	movwf	((_modbusSlaveData+1)^(0+384)+6)	;volatile
  4523  0FAE  0021               	movlb	1	; select bank1
  4524  0FAF  0857               	movf	?___fltol^(0+128),w
  4525  0FB0  0023               	movlb	3	; select bank3
  4526  0FB1  00A6               	movwf	(_modbusSlaveData^(0+384)+6)	;volatile
  4527                           
  4528                           ;main.c: 285:         }
  4529  0FB2  2D58               	goto	l881
  4530  0FB3                     l6695:
  4531                           
  4532                           ;main.c: 287:         {;main.c: 288:             modbusSlaveData.ModbusHoldingRegister[0
      +                          U] = 0U;
  4533  0FB3  01A0               	clrf	_modbusSlaveData^(0+384)	;volatile
  4534  0FB4  01A1               	clrf	(_modbusSlaveData+1)^(0+384)	;volatile
  4535  0FB5                     l6697:
  4536                           
  4537                           ;main.c: 289:             modbusSlaveData.ModbusHoldingRegister[1U] = (uint16_t)fTdVolta
      +                          ge;
  4538  0FB5  086B               	movf	(main@fTdVoltage+3)^(0+384),w
  4539  0FB6  0021               	movlb	1	; select bank1
  4540  0FB7  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4541  0FB8  0023               	movlb	3	; select bank3
  4542  0FB9  086A               	movf	(main@fTdVoltage+2)^(0+384),w
  4543  0FBA  0021               	movlb	1	; select bank1
  4544  0FBB  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4545  0FBC  0023               	movlb	3	; select bank3
  4546  0FBD  0869               	movf	(main@fTdVoltage+1)^(0+384),w
  4547  0FBE  0021               	movlb	1	; select bank1
  4548  0FBF  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4549  0FC0  0023               	movlb	3	; select bank3
  4550  0FC1  0868               	movf	main@fTdVoltage^(0+384),w
  4551  0FC2  0021               	movlb	1	; select bank1
  4552  0FC3  00D7               	movwf	___fltol@f1^(0+128)
  4553  0FC4  3190  20D6  318C   	fcall	___fltol
  4554  0FC7  0021               	movlb	1	; select bank1
  4555  0FC8  0858               	movf	(?___fltol+1)^(0+128),w
  4556  0FC9  0023               	movlb	3	; select bank3
  4557  0FCA  00A3               	movwf	((_modbusSlaveData+1)^(0+384)+2)	;volatile
  4558  0FCB  0021               	movlb	1	; select bank1
  4559  0FCC  0857               	movf	?___fltol^(0+128),w
  4560  0FCD  0023               	movlb	3	; select bank3
  4561  0FCE  00A2               	movwf	(_modbusSlaveData^(0+384)+2)	;volatile
  4562  0FCF                     l6699:
  4563                           
  4564                           ;main.c: 290:             modbusSlaveData.ModbusHoldingRegister[2U] = (uint16_t)(tempNTC
      +                           * 100.0f);
  4565  0FCF  0850               	movf	(_tempNTC+3)^(0+384),w
  4566  0FD0  0021               	movlb	1	; select bank1
  4567  0FD1  00AF               	movwf	(___flmul@a+3)^(0+128)
  4568  0FD2  0023               	movlb	3	; select bank3
  4569  0FD3  084F               	movf	(_tempNTC+2)^(0+384),w
  4570  0FD4  0021               	movlb	1	; select bank1
  4571  0FD5  00AE               	movwf	(___flmul@a+2)^(0+128)
  4572  0FD6  0023               	movlb	3	; select bank3
  4573  0FD7  084E               	movf	(_tempNTC+1)^(0+384),w
  4574  0FD8  0021               	movlb	1	; select bank1
  4575  0FD9  00AD               	movwf	(___flmul@a+1)^(0+128)
  4576  0FDA  0023               	movlb	3	; select bank3
  4577  0FDB  084D               	movf	_tempNTC^(0+384),w
  4578  0FDC  0021               	movlb	1	; select bank1
  4579  0FDD  00AC               	movwf	___flmul@a^(0+128)
  4580  0FDE  3042               	movlw	66
  4581  0FDF  00AB               	movwf	(___flmul@b+3)^(0+128)
  4582  0FE0  30C8               	movlw	200
  4583  0FE1  00AA               	movwf	(___flmul@b+2)^(0+128)
  4584  0FE2  3000               	movlw	0
  4585  0FE3  00A9               	movwf	(___flmul@b+1)^(0+128)
  4586  0FE4  3000               	movlw	0
  4587  0FE5  00A8               	movwf	___flmul@b^(0+128)
  4588  0FE6  3189  21A4  318C   	fcall	___flmul
  4589  0FE9  0021               	movlb	1	; select bank1
  4590  0FEA  082B               	movf	(?___flmul+3)^(0+128),w
  4591  0FEB  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4592  0FEC  082A               	movf	(?___flmul+2)^(0+128),w
  4593  0FED  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4594  0FEE  0829               	movf	(?___flmul+1)^(0+128),w
  4595  0FEF  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4596  0FF0  0828               	movf	?___flmul^(0+128),w
  4597  0FF1  00D7               	movwf	___fltol@f1^(0+128)
  4598  0FF2  3190  20D6  318C   	fcall	___fltol
  4599  0FF5  0021               	movlb	1	; select bank1
  4600  0FF6  0858               	movf	(?___fltol+1)^(0+128),w
  4601  0FF7  0023               	movlb	3	; select bank3
  4602  0FF8  00A5               	movwf	((_modbusSlaveData+1)^(0+384)+4)	;volatile
  4603  0FF9  0021               	movlb	1	; select bank1
  4604  0FFA  0857               	movf	?___fltol^(0+128),w
  4605  0FFB  0023               	movlb	3	; select bank3
  4606  0FFC  00A4               	movwf	(_modbusSlaveData^(0+384)+4)	;volatile
  4607  0FFD  2F98               	goto	l6693
  4608  0FFE  3180  2848         	ljmp	start
  4609  1000                     __end_of_main:
  4610                           
  4611                           	psect	text1
  4612  12FF                     __ptext1:	
  4613 ;; *************** function _map *****************
  4614 ;; Defined at:
  4615 ;;		line 100 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  x               4    0[BANK2 ] float 
  4618 ;;  in_min          4    4[BANK2 ] long 
  4619 ;;  in_max          4    8[BANK2 ] long 
  4620 ;;  out_min         4   12[BANK2 ] long 
  4621 ;;  out_max         4   16[BANK2 ] long 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  4    0[BANK2 ] long 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4633 ;;      Params:         0       0       0      20       0       0       0       0
  4634 ;;      Locals:         0       0       4       0       0       0       0       0
  4635 ;;      Temps:          0       0       8       0       0       0       0       0
  4636 ;;      Totals:         0       0      12      20       0       0       0       0
  4637 ;;Total ram usage:       32 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 6
  4640 ;; This function calls:
  4641 ;;		___fladd
  4642 ;;		___fldiv
  4643 ;;		___flmul
  4644 ;;		___flsub
  4645 ;;		___fltol
  4646 ;;		___xxtofl
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652  12FF                     _map:	
  4653                           ;psect for function _map
  4654                           
  4655  12FF                     l6503:	
  4656                           ;incstack = 0
  4657                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4658                           
  4659                           
  4660                           ;main.c: 101:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  4661  12FF  0022               	movlb	2	; select bank2
  4662  1300  0823               	movf	(map@x+3)^(0+256),w
  4663  1301  0021               	movlb	1	; select bank1
  4664  1302  00A7               	movwf	(___flsub@b+3)^(0+128)
  4665  1303  0022               	movlb	2	; select bank2
  4666  1304  0822               	movf	(map@x+2)^(0+256),w
  4667  1305  0021               	movlb	1	; select bank1
  4668  1306  00A6               	movwf	(___flsub@b+2)^(0+128)
  4669  1307  0022               	movlb	2	; select bank2
  4670  1308  0821               	movf	(map@x+1)^(0+256),w
  4671  1309  0021               	movlb	1	; select bank1
  4672  130A  00A5               	movwf	(___flsub@b+1)^(0+128)
  4673  130B  0022               	movlb	2	; select bank2
  4674  130C  0820               	movf	map@x^(0+256),w
  4675  130D  0021               	movlb	1	; select bank1
  4676  130E  00A4               	movwf	___flsub@b^(0+128)
  4677  130F  0022               	movlb	2	; select bank2
  4678  1310  0827               	movf	(map@in_min+3)^(0+256),w
  4679  1311  0020               	movlb	0	; select bank0
  4680  1312  00AD               	movwf	___xxtofl@val+3
  4681  1313  0022               	movlb	2	; select bank2
  4682  1314  0826               	movf	(map@in_min+2)^(0+256),w
  4683  1315  0020               	movlb	0	; select bank0
  4684  1316  00AC               	movwf	___xxtofl@val+2
  4685  1317  0022               	movlb	2	; select bank2
  4686  1318  0825               	movf	(map@in_min+1)^(0+256),w
  4687  1319  0020               	movlb	0	; select bank0
  4688  131A  00AB               	movwf	___xxtofl@val+1
  4689  131B  0022               	movlb	2	; select bank2
  4690  131C  0824               	movf	map@in_min^(0+256),w
  4691  131D  0020               	movlb	0	; select bank0
  4692  131E  00AA               	movwf	___xxtofl@val
  4693  131F  3001               	movlw	1
  4694  1320  3192  2252  3192   	fcall	___xxtofl
  4695  1323  0020               	movlb	0	; select bank0
  4696  1324  082D               	movf	?___xxtofl+3,w
  4697  1325  0021               	movlb	1	; select bank1
  4698  1326  00A3               	movwf	(___flsub@a+3)^(0+128)
  4699  1327  0020               	movlb	0	; select bank0
  4700  1328  082C               	movf	?___xxtofl+2,w
  4701  1329  0021               	movlb	1	; select bank1
  4702  132A  00A2               	movwf	(___flsub@a+2)^(0+128)
  4703  132B  0020               	movlb	0	; select bank0
  4704  132C  082B               	movf	?___xxtofl+1,w
  4705  132D  0021               	movlb	1	; select bank1
  4706  132E  00A1               	movwf	(___flsub@a+1)^(0+128)
  4707  132F  0020               	movlb	0	; select bank0
  4708  1330  082A               	movf	?___xxtofl,w
  4709  1331  0021               	movlb	1	; select bank1
  4710  1332  00A0               	movwf	___flsub@a^(0+128)
  4711  1333  319E  26D9  3192   	fcall	___flsub
  4712  1336  0021               	movlb	1	; select bank1
  4713  1337  0823               	movf	(?___flsub+3)^(0+128),w
  4714  1338  00AF               	movwf	(___flmul@a+3)^(0+128)
  4715  1339  0822               	movf	(?___flsub+2)^(0+128),w
  4716  133A  00AE               	movwf	(___flmul@a+2)^(0+128)
  4717  133B  0821               	movf	(?___flsub+1)^(0+128),w
  4718  133C  00AD               	movwf	(___flmul@a+1)^(0+128)
  4719  133D  0820               	movf	?___flsub^(0+128),w
  4720  133E  00AC               	movwf	___flmul@a^(0+128)
  4721  133F  0022               	movlb	2	; select bank2
  4722  1340  082C               	movf	map@out_min^(0+256),w
  4723  1341  0230               	subwf	map@out_max^(0+256),w
  4724  1342  0021               	movlb	1	; select bank1
  4725  1343  00E2               	movwf	??_map^(0+128)
  4726  1344  0022               	movlb	2	; select bank2
  4727  1345  082D               	movf	(map@out_min+1)^(0+256),w
  4728  1346  3B31               	subwfb	(map@out_max+1)^(0+256),w
  4729  1347  0021               	movlb	1	; select bank1
  4730  1348  00E3               	movwf	(??_map^(0+128)+1)
  4731  1349  0022               	movlb	2	; select bank2
  4732  134A  082E               	movf	(map@out_min+2)^(0+256),w
  4733  134B  3B32               	subwfb	(map@out_max+2)^(0+256),w
  4734  134C  0021               	movlb	1	; select bank1
  4735  134D  00E4               	movwf	(??_map^(0+128)+2)
  4736  134E  0022               	movlb	2	; select bank2
  4737  134F  082F               	movf	(map@out_min+3)^(0+256),w
  4738  1350  3B33               	subwfb	(map@out_max+3)^(0+256),w
  4739  1351  0021               	movlb	1	; select bank1
  4740  1352  00E5               	movwf	(??_map^(0+128)+3)
  4741  1353  0865               	movf	(??_map+3)^(0+128),w
  4742  1354  0020               	movlb	0	; select bank0
  4743  1355  00AD               	movwf	___xxtofl@val+3
  4744  1356  0021               	movlb	1	; select bank1
  4745  1357  0864               	movf	(??_map+2)^(0+128),w
  4746  1358  0020               	movlb	0	; select bank0
  4747  1359  00AC               	movwf	___xxtofl@val+2
  4748  135A  0021               	movlb	1	; select bank1
  4749  135B  0863               	movf	(??_map+1)^(0+128),w
  4750  135C  0020               	movlb	0	; select bank0
  4751  135D  00AB               	movwf	___xxtofl@val+1
  4752  135E  0021               	movlb	1	; select bank1
  4753  135F  0862               	movf	??_map^(0+128),w
  4754  1360  0020               	movlb	0	; select bank0
  4755  1361  00AA               	movwf	___xxtofl@val
  4756  1362  3001               	movlw	1
  4757  1363  3192  2252  3192   	fcall	___xxtofl
  4758  1366  0020               	movlb	0	; select bank0
  4759  1367  082D               	movf	?___xxtofl+3,w
  4760  1368  0021               	movlb	1	; select bank1
  4761  1369  00AB               	movwf	(___flmul@b+3)^(0+128)
  4762  136A  0020               	movlb	0	; select bank0
  4763  136B  082C               	movf	?___xxtofl+2,w
  4764  136C  0021               	movlb	1	; select bank1
  4765  136D  00AA               	movwf	(___flmul@b+2)^(0+128)
  4766  136E  0020               	movlb	0	; select bank0
  4767  136F  082B               	movf	?___xxtofl+1,w
  4768  1370  0021               	movlb	1	; select bank1
  4769  1371  00A9               	movwf	(___flmul@b+1)^(0+128)
  4770  1372  0020               	movlb	0	; select bank0
  4771  1373  082A               	movf	?___xxtofl,w
  4772  1374  0021               	movlb	1	; select bank1
  4773  1375  00A8               	movwf	___flmul@b^(0+128)
  4774  1376  3189  21A4  3192   	fcall	___flmul
  4775  1379  0021               	movlb	1	; select bank1
  4776  137A  082B               	movf	(?___flmul+3)^(0+128),w
  4777  137B  00C4               	movwf	(___fldiv@b+3)^(0+128)
  4778  137C  082A               	movf	(?___flmul+2)^(0+128),w
  4779  137D  00C3               	movwf	(___fldiv@b+2)^(0+128)
  4780  137E  0829               	movf	(?___flmul+1)^(0+128),w
  4781  137F  00C2               	movwf	(___fldiv@b+1)^(0+128)
  4782  1380  0828               	movf	?___flmul^(0+128),w
  4783  1381  00C1               	movwf	___fldiv@b^(0+128)
  4784  1382  0022               	movlb	2	; select bank2
  4785  1383  0824               	movf	map@in_min^(0+256),w
  4786  1384  0228               	subwf	map@in_max^(0+256),w
  4787  1385  0021               	movlb	1	; select bank1
  4788  1386  00E6               	movwf	(??_map+4)^(0+128)
  4789  1387  0022               	movlb	2	; select bank2
  4790  1388  0825               	movf	(map@in_min+1)^(0+256),w
  4791  1389  3B29               	subwfb	(map@in_max+1)^(0+256),w
  4792  138A  0021               	movlb	1	; select bank1
  4793  138B  00E7               	movwf	((??_map+4)^(0+128)+1)
  4794  138C  0022               	movlb	2	; select bank2
  4795  138D  0826               	movf	(map@in_min+2)^(0+256),w
  4796  138E  3B2A               	subwfb	(map@in_max+2)^(0+256),w
  4797  138F  0021               	movlb	1	; select bank1
  4798  1390  00E8               	movwf	((??_map+4)^(0+128)+2)
  4799  1391  0022               	movlb	2	; select bank2
  4800  1392  0827               	movf	(map@in_min+3)^(0+256),w
  4801  1393  3B2B               	subwfb	(map@in_max+3)^(0+256),w
  4802  1394  0021               	movlb	1	; select bank1
  4803  1395  00E9               	movwf	((??_map+4)^(0+128)+3)
  4804  1396  0869               	movf	(??_map+7)^(0+128),w
  4805  1397  0020               	movlb	0	; select bank0
  4806  1398  00AD               	movwf	___xxtofl@val+3
  4807  1399  0021               	movlb	1	; select bank1
  4808  139A  0868               	movf	(??_map+6)^(0+128),w
  4809  139B  0020               	movlb	0	; select bank0
  4810  139C  00AC               	movwf	___xxtofl@val+2
  4811  139D  0021               	movlb	1	; select bank1
  4812  139E  0867               	movf	(??_map+5)^(0+128),w
  4813  139F  0020               	movlb	0	; select bank0
  4814  13A0  00AB               	movwf	___xxtofl@val+1
  4815  13A1  0021               	movlb	1	; select bank1
  4816  13A2  0866               	movf	(??_map+4)^(0+128),w
  4817  13A3  0020               	movlb	0	; select bank0
  4818  13A4  00AA               	movwf	___xxtofl@val
  4819  13A5  3001               	movlw	1
  4820  13A6  3192  2252  3192   	fcall	___xxtofl
  4821  13A9  0020               	movlb	0	; select bank0
  4822  13AA  082D               	movf	?___xxtofl+3,w
  4823  13AB  0021               	movlb	1	; select bank1
  4824  13AC  00C0               	movwf	(___fldiv@a+3)^(0+128)
  4825  13AD  0020               	movlb	0	; select bank0
  4826  13AE  082C               	movf	?___xxtofl+2,w
  4827  13AF  0021               	movlb	1	; select bank1
  4828  13B0  00BF               	movwf	(___fldiv@a+2)^(0+128)
  4829  13B1  0020               	movlb	0	; select bank0
  4830  13B2  082B               	movf	?___xxtofl+1,w
  4831  13B3  0021               	movlb	1	; select bank1
  4832  13B4  00BE               	movwf	(___fldiv@a+1)^(0+128)
  4833  13B5  0020               	movlb	0	; select bank0
  4834  13B6  082A               	movf	?___xxtofl,w
  4835  13B7  0021               	movlb	1	; select bank1
  4836  13B8  00BD               	movwf	___fldiv@a^(0+128)
  4837  13B9  3186  261F  3192   	fcall	___fldiv
  4838  13BC  0021               	movlb	1	; select bank1
  4839  13BD  0840               	movf	(?___fldiv+3)^(0+128),w
  4840  13BE  00ED               	movwf	(_map$2275+3)^(0+128)
  4841  13BF  083F               	movf	(?___fldiv+2)^(0+128),w
  4842  13C0  00EC               	movwf	(_map$2275+2)^(0+128)
  4843  13C1  083E               	movf	(?___fldiv+1)^(0+128),w
  4844  13C2  00EB               	movwf	(_map$2275+1)^(0+128)
  4845  13C3  083D               	movf	?___fldiv^(0+128),w
  4846  13C4  00EA               	movwf	_map$2275^(0+128)
  4847                           
  4848                           ;main.c: 101:   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  4849  13C5  086D               	movf	(_map$2275+3)^(0+128),w
  4850  13C6  0020               	movlb	0	; select bank0
  4851  13C7  00BF               	movwf	___fladd@a+3
  4852  13C8  0021               	movlb	1	; select bank1
  4853  13C9  086C               	movf	(_map$2275+2)^(0+128),w
  4854  13CA  0020               	movlb	0	; select bank0
  4855  13CB  00BE               	movwf	___fladd@a+2
  4856  13CC  0021               	movlb	1	; select bank1
  4857  13CD  086B               	movf	(_map$2275+1)^(0+128),w
  4858  13CE  0020               	movlb	0	; select bank0
  4859  13CF  00BD               	movwf	___fladd@a+1
  4860  13D0  0021               	movlb	1	; select bank1
  4861  13D1  086A               	movf	_map$2275^(0+128),w
  4862  13D2  0020               	movlb	0	; select bank0
  4863  13D3  00BC               	movwf	___fladd@a
  4864  13D4  0022               	movlb	2	; select bank2
  4865  13D5  082F               	movf	(map@out_min+3)^(0+256),w
  4866  13D6  0020               	movlb	0	; select bank0
  4867  13D7  00AD               	movwf	___xxtofl@val+3
  4868  13D8  0022               	movlb	2	; select bank2
  4869  13D9  082E               	movf	(map@out_min+2)^(0+256),w
  4870  13DA  0020               	movlb	0	; select bank0
  4871  13DB  00AC               	movwf	___xxtofl@val+2
  4872  13DC  0022               	movlb	2	; select bank2
  4873  13DD  082D               	movf	(map@out_min+1)^(0+256),w
  4874  13DE  0020               	movlb	0	; select bank0
  4875  13DF  00AB               	movwf	___xxtofl@val+1
  4876  13E0  0022               	movlb	2	; select bank2
  4877  13E1  082C               	movf	map@out_min^(0+256),w
  4878  13E2  0020               	movlb	0	; select bank0
  4879  13E3  00AA               	movwf	___xxtofl@val
  4880  13E4  3001               	movlw	1
  4881  13E5  3192  2252  3192   	fcall	___xxtofl
  4882  13E8  0020               	movlb	0	; select bank0
  4883  13E9  082D               	movf	?___xxtofl+3,w
  4884  13EA  00BB               	movwf	___fladd@b+3
  4885  13EB  082C               	movf	?___xxtofl+2,w
  4886  13EC  00BA               	movwf	___fladd@b+2
  4887  13ED  082B               	movf	?___xxtofl+1,w
  4888  13EE  00B9               	movwf	___fladd@b+1
  4889  13EF  082A               	movf	?___xxtofl,w
  4890  13F0  00B8               	movwf	___fladd@b
  4891  13F1  3195  25C8  3192   	fcall	___fladd
  4892  13F4  0020               	movlb	0	; select bank0
  4893  13F5  083B               	movf	?___fladd+3,w
  4894  13F6  0021               	movlb	1	; select bank1
  4895  13F7  00DA               	movwf	(___fltol@f1+3)^(0+128)
  4896  13F8  0020               	movlb	0	; select bank0
  4897  13F9  083A               	movf	?___fladd+2,w
  4898  13FA  0021               	movlb	1	; select bank1
  4899  13FB  00D9               	movwf	(___fltol@f1+2)^(0+128)
  4900  13FC  0020               	movlb	0	; select bank0
  4901  13FD  0839               	movf	?___fladd+1,w
  4902  13FE  0021               	movlb	1	; select bank1
  4903  13FF  00D8               	movwf	(___fltol@f1+1)^(0+128)
  4904  1400  0020               	movlb	0	; select bank0
  4905  1401  0838               	movf	?___fladd,w
  4906  1402  0021               	movlb	1	; select bank1
  4907  1403  00D7               	movwf	___fltol@f1^(0+128)
  4908  1404  3190  20D6  3192   	fcall	___fltol
  4909  1407  0021               	movlb	1	; select bank1
  4910  1408  085A               	movf	(?___fltol+3)^(0+128),w
  4911  1409  0022               	movlb	2	; select bank2
  4912  140A  00A3               	movwf	(?_map+3)^(0+256)
  4913  140B  0021               	movlb	1	; select bank1
  4914  140C  0859               	movf	(?___fltol+2)^(0+128),w
  4915  140D  0022               	movlb	2	; select bank2
  4916  140E  00A2               	movwf	(?_map+2)^(0+256)
  4917  140F  0021               	movlb	1	; select bank1
  4918  1410  0858               	movf	(?___fltol+1)^(0+128),w
  4919  1411  0022               	movlb	2	; select bank2
  4920  1412  00A1               	movwf	(?_map+1)^(0+256)
  4921  1413  0021               	movlb	1	; select bank1
  4922  1414  0857               	movf	?___fltol^(0+128),w
  4923  1415  0022               	movlb	2	; select bank2
  4924  1416  00A0               	movwf	?_map^(0+256)
  4925  1417                     l848:
  4926  1417  0008               	return
  4927  1418                     __end_of_map:
  4928                           
  4929                           	psect	text2
  4930  10D6                     __ptext2:	
  4931 ;; *************** function ___fltol *****************
  4932 ;; Defined at:
  4933 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  f1              4   55[BANK1 ] long 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  exp1            1   65[BANK1 ] unsigned char 
  4938 ;;  sign1           1   64[BANK1 ] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  4   55[BANK1 ] long 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4948 ;;      Params:         0       0       4       0       0       0       0       0
  4949 ;;      Locals:         0       0       2       0       0       0       0       0
  4950 ;;      Temps:          0       0       5       0       0       0       0       0
  4951 ;;      Totals:         0       0      11       0       0       0       0       0
  4952 ;;Total ram usage:       11 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 4
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_map
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963  10D6                     ___fltol:	
  4964                           ;psect for function ___fltol
  4965                           
  4966  10D6                     l6465:	
  4967                           ;incstack = 0
  4968                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4969                           
  4970  10D6  1003               	clrc
  4971  10D7  0021               	movlb	1	; select bank1
  4972  10D8  0D59               	rlf	(___fltol@f1+2)^(0+128),w
  4973  10D9  0D5A               	rlf	(___fltol@f1+3)^(0+128),w
  4974  10DA  00DB               	movwf	??___fltol^(0+128)
  4975  10DB  085B               	movf	??___fltol^(0+128),w
  4976  10DC  00E1               	movwf	___fltol@exp1^(0+128)
  4977  10DD  0861               	movf	___fltol@exp1^(0+128),w
  4978  10DE  1D03               	btfss	3,2
  4979  10DF  28E1               	goto	u6111
  4980  10E0  28E2               	goto	u6110
  4981  10E1                     u6111:
  4982  10E1  28EB               	goto	l6471
  4983  10E2                     u6110:
  4984  10E2                     l6467:
  4985  10E2  3000               	movlw	0
  4986  10E3  00DA               	movwf	(?___fltol+3)^(0+128)
  4987  10E4  3000               	movlw	0
  4988  10E5  00D9               	movwf	(?___fltol+2)^(0+128)
  4989  10E6  3000               	movlw	0
  4990  10E7  00D8               	movwf	(?___fltol+1)^(0+128)
  4991  10E8  3000               	movlw	0
  4992  10E9  00D7               	movwf	?___fltol^(0+128)
  4993  10EA  294A               	goto	l1247
  4994  10EB                     l6471:
  4995  10EB  0857               	movf	___fltol@f1^(0+128),w
  4996  10EC  00DB               	movwf	??___fltol^(0+128)
  4997  10ED  0858               	movf	(___fltol@f1+1)^(0+128),w
  4998  10EE  00DC               	movwf	(??___fltol^(0+128)+1)
  4999  10EF  0859               	movf	(___fltol@f1+2)^(0+128),w
  5000  10F0  00DD               	movwf	(??___fltol^(0+128)+2)
  5001  10F1  085A               	movf	(___fltol@f1+3)^(0+128),w
  5002  10F2  00DE               	movwf	(??___fltol^(0+128)+3)
  5003  10F3  301F               	movlw	31
  5004  10F4                     u6125:
  5005  10F4  36DE               	lsrf	(??___fltol^(0+128)+3),f
  5006  10F5  0CDD               	rrf	(??___fltol^(0+128)+2),f
  5007  10F6  0CDC               	rrf	(??___fltol^(0+128)+1),f
  5008  10F7  0CDB               	rrf	??___fltol^(0+128),f
  5009  10F8                     u6120:
  5010  10F8  0B89               	decfsz	9,f
  5011  10F9  28F4               	goto	u6125
  5012  10FA  085B               	movf	??___fltol^(0+128),w
  5013  10FB  00DF               	movwf	(??___fltol+4)^(0+128)
  5014  10FC  085F               	movf	(??___fltol+4)^(0+128),w
  5015  10FD  00E0               	movwf	___fltol@sign1^(0+128)
  5016  10FE                     l6473:
  5017  10FE  17D9               	bsf	(___fltol@f1^(0+128)+2),7
  5018  10FF                     l6475:
  5019  10FF  30FF               	movlw	255
  5020  1100  05D7               	andwf	___fltol@f1^(0+128),f
  5021  1101  30FF               	movlw	255
  5022  1102  05D8               	andwf	(___fltol@f1+1)^(0+128),f
  5023  1103  30FF               	movlw	255
  5024  1104  05D9               	andwf	(___fltol@f1+2)^(0+128),f
  5025  1105  3000               	movlw	0
  5026  1106  05DA               	andwf	(___fltol@f1+3)^(0+128),f
  5027  1107                     l6477:
  5028  1107  3096               	movlw	150
  5029  1108  02E1               	subwf	___fltol@exp1^(0+128),f
  5030  1109                     l6479:
  5031  1109  1FE1               	btfss	___fltol@exp1^(0+128),7
  5032  110A  290C               	goto	u6131
  5033  110B  290D               	goto	u6130
  5034  110C                     u6131:
  5035  110C  2925               	goto	l6489
  5036  110D                     u6130:
  5037  110D                     l6481:
  5038  110D  0861               	movf	___fltol@exp1^(0+128),w
  5039  110E  3A80               	xorlw	128
  5040  110F  3E97               	addlw	151
  5041  1110  1803               	skipnc
  5042  1111  2913               	goto	u6141
  5043  1112  2914               	goto	u6140
  5044  1113                     u6141:
  5045  1113  2915               	goto	l6487
  5046  1114                     u6140:
  5047  1114  28E2               	goto	l6467
  5048  1115                     l6487:
  5049  1115  3001               	movlw	1
  5050  1116                     u6155:
  5051  1116  36DA               	lsrf	(___fltol@f1+3)^(0+128),f
  5052  1117  0CD9               	rrf	(___fltol@f1+2)^(0+128),f
  5053  1118  0CD8               	rrf	(___fltol@f1+1)^(0+128),f
  5054  1119  0CD7               	rrf	___fltol@f1^(0+128),f
  5055  111A  0B89               	decfsz	9,f
  5056  111B  2916               	goto	u6155
  5057  111C  3001               	movlw	1
  5058  111D  00DB               	movwf	??___fltol^(0+128)
  5059  111E  085B               	movf	??___fltol^(0+128),w
  5060  111F  07E1               	addwf	___fltol@exp1^(0+128),f
  5061  1120  1D03               	btfss	3,2
  5062  1121  2923               	goto	u6161
  5063  1122  2924               	goto	u6160
  5064  1123                     u6161:
  5065  1123  2915               	goto	l6487
  5066  1124                     u6160:
  5067  1124  293A               	goto	l6497
  5068  1125                     l6489:
  5069  1125  3020               	movlw	32
  5070  1126  0261               	subwf	___fltol@exp1^(0+128),w
  5071  1127  1C03               	skipc
  5072  1128  292A               	goto	u6171
  5073  1129  292B               	goto	u6170
  5074  112A                     u6171:
  5075  112A  2935               	goto	l1254
  5076  112B                     u6170:
  5077  112B  28E2               	goto	l6467
  5078  112C                     l6495:
  5079  112C  3001               	movlw	1
  5080  112D                     u6185:
  5081  112D  35D7               	lslf	___fltol@f1^(0+128),f
  5082  112E  0DD8               	rlf	(___fltol@f1+1)^(0+128),f
  5083  112F  0DD9               	rlf	(___fltol@f1+2)^(0+128),f
  5084  1130  0DDA               	rlf	(___fltol@f1+3)^(0+128),f
  5085  1131  0B89               	decfsz	9,f
  5086  1132  292D               	goto	u6185
  5087  1133  3001               	movlw	1
  5088  1134  02E1               	subwf	___fltol@exp1^(0+128),f
  5089  1135                     l1254:
  5090  1135  0861               	movf	___fltol@exp1^(0+128),w
  5091  1136  1D03               	btfss	3,2
  5092  1137  2939               	goto	u6191
  5093  1138  293A               	goto	u6190
  5094  1139                     u6191:
  5095  1139  292C               	goto	l6495
  5096  113A                     u6190:
  5097  113A                     l6497:
  5098  113A  0860               	movf	___fltol@sign1^(0+128),w
  5099  113B  1903               	btfsc	3,2
  5100  113C  293E               	goto	u6201
  5101  113D  293F               	goto	u6200
  5102  113E                     u6201:
  5103  113E  294A               	goto	l1257
  5104  113F                     u6200:
  5105  113F                     l6499:
  5106  113F  09D7               	comf	___fltol@f1^(0+128),f
  5107  1140  09D8               	comf	(___fltol@f1+1)^(0+128),f
  5108  1141  09D9               	comf	(___fltol@f1+2)^(0+128),f
  5109  1142  09DA               	comf	(___fltol@f1+3)^(0+128),f
  5110  1143  0AD7               	incf	___fltol@f1^(0+128),f
  5111  1144  1903               	skipnz
  5112  1145  0AD8               	incf	(___fltol@f1+1)^(0+128),f
  5113  1146  1903               	skipnz
  5114  1147  0AD9               	incf	(___fltol@f1+2)^(0+128),f
  5115  1148  1903               	skipnz
  5116  1149  0ADA               	incf	(___fltol@f1+3)^(0+128),f
  5117  114A                     l1257:
  5118  114A                     l1247:
  5119  114A  0008               	return
  5120  114B                     __end_of___fltol:
  5121                           
  5122                           	psect	text3
  5123  0811                     __ptext3:	
  5124 ;; *************** function _get_ntc_temperature *****************
  5125 ;; Defined at:
  5126 ;;		line 133 in file "main.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  adcVoltage      4   67[BANK1 ] float 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  temp            4   74[BANK2 ] float 
  5131 ;;  rntc            4   66[BANK2 ] float 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5141 ;;      Params:         0       0       4       0       0       0       0       0
  5142 ;;      Locals:         0       0       0      12       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0
  5144 ;;      Totals:         0       0       4      12       0       0       0       0
  5145 ;;Total ram usage:       16 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; Hardware stack levels required when called: 7
  5148 ;; This function calls:
  5149 ;;		___fladd
  5150 ;;		___fldiv
  5151 ;;		___flsub
  5152 ;;		_logf
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158  0811                     _get_ntc_temperature:	
  5159                           ;psect for function _get_ntc_temperature
  5160                           
  5161  0811                     l6527:	
  5162                           ;incstack = 0
  5163                           ; Regs used in _get_ntc_temperature: [wreg+status,2+status,0+pclath+cstack]
  5164                           
  5165                           
  5166                           ;main.c: 133: void get_ntc_temperature(float adcVoltage);main.c: 134: {;main.c: 135:    
      +                           adcVoltage /= 1000.0f;
  5167  0811  3044               	movlw	68
  5168  0812  0021               	movlb	1	; select bank1
  5169  0813  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5170  0814  307A               	movlw	122
  5171  0815  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5172  0816  3000               	movlw	0
  5173  0817  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5174  0818  3000               	movlw	0
  5175  0819  00BD               	movwf	___fldiv@a^(0+128)
  5176  081A  0866               	movf	(get_ntc_temperature@adcVoltage+3)^(0+128),w
  5177  081B  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5178  081C  0865               	movf	(get_ntc_temperature@adcVoltage+2)^(0+128),w
  5179  081D  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5180  081E  0864               	movf	(get_ntc_temperature@adcVoltage+1)^(0+128),w
  5181  081F  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5182  0820  0863               	movf	get_ntc_temperature@adcVoltage^(0+128),w
  5183  0821  00C1               	movwf	___fldiv@b^(0+128)
  5184  0822  3186  261F  3188   	fcall	___fldiv
  5185  0825  0021               	movlb	1	; select bank1
  5186  0826  0840               	movf	(?___fldiv+3)^(0+128),w
  5187  0827  00E6               	movwf	(get_ntc_temperature@adcVoltage+3)^(0+128)
  5188  0828  083F               	movf	(?___fldiv+2)^(0+128),w
  5189  0829  00E5               	movwf	(get_ntc_temperature@adcVoltage+2)^(0+128)
  5190  082A  083E               	movf	(?___fldiv+1)^(0+128),w
  5191  082B  00E4               	movwf	(get_ntc_temperature@adcVoltage+1)^(0+128)
  5192  082C  083D               	movf	?___fldiv^(0+128),w
  5193  082D  00E3               	movwf	get_ntc_temperature@adcVoltage^(0+128)
  5194                           
  5195                           ;main.c: 136:     float rntc = (float)33000.0f / (((float)5.0 / (float)adcVoltage ) - 1.
      +                          0f);
  5196  082E  30BF               	movlw	191
  5197  082F  0020               	movlb	0	; select bank0
  5198  0830  00BB               	movwf	___fladd@b+3
  5199  0831  3080               	movlw	128
  5200  0832  00BA               	movwf	___fladd@b+2
  5201  0833  3000               	movlw	0
  5202  0834  00B9               	movwf	___fladd@b+1
  5203  0835  3000               	movlw	0
  5204  0836  00B8               	movwf	___fladd@b
  5205  0837  0021               	movlb	1	; select bank1
  5206  0838  0866               	movf	(get_ntc_temperature@adcVoltage+3)^(0+128),w
  5207  0839  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5208  083A  0865               	movf	(get_ntc_temperature@adcVoltage+2)^(0+128),w
  5209  083B  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5210  083C  0864               	movf	(get_ntc_temperature@adcVoltage+1)^(0+128),w
  5211  083D  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5212  083E  0863               	movf	get_ntc_temperature@adcVoltage^(0+128),w
  5213  083F  00BD               	movwf	___fldiv@a^(0+128)
  5214  0840  3040               	movlw	64
  5215  0841  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5216  0842  30A0               	movlw	160
  5217  0843  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5218  0844  3000               	movlw	0
  5219  0845  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5220  0846  3000               	movlw	0
  5221  0847  00C1               	movwf	___fldiv@b^(0+128)
  5222  0848  3186  261F  3188   	fcall	___fldiv
  5223  084B  0021               	movlb	1	; select bank1
  5224  084C  0840               	movf	(?___fldiv+3)^(0+128),w
  5225  084D  0020               	movlb	0	; select bank0
  5226  084E  00BF               	movwf	___fladd@a+3
  5227  084F  0021               	movlb	1	; select bank1
  5228  0850  083F               	movf	(?___fldiv+2)^(0+128),w
  5229  0851  0020               	movlb	0	; select bank0
  5230  0852  00BE               	movwf	___fladd@a+2
  5231  0853  0021               	movlb	1	; select bank1
  5232  0854  083E               	movf	(?___fldiv+1)^(0+128),w
  5233  0855  0020               	movlb	0	; select bank0
  5234  0856  00BD               	movwf	___fladd@a+1
  5235  0857  0021               	movlb	1	; select bank1
  5236  0858  083D               	movf	?___fldiv^(0+128),w
  5237  0859  0020               	movlb	0	; select bank0
  5238  085A  00BC               	movwf	___fladd@a
  5239  085B  3195  25C8  3188   	fcall	___fladd
  5240  085E  0020               	movlb	0	; select bank0
  5241  085F  083B               	movf	?___fladd+3,w
  5242  0860  0022               	movlb	2	; select bank2
  5243  0861  00E9               	movwf	(_get_ntc_temperature$2276+3)^(0+256)
  5244  0862  0020               	movlb	0	; select bank0
  5245  0863  083A               	movf	?___fladd+2,w
  5246  0864  0022               	movlb	2	; select bank2
  5247  0865  00E8               	movwf	(_get_ntc_temperature$2276+2)^(0+256)
  5248  0866  0020               	movlb	0	; select bank0
  5249  0867  0839               	movf	?___fladd+1,w
  5250  0868  0022               	movlb	2	; select bank2
  5251  0869  00E7               	movwf	(_get_ntc_temperature$2276+1)^(0+256)
  5252  086A  0020               	movlb	0	; select bank0
  5253  086B  0838               	movf	?___fladd,w
  5254  086C  0022               	movlb	2	; select bank2
  5255  086D  00E6               	movwf	_get_ntc_temperature$2276^(0+256)
  5256                           
  5257                           ;main.c: 136:     float rntc = (float)33000.0f / (((float)5.0 / (float)adcVoltage ) - 1.
      +                          0f);
  5258  086E  0869               	movf	(_get_ntc_temperature$2276+3)^(0+256),w
  5259  086F  0021               	movlb	1	; select bank1
  5260  0870  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5261  0871  0022               	movlb	2	; select bank2
  5262  0872  0868               	movf	(_get_ntc_temperature$2276+2)^(0+256),w
  5263  0873  0021               	movlb	1	; select bank1
  5264  0874  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5265  0875  0022               	movlb	2	; select bank2
  5266  0876  0867               	movf	(_get_ntc_temperature$2276+1)^(0+256),w
  5267  0877  0021               	movlb	1	; select bank1
  5268  0878  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5269  0879  0022               	movlb	2	; select bank2
  5270  087A  0866               	movf	_get_ntc_temperature$2276^(0+256),w
  5271  087B  0021               	movlb	1	; select bank1
  5272  087C  00BD               	movwf	___fldiv@a^(0+128)
  5273  087D  3047               	movlw	71
  5274  087E  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5275  087F  3000               	movlw	0
  5276  0880  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5277  0881  30E8               	movlw	232
  5278  0882  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5279  0883  3000               	movlw	0
  5280  0884  00C1               	movwf	___fldiv@b^(0+128)
  5281  0885  3186  261F  3188   	fcall	___fldiv
  5282  0888  0021               	movlb	1	; select bank1
  5283  0889  0840               	movf	(?___fldiv+3)^(0+128),w
  5284  088A  0022               	movlb	2	; select bank2
  5285  088B  00E5               	movwf	(get_ntc_temperature@rntc+3)^(0+256)
  5286  088C  0021               	movlb	1	; select bank1
  5287  088D  083F               	movf	(?___fldiv+2)^(0+128),w
  5288  088E  0022               	movlb	2	; select bank2
  5289  088F  00E4               	movwf	(get_ntc_temperature@rntc+2)^(0+256)
  5290  0890  0021               	movlb	1	; select bank1
  5291  0891  083E               	movf	(?___fldiv+1)^(0+128),w
  5292  0892  0022               	movlb	2	; select bank2
  5293  0893  00E3               	movwf	(get_ntc_temperature@rntc+1)^(0+256)
  5294  0894  0021               	movlb	1	; select bank1
  5295  0895  083D               	movf	?___fldiv^(0+128),w
  5296  0896  0022               	movlb	2	; select bank2
  5297  0897  00E2               	movwf	get_ntc_temperature@rntc^(0+256)
  5298                           
  5299                           ;main.c: 137:     float temp;;main.c: 138:     temp = rntc / (float)10000.0f;
  5300  0898  3046               	movlw	70
  5301  0899  0021               	movlb	1	; select bank1
  5302  089A  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5303  089B  301C               	movlw	28
  5304  089C  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5305  089D  3040               	movlw	64
  5306  089E  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5307  089F  3000               	movlw	0
  5308  08A0  00BD               	movwf	___fldiv@a^(0+128)
  5309  08A1  0022               	movlb	2	; select bank2
  5310  08A2  0865               	movf	(get_ntc_temperature@rntc+3)^(0+256),w
  5311  08A3  0021               	movlb	1	; select bank1
  5312  08A4  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5313  08A5  0022               	movlb	2	; select bank2
  5314  08A6  0864               	movf	(get_ntc_temperature@rntc+2)^(0+256),w
  5315  08A7  0021               	movlb	1	; select bank1
  5316  08A8  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5317  08A9  0022               	movlb	2	; select bank2
  5318  08AA  0863               	movf	(get_ntc_temperature@rntc+1)^(0+256),w
  5319  08AB  0021               	movlb	1	; select bank1
  5320  08AC  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5321  08AD  0022               	movlb	2	; select bank2
  5322  08AE  0862               	movf	get_ntc_temperature@rntc^(0+256),w
  5323  08AF  0021               	movlb	1	; select bank1
  5324  08B0  00C1               	movwf	___fldiv@b^(0+128)
  5325  08B1  3186  261F  3188   	fcall	___fldiv
  5326  08B4  0021               	movlb	1	; select bank1
  5327  08B5  0840               	movf	(?___fldiv+3)^(0+128),w
  5328  08B6  0022               	movlb	2	; select bank2
  5329  08B7  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5330  08B8  0021               	movlb	1	; select bank1
  5331  08B9  083F               	movf	(?___fldiv+2)^(0+128),w
  5332  08BA  0022               	movlb	2	; select bank2
  5333  08BB  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5334  08BC  0021               	movlb	1	; select bank1
  5335  08BD  083E               	movf	(?___fldiv+1)^(0+128),w
  5336  08BE  0022               	movlb	2	; select bank2
  5337  08BF  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5338  08C0  0021               	movlb	1	; select bank1
  5339  08C1  083D               	movf	?___fldiv^(0+128),w
  5340  08C2  0022               	movlb	2	; select bank2
  5341  08C3  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5342                           
  5343                           ;main.c: 139:     temp = logf(temp);
  5344  08C4  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5345  08C5  0021               	movlb	1	; select bank1
  5346  08C6  00DA               	movwf	(logf@x+3)^(0+128)
  5347  08C7  0022               	movlb	2	; select bank2
  5348  08C8  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5349  08C9  0021               	movlb	1	; select bank1
  5350  08CA  00D9               	movwf	(logf@x+2)^(0+128)
  5351  08CB  0022               	movlb	2	; select bank2
  5352  08CC  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5353  08CD  0021               	movlb	1	; select bank1
  5354  08CE  00D8               	movwf	(logf@x+1)^(0+128)
  5355  08CF  0022               	movlb	2	; select bank2
  5356  08D0  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5357  08D1  0021               	movlb	1	; select bank1
  5358  08D2  00D7               	movwf	logf@x^(0+128)
  5359  08D3  3180  207B  3188   	fcall	_logf
  5360  08D6  0021               	movlb	1	; select bank1
  5361  08D7  085A               	movf	(?_logf+3)^(0+128),w
  5362  08D8  0022               	movlb	2	; select bank2
  5363  08D9  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5364  08DA  0021               	movlb	1	; select bank1
  5365  08DB  0859               	movf	(?_logf+2)^(0+128),w
  5366  08DC  0022               	movlb	2	; select bank2
  5367  08DD  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5368  08DE  0021               	movlb	1	; select bank1
  5369  08DF  0858               	movf	(?_logf+1)^(0+128),w
  5370  08E0  0022               	movlb	2	; select bank2
  5371  08E1  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5372  08E2  0021               	movlb	1	; select bank1
  5373  08E3  0857               	movf	?_logf^(0+128),w
  5374  08E4  0022               	movlb	2	; select bank2
  5375  08E5  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5376                           
  5377                           ;main.c: 140:     temp /= (float)3950;
  5378  08E6  3045               	movlw	69
  5379  08E7  0021               	movlb	1	; select bank1
  5380  08E8  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5381  08E9  3076               	movlw	118
  5382  08EA  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5383  08EB  30E0               	movlw	224
  5384  08EC  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5385  08ED  3000               	movlw	0
  5386  08EE  00BD               	movwf	___fldiv@a^(0+128)
  5387  08EF  0022               	movlb	2	; select bank2
  5388  08F0  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5389  08F1  0021               	movlb	1	; select bank1
  5390  08F2  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5391  08F3  0022               	movlb	2	; select bank2
  5392  08F4  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5393  08F5  0021               	movlb	1	; select bank1
  5394  08F6  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5395  08F7  0022               	movlb	2	; select bank2
  5396  08F8  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5397  08F9  0021               	movlb	1	; select bank1
  5398  08FA  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5399  08FB  0022               	movlb	2	; select bank2
  5400  08FC  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5401  08FD  0021               	movlb	1	; select bank1
  5402  08FE  00C1               	movwf	___fldiv@b^(0+128)
  5403  08FF  3186  261F  3188   	fcall	___fldiv
  5404  0902  0021               	movlb	1	; select bank1
  5405  0903  0840               	movf	(?___fldiv+3)^(0+128),w
  5406  0904  0022               	movlb	2	; select bank2
  5407  0905  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5408  0906  0021               	movlb	1	; select bank1
  5409  0907  083F               	movf	(?___fldiv+2)^(0+128),w
  5410  0908  0022               	movlb	2	; select bank2
  5411  0909  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5412  090A  0021               	movlb	1	; select bank1
  5413  090B  083E               	movf	(?___fldiv+1)^(0+128),w
  5414  090C  0022               	movlb	2	; select bank2
  5415  090D  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5416  090E  0021               	movlb	1	; select bank1
  5417  090F  083D               	movf	?___fldiv^(0+128),w
  5418  0910  0022               	movlb	2	; select bank2
  5419  0911  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5420                           
  5421                           ;main.c: 141:     temp += 1.0f / ((float)25.0f + 273.15f);
  5422  0912  303B               	movlw	59
  5423  0913  0020               	movlb	0	; select bank0
  5424  0914  00BB               	movwf	___fladd@b+3
  5425  0915  305B               	movlw	91
  5426  0916  00BA               	movwf	___fladd@b+2
  5427  0917  30CF               	movlw	207
  5428  0918  00B9               	movwf	___fladd@b+1
  5429  0919  300F               	movlw	15
  5430  091A  00B8               	movwf	___fladd@b
  5431  091B  0022               	movlb	2	; select bank2
  5432  091C  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5433  091D  0020               	movlb	0	; select bank0
  5434  091E  00BF               	movwf	___fladd@a+3
  5435  091F  0022               	movlb	2	; select bank2
  5436  0920  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5437  0921  0020               	movlb	0	; select bank0
  5438  0922  00BE               	movwf	___fladd@a+2
  5439  0923  0022               	movlb	2	; select bank2
  5440  0924  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5441  0925  0020               	movlb	0	; select bank0
  5442  0926  00BD               	movwf	___fladd@a+1
  5443  0927  0022               	movlb	2	; select bank2
  5444  0928  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5445  0929  0020               	movlb	0	; select bank0
  5446  092A  00BC               	movwf	___fladd@a
  5447  092B  3195  25C8  3188   	fcall	___fladd
  5448  092E  0020               	movlb	0	; select bank0
  5449  092F  083B               	movf	?___fladd+3,w
  5450  0930  0022               	movlb	2	; select bank2
  5451  0931  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5452  0932  0020               	movlb	0	; select bank0
  5453  0933  083A               	movf	?___fladd+2,w
  5454  0934  0022               	movlb	2	; select bank2
  5455  0935  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5456  0936  0020               	movlb	0	; select bank0
  5457  0937  0839               	movf	?___fladd+1,w
  5458  0938  0022               	movlb	2	; select bank2
  5459  0939  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5460  093A  0020               	movlb	0	; select bank0
  5461  093B  0838               	movf	?___fladd,w
  5462  093C  0022               	movlb	2	; select bank2
  5463  093D  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5464                           
  5465                           ;main.c: 142:     temp = 1.0f / temp;
  5466  093E  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5467  093F  0021               	movlb	1	; select bank1
  5468  0940  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5469  0941  0022               	movlb	2	; select bank2
  5470  0942  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5471  0943  0021               	movlb	1	; select bank1
  5472  0944  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5473  0945  0022               	movlb	2	; select bank2
  5474  0946  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5475  0947  0021               	movlb	1	; select bank1
  5476  0948  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5477  0949  0022               	movlb	2	; select bank2
  5478  094A  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5479  094B  0021               	movlb	1	; select bank1
  5480  094C  00BD               	movwf	___fldiv@a^(0+128)
  5481  094D  303F               	movlw	63
  5482  094E  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5483  094F  3080               	movlw	128
  5484  0950  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5485  0951  3000               	movlw	0
  5486  0952  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5487  0953  3000               	movlw	0
  5488  0954  00C1               	movwf	___fldiv@b^(0+128)
  5489  0955  3186  261F  3188   	fcall	___fldiv
  5490  0958  0021               	movlb	1	; select bank1
  5491  0959  0840               	movf	(?___fldiv+3)^(0+128),w
  5492  095A  0022               	movlb	2	; select bank2
  5493  095B  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5494  095C  0021               	movlb	1	; select bank1
  5495  095D  083F               	movf	(?___fldiv+2)^(0+128),w
  5496  095E  0022               	movlb	2	; select bank2
  5497  095F  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5498  0960  0021               	movlb	1	; select bank1
  5499  0961  083E               	movf	(?___fldiv+1)^(0+128),w
  5500  0962  0022               	movlb	2	; select bank2
  5501  0963  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5502  0964  0021               	movlb	1	; select bank1
  5503  0965  083D               	movf	?___fldiv^(0+128),w
  5504  0966  0022               	movlb	2	; select bank2
  5505  0967  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5506                           
  5507                           ;main.c: 143:     temp -= 273.15f;
  5508  0968  3043               	movlw	67
  5509  0969  0021               	movlb	1	; select bank1
  5510  096A  00A3               	movwf	(___flsub@a+3)^(0+128)
  5511  096B  3088               	movlw	136
  5512  096C  00A2               	movwf	(___flsub@a+2)^(0+128)
  5513  096D  3093               	movlw	147
  5514  096E  00A1               	movwf	(___flsub@a+1)^(0+128)
  5515  096F  3033               	movlw	51
  5516  0970  00A0               	movwf	___flsub@a^(0+128)
  5517  0971  0022               	movlb	2	; select bank2
  5518  0972  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5519  0973  0021               	movlb	1	; select bank1
  5520  0974  00A7               	movwf	(___flsub@b+3)^(0+128)
  5521  0975  0022               	movlb	2	; select bank2
  5522  0976  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5523  0977  0021               	movlb	1	; select bank1
  5524  0978  00A6               	movwf	(___flsub@b+2)^(0+128)
  5525  0979  0022               	movlb	2	; select bank2
  5526  097A  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5527  097B  0021               	movlb	1	; select bank1
  5528  097C  00A5               	movwf	(___flsub@b+1)^(0+128)
  5529  097D  0022               	movlb	2	; select bank2
  5530  097E  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5531  097F  0021               	movlb	1	; select bank1
  5532  0980  00A4               	movwf	___flsub@b^(0+128)
  5533  0981  319E  26D9  3188   	fcall	___flsub
  5534  0984  0021               	movlb	1	; select bank1
  5535  0985  0823               	movf	(?___flsub+3)^(0+128),w
  5536  0986  0022               	movlb	2	; select bank2
  5537  0987  00ED               	movwf	(get_ntc_temperature@temp+3)^(0+256)
  5538  0988  0021               	movlb	1	; select bank1
  5539  0989  0822               	movf	(?___flsub+2)^(0+128),w
  5540  098A  0022               	movlb	2	; select bank2
  5541  098B  00EC               	movwf	(get_ntc_temperature@temp+2)^(0+256)
  5542  098C  0021               	movlb	1	; select bank1
  5543  098D  0821               	movf	(?___flsub+1)^(0+128),w
  5544  098E  0022               	movlb	2	; select bank2
  5545  098F  00EB               	movwf	(get_ntc_temperature@temp+1)^(0+256)
  5546  0990  0021               	movlb	1	; select bank1
  5547  0991  0820               	movf	?___flsub^(0+128),w
  5548  0992  0022               	movlb	2	; select bank2
  5549  0993  00EA               	movwf	get_ntc_temperature@temp^(0+256)
  5550  0994                     l6529:
  5551                           
  5552                           ;main.c: 144:     tempNTC = temp;
  5553  0994  086D               	movf	(get_ntc_temperature@temp+3)^(0+256),w
  5554  0995  0023               	movlb	3	; select bank3
  5555  0996  00D0               	movwf	(_tempNTC+3)^(0+384)
  5556  0997  0022               	movlb	2	; select bank2
  5557  0998  086C               	movf	(get_ntc_temperature@temp+2)^(0+256),w
  5558  0999  0023               	movlb	3	; select bank3
  5559  099A  00CF               	movwf	(_tempNTC+2)^(0+384)
  5560  099B  0022               	movlb	2	; select bank2
  5561  099C  086B               	movf	(get_ntc_temperature@temp+1)^(0+256),w
  5562  099D  0023               	movlb	3	; select bank3
  5563  099E  00CE               	movwf	(_tempNTC+1)^(0+384)
  5564  099F  0022               	movlb	2	; select bank2
  5565  09A0  086A               	movf	get_ntc_temperature@temp^(0+256),w
  5566  09A1  0023               	movlb	3	; select bank3
  5567  09A2  00CD               	movwf	_tempNTC^(0+384)
  5568  09A3                     l862:
  5569  09A3  0008               	return
  5570  09A4                     __end_of_get_ntc_temperature:
  5571                           
  5572                           	psect	text4
  5573  007B                     __ptext4:	
  5574 ;; *************** function _logf *****************
  5575 ;; Defined at:
  5576 ;;		line 29 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\logf.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  x               4   55[BANK1 ] float 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  ix              4   62[BANK2 ] unsigned long 
  5581 ;;  f               4   58[BANK2 ] float 
  5582 ;;  u               4   54[BANK2 ] struct .
  5583 ;;  w               4   46[BANK2 ] float 
  5584 ;;  z               4   42[BANK2 ] float 
  5585 ;;  s               4   38[BANK2 ] float 
  5586 ;;  dk              4   34[BANK2 ] float 
  5587 ;;  hfsq            4   30[BANK2 ] float 
  5588 ;;  t2              4    8[BANK2 ] float 
  5589 ;;  t1              4    4[BANK2 ] float 
  5590 ;;  R               4    0[BANK2 ] float 
  5591 ;;  k               2   28[BANK2 ] int 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  4   55[BANK1 ] float 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5601 ;;      Params:         0       0       4       0       0       0       0       0
  5602 ;;      Locals:         0       0       0      66       0       0       0       0
  5603 ;;      Temps:          0       0       8       0       0       0       0       0
  5604 ;;      Totals:         0       0      12      66       0       0       0       0
  5605 ;;Total ram usage:       78 bytes
  5606 ;; Hardware stack levels used: 1
  5607 ;; Hardware stack levels required when called: 6
  5608 ;; This function calls:
  5609 ;;		___fladd
  5610 ;;		___fldiv
  5611 ;;		___flmul
  5612 ;;		___flsub
  5613 ;;		___xxtofl
  5614 ;; This function is called by:
  5615 ;;		_get_ntc_temperature
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619  007B                     _logf:	
  5620                           ;psect for function _logf
  5621                           
  5622  007B                     l6277:	
  5623                           ;incstack = 0
  5624                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
  5625                           
  5626  007B  0020               	movlb	0	; select bank0
  5627  007C  0854               	movf	logf@F472+3,w
  5628  007D  0022               	movlb	2	; select bank2
  5629  007E  00D9               	movwf	(logf@u+3)^(0+256)
  5630  007F  0020               	movlb	0	; select bank0
  5631  0080  0853               	movf	logf@F472+2,w
  5632  0081  0022               	movlb	2	; select bank2
  5633  0082  00D8               	movwf	(logf@u+2)^(0+256)
  5634  0083  0020               	movlb	0	; select bank0
  5635  0084  0852               	movf	logf@F472+1,w
  5636  0085  0022               	movlb	2	; select bank2
  5637  0086  00D7               	movwf	(logf@u+1)^(0+256)
  5638  0087  0020               	movlb	0	; select bank0
  5639  0088  0851               	movf	logf@F472,w
  5640  0089  0022               	movlb	2	; select bank2
  5641  008A  00D6               	movwf	logf@u^(0+256)
  5642  008B  0021               	movlb	1	; select bank1
  5643  008C  085A               	movf	(logf@x+3)^(0+128),w
  5644  008D  0022               	movlb	2	; select bank2
  5645  008E  00D9               	movwf	(logf@u+3)^(0+256)
  5646  008F  0021               	movlb	1	; select bank1
  5647  0090  0859               	movf	(logf@x+2)^(0+128),w
  5648  0091  0022               	movlb	2	; select bank2
  5649  0092  00D8               	movwf	(logf@u+2)^(0+256)
  5650  0093  0021               	movlb	1	; select bank1
  5651  0094  0858               	movf	(logf@x+1)^(0+128),w
  5652  0095  0022               	movlb	2	; select bank2
  5653  0096  00D7               	movwf	(logf@u+1)^(0+256)
  5654  0097  0021               	movlb	1	; select bank1
  5655  0098  0857               	movf	logf@x^(0+128),w
  5656  0099  0022               	movlb	2	; select bank2
  5657  009A  00D6               	movwf	logf@u^(0+256)
  5658  009B  0859               	movf	(logf@u+3)^(0+256),w
  5659  009C  00E1               	movwf	(logf@ix+3)^(0+256)
  5660  009D  0858               	movf	(logf@u+2)^(0+256),w
  5661  009E  00E0               	movwf	(logf@ix+2)^(0+256)
  5662  009F  0857               	movf	(logf@u+1)^(0+256),w
  5663  00A0  00DF               	movwf	(logf@ix+1)^(0+256)
  5664  00A1  0856               	movf	logf@u^(0+256),w
  5665  00A2  00DE               	movwf	logf@ix^(0+256)
  5666  00A3                     l6279:
  5667  00A3  01BC               	clrf	logf@k^(0+256)
  5668  00A4  01BD               	clrf	(logf@k+1)^(0+256)
  5669  00A5                     l6281:
  5670  00A5  0861               	movf	(logf@ix+3)^(0+256),w
  5671  00A6  1D03               	btfss	3,2
  5672  00A7  28AE               	goto	u5920
  5673  00A8  3080               	movlw	128
  5674  00A9  0260               	subwf	(logf@ix+2)^(0+256),w
  5675  00AA  1C03               	btfss	3,0
  5676  00AB  28AD               	goto	u5921
  5677  00AC  28AE               	goto	u5920
  5678  00AD                     u5921:
  5679  00AD  28CD               	goto	l6285
  5680  00AE                     u5920:
  5681  00AE                     l6283:
  5682  00AE  0022               	movlb	2	; select bank2
  5683  00AF  085E               	movf	logf@ix^(0+256),w
  5684  00B0  0021               	movlb	1	; select bank1
  5685  00B1  00DB               	movwf	??_logf^(0+128)
  5686  00B2  0022               	movlb	2	; select bank2
  5687  00B3  085F               	movf	(logf@ix+1)^(0+256),w
  5688  00B4  0021               	movlb	1	; select bank1
  5689  00B5  00DC               	movwf	(??_logf^(0+128)+1)
  5690  00B6  0022               	movlb	2	; select bank2
  5691  00B7  0860               	movf	(logf@ix+2)^(0+256),w
  5692  00B8  0021               	movlb	1	; select bank1
  5693  00B9  00DD               	movwf	(??_logf^(0+128)+2)
  5694  00BA  0022               	movlb	2	; select bank2
  5695  00BB  0861               	movf	(logf@ix+3)^(0+256),w
  5696  00BC  0021               	movlb	1	; select bank1
  5697  00BD  00DE               	movwf	(??_logf^(0+128)+3)
  5698  00BE  301F               	movlw	31
  5699  00BF                     u5935:
  5700  00BF  36DE               	lsrf	(??_logf^(0+128)+3),f
  5701  00C0  0CDD               	rrf	(??_logf^(0+128)+2),f
  5702  00C1  0CDC               	rrf	(??_logf^(0+128)+1),f
  5703  00C2  0CDB               	rrf	??_logf^(0+128),f
  5704  00C3                     u5930:
  5705  00C3  0B89               	decfsz	9,f
  5706  00C4  28BF               	goto	u5935
  5707  00C5  085E               	movf	(??_logf+3)^(0+128),w
  5708  00C6  045D               	iorwf	(??_logf+2)^(0+128),w
  5709  00C7  045C               	iorwf	(??_logf+1)^(0+128),w
  5710  00C8  045B               	iorwf	??_logf^(0+128),w
  5711  00C9  1903               	skipnz
  5712  00CA  28CC               	goto	u5941
  5713  00CB  28CD               	goto	u5940
  5714  00CC                     u5941:
  5715  00CC  29AD               	goto	l6307
  5716  00CD                     u5940:
  5717  00CD                     l6285:
  5718  00CD  0022               	movlb	2	; select bank2
  5719  00CE  085E               	movf	logf@ix^(0+256),w
  5720  00CF  0021               	movlb	1	; select bank1
  5721  00D0  00DB               	movwf	??_logf^(0+128)
  5722  00D1  0022               	movlb	2	; select bank2
  5723  00D2  085F               	movf	(logf@ix+1)^(0+256),w
  5724  00D3  0021               	movlb	1	; select bank1
  5725  00D4  00DC               	movwf	(??_logf^(0+128)+1)
  5726  00D5  0022               	movlb	2	; select bank2
  5727  00D6  0860               	movf	(logf@ix+2)^(0+256),w
  5728  00D7  0021               	movlb	1	; select bank1
  5729  00D8  00DD               	movwf	(??_logf^(0+128)+2)
  5730  00D9  0022               	movlb	2	; select bank2
  5731  00DA  0861               	movf	(logf@ix+3)^(0+256),w
  5732  00DB  0021               	movlb	1	; select bank1
  5733  00DC  00DE               	movwf	(??_logf^(0+128)+3)
  5734  00DD  3001               	movlw	1
  5735  00DE                     u5955:
  5736  00DE  35DB               	lslf	??_logf^(0+128),f
  5737  00DF  0DDC               	rlf	(??_logf^(0+128)+1),f
  5738  00E0  0DDD               	rlf	(??_logf^(0+128)+2),f
  5739  00E1  0DDE               	rlf	(??_logf^(0+128)+3),f
  5740  00E2                     u5950:
  5741  00E2  0B89               	decfsz	9,f
  5742  00E3  28DE               	goto	u5955
  5743  00E4  085E               	movf	(??_logf+3)^(0+128),w
  5744  00E5  045D               	iorwf	(??_logf+2)^(0+128),w
  5745  00E6  045C               	iorwf	(??_logf+1)^(0+128),w
  5746  00E7  045B               	iorwf	??_logf^(0+128),w
  5747  00E8  1D03               	skipz
  5748  00E9  28EB               	goto	u5961
  5749  00EA  28EC               	goto	u5960
  5750  00EB                     u5961:
  5751  00EB  291D               	goto	l6291
  5752  00EC                     u5960:
  5753  00EC                     l6287:
  5754  00EC  085A               	movf	(logf@x+3)^(0+128),w
  5755  00ED  00AB               	movwf	(___flmul@b+3)^(0+128)
  5756  00EE  0859               	movf	(logf@x+2)^(0+128),w
  5757  00EF  00AA               	movwf	(___flmul@b+2)^(0+128)
  5758  00F0  0858               	movf	(logf@x+1)^(0+128),w
  5759  00F1  00A9               	movwf	(___flmul@b+1)^(0+128)
  5760  00F2  0857               	movf	logf@x^(0+128),w
  5761  00F3  00A8               	movwf	___flmul@b^(0+128)
  5762  00F4  085A               	movf	(logf@x+3)^(0+128),w
  5763  00F5  00AF               	movwf	(___flmul@a+3)^(0+128)
  5764  00F6  0859               	movf	(logf@x+2)^(0+128),w
  5765  00F7  00AE               	movwf	(___flmul@a+2)^(0+128)
  5766  00F8  0858               	movf	(logf@x+1)^(0+128),w
  5767  00F9  00AD               	movwf	(___flmul@a+1)^(0+128)
  5768  00FA  0857               	movf	logf@x^(0+128),w
  5769  00FB  00AC               	movwf	___flmul@a^(0+128)
  5770  00FC  3189  21A4  3180   	fcall	___flmul
  5771  00FF  0021               	movlb	1	; select bank1
  5772  0100  082B               	movf	(?___flmul+3)^(0+128),w
  5773  0101  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5774  0102  082A               	movf	(?___flmul+2)^(0+128),w
  5775  0103  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5776  0104  0829               	movf	(?___flmul+1)^(0+128),w
  5777  0105  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5778  0106  0828               	movf	?___flmul^(0+128),w
  5779  0107  00BD               	movwf	___fldiv@a^(0+128)
  5780  0108  30BF               	movlw	191
  5781  0109  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5782  010A  3080               	movlw	128
  5783  010B  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5784  010C  3000               	movlw	0
  5785  010D  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5786  010E  3000               	movlw	0
  5787  010F  00C1               	movwf	___fldiv@b^(0+128)
  5788  0110  3186  261F  3180   	fcall	___fldiv
  5789  0113  0021               	movlb	1	; select bank1
  5790  0114  0840               	movf	(?___fldiv+3)^(0+128),w
  5791  0115  00DA               	movwf	(?_logf+3)^(0+128)
  5792  0116  083F               	movf	(?___fldiv+2)^(0+128),w
  5793  0117  00D9               	movwf	(?_logf+2)^(0+128)
  5794  0118  083E               	movf	(?___fldiv+1)^(0+128),w
  5795  0119  00D8               	movwf	(?_logf+1)^(0+128)
  5796  011A  083D               	movf	?___fldiv^(0+128),w
  5797  011B  00D7               	movwf	?_logf^(0+128)
  5798  011C  2E1E               	goto	l1532
  5799  011D                     l6291:
  5800  011D  0022               	movlb	2	; select bank2
  5801  011E  085E               	movf	logf@ix^(0+256),w
  5802  011F  0021               	movlb	1	; select bank1
  5803  0120  00DB               	movwf	??_logf^(0+128)
  5804  0121  0022               	movlb	2	; select bank2
  5805  0122  085F               	movf	(logf@ix+1)^(0+256),w
  5806  0123  0021               	movlb	1	; select bank1
  5807  0124  00DC               	movwf	(??_logf^(0+128)+1)
  5808  0125  0022               	movlb	2	; select bank2
  5809  0126  0860               	movf	(logf@ix+2)^(0+256),w
  5810  0127  0021               	movlb	1	; select bank1
  5811  0128  00DD               	movwf	(??_logf^(0+128)+2)
  5812  0129  0022               	movlb	2	; select bank2
  5813  012A  0861               	movf	(logf@ix+3)^(0+256),w
  5814  012B  0021               	movlb	1	; select bank1
  5815  012C  00DE               	movwf	(??_logf^(0+128)+3)
  5816  012D  301F               	movlw	31
  5817  012E                     u5975:
  5818  012E  36DE               	lsrf	(??_logf^(0+128)+3),f
  5819  012F  0CDD               	rrf	(??_logf^(0+128)+2),f
  5820  0130  0CDC               	rrf	(??_logf^(0+128)+1),f
  5821  0131  0CDB               	rrf	??_logf^(0+128),f
  5822  0132                     u5970:
  5823  0132  0B89               	decfsz	9,f
  5824  0133  292E               	goto	u5975
  5825  0134  085E               	movf	(??_logf+3)^(0+128),w
  5826  0135  045D               	iorwf	(??_logf+2)^(0+128),w
  5827  0136  045C               	iorwf	(??_logf+1)^(0+128),w
  5828  0137  045B               	iorwf	??_logf^(0+128),w
  5829  0138  1903               	skipnz
  5830  0139  293B               	goto	u5981
  5831  013A  293C               	goto	u5980
  5832  013B                     u5981:
  5833  013B  2973               	goto	l6299
  5834  013C                     u5980:
  5835  013C                     l6293:
  5836  013C  3021               	movlw	33
  5837  013D  0022               	movlb	2	; select bank2
  5838  013E  00EE               	movwf	_errno^(0+256)
  5839  013F  3000               	movlw	0
  5840  0140  00EF               	movwf	(_errno^(0+256)+1)
  5841  0141                     l6295:
  5842  0141  3000               	movlw	0
  5843  0142  0021               	movlb	1	; select bank1
  5844  0143  00C0               	movwf	(___fldiv@a+3)^(0+128)
  5845  0144  3000               	movlw	0
  5846  0145  00BF               	movwf	(___fldiv@a+2)^(0+128)
  5847  0146  3000               	movlw	0
  5848  0147  00BE               	movwf	(___fldiv@a+1)^(0+128)
  5849  0148  3000               	movlw	0
  5850  0149  00BD               	movwf	___fldiv@a^(0+128)
  5851  014A  085A               	movf	(logf@x+3)^(0+128),w
  5852  014B  00A3               	movwf	(___flsub@a+3)^(0+128)
  5853  014C  0859               	movf	(logf@x+2)^(0+128),w
  5854  014D  00A2               	movwf	(___flsub@a+2)^(0+128)
  5855  014E  0858               	movf	(logf@x+1)^(0+128),w
  5856  014F  00A1               	movwf	(___flsub@a+1)^(0+128)
  5857  0150  0857               	movf	logf@x^(0+128),w
  5858  0151  00A0               	movwf	___flsub@a^(0+128)
  5859  0152  085A               	movf	(logf@x+3)^(0+128),w
  5860  0153  00A7               	movwf	(___flsub@b+3)^(0+128)
  5861  0154  0859               	movf	(logf@x+2)^(0+128),w
  5862  0155  00A6               	movwf	(___flsub@b+2)^(0+128)
  5863  0156  0858               	movf	(logf@x+1)^(0+128),w
  5864  0157  00A5               	movwf	(___flsub@b+1)^(0+128)
  5865  0158  0857               	movf	logf@x^(0+128),w
  5866  0159  00A4               	movwf	___flsub@b^(0+128)
  5867  015A  319E  26D9  3180   	fcall	___flsub
  5868  015D  0021               	movlb	1	; select bank1
  5869  015E  0823               	movf	(?___flsub+3)^(0+128),w
  5870  015F  00C4               	movwf	(___fldiv@b+3)^(0+128)
  5871  0160  0822               	movf	(?___flsub+2)^(0+128),w
  5872  0161  00C3               	movwf	(___fldiv@b+2)^(0+128)
  5873  0162  0821               	movf	(?___flsub+1)^(0+128),w
  5874  0163  00C2               	movwf	(___fldiv@b+1)^(0+128)
  5875  0164  0820               	movf	?___flsub^(0+128),w
  5876  0165  00C1               	movwf	___fldiv@b^(0+128)
  5877  0166  3186  261F  3180   	fcall	___fldiv
  5878  0169  0021               	movlb	1	; select bank1
  5879  016A  0840               	movf	(?___fldiv+3)^(0+128),w
  5880  016B  00DA               	movwf	(?_logf+3)^(0+128)
  5881  016C  083F               	movf	(?___fldiv+2)^(0+128),w
  5882  016D  00D9               	movwf	(?_logf+2)^(0+128)
  5883  016E  083E               	movf	(?___fldiv+1)^(0+128),w
  5884  016F  00D8               	movwf	(?_logf+1)^(0+128)
  5885  0170  083D               	movf	?___fldiv^(0+128),w
  5886  0171  00D7               	movwf	?_logf^(0+128)
  5887  0172  2E1E               	goto	l1532
  5888  0173                     l6299:
  5889  0173  30E7               	movlw	231
  5890  0174  0022               	movlb	2	; select bank2
  5891  0175  07BC               	addwf	logf@k^(0+256),f
  5892  0176  30FF               	movlw	255
  5893  0177  3DBD               	addwfc	(logf@k+1)^(0+256),f
  5894  0178                     l6301:
  5895  0178  304C               	movlw	76
  5896  0179  0021               	movlb	1	; select bank1
  5897  017A  00AB               	movwf	(___flmul@b+3)^(0+128)
  5898  017B  3000               	movlw	0
  5899  017C  00AA               	movwf	(___flmul@b+2)^(0+128)
  5900  017D  3000               	movlw	0
  5901  017E  00A9               	movwf	(___flmul@b+1)^(0+128)
  5902  017F  3000               	movlw	0
  5903  0180  00A8               	movwf	___flmul@b^(0+128)
  5904  0181  085A               	movf	(logf@x+3)^(0+128),w
  5905  0182  00AF               	movwf	(___flmul@a+3)^(0+128)
  5906  0183  0859               	movf	(logf@x+2)^(0+128),w
  5907  0184  00AE               	movwf	(___flmul@a+2)^(0+128)
  5908  0185  0858               	movf	(logf@x+1)^(0+128),w
  5909  0186  00AD               	movwf	(___flmul@a+1)^(0+128)
  5910  0187  0857               	movf	logf@x^(0+128),w
  5911  0188  00AC               	movwf	___flmul@a^(0+128)
  5912  0189  3189  21A4  3180   	fcall	___flmul
  5913  018C  0021               	movlb	1	; select bank1
  5914  018D  082B               	movf	(?___flmul+3)^(0+128),w
  5915  018E  00DA               	movwf	(logf@x+3)^(0+128)
  5916  018F  082A               	movf	(?___flmul+2)^(0+128),w
  5917  0190  00D9               	movwf	(logf@x+2)^(0+128)
  5918  0191  0829               	movf	(?___flmul+1)^(0+128),w
  5919  0192  00D8               	movwf	(logf@x+1)^(0+128)
  5920  0193  0828               	movf	?___flmul^(0+128),w
  5921  0194  00D7               	movwf	logf@x^(0+128)
  5922  0195                     l6303:
  5923  0195  085A               	movf	(logf@x+3)^(0+128),w
  5924  0196  0022               	movlb	2	; select bank2
  5925  0197  00D9               	movwf	(logf@u+3)^(0+256)
  5926  0198  0021               	movlb	1	; select bank1
  5927  0199  0859               	movf	(logf@x+2)^(0+128),w
  5928  019A  0022               	movlb	2	; select bank2
  5929  019B  00D8               	movwf	(logf@u+2)^(0+256)
  5930  019C  0021               	movlb	1	; select bank1
  5931  019D  0858               	movf	(logf@x+1)^(0+128),w
  5932  019E  0022               	movlb	2	; select bank2
  5933  019F  00D7               	movwf	(logf@u+1)^(0+256)
  5934  01A0  0021               	movlb	1	; select bank1
  5935  01A1  0857               	movf	logf@x^(0+128),w
  5936  01A2  0022               	movlb	2	; select bank2
  5937  01A3  00D6               	movwf	logf@u^(0+256)
  5938  01A4                     l6305:
  5939  01A4  0859               	movf	(logf@u+3)^(0+256),w
  5940  01A5  00E1               	movwf	(logf@ix+3)^(0+256)
  5941  01A6  0858               	movf	(logf@u+2)^(0+256),w
  5942  01A7  00E0               	movwf	(logf@ix+2)^(0+256)
  5943  01A8  0857               	movf	(logf@u+1)^(0+256),w
  5944  01A9  00DF               	movwf	(logf@ix+1)^(0+256)
  5945  01AA  0856               	movf	logf@u^(0+256),w
  5946  01AB  00DE               	movwf	logf@ix^(0+256)
  5947  01AC  29CD               	goto	l6319
  5948  01AD                     l6307:
  5949  01AD  3080               	movlw	128
  5950  01AE  0022               	movlb	2	; select bank2
  5951  01AF  0260               	subwf	(logf@ix+2)^(0+256),w
  5952  01B0  307F               	movlw	127
  5953  01B1  3B61               	subwfb	(logf@ix+3)^(0+256),w
  5954  01B2  1C03               	btfss	3,0
  5955  01B3  29B5               	goto	u5991
  5956  01B4  29B6               	goto	u5990
  5957  01B5                     u5991:
  5958  01B5  29B7               	goto	l6313
  5959  01B6                     u5990:
  5960  01B6                     l6309:
  5961  01B6  2E1E               	goto	l1532
  5962  01B7                     l6313:
  5963  01B7  3080               	movlw	128
  5964  01B8  0022               	movlb	2	; select bank2
  5965  01B9  0660               	xorwf	(logf@ix+2)^(0+256),w
  5966  01BA  303F               	movlw	63
  5967  01BB  1903               	skipnz
  5968  01BC  0661               	xorwf	(logf@ix+3)^(0+256),w
  5969  01BD  045E               	iorwf	logf@ix^(0+256),w
  5970  01BE  045F               	iorwf	(logf@ix+1)^(0+256),w
  5971  01BF  1D03               	btfss	3,2
  5972  01C0  29C2               	goto	u6001
  5973  01C1  29C3               	goto	u6000
  5974  01C2                     u6001:
  5975  01C2  29CD               	goto	l6319
  5976  01C3                     u6000:
  5977  01C3                     l6315:
  5978  01C3  3000               	movlw	0
  5979  01C4  0021               	movlb	1	; select bank1
  5980  01C5  00DA               	movwf	(?_logf+3)^(0+128)
  5981  01C6  3000               	movlw	0
  5982  01C7  00D9               	movwf	(?_logf+2)^(0+128)
  5983  01C8  3000               	movlw	0
  5984  01C9  00D8               	movwf	(?_logf+1)^(0+128)
  5985  01CA  3000               	movlw	0
  5986  01CB  00D7               	movwf	?_logf^(0+128)
  5987  01CC  2E1E               	goto	l1532
  5988  01CD                     l6319:
  5989  01CD  300D               	movlw	13
  5990  01CE  0022               	movlb	2	; select bank2
  5991  01CF  07DE               	addwf	logf@ix^(0+256),f
  5992  01D0  30FB               	movlw	251
  5993  01D1  3DDF               	addwfc	(logf@ix+1)^(0+256),f
  5994  01D2  304A               	movlw	74
  5995  01D3  3DE0               	addwfc	(logf@ix+2)^(0+256),f
  5996  01D4  3000               	movlw	0
  5997  01D5  3DE1               	addwfc	(logf@ix+3)^(0+256),f
  5998  01D6                     l6321:
  5999  01D6  085E               	movf	logf@ix^(0+256),w
  6000  01D7  0021               	movlb	1	; select bank1
  6001  01D8  00DB               	movwf	??_logf^(0+128)
  6002  01D9  0022               	movlb	2	; select bank2
  6003  01DA  085F               	movf	(logf@ix+1)^(0+256),w
  6004  01DB  0021               	movlb	1	; select bank1
  6005  01DC  00DC               	movwf	(??_logf^(0+128)+1)
  6006  01DD  0022               	movlb	2	; select bank2
  6007  01DE  0860               	movf	(logf@ix+2)^(0+256),w
  6008  01DF  0021               	movlb	1	; select bank1
  6009  01E0  00DD               	movwf	(??_logf^(0+128)+2)
  6010  01E1  0022               	movlb	2	; select bank2
  6011  01E2  0861               	movf	(logf@ix+3)^(0+256),w
  6012  01E3  0021               	movlb	1	; select bank1
  6013  01E4  00DE               	movwf	(??_logf^(0+128)+3)
  6014  01E5  3017               	movlw	23
  6015  01E6                     u6015:
  6016  01E6  36DE               	lsrf	(??_logf^(0+128)+3),f
  6017  01E7  0CDD               	rrf	(??_logf^(0+128)+2),f
  6018  01E8  0CDC               	rrf	(??_logf^(0+128)+1),f
  6019  01E9  0CDB               	rrf	??_logf^(0+128),f
  6020  01EA                     u6010:
  6021  01EA  0B89               	decfsz	9,f
  6022  01EB  29E6               	goto	u6015
  6023  01EC  085B               	movf	??_logf^(0+128),w
  6024  01ED  3E81               	addlw	129
  6025  01EE  00DF               	movwf	(??_logf+4)^(0+128)
  6026  01EF  30FF               	movlw	255
  6027  01F0  3D5C               	addwfc	(??_logf+1)^(0+128),w
  6028  01F1  00E0               	movwf	(??_logf+5)^(0+128)
  6029  01F2  085F               	movf	(??_logf+4)^(0+128),w
  6030  01F3  0022               	movlb	2	; select bank2
  6031  01F4  07BC               	addwf	logf@k^(0+256),f
  6032  01F5  0021               	movlb	1	; select bank1
  6033  01F6  0860               	movf	(??_logf+5)^(0+128),w
  6034  01F7  0022               	movlb	2	; select bank2
  6035  01F8  3DBD               	addwfc	(logf@k+1)^(0+256),f
  6036  01F9                     l6323:
  6037  01F9  30F3               	movlw	243
  6038  01FA  0021               	movlb	1	; select bank1
  6039  01FB  00DB               	movwf	??_logf^(0+128)
  6040  01FC  3004               	movlw	4
  6041  01FD  00DC               	movwf	(??_logf^(0+128)+1)
  6042  01FE  3035               	movlw	53
  6043  01FF  00DD               	movwf	(??_logf^(0+128)+2)
  6044  0200  303F               	movlw	63
  6045  0201  00DE               	movwf	(??_logf^(0+128)+3)
  6046  0202  30FF               	movlw	255
  6047  0203  0022               	movlb	2	; select bank2
  6048  0204  055E               	andwf	logf@ix^(0+256),w
  6049  0205  0021               	movlb	1	; select bank1
  6050  0206  00DF               	movwf	(??_logf+4)^(0+128)
  6051  0207  30FF               	movlw	255
  6052  0208  0022               	movlb	2	; select bank2
  6053  0209  055F               	andwf	(logf@ix+1)^(0+256),w
  6054  020A  0021               	movlb	1	; select bank1
  6055  020B  00E0               	movwf	((??_logf+4)^(0+128)+1)
  6056  020C  307F               	movlw	127
  6057  020D  0022               	movlb	2	; select bank2
  6058  020E  0560               	andwf	(logf@ix+2)^(0+256),w
  6059  020F  0021               	movlb	1	; select bank1
  6060  0210  00E1               	movwf	((??_logf+4)^(0+128)+2)
  6061  0211  3000               	movlw	0
  6062  0212  0022               	movlb	2	; select bank2
  6063  0213  0561               	andwf	(logf@ix+3)^(0+256),w
  6064  0214  0021               	movlb	1	; select bank1
  6065  0215  00E2               	movwf	((??_logf+4)^(0+128)+3)
  6066  0216  085F               	movf	(??_logf+4)^(0+128),w
  6067  0217  07DB               	addwf	??_logf^(0+128),f
  6068  0218  0860               	movf	(??_logf+5)^(0+128),w
  6069  0219  3DDC               	addwfc	(??_logf^(0+128)+1),f
  6070  021A  0861               	movf	(??_logf+6)^(0+128),w
  6071  021B  3DDD               	addwfc	(??_logf^(0+128)+2),f
  6072  021C  0862               	movf	(??_logf+7)^(0+128),w
  6073  021D  3DDE               	addwfc	(??_logf^(0+128)+3),f
  6074  021E  085E               	movf	(??_logf+3)^(0+128),w
  6075  021F  0022               	movlb	2	; select bank2
  6076  0220  00E1               	movwf	(logf@ix+3)^(0+256)
  6077  0221  0021               	movlb	1	; select bank1
  6078  0222  085D               	movf	(??_logf+2)^(0+128),w
  6079  0223  0022               	movlb	2	; select bank2
  6080  0224  00E0               	movwf	(logf@ix+2)^(0+256)
  6081  0225  0021               	movlb	1	; select bank1
  6082  0226  085C               	movf	(??_logf+1)^(0+128),w
  6083  0227  0022               	movlb	2	; select bank2
  6084  0228  00DF               	movwf	(logf@ix+1)^(0+256)
  6085  0229  0021               	movlb	1	; select bank1
  6086  022A  085B               	movf	??_logf^(0+128),w
  6087  022B  0022               	movlb	2	; select bank2
  6088  022C  00DE               	movwf	logf@ix^(0+256)
  6089  022D                     l6325:
  6090  022D  0861               	movf	(logf@ix+3)^(0+256),w
  6091  022E  00D9               	movwf	(logf@u+3)^(0+256)
  6092  022F  0860               	movf	(logf@ix+2)^(0+256),w
  6093  0230  00D8               	movwf	(logf@u+2)^(0+256)
  6094  0231  085F               	movf	(logf@ix+1)^(0+256),w
  6095  0232  00D7               	movwf	(logf@u+1)^(0+256)
  6096  0233  085E               	movf	logf@ix^(0+256),w
  6097  0234  00D6               	movwf	logf@u^(0+256)
  6098  0235                     l6327:
  6099  0235  0859               	movf	(logf@u+3)^(0+256),w
  6100  0236  0021               	movlb	1	; select bank1
  6101  0237  00DA               	movwf	(logf@x+3)^(0+128)
  6102  0238  0022               	movlb	2	; select bank2
  6103  0239  0858               	movf	(logf@u+2)^(0+256),w
  6104  023A  0021               	movlb	1	; select bank1
  6105  023B  00D9               	movwf	(logf@x+2)^(0+128)
  6106  023C  0022               	movlb	2	; select bank2
  6107  023D  0857               	movf	(logf@u+1)^(0+256),w
  6108  023E  0021               	movlb	1	; select bank1
  6109  023F  00D8               	movwf	(logf@x+1)^(0+128)
  6110  0240  0022               	movlb	2	; select bank2
  6111  0241  0856               	movf	logf@u^(0+256),w
  6112  0242  0021               	movlb	1	; select bank1
  6113  0243  00D7               	movwf	logf@x^(0+128)
  6114  0244                     l6329:
  6115  0244  30BF               	movlw	191
  6116  0245  0020               	movlb	0	; select bank0
  6117  0246  00BB               	movwf	___fladd@b+3
  6118  0247  3080               	movlw	128
  6119  0248  00BA               	movwf	___fladd@b+2
  6120  0249  3000               	movlw	0
  6121  024A  00B9               	movwf	___fladd@b+1
  6122  024B  3000               	movlw	0
  6123  024C  00B8               	movwf	___fladd@b
  6124  024D  0021               	movlb	1	; select bank1
  6125  024E  085A               	movf	(logf@x+3)^(0+128),w
  6126  024F  0020               	movlb	0	; select bank0
  6127  0250  00BF               	movwf	___fladd@a+3
  6128  0251  0021               	movlb	1	; select bank1
  6129  0252  0859               	movf	(logf@x+2)^(0+128),w
  6130  0253  0020               	movlb	0	; select bank0
  6131  0254  00BE               	movwf	___fladd@a+2
  6132  0255  0021               	movlb	1	; select bank1
  6133  0256  0858               	movf	(logf@x+1)^(0+128),w
  6134  0257  0020               	movlb	0	; select bank0
  6135  0258  00BD               	movwf	___fladd@a+1
  6136  0259  0021               	movlb	1	; select bank1
  6137  025A  0857               	movf	logf@x^(0+128),w
  6138  025B  0020               	movlb	0	; select bank0
  6139  025C  00BC               	movwf	___fladd@a
  6140  025D  3195  25C8  3180   	fcall	___fladd
  6141  0260  0020               	movlb	0	; select bank0
  6142  0261  083B               	movf	?___fladd+3,w
  6143  0262  0022               	movlb	2	; select bank2
  6144  0263  00DD               	movwf	(logf@f+3)^(0+256)
  6145  0264  0020               	movlb	0	; select bank0
  6146  0265  083A               	movf	?___fladd+2,w
  6147  0266  0022               	movlb	2	; select bank2
  6148  0267  00DC               	movwf	(logf@f+2)^(0+256)
  6149  0268  0020               	movlb	0	; select bank0
  6150  0269  0839               	movf	?___fladd+1,w
  6151  026A  0022               	movlb	2	; select bank2
  6152  026B  00DB               	movwf	(logf@f+1)^(0+256)
  6153  026C  0020               	movlb	0	; select bank0
  6154  026D  0838               	movf	?___fladd,w
  6155  026E  0022               	movlb	2	; select bank2
  6156  026F  00DA               	movwf	logf@f^(0+256)
  6157  0270                     l6331:
  6158  0270  3040               	movlw	64
  6159  0271  0020               	movlb	0	; select bank0
  6160  0272  00BB               	movwf	___fladd@b+3
  6161  0273  3000               	movlw	0
  6162  0274  00BA               	movwf	___fladd@b+2
  6163  0275  3000               	movlw	0
  6164  0276  00B9               	movwf	___fladd@b+1
  6165  0277  3000               	movlw	0
  6166  0278  00B8               	movwf	___fladd@b
  6167  0279  0022               	movlb	2	; select bank2
  6168  027A  085D               	movf	(logf@f+3)^(0+256),w
  6169  027B  0020               	movlb	0	; select bank0
  6170  027C  00BF               	movwf	___fladd@a+3
  6171  027D  0022               	movlb	2	; select bank2
  6172  027E  085C               	movf	(logf@f+2)^(0+256),w
  6173  027F  0020               	movlb	0	; select bank0
  6174  0280  00BE               	movwf	___fladd@a+2
  6175  0281  0022               	movlb	2	; select bank2
  6176  0282  085B               	movf	(logf@f+1)^(0+256),w
  6177  0283  0020               	movlb	0	; select bank0
  6178  0284  00BD               	movwf	___fladd@a+1
  6179  0285  0022               	movlb	2	; select bank2
  6180  0286  085A               	movf	logf@f^(0+256),w
  6181  0287  0020               	movlb	0	; select bank0
  6182  0288  00BC               	movwf	___fladd@a
  6183  0289  3195  25C8  3180   	fcall	___fladd
  6184  028C  0020               	movlb	0	; select bank0
  6185  028D  083B               	movf	?___fladd+3,w
  6186  028E  0021               	movlb	1	; select bank1
  6187  028F  00C0               	movwf	(___fldiv@a+3)^(0+128)
  6188  0290  0020               	movlb	0	; select bank0
  6189  0291  083A               	movf	?___fladd+2,w
  6190  0292  0021               	movlb	1	; select bank1
  6191  0293  00BF               	movwf	(___fldiv@a+2)^(0+128)
  6192  0294  0020               	movlb	0	; select bank0
  6193  0295  0839               	movf	?___fladd+1,w
  6194  0296  0021               	movlb	1	; select bank1
  6195  0297  00BE               	movwf	(___fldiv@a+1)^(0+128)
  6196  0298  0020               	movlb	0	; select bank0
  6197  0299  0838               	movf	?___fladd,w
  6198  029A  0021               	movlb	1	; select bank1
  6199  029B  00BD               	movwf	___fldiv@a^(0+128)
  6200  029C  0022               	movlb	2	; select bank2
  6201  029D  085D               	movf	(logf@f+3)^(0+256),w
  6202  029E  0021               	movlb	1	; select bank1
  6203  029F  00C4               	movwf	(___fldiv@b+3)^(0+128)
  6204  02A0  0022               	movlb	2	; select bank2
  6205  02A1  085C               	movf	(logf@f+2)^(0+256),w
  6206  02A2  0021               	movlb	1	; select bank1
  6207  02A3  00C3               	movwf	(___fldiv@b+2)^(0+128)
  6208  02A4  0022               	movlb	2	; select bank2
  6209  02A5  085B               	movf	(logf@f+1)^(0+256),w
  6210  02A6  0021               	movlb	1	; select bank1
  6211  02A7  00C2               	movwf	(___fldiv@b+1)^(0+128)
  6212  02A8  0022               	movlb	2	; select bank2
  6213  02A9  085A               	movf	logf@f^(0+256),w
  6214  02AA  0021               	movlb	1	; select bank1
  6215  02AB  00C1               	movwf	___fldiv@b^(0+128)
  6216  02AC  3186  261F  3180   	fcall	___fldiv
  6217  02AF  0021               	movlb	1	; select bank1
  6218  02B0  0840               	movf	(?___fldiv+3)^(0+128),w
  6219  02B1  0022               	movlb	2	; select bank2
  6220  02B2  00C9               	movwf	(logf@s+3)^(0+256)
  6221  02B3  0021               	movlb	1	; select bank1
  6222  02B4  083F               	movf	(?___fldiv+2)^(0+128),w
  6223  02B5  0022               	movlb	2	; select bank2
  6224  02B6  00C8               	movwf	(logf@s+2)^(0+256)
  6225  02B7  0021               	movlb	1	; select bank1
  6226  02B8  083E               	movf	(?___fldiv+1)^(0+128),w
  6227  02B9  0022               	movlb	2	; select bank2
  6228  02BA  00C7               	movwf	(logf@s+1)^(0+256)
  6229  02BB  0021               	movlb	1	; select bank1
  6230  02BC  083D               	movf	?___fldiv^(0+128),w
  6231  02BD  0022               	movlb	2	; select bank2
  6232  02BE  00C6               	movwf	logf@s^(0+256)
  6233  02BF                     l6333:
  6234  02BF  0849               	movf	(logf@s+3)^(0+256),w
  6235  02C0  0021               	movlb	1	; select bank1
  6236  02C1  00AB               	movwf	(___flmul@b+3)^(0+128)
  6237  02C2  0022               	movlb	2	; select bank2
  6238  02C3  0848               	movf	(logf@s+2)^(0+256),w
  6239  02C4  0021               	movlb	1	; select bank1
  6240  02C5  00AA               	movwf	(___flmul@b+2)^(0+128)
  6241  02C6  0022               	movlb	2	; select bank2
  6242  02C7  0847               	movf	(logf@s+1)^(0+256),w
  6243  02C8  0021               	movlb	1	; select bank1
  6244  02C9  00A9               	movwf	(___flmul@b+1)^(0+128)
  6245  02CA  0022               	movlb	2	; select bank2
  6246  02CB  0846               	movf	logf@s^(0+256),w
  6247  02CC  0021               	movlb	1	; select bank1
  6248  02CD  00A8               	movwf	___flmul@b^(0+128)
  6249  02CE  0022               	movlb	2	; select bank2
  6250  02CF  0849               	movf	(logf@s+3)^(0+256),w
  6251  02D0  0021               	movlb	1	; select bank1
  6252  02D1  00AF               	movwf	(___flmul@a+3)^(0+128)
  6253  02D2  0022               	movlb	2	; select bank2
  6254  02D3  0848               	movf	(logf@s+2)^(0+256),w
  6255  02D4  0021               	movlb	1	; select bank1
  6256  02D5  00AE               	movwf	(___flmul@a+2)^(0+128)
  6257  02D6  0022               	movlb	2	; select bank2
  6258  02D7  0847               	movf	(logf@s+1)^(0+256),w
  6259  02D8  0021               	movlb	1	; select bank1
  6260  02D9  00AD               	movwf	(___flmul@a+1)^(0+128)
  6261  02DA  0022               	movlb	2	; select bank2
  6262  02DB  0846               	movf	logf@s^(0+256),w
  6263  02DC  0021               	movlb	1	; select bank1
  6264  02DD  00AC               	movwf	___flmul@a^(0+128)
  6265  02DE  3189  21A4  3180   	fcall	___flmul
  6266  02E1  0021               	movlb	1	; select bank1
  6267  02E2  082B               	movf	(?___flmul+3)^(0+128),w
  6268  02E3  0022               	movlb	2	; select bank2
  6269  02E4  00CD               	movwf	(logf@z+3)^(0+256)
  6270  02E5  0021               	movlb	1	; select bank1
  6271  02E6  082A               	movf	(?___flmul+2)^(0+128),w
  6272  02E7  0022               	movlb	2	; select bank2
  6273  02E8  00CC               	movwf	(logf@z+2)^(0+256)
  6274  02E9  0021               	movlb	1	; select bank1
  6275  02EA  0829               	movf	(?___flmul+1)^(0+128),w
  6276  02EB  0022               	movlb	2	; select bank2
  6277  02EC  00CB               	movwf	(logf@z+1)^(0+256)
  6278  02ED  0021               	movlb	1	; select bank1
  6279  02EE  0828               	movf	?___flmul^(0+128),w
  6280  02EF  0022               	movlb	2	; select bank2
  6281  02F0  00CA               	movwf	logf@z^(0+256)
  6282  02F1                     l6335:
  6283  02F1  084D               	movf	(logf@z+3)^(0+256),w
  6284  02F2  0021               	movlb	1	; select bank1
  6285  02F3  00AB               	movwf	(___flmul@b+3)^(0+128)
  6286  02F4  0022               	movlb	2	; select bank2
  6287  02F5  084C               	movf	(logf@z+2)^(0+256),w
  6288  02F6  0021               	movlb	1	; select bank1
  6289  02F7  00AA               	movwf	(___flmul@b+2)^(0+128)
  6290  02F8  0022               	movlb	2	; select bank2
  6291  02F9  084B               	movf	(logf@z+1)^(0+256),w
  6292  02FA  0021               	movlb	1	; select bank1
  6293  02FB  00A9               	movwf	(___flmul@b+1)^(0+128)
  6294  02FC  0022               	movlb	2	; select bank2
  6295  02FD  084A               	movf	logf@z^(0+256),w
  6296  02FE  0021               	movlb	1	; select bank1
  6297  02FF  00A8               	movwf	___flmul@b^(0+128)
  6298  0300  0022               	movlb	2	; select bank2
  6299  0301  084D               	movf	(logf@z+3)^(0+256),w
  6300  0302  0021               	movlb	1	; select bank1
  6301  0303  00AF               	movwf	(___flmul@a+3)^(0+128)
  6302  0304  0022               	movlb	2	; select bank2
  6303  0305  084C               	movf	(logf@z+2)^(0+256),w
  6304  0306  0021               	movlb	1	; select bank1
  6305  0307  00AE               	movwf	(___flmul@a+2)^(0+128)
  6306  0308  0022               	movlb	2	; select bank2
  6307  0309  084B               	movf	(logf@z+1)^(0+256),w
  6308  030A  0021               	movlb	1	; select bank1
  6309  030B  00AD               	movwf	(___flmul@a+1)^(0+128)
  6310  030C  0022               	movlb	2	; select bank2
  6311  030D  084A               	movf	logf@z^(0+256),w
  6312  030E  0021               	movlb	1	; select bank1
  6313  030F  00AC               	movwf	___flmul@a^(0+128)
  6314  0310  3189  21A4  3180   	fcall	___flmul
  6315  0313  0021               	movlb	1	; select bank1
  6316  0314  082B               	movf	(?___flmul+3)^(0+128),w
  6317  0315  0022               	movlb	2	; select bank2
  6318  0316  00D1               	movwf	(logf@w+3)^(0+256)
  6319  0317  0021               	movlb	1	; select bank1
  6320  0318  082A               	movf	(?___flmul+2)^(0+128),w
  6321  0319  0022               	movlb	2	; select bank2
  6322  031A  00D0               	movwf	(logf@w+2)^(0+256)
  6323  031B  0021               	movlb	1	; select bank1
  6324  031C  0829               	movf	(?___flmul+1)^(0+128),w
  6325  031D  0022               	movlb	2	; select bank2
  6326  031E  00CF               	movwf	(logf@w+1)^(0+256)
  6327  031F  0021               	movlb	1	; select bank1
  6328  0320  0828               	movf	?___flmul^(0+128),w
  6329  0321  0022               	movlb	2	; select bank2
  6330  0322  00CE               	movwf	logf@w^(0+256)
  6331  0323                     l6337:
  6332  0323  303E               	movlw	62
  6333  0324  0020               	movlb	0	; select bank0
  6334  0325  00BB               	movwf	___fladd@b+3
  6335  0326  30CC               	movlw	204
  6336  0327  00BA               	movwf	___fladd@b+2
  6337  0328  30CE               	movlw	206
  6338  0329  00B9               	movwf	___fladd@b+1
  6339  032A  3013               	movlw	19
  6340  032B  00B8               	movwf	___fladd@b
  6341  032C  303E               	movlw	62
  6342  032D  0021               	movlb	1	; select bank1
  6343  032E  00AB               	movwf	(___flmul@b+3)^(0+128)
  6344  032F  3078               	movlw	120
  6345  0330  00AA               	movwf	(___flmul@b+2)^(0+128)
  6346  0331  309E               	movlw	158
  6347  0332  00A9               	movwf	(___flmul@b+1)^(0+128)
  6348  0333  3026               	movlw	38
  6349  0334  00A8               	movwf	___flmul@b^(0+128)
  6350  0335  0022               	movlb	2	; select bank2
  6351  0336  0851               	movf	(logf@w+3)^(0+256),w
  6352  0337  0021               	movlb	1	; select bank1
  6353  0338  00AF               	movwf	(___flmul@a+3)^(0+128)
  6354  0339  0022               	movlb	2	; select bank2
  6355  033A  0850               	movf	(logf@w+2)^(0+256),w
  6356  033B  0021               	movlb	1	; select bank1
  6357  033C  00AE               	movwf	(___flmul@a+2)^(0+128)
  6358  033D  0022               	movlb	2	; select bank2
  6359  033E  084F               	movf	(logf@w+1)^(0+256),w
  6360  033F  0021               	movlb	1	; select bank1
  6361  0340  00AD               	movwf	(___flmul@a+1)^(0+128)
  6362  0341  0022               	movlb	2	; select bank2
  6363  0342  084E               	movf	logf@w^(0+256),w
  6364  0343  0021               	movlb	1	; select bank1
  6365  0344  00AC               	movwf	___flmul@a^(0+128)
  6366  0345  3189  21A4  3180   	fcall	___flmul
  6367  0348  0021               	movlb	1	; select bank1
  6368  0349  082B               	movf	(?___flmul+3)^(0+128),w
  6369  034A  0020               	movlb	0	; select bank0
  6370  034B  00BF               	movwf	___fladd@a+3
  6371  034C  0021               	movlb	1	; select bank1
  6372  034D  082A               	movf	(?___flmul+2)^(0+128),w
  6373  034E  0020               	movlb	0	; select bank0
  6374  034F  00BE               	movwf	___fladd@a+2
  6375  0350  0021               	movlb	1	; select bank1
  6376  0351  0829               	movf	(?___flmul+1)^(0+128),w
  6377  0352  0020               	movlb	0	; select bank0
  6378  0353  00BD               	movwf	___fladd@a+1
  6379  0354  0021               	movlb	1	; select bank1
  6380  0355  0828               	movf	?___flmul^(0+128),w
  6381  0356  0020               	movlb	0	; select bank0
  6382  0357  00BC               	movwf	___fladd@a
  6383  0358  3195  25C8  3180   	fcall	___fladd
  6384  035B  0020               	movlb	0	; select bank0
  6385  035C  083B               	movf	?___fladd+3,w
  6386  035D  0022               	movlb	2	; select bank2
  6387  035E  00D5               	movwf	(_logf$2277+3)^(0+256)
  6388  035F  0020               	movlb	0	; select bank0
  6389  0360  083A               	movf	?___fladd+2,w
  6390  0361  0022               	movlb	2	; select bank2
  6391  0362  00D4               	movwf	(_logf$2277+2)^(0+256)
  6392  0363  0020               	movlb	0	; select bank0
  6393  0364  0839               	movf	?___fladd+1,w
  6394  0365  0022               	movlb	2	; select bank2
  6395  0366  00D3               	movwf	(_logf$2277+1)^(0+256)
  6396  0367  0020               	movlb	0	; select bank0
  6397  0368  0838               	movf	?___fladd,w
  6398  0369  0022               	movlb	2	; select bank2
  6399  036A  00D2               	movwf	_logf$2277^(0+256)
  6400  036B                     l6339:
  6401  036B  0851               	movf	(logf@w+3)^(0+256),w
  6402  036C  0021               	movlb	1	; select bank1
  6403  036D  00AB               	movwf	(___flmul@b+3)^(0+128)
  6404  036E  0022               	movlb	2	; select bank2
  6405  036F  0850               	movf	(logf@w+2)^(0+256),w
  6406  0370  0021               	movlb	1	; select bank1
  6407  0371  00AA               	movwf	(___flmul@b+2)^(0+128)
  6408  0372  0022               	movlb	2	; select bank2
  6409  0373  084F               	movf	(logf@w+1)^(0+256),w
  6410  0374  0021               	movlb	1	; select bank1
  6411  0375  00A9               	movwf	(___flmul@b+1)^(0+128)
  6412  0376  0022               	movlb	2	; select bank2
  6413  0377  084E               	movf	logf@w^(0+256),w
  6414  0378  0021               	movlb	1	; select bank1
  6415  0379  00A8               	movwf	___flmul@b^(0+128)
  6416  037A  0022               	movlb	2	; select bank2
  6417  037B  0855               	movf	(_logf$2277+3)^(0+256),w
  6418  037C  0021               	movlb	1	; select bank1
  6419  037D  00AF               	movwf	(___flmul@a+3)^(0+128)
  6420  037E  0022               	movlb	2	; select bank2
  6421  037F  0854               	movf	(_logf$2277+2)^(0+256),w
  6422  0380  0021               	movlb	1	; select bank1
  6423  0381  00AE               	movwf	(___flmul@a+2)^(0+128)
  6424  0382  0022               	movlb	2	; select bank2
  6425  0383  0853               	movf	(_logf$2277+1)^(0+256),w
  6426  0384  0021               	movlb	1	; select bank1
  6427  0385  00AD               	movwf	(___flmul@a+1)^(0+128)
  6428  0386  0022               	movlb	2	; select bank2
  6429  0387  0852               	movf	_logf$2277^(0+256),w
  6430  0388  0021               	movlb	1	; select bank1
  6431  0389  00AC               	movwf	___flmul@a^(0+128)
  6432  038A  3189  21A4  3180   	fcall	___flmul
  6433  038D  0021               	movlb	1	; select bank1
  6434  038E  082B               	movf	(?___flmul+3)^(0+128),w
  6435  038F  0022               	movlb	2	; select bank2
  6436  0390  00A7               	movwf	(logf@t1+3)^(0+256)
  6437  0391  0021               	movlb	1	; select bank1
  6438  0392  082A               	movf	(?___flmul+2)^(0+128),w
  6439  0393  0022               	movlb	2	; select bank2
  6440  0394  00A6               	movwf	(logf@t1+2)^(0+256)
  6441  0395  0021               	movlb	1	; select bank1
  6442  0396  0829               	movf	(?___flmul+1)^(0+128),w
  6443  0397  0022               	movlb	2	; select bank2
  6444  0398  00A5               	movwf	(logf@t1+1)^(0+256)
  6445  0399  0021               	movlb	1	; select bank1
  6446  039A  0828               	movf	?___flmul^(0+128),w
  6447  039B  0022               	movlb	2	; select bank2
  6448  039C  00A4               	movwf	logf@t1^(0+256)
  6449  039D                     l6341:
  6450  039D  303F               	movlw	63
  6451  039E  0020               	movlb	0	; select bank0
  6452  039F  00BB               	movwf	___fladd@b+3
  6453  03A0  302A               	movlw	42
  6454  03A1  00BA               	movwf	___fladd@b+2
  6455  03A2  30AA               	movlw	170
  6456  03A3  00B9               	movwf	___fladd@b+1
  6457  03A4  30AA               	movlw	170
  6458  03A5  00B8               	movwf	___fladd@b
  6459  03A6  303E               	movlw	62
  6460  03A7  0021               	movlb	1	; select bank1
  6461  03A8  00AB               	movwf	(___flmul@b+3)^(0+128)
  6462  03A9  3091               	movlw	145
  6463  03AA  00AA               	movwf	(___flmul@b+2)^(0+128)
  6464  03AB  30E9               	movlw	233
  6465  03AC  00A9               	movwf	(___flmul@b+1)^(0+128)
  6466  03AD  30EE               	movlw	238
  6467  03AE  00A8               	movwf	___flmul@b^(0+128)
  6468  03AF  0022               	movlb	2	; select bank2
  6469  03B0  0851               	movf	(logf@w+3)^(0+256),w
  6470  03B1  0021               	movlb	1	; select bank1
  6471  03B2  00AF               	movwf	(___flmul@a+3)^(0+128)
  6472  03B3  0022               	movlb	2	; select bank2
  6473  03B4  0850               	movf	(logf@w+2)^(0+256),w
  6474  03B5  0021               	movlb	1	; select bank1
  6475  03B6  00AE               	movwf	(___flmul@a+2)^(0+128)
  6476  03B7  0022               	movlb	2	; select bank2
  6477  03B8  084F               	movf	(logf@w+1)^(0+256),w
  6478  03B9  0021               	movlb	1	; select bank1
  6479  03BA  00AD               	movwf	(___flmul@a+1)^(0+128)
  6480  03BB  0022               	movlb	2	; select bank2
  6481  03BC  084E               	movf	logf@w^(0+256),w
  6482  03BD  0021               	movlb	1	; select bank1
  6483  03BE  00AC               	movwf	___flmul@a^(0+128)
  6484  03BF  3189  21A4  3180   	fcall	___flmul
  6485  03C2  0021               	movlb	1	; select bank1
  6486  03C3  082B               	movf	(?___flmul+3)^(0+128),w
  6487  03C4  0020               	movlb	0	; select bank0
  6488  03C5  00BF               	movwf	___fladd@a+3
  6489  03C6  0021               	movlb	1	; select bank1
  6490  03C7  082A               	movf	(?___flmul+2)^(0+128),w
  6491  03C8  0020               	movlb	0	; select bank0
  6492  03C9  00BE               	movwf	___fladd@a+2
  6493  03CA  0021               	movlb	1	; select bank1
  6494  03CB  0829               	movf	(?___flmul+1)^(0+128),w
  6495  03CC  0020               	movlb	0	; select bank0
  6496  03CD  00BD               	movwf	___fladd@a+1
  6497  03CE  0021               	movlb	1	; select bank1
  6498  03CF  0828               	movf	?___flmul^(0+128),w
  6499  03D0  0020               	movlb	0	; select bank0
  6500  03D1  00BC               	movwf	___fladd@a
  6501  03D2  3195  25C8  3180   	fcall	___fladd
  6502  03D5  0020               	movlb	0	; select bank0
  6503  03D6  083B               	movf	?___fladd+3,w
  6504  03D7  0022               	movlb	2	; select bank2
  6505  03D8  00D5               	movwf	(_logf$2277+3)^(0+256)
  6506  03D9  0020               	movlb	0	; select bank0
  6507  03DA  083A               	movf	?___fladd+2,w
  6508  03DB  0022               	movlb	2	; select bank2
  6509  03DC  00D4               	movwf	(_logf$2277+2)^(0+256)
  6510  03DD  0020               	movlb	0	; select bank0
  6511  03DE  0839               	movf	?___fladd+1,w
  6512  03DF  0022               	movlb	2	; select bank2
  6513  03E0  00D3               	movwf	(_logf$2277+1)^(0+256)
  6514  03E1  0020               	movlb	0	; select bank0
  6515  03E2  0838               	movf	?___fladd,w
  6516  03E3  0022               	movlb	2	; select bank2
  6517  03E4  00D2               	movwf	_logf$2277^(0+256)
  6518  03E5                     l6343:
  6519  03E5  084D               	movf	(logf@z+3)^(0+256),w
  6520  03E6  0021               	movlb	1	; select bank1
  6521  03E7  00AB               	movwf	(___flmul@b+3)^(0+128)
  6522  03E8  0022               	movlb	2	; select bank2
  6523  03E9  084C               	movf	(logf@z+2)^(0+256),w
  6524  03EA  0021               	movlb	1	; select bank1
  6525  03EB  00AA               	movwf	(___flmul@b+2)^(0+128)
  6526  03EC  0022               	movlb	2	; select bank2
  6527  03ED  084B               	movf	(logf@z+1)^(0+256),w
  6528  03EE  0021               	movlb	1	; select bank1
  6529  03EF  00A9               	movwf	(___flmul@b+1)^(0+128)
  6530  03F0  0022               	movlb	2	; select bank2
  6531  03F1  084A               	movf	logf@z^(0+256),w
  6532  03F2  0021               	movlb	1	; select bank1
  6533  03F3  00A8               	movwf	___flmul@b^(0+128)
  6534  03F4  0022               	movlb	2	; select bank2
  6535  03F5  0855               	movf	(_logf$2277+3)^(0+256),w
  6536  03F6  0021               	movlb	1	; select bank1
  6537  03F7  00AF               	movwf	(___flmul@a+3)^(0+128)
  6538  03F8  0022               	movlb	2	; select bank2
  6539  03F9  0854               	movf	(_logf$2277+2)^(0+256),w
  6540  03FA  0021               	movlb	1	; select bank1
  6541  03FB  00AE               	movwf	(___flmul@a+2)^(0+128)
  6542  03FC  0022               	movlb	2	; select bank2
  6543  03FD  0853               	movf	(_logf$2277+1)^(0+256),w
  6544  03FE  0021               	movlb	1	; select bank1
  6545  03FF  00AD               	movwf	(___flmul@a+1)^(0+128)
  6546  0400  0022               	movlb	2	; select bank2
  6547  0401  0852               	movf	_logf$2277^(0+256),w
  6548  0402  0021               	movlb	1	; select bank1
  6549  0403  00AC               	movwf	___flmul@a^(0+128)
  6550  0404  3189  21A4  3180   	fcall	___flmul
  6551  0407  0021               	movlb	1	; select bank1
  6552  0408  082B               	movf	(?___flmul+3)^(0+128),w
  6553  0409  0022               	movlb	2	; select bank2
  6554  040A  00AB               	movwf	(logf@t2+3)^(0+256)
  6555  040B  0021               	movlb	1	; select bank1
  6556  040C  082A               	movf	(?___flmul+2)^(0+128),w
  6557  040D  0022               	movlb	2	; select bank2
  6558  040E  00AA               	movwf	(logf@t2+2)^(0+256)
  6559  040F  0021               	movlb	1	; select bank1
  6560  0410  0829               	movf	(?___flmul+1)^(0+128),w
  6561  0411  0022               	movlb	2	; select bank2
  6562  0412  00A9               	movwf	(logf@t2+1)^(0+256)
  6563  0413  0021               	movlb	1	; select bank1
  6564  0414  0828               	movf	?___flmul^(0+128),w
  6565  0415  0022               	movlb	2	; select bank2
  6566  0416  00A8               	movwf	logf@t2^(0+256)
  6567  0417                     l6345:
  6568  0417  0827               	movf	(logf@t1+3)^(0+256),w
  6569  0418  0020               	movlb	0	; select bank0
  6570  0419  00BB               	movwf	___fladd@b+3
  6571  041A  0022               	movlb	2	; select bank2
  6572  041B  0826               	movf	(logf@t1+2)^(0+256),w
  6573  041C  0020               	movlb	0	; select bank0
  6574  041D  00BA               	movwf	___fladd@b+2
  6575  041E  0022               	movlb	2	; select bank2
  6576  041F  0825               	movf	(logf@t1+1)^(0+256),w
  6577  0420  0020               	movlb	0	; select bank0
  6578  0421  00B9               	movwf	___fladd@b+1
  6579  0422  0022               	movlb	2	; select bank2
  6580  0423  0824               	movf	logf@t1^(0+256),w
  6581  0424  0020               	movlb	0	; select bank0
  6582  0425  00B8               	movwf	___fladd@b
  6583  0426  0022               	movlb	2	; select bank2
  6584  0427  082B               	movf	(logf@t2+3)^(0+256),w
  6585  0428  0020               	movlb	0	; select bank0
  6586  0429  00BF               	movwf	___fladd@a+3
  6587  042A  0022               	movlb	2	; select bank2
  6588  042B  082A               	movf	(logf@t2+2)^(0+256),w
  6589  042C  0020               	movlb	0	; select bank0
  6590  042D  00BE               	movwf	___fladd@a+2
  6591  042E  0022               	movlb	2	; select bank2
  6592  042F  0829               	movf	(logf@t2+1)^(0+256),w
  6593  0430  0020               	movlb	0	; select bank0
  6594  0431  00BD               	movwf	___fladd@a+1
  6595  0432  0022               	movlb	2	; select bank2
  6596  0433  0828               	movf	logf@t2^(0+256),w
  6597  0434  0020               	movlb	0	; select bank0
  6598  0435  00BC               	movwf	___fladd@a
  6599  0436  3195  25C8  3180   	fcall	___fladd
  6600  0439  0020               	movlb	0	; select bank0
  6601  043A  083B               	movf	?___fladd+3,w
  6602  043B  0022               	movlb	2	; select bank2
  6603  043C  00A3               	movwf	(logf@R+3)^(0+256)
  6604  043D  0020               	movlb	0	; select bank0
  6605  043E  083A               	movf	?___fladd+2,w
  6606  043F  0022               	movlb	2	; select bank2
  6607  0440  00A2               	movwf	(logf@R+2)^(0+256)
  6608  0441  0020               	movlb	0	; select bank0
  6609  0442  0839               	movf	?___fladd+1,w
  6610  0443  0022               	movlb	2	; select bank2
  6611  0444  00A1               	movwf	(logf@R+1)^(0+256)
  6612  0445  0020               	movlb	0	; select bank0
  6613  0446  0838               	movf	?___fladd,w
  6614  0447  0022               	movlb	2	; select bank2
  6615  0448  00A0               	movwf	logf@R^(0+256)
  6616  0449                     l6347:
  6617  0449  303F               	movlw	63
  6618  044A  0021               	movlb	1	; select bank1
  6619  044B  00AB               	movwf	(___flmul@b+3)^(0+128)
  6620  044C  3000               	movlw	0
  6621  044D  00AA               	movwf	(___flmul@b+2)^(0+128)
  6622  044E  3000               	movlw	0
  6623  044F  00A9               	movwf	(___flmul@b+1)^(0+128)
  6624  0450  3000               	movlw	0
  6625  0451  00A8               	movwf	___flmul@b^(0+128)
  6626  0452  0022               	movlb	2	; select bank2
  6627  0453  085D               	movf	(logf@f+3)^(0+256),w
  6628  0454  0021               	movlb	1	; select bank1
  6629  0455  00AF               	movwf	(___flmul@a+3)^(0+128)
  6630  0456  0022               	movlb	2	; select bank2
  6631  0457  085C               	movf	(logf@f+2)^(0+256),w
  6632  0458  0021               	movlb	1	; select bank1
  6633  0459  00AE               	movwf	(___flmul@a+2)^(0+128)
  6634  045A  0022               	movlb	2	; select bank2
  6635  045B  085B               	movf	(logf@f+1)^(0+256),w
  6636  045C  0021               	movlb	1	; select bank1
  6637  045D  00AD               	movwf	(___flmul@a+1)^(0+128)
  6638  045E  0022               	movlb	2	; select bank2
  6639  045F  085A               	movf	logf@f^(0+256),w
  6640  0460  0021               	movlb	1	; select bank1
  6641  0461  00AC               	movwf	___flmul@a^(0+128)
  6642  0462  3189  21A4  3180   	fcall	___flmul
  6643  0465  0021               	movlb	1	; select bank1
  6644  0466  082B               	movf	(?___flmul+3)^(0+128),w
  6645  0467  0022               	movlb	2	; select bank2
  6646  0468  00D5               	movwf	(_logf$2277+3)^(0+256)
  6647  0469  0021               	movlb	1	; select bank1
  6648  046A  082A               	movf	(?___flmul+2)^(0+128),w
  6649  046B  0022               	movlb	2	; select bank2
  6650  046C  00D4               	movwf	(_logf$2277+2)^(0+256)
  6651  046D  0021               	movlb	1	; select bank1
  6652  046E  0829               	movf	(?___flmul+1)^(0+128),w
  6653  046F  0022               	movlb	2	; select bank2
  6654  0470  00D3               	movwf	(_logf$2277+1)^(0+256)
  6655  0471  0021               	movlb	1	; select bank1
  6656  0472  0828               	movf	?___flmul^(0+128),w
  6657  0473  0022               	movlb	2	; select bank2
  6658  0474  00D2               	movwf	_logf$2277^(0+256)
  6659  0475                     l6349:
  6660  0475  085D               	movf	(logf@f+3)^(0+256),w
  6661  0476  0021               	movlb	1	; select bank1
  6662  0477  00AB               	movwf	(___flmul@b+3)^(0+128)
  6663  0478  0022               	movlb	2	; select bank2
  6664  0479  085C               	movf	(logf@f+2)^(0+256),w
  6665  047A  0021               	movlb	1	; select bank1
  6666  047B  00AA               	movwf	(___flmul@b+2)^(0+128)
  6667  047C  0022               	movlb	2	; select bank2
  6668  047D  085B               	movf	(logf@f+1)^(0+256),w
  6669  047E  0021               	movlb	1	; select bank1
  6670  047F  00A9               	movwf	(___flmul@b+1)^(0+128)
  6671  0480  0022               	movlb	2	; select bank2
  6672  0481  085A               	movf	logf@f^(0+256),w
  6673  0482  0021               	movlb	1	; select bank1
  6674  0483  00A8               	movwf	___flmul@b^(0+128)
  6675  0484  0022               	movlb	2	; select bank2
  6676  0485  0855               	movf	(_logf$2277+3)^(0+256),w
  6677  0486  0021               	movlb	1	; select bank1
  6678  0487  00AF               	movwf	(___flmul@a+3)^(0+128)
  6679  0488  0022               	movlb	2	; select bank2
  6680  0489  0854               	movf	(_logf$2277+2)^(0+256),w
  6681  048A  0021               	movlb	1	; select bank1
  6682  048B  00AE               	movwf	(___flmul@a+2)^(0+128)
  6683  048C  0022               	movlb	2	; select bank2
  6684  048D  0853               	movf	(_logf$2277+1)^(0+256),w
  6685  048E  0021               	movlb	1	; select bank1
  6686  048F  00AD               	movwf	(___flmul@a+1)^(0+128)
  6687  0490  0022               	movlb	2	; select bank2
  6688  0491  0852               	movf	_logf$2277^(0+256),w
  6689  0492  0021               	movlb	1	; select bank1
  6690  0493  00AC               	movwf	___flmul@a^(0+128)
  6691  0494  3189  21A4  3180   	fcall	___flmul
  6692  0497  0021               	movlb	1	; select bank1
  6693  0498  082B               	movf	(?___flmul+3)^(0+128),w
  6694  0499  0022               	movlb	2	; select bank2
  6695  049A  00C1               	movwf	(logf@hfsq+3)^(0+256)
  6696  049B  0021               	movlb	1	; select bank1
  6697  049C  082A               	movf	(?___flmul+2)^(0+128),w
  6698  049D  0022               	movlb	2	; select bank2
  6699  049E  00C0               	movwf	(logf@hfsq+2)^(0+256)
  6700  049F  0021               	movlb	1	; select bank1
  6701  04A0  0829               	movf	(?___flmul+1)^(0+128),w
  6702  04A1  0022               	movlb	2	; select bank2
  6703  04A2  00BF               	movwf	(logf@hfsq+1)^(0+256)
  6704  04A3  0021               	movlb	1	; select bank1
  6705  04A4  0828               	movf	?___flmul^(0+128),w
  6706  04A5  0022               	movlb	2	; select bank2
  6707  04A6  00BE               	movwf	logf@hfsq^(0+256)
  6708  04A7                     l6351:
  6709  04A7  083C               	movf	logf@k^(0+256),w
  6710  04A8  0020               	movlb	0	; select bank0
  6711  04A9  00AA               	movwf	___xxtofl@val
  6712  04AA  0022               	movlb	2	; select bank2
  6713  04AB  083D               	movf	(logf@k+1)^(0+256),w
  6714  04AC  0020               	movlb	0	; select bank0
  6715  04AD  00AB               	movwf	___xxtofl@val+1
  6716  04AE  0D89               	rlf	9,f
  6717  04AF  3B89               	subwfb	9,f
  6718  04B0  0989               	comf	9,f
  6719  04B1  00AC               	movwf	___xxtofl@val+2
  6720  04B2  00AD               	movwf	___xxtofl@val+3
  6721  04B3  3001               	movlw	1
  6722  04B4  3192  2252  3180   	fcall	___xxtofl
  6723  04B7  0020               	movlb	0	; select bank0
  6724  04B8  082D               	movf	?___xxtofl+3,w
  6725  04B9  0022               	movlb	2	; select bank2
  6726  04BA  00C5               	movwf	(logf@dk+3)^(0+256)
  6727  04BB  0020               	movlb	0	; select bank0
  6728  04BC  082C               	movf	?___xxtofl+2,w
  6729  04BD  0022               	movlb	2	; select bank2
  6730  04BE  00C4               	movwf	(logf@dk+2)^(0+256)
  6731  04BF  0020               	movlb	0	; select bank0
  6732  04C0  082B               	movf	?___xxtofl+1,w
  6733  04C1  0022               	movlb	2	; select bank2
  6734  04C2  00C3               	movwf	(logf@dk+1)^(0+256)
  6735  04C3  0020               	movlb	0	; select bank0
  6736  04C4  082A               	movf	?___xxtofl,w
  6737  04C5  0022               	movlb	2	; select bank2
  6738  04C6  00C2               	movwf	logf@dk^(0+256)
  6739  04C7                     l6353:
  6740  04C7  0849               	movf	(logf@s+3)^(0+256),w
  6741  04C8  0021               	movlb	1	; select bank1
  6742  04C9  00AB               	movwf	(___flmul@b+3)^(0+128)
  6743  04CA  0022               	movlb	2	; select bank2
  6744  04CB  0848               	movf	(logf@s+2)^(0+256),w
  6745  04CC  0021               	movlb	1	; select bank1
  6746  04CD  00AA               	movwf	(___flmul@b+2)^(0+128)
  6747  04CE  0022               	movlb	2	; select bank2
  6748  04CF  0847               	movf	(logf@s+1)^(0+256),w
  6749  04D0  0021               	movlb	1	; select bank1
  6750  04D1  00A9               	movwf	(___flmul@b+1)^(0+128)
  6751  04D2  0022               	movlb	2	; select bank2
  6752  04D3  0846               	movf	logf@s^(0+256),w
  6753  04D4  0021               	movlb	1	; select bank1
  6754  04D5  00A8               	movwf	___flmul@b^(0+128)
  6755  04D6  0022               	movlb	2	; select bank2
  6756  04D7  0823               	movf	(logf@R+3)^(0+256),w
  6757  04D8  0020               	movlb	0	; select bank0
  6758  04D9  00BB               	movwf	___fladd@b+3
  6759  04DA  0022               	movlb	2	; select bank2
  6760  04DB  0822               	movf	(logf@R+2)^(0+256),w
  6761  04DC  0020               	movlb	0	; select bank0
  6762  04DD  00BA               	movwf	___fladd@b+2
  6763  04DE  0022               	movlb	2	; select bank2
  6764  04DF  0821               	movf	(logf@R+1)^(0+256),w
  6765  04E0  0020               	movlb	0	; select bank0
  6766  04E1  00B9               	movwf	___fladd@b+1
  6767  04E2  0022               	movlb	2	; select bank2
  6768  04E3  0820               	movf	logf@R^(0+256),w
  6769  04E4  0020               	movlb	0	; select bank0
  6770  04E5  00B8               	movwf	___fladd@b
  6771  04E6  0022               	movlb	2	; select bank2
  6772  04E7  0841               	movf	(logf@hfsq+3)^(0+256),w
  6773  04E8  0020               	movlb	0	; select bank0
  6774  04E9  00BF               	movwf	___fladd@a+3
  6775  04EA  0022               	movlb	2	; select bank2
  6776  04EB  0840               	movf	(logf@hfsq+2)^(0+256),w
  6777  04EC  0020               	movlb	0	; select bank0
  6778  04ED  00BE               	movwf	___fladd@a+2
  6779  04EE  0022               	movlb	2	; select bank2
  6780  04EF  083F               	movf	(logf@hfsq+1)^(0+256),w
  6781  04F0  0020               	movlb	0	; select bank0
  6782  04F1  00BD               	movwf	___fladd@a+1
  6783  04F2  0022               	movlb	2	; select bank2
  6784  04F3  083E               	movf	logf@hfsq^(0+256),w
  6785  04F4  0020               	movlb	0	; select bank0
  6786  04F5  00BC               	movwf	___fladd@a
  6787  04F6  3195  25C8  3180   	fcall	___fladd
  6788  04F9  0020               	movlb	0	; select bank0
  6789  04FA  083B               	movf	?___fladd+3,w
  6790  04FB  0021               	movlb	1	; select bank1
  6791  04FC  00AF               	movwf	(___flmul@a+3)^(0+128)
  6792  04FD  0020               	movlb	0	; select bank0
  6793  04FE  083A               	movf	?___fladd+2,w
  6794  04FF  0021               	movlb	1	; select bank1
  6795  0500  00AE               	movwf	(___flmul@a+2)^(0+128)
  6796  0501  0020               	movlb	0	; select bank0
  6797  0502  0839               	movf	?___fladd+1,w
  6798  0503  0021               	movlb	1	; select bank1
  6799  0504  00AD               	movwf	(___flmul@a+1)^(0+128)
  6800  0505  0020               	movlb	0	; select bank0
  6801  0506  0838               	movf	?___fladd,w
  6802  0507  0021               	movlb	1	; select bank1
  6803  0508  00AC               	movwf	___flmul@a^(0+128)
  6804  0509  3189  21A4  3180   	fcall	___flmul
  6805  050C  0021               	movlb	1	; select bank1
  6806  050D  082B               	movf	(?___flmul+3)^(0+128),w
  6807  050E  0022               	movlb	2	; select bank2
  6808  050F  00AF               	movwf	(_logf$2278+3)^(0+256)
  6809  0510  0021               	movlb	1	; select bank1
  6810  0511  082A               	movf	(?___flmul+2)^(0+128),w
  6811  0512  0022               	movlb	2	; select bank2
  6812  0513  00AE               	movwf	(_logf$2278+2)^(0+256)
  6813  0514  0021               	movlb	1	; select bank1
  6814  0515  0829               	movf	(?___flmul+1)^(0+128),w
  6815  0516  0022               	movlb	2	; select bank2
  6816  0517  00AD               	movwf	(_logf$2278+1)^(0+256)
  6817  0518  0021               	movlb	1	; select bank1
  6818  0519  0828               	movf	?___flmul^(0+128),w
  6819  051A  0022               	movlb	2	; select bank2
  6820  051B  00AC               	movwf	_logf$2278^(0+256)
  6821  051C                     l6355:
  6822  051C  3037               	movlw	55
  6823  051D  0021               	movlb	1	; select bank1
  6824  051E  00AB               	movwf	(___flmul@b+3)^(0+128)
  6825  051F  3017               	movlw	23
  6826  0520  00AA               	movwf	(___flmul@b+2)^(0+128)
  6827  0521  30F7               	movlw	247
  6828  0522  00A9               	movwf	(___flmul@b+1)^(0+128)
  6829  0523  30D1               	movlw	209
  6830  0524  00A8               	movwf	___flmul@b^(0+128)
  6831  0525  0022               	movlb	2	; select bank2
  6832  0526  0845               	movf	(logf@dk+3)^(0+256),w
  6833  0527  0021               	movlb	1	; select bank1
  6834  0528  00AF               	movwf	(___flmul@a+3)^(0+128)
  6835  0529  0022               	movlb	2	; select bank2
  6836  052A  0844               	movf	(logf@dk+2)^(0+256),w
  6837  052B  0021               	movlb	1	; select bank1
  6838  052C  00AE               	movwf	(___flmul@a+2)^(0+128)
  6839  052D  0022               	movlb	2	; select bank2
  6840  052E  0843               	movf	(logf@dk+1)^(0+256),w
  6841  052F  0021               	movlb	1	; select bank1
  6842  0530  00AD               	movwf	(___flmul@a+1)^(0+128)
  6843  0531  0022               	movlb	2	; select bank2
  6844  0532  0842               	movf	logf@dk^(0+256),w
  6845  0533  0021               	movlb	1	; select bank1
  6846  0534  00AC               	movwf	___flmul@a^(0+128)
  6847  0535  3189  21A4  3180   	fcall	___flmul
  6848  0538  0021               	movlb	1	; select bank1
  6849  0539  082B               	movf	(?___flmul+3)^(0+128),w
  6850  053A  0020               	movlb	0	; select bank0
  6851  053B  00BB               	movwf	___fladd@b+3
  6852  053C  0021               	movlb	1	; select bank1
  6853  053D  082A               	movf	(?___flmul+2)^(0+128),w
  6854  053E  0020               	movlb	0	; select bank0
  6855  053F  00BA               	movwf	___fladd@b+2
  6856  0540  0021               	movlb	1	; select bank1
  6857  0541  0829               	movf	(?___flmul+1)^(0+128),w
  6858  0542  0020               	movlb	0	; select bank0
  6859  0543  00B9               	movwf	___fladd@b+1
  6860  0544  0021               	movlb	1	; select bank1
  6861  0545  0828               	movf	?___flmul^(0+128),w
  6862  0546  0020               	movlb	0	; select bank0
  6863  0547  00B8               	movwf	___fladd@b
  6864  0548  0022               	movlb	2	; select bank2
  6865  0549  082F               	movf	(_logf$2278+3)^(0+256),w
  6866  054A  0020               	movlb	0	; select bank0
  6867  054B  00BF               	movwf	___fladd@a+3
  6868  054C  0022               	movlb	2	; select bank2
  6869  054D  082E               	movf	(_logf$2278+2)^(0+256),w
  6870  054E  0020               	movlb	0	; select bank0
  6871  054F  00BE               	movwf	___fladd@a+2
  6872  0550  0022               	movlb	2	; select bank2
  6873  0551  082D               	movf	(_logf$2278+1)^(0+256),w
  6874  0552  0020               	movlb	0	; select bank0
  6875  0553  00BD               	movwf	___fladd@a+1
  6876  0554  0022               	movlb	2	; select bank2
  6877  0555  082C               	movf	_logf$2278^(0+256),w
  6878  0556  0020               	movlb	0	; select bank0
  6879  0557  00BC               	movwf	___fladd@a
  6880  0558  3195  25C8  3180   	fcall	___fladd
  6881  055B  0020               	movlb	0	; select bank0
  6882  055C  083B               	movf	?___fladd+3,w
  6883  055D  0022               	movlb	2	; select bank2
  6884  055E  00B3               	movwf	(_logf$2279+3)^(0+256)
  6885  055F  0020               	movlb	0	; select bank0
  6886  0560  083A               	movf	?___fladd+2,w
  6887  0561  0022               	movlb	2	; select bank2
  6888  0562  00B2               	movwf	(_logf$2279+2)^(0+256)
  6889  0563  0020               	movlb	0	; select bank0
  6890  0564  0839               	movf	?___fladd+1,w
  6891  0565  0022               	movlb	2	; select bank2
  6892  0566  00B1               	movwf	(_logf$2279+1)^(0+256)
  6893  0567  0020               	movlb	0	; select bank0
  6894  0568  0838               	movf	?___fladd,w
  6895  0569  0022               	movlb	2	; select bank2
  6896  056A  00B0               	movwf	_logf$2279^(0+256)
  6897  056B                     l6357:
  6898  056B  0841               	movf	(logf@hfsq+3)^(0+256),w
  6899  056C  0021               	movlb	1	; select bank1
  6900  056D  00A3               	movwf	(___flsub@a+3)^(0+128)
  6901  056E  0022               	movlb	2	; select bank2
  6902  056F  0840               	movf	(logf@hfsq+2)^(0+256),w
  6903  0570  0021               	movlb	1	; select bank1
  6904  0571  00A2               	movwf	(___flsub@a+2)^(0+128)
  6905  0572  0022               	movlb	2	; select bank2
  6906  0573  083F               	movf	(logf@hfsq+1)^(0+256),w
  6907  0574  0021               	movlb	1	; select bank1
  6908  0575  00A1               	movwf	(___flsub@a+1)^(0+128)
  6909  0576  0022               	movlb	2	; select bank2
  6910  0577  083E               	movf	logf@hfsq^(0+256),w
  6911  0578  0021               	movlb	1	; select bank1
  6912  0579  00A0               	movwf	___flsub@a^(0+128)
  6913  057A  0022               	movlb	2	; select bank2
  6914  057B  0833               	movf	(_logf$2279+3)^(0+256),w
  6915  057C  0021               	movlb	1	; select bank1
  6916  057D  00A7               	movwf	(___flsub@b+3)^(0+128)
  6917  057E  0022               	movlb	2	; select bank2
  6918  057F  0832               	movf	(_logf$2279+2)^(0+256),w
  6919  0580  0021               	movlb	1	; select bank1
  6920  0581  00A6               	movwf	(___flsub@b+2)^(0+128)
  6921  0582  0022               	movlb	2	; select bank2
  6922  0583  0831               	movf	(_logf$2279+1)^(0+256),w
  6923  0584  0021               	movlb	1	; select bank1
  6924  0585  00A5               	movwf	(___flsub@b+1)^(0+128)
  6925  0586  0022               	movlb	2	; select bank2
  6926  0587  0830               	movf	_logf$2279^(0+256),w
  6927  0588  0021               	movlb	1	; select bank1
  6928  0589  00A4               	movwf	___flsub@b^(0+128)
  6929  058A  319E  26D9  3180   	fcall	___flsub
  6930  058D  0021               	movlb	1	; select bank1
  6931  058E  0823               	movf	(?___flsub+3)^(0+128),w
  6932  058F  0022               	movlb	2	; select bank2
  6933  0590  00B7               	movwf	(_logf$2280+3)^(0+256)
  6934  0591  0021               	movlb	1	; select bank1
  6935  0592  0822               	movf	(?___flsub+2)^(0+128),w
  6936  0593  0022               	movlb	2	; select bank2
  6937  0594  00B6               	movwf	(_logf$2280+2)^(0+256)
  6938  0595  0021               	movlb	1	; select bank1
  6939  0596  0821               	movf	(?___flsub+1)^(0+128),w
  6940  0597  0022               	movlb	2	; select bank2
  6941  0598  00B5               	movwf	(_logf$2280+1)^(0+256)
  6942  0599  0021               	movlb	1	; select bank1
  6943  059A  0820               	movf	?___flsub^(0+128),w
  6944  059B  0022               	movlb	2	; select bank2
  6945  059C  00B4               	movwf	_logf$2280^(0+256)
  6946  059D                     l6359:
  6947  059D  085D               	movf	(logf@f+3)^(0+256),w
  6948  059E  0020               	movlb	0	; select bank0
  6949  059F  00BB               	movwf	___fladd@b+3
  6950  05A0  0022               	movlb	2	; select bank2
  6951  05A1  085C               	movf	(logf@f+2)^(0+256),w
  6952  05A2  0020               	movlb	0	; select bank0
  6953  05A3  00BA               	movwf	___fladd@b+2
  6954  05A4  0022               	movlb	2	; select bank2
  6955  05A5  085B               	movf	(logf@f+1)^(0+256),w
  6956  05A6  0020               	movlb	0	; select bank0
  6957  05A7  00B9               	movwf	___fladd@b+1
  6958  05A8  0022               	movlb	2	; select bank2
  6959  05A9  085A               	movf	logf@f^(0+256),w
  6960  05AA  0020               	movlb	0	; select bank0
  6961  05AB  00B8               	movwf	___fladd@b
  6962  05AC  0022               	movlb	2	; select bank2
  6963  05AD  0837               	movf	(_logf$2280+3)^(0+256),w
  6964  05AE  0020               	movlb	0	; select bank0
  6965  05AF  00BF               	movwf	___fladd@a+3
  6966  05B0  0022               	movlb	2	; select bank2
  6967  05B1  0836               	movf	(_logf$2280+2)^(0+256),w
  6968  05B2  0020               	movlb	0	; select bank0
  6969  05B3  00BE               	movwf	___fladd@a+2
  6970  05B4  0022               	movlb	2	; select bank2
  6971  05B5  0835               	movf	(_logf$2280+1)^(0+256),w
  6972  05B6  0020               	movlb	0	; select bank0
  6973  05B7  00BD               	movwf	___fladd@a+1
  6974  05B8  0022               	movlb	2	; select bank2
  6975  05B9  0834               	movf	_logf$2280^(0+256),w
  6976  05BA  0020               	movlb	0	; select bank0
  6977  05BB  00BC               	movwf	___fladd@a
  6978  05BC  3195  25C8  3180   	fcall	___fladd
  6979  05BF  0020               	movlb	0	; select bank0
  6980  05C0  083B               	movf	?___fladd+3,w
  6981  05C1  0022               	movlb	2	; select bank2
  6982  05C2  00BB               	movwf	(_logf$2281+3)^(0+256)
  6983  05C3  0020               	movlb	0	; select bank0
  6984  05C4  083A               	movf	?___fladd+2,w
  6985  05C5  0022               	movlb	2	; select bank2
  6986  05C6  00BA               	movwf	(_logf$2281+2)^(0+256)
  6987  05C7  0020               	movlb	0	; select bank0
  6988  05C8  0839               	movf	?___fladd+1,w
  6989  05C9  0022               	movlb	2	; select bank2
  6990  05CA  00B9               	movwf	(_logf$2281+1)^(0+256)
  6991  05CB  0020               	movlb	0	; select bank0
  6992  05CC  0838               	movf	?___fladd,w
  6993  05CD  0022               	movlb	2	; select bank2
  6994  05CE  00B8               	movwf	_logf$2281^(0+256)
  6995  05CF                     l6361:
  6996  05CF  303F               	movlw	63
  6997  05D0  0021               	movlb	1	; select bank1
  6998  05D1  00AB               	movwf	(___flmul@b+3)^(0+128)
  6999  05D2  3031               	movlw	49
  7000  05D3  00AA               	movwf	(___flmul@b+2)^(0+128)
  7001  05D4  3071               	movlw	113
  7002  05D5  00A9               	movwf	(___flmul@b+1)^(0+128)
  7003  05D6  3080               	movlw	128
  7004  05D7  00A8               	movwf	___flmul@b^(0+128)
  7005  05D8  0022               	movlb	2	; select bank2
  7006  05D9  0845               	movf	(logf@dk+3)^(0+256),w
  7007  05DA  0021               	movlb	1	; select bank1
  7008  05DB  00AF               	movwf	(___flmul@a+3)^(0+128)
  7009  05DC  0022               	movlb	2	; select bank2
  7010  05DD  0844               	movf	(logf@dk+2)^(0+256),w
  7011  05DE  0021               	movlb	1	; select bank1
  7012  05DF  00AE               	movwf	(___flmul@a+2)^(0+128)
  7013  05E0  0022               	movlb	2	; select bank2
  7014  05E1  0843               	movf	(logf@dk+1)^(0+256),w
  7015  05E2  0021               	movlb	1	; select bank1
  7016  05E3  00AD               	movwf	(___flmul@a+1)^(0+128)
  7017  05E4  0022               	movlb	2	; select bank2
  7018  05E5  0842               	movf	logf@dk^(0+256),w
  7019  05E6  0021               	movlb	1	; select bank1
  7020  05E7  00AC               	movwf	___flmul@a^(0+128)
  7021  05E8  3189  21A4  3180   	fcall	___flmul
  7022  05EB  0021               	movlb	1	; select bank1
  7023  05EC  082B               	movf	(?___flmul+3)^(0+128),w
  7024  05ED  0020               	movlb	0	; select bank0
  7025  05EE  00BB               	movwf	___fladd@b+3
  7026  05EF  0021               	movlb	1	; select bank1
  7027  05F0  082A               	movf	(?___flmul+2)^(0+128),w
  7028  05F1  0020               	movlb	0	; select bank0
  7029  05F2  00BA               	movwf	___fladd@b+2
  7030  05F3  0021               	movlb	1	; select bank1
  7031  05F4  0829               	movf	(?___flmul+1)^(0+128),w
  7032  05F5  0020               	movlb	0	; select bank0
  7033  05F6  00B9               	movwf	___fladd@b+1
  7034  05F7  0021               	movlb	1	; select bank1
  7035  05F8  0828               	movf	?___flmul^(0+128),w
  7036  05F9  0020               	movlb	0	; select bank0
  7037  05FA  00B8               	movwf	___fladd@b
  7038  05FB  0022               	movlb	2	; select bank2
  7039  05FC  083B               	movf	(_logf$2281+3)^(0+256),w
  7040  05FD  0020               	movlb	0	; select bank0
  7041  05FE  00BF               	movwf	___fladd@a+3
  7042  05FF  0022               	movlb	2	; select bank2
  7043  0600  083A               	movf	(_logf$2281+2)^(0+256),w
  7044  0601  0020               	movlb	0	; select bank0
  7045  0602  00BE               	movwf	___fladd@a+2
  7046  0603  0022               	movlb	2	; select bank2
  7047  0604  0839               	movf	(_logf$2281+1)^(0+256),w
  7048  0605  0020               	movlb	0	; select bank0
  7049  0606  00BD               	movwf	___fladd@a+1
  7050  0607  0022               	movlb	2	; select bank2
  7051  0608  0838               	movf	_logf$2281^(0+256),w
  7052  0609  0020               	movlb	0	; select bank0
  7053  060A  00BC               	movwf	___fladd@a
  7054  060B  3195  25C8  3180   	fcall	___fladd
  7055  060E  0020               	movlb	0	; select bank0
  7056  060F  083B               	movf	?___fladd+3,w
  7057  0610  0021               	movlb	1	; select bank1
  7058  0611  00DA               	movwf	(?_logf+3)^(0+128)
  7059  0612  0020               	movlb	0	; select bank0
  7060  0613  083A               	movf	?___fladd+2,w
  7061  0614  0021               	movlb	1	; select bank1
  7062  0615  00D9               	movwf	(?_logf+2)^(0+128)
  7063  0616  0020               	movlb	0	; select bank0
  7064  0617  0839               	movf	?___fladd+1,w
  7065  0618  0021               	movlb	1	; select bank1
  7066  0619  00D8               	movwf	(?_logf+1)^(0+128)
  7067  061A  0020               	movlb	0	; select bank0
  7068  061B  0838               	movf	?___fladd,w
  7069  061C  0021               	movlb	1	; select bank1
  7070  061D  00D7               	movwf	?_logf^(0+128)
  7071  061E                     l1532:
  7072  061E  0008               	return
  7073  061F                     __end_of_logf:
  7074                           
  7075                           	psect	text5
  7076  1ED9                     __ptext5:	
  7077 ;; *************** function ___flsub *****************
  7078 ;; Defined at:
  7079 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  a               4    0[BANK1 ] float 
  7082 ;;  b               4    4[BANK1 ] float 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  4    0[BANK1 ] float 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7094 ;;      Params:         0       0       8       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0
  7097 ;;      Totals:         0       0       8       0       0       0       0       0
  7098 ;;Total ram usage:        8 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 5
  7101 ;; This function calls:
  7102 ;;		___fladd
  7103 ;; This function is called by:
  7104 ;;		_map
  7105 ;;		_get_ntc_temperature
  7106 ;;		_logf
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110  1ED9                     ___flsub:	
  7111                           ;psect for function ___flsub
  7112                           
  7113  1ED9                     l5915:	
  7114                           ;incstack = 0
  7115                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7116                           
  7117  1ED9  3080               	movlw	128
  7118  1EDA  0021               	movlb	1	; select bank1
  7119  1EDB  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7120  1EDC                     l5917:
  7121  1EDC  0827               	movf	(___flsub@b+3)^(0+128),w
  7122  1EDD  0020               	movlb	0	; select bank0
  7123  1EDE  00BB               	movwf	___fladd@b+3
  7124  1EDF  0021               	movlb	1	; select bank1
  7125  1EE0  0826               	movf	(___flsub@b+2)^(0+128),w
  7126  1EE1  0020               	movlb	0	; select bank0
  7127  1EE2  00BA               	movwf	___fladd@b+2
  7128  1EE3  0021               	movlb	1	; select bank1
  7129  1EE4  0825               	movf	(___flsub@b+1)^(0+128),w
  7130  1EE5  0020               	movlb	0	; select bank0
  7131  1EE6  00B9               	movwf	___fladd@b+1
  7132  1EE7  0021               	movlb	1	; select bank1
  7133  1EE8  0824               	movf	___flsub@b^(0+128),w
  7134  1EE9  0020               	movlb	0	; select bank0
  7135  1EEA  00B8               	movwf	___fladd@b
  7136  1EEB  0021               	movlb	1	; select bank1
  7137  1EEC  0823               	movf	(___flsub@a+3)^(0+128),w
  7138  1EED  0020               	movlb	0	; select bank0
  7139  1EEE  00BF               	movwf	___fladd@a+3
  7140  1EEF  0021               	movlb	1	; select bank1
  7141  1EF0  0822               	movf	(___flsub@a+2)^(0+128),w
  7142  1EF1  0020               	movlb	0	; select bank0
  7143  1EF2  00BE               	movwf	___fladd@a+2
  7144  1EF3  0021               	movlb	1	; select bank1
  7145  1EF4  0821               	movf	(___flsub@a+1)^(0+128),w
  7146  1EF5  0020               	movlb	0	; select bank0
  7147  1EF6  00BD               	movwf	___fladd@a+1
  7148  1EF7  0021               	movlb	1	; select bank1
  7149  1EF8  0820               	movf	___flsub@a^(0+128),w
  7150  1EF9  0020               	movlb	0	; select bank0
  7151  1EFA  00BC               	movwf	___fladd@a
  7152  1EFB  3195  25C8  319E   	fcall	___fladd
  7153  1EFE  0020               	movlb	0	; select bank0
  7154  1EFF  083B               	movf	?___fladd+3,w
  7155  1F00  0021               	movlb	1	; select bank1
  7156  1F01  00A3               	movwf	(?___flsub+3)^(0+128)
  7157  1F02  0020               	movlb	0	; select bank0
  7158  1F03  083A               	movf	?___fladd+2,w
  7159  1F04  0021               	movlb	1	; select bank1
  7160  1F05  00A2               	movwf	(?___flsub+2)^(0+128)
  7161  1F06  0020               	movlb	0	; select bank0
  7162  1F07  0839               	movf	?___fladd+1,w
  7163  1F08  0021               	movlb	1	; select bank1
  7164  1F09  00A1               	movwf	(?___flsub+1)^(0+128)
  7165  1F0A  0020               	movlb	0	; select bank0
  7166  1F0B  0838               	movf	?___fladd,w
  7167  1F0C  0021               	movlb	1	; select bank1
  7168  1F0D  00A0               	movwf	?___flsub^(0+128)
  7169  1F0E                     l1400:
  7170  1F0E  0008               	return
  7171  1F0F                     __end_of___flsub:
  7172                           
  7173                           	psect	text6
  7174  15C8                     __ptext6:	
  7175 ;; *************** function ___fladd *****************
  7176 ;; Defined at:
  7177 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  b               4   24[BANK0 ] float 
  7180 ;;  a               4   28[BANK0 ] float 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  grs             1   43[BANK0 ] unsigned char 
  7183 ;;  bexp            1   42[BANK0 ] unsigned char 
  7184 ;;  aexp            1   41[BANK0 ] unsigned char 
  7185 ;;  signs           1   40[BANK0 ] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  4   24[BANK0 ] unsigned char 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7195 ;;      Params:         0       8       0       0       0       0       0       0
  7196 ;;      Locals:         0       4       0       0       0       0       0       0
  7197 ;;      Temps:          0       8       0       0       0       0       0       0
  7198 ;;      Totals:         0      20       0       0       0       0       0       0
  7199 ;;Total ram usage:       20 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 4
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_map
  7206 ;;		_get_ntc_temperature
  7207 ;;		___flsub
  7208 ;;		_logf
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212  15C8                     ___fladd:	
  7213                           ;psect for function ___fladd
  7214                           
  7215  15C8                     l5707:	
  7216                           ;incstack = 0
  7217                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7218                           
  7219  15C8  0020               	movlb	0	; select bank0
  7220  15C9  083B               	movf	___fladd@b+3,w
  7221  15CA  3980               	andlw	128
  7222  15CB  00C0               	movwf	??___fladd
  7223  15CC  0840               	movf	??___fladd,w
  7224  15CD  00C8               	movwf	___fladd@signs
  7225  15CE                     l5709:
  7226  15CE  353B               	lslf	___fladd@b+3,w
  7227  15CF  00C0               	movwf	??___fladd
  7228  15D0  0840               	movf	??___fladd,w
  7229  15D1  00CA               	movwf	___fladd@bexp
  7230  15D2                     l5711:
  7231  15D2  1FBA               	btfss	___fladd@b+2,7
  7232  15D3  2DD5               	goto	u4771
  7233  15D4  2DD6               	goto	u4770
  7234  15D5                     u4771:
  7235  15D5  2DD7               	goto	l5715
  7236  15D6                     u4770:
  7237  15D6                     l5713:
  7238  15D6  144A               	bsf	___fladd@bexp,0
  7239  15D7                     l5715:
  7240  15D7  084A               	movf	___fladd@bexp,w
  7241  15D8  1903               	btfsc	3,2
  7242  15D9  2DDB               	goto	u4781
  7243  15DA  2DDC               	goto	u4780
  7244  15DB                     u4781:
  7245  15DB  2DEC               	goto	l5725
  7246  15DC                     u4780:
  7247  15DC                     l5717:
  7248  15DC  0A4A               	incf	___fladd@bexp,w
  7249  15DD  1D03               	btfss	3,2
  7250  15DE  2DE0               	goto	u4791
  7251  15DF  2DE1               	goto	u4790
  7252  15E0                     u4791:
  7253  15E0  2DE9               	goto	l5721
  7254  15E1                     u4790:
  7255  15E1                     l5719:
  7256  15E1  3000               	movlw	0
  7257  15E2  00BB               	movwf	___fladd@b+3
  7258  15E3  3000               	movlw	0
  7259  15E4  00BA               	movwf	___fladd@b+2
  7260  15E5  3000               	movlw	0
  7261  15E6  00B9               	movwf	___fladd@b+1
  7262  15E7  3000               	movlw	0
  7263  15E8  00B8               	movwf	___fladd@b
  7264  15E9                     l5721:
  7265  15E9  17BA               	bsf	___fladd@b+2,7
  7266  15EA                     l5723:
  7267  15EA  01BB               	clrf	___fladd@b+3
  7268  15EB  2DF4               	goto	l5727
  7269  15EC                     l5725:
  7270  15EC  3000               	movlw	0
  7271  15ED  00BB               	movwf	___fladd@b+3
  7272  15EE  3000               	movlw	0
  7273  15EF  00BA               	movwf	___fladd@b+2
  7274  15F0  3000               	movlw	0
  7275  15F1  00B9               	movwf	___fladd@b+1
  7276  15F2  3000               	movlw	0
  7277  15F3  00B8               	movwf	___fladd@b
  7278  15F4                     l5727:
  7279  15F4  083F               	movf	___fladd@a+3,w
  7280  15F5  3980               	andlw	128
  7281  15F6  00C0               	movwf	??___fladd
  7282  15F7  0840               	movf	??___fladd,w
  7283  15F8  00C9               	movwf	___fladd@aexp
  7284  15F9                     l5729:
  7285  15F9  0849               	movf	___fladd@aexp,w
  7286  15FA  0648               	xorwf	___fladd@signs,w
  7287  15FB  1903               	skipnz
  7288  15FC  2DFE               	goto	u4801
  7289  15FD  2DFF               	goto	u4800
  7290  15FE                     u4801:
  7291  15FE  2E00               	goto	l5733
  7292  15FF                     u4800:
  7293  15FF                     l5731:
  7294  15FF  1748               	bsf	___fladd@signs,6
  7295  1600                     l5733:
  7296  1600  353F               	lslf	___fladd@a+3,w
  7297  1601  00C0               	movwf	??___fladd
  7298  1602  0840               	movf	??___fladd,w
  7299  1603  00C9               	movwf	___fladd@aexp
  7300  1604                     l5735:
  7301  1604  1FBE               	btfss	___fladd@a+2,7
  7302  1605  2E07               	goto	u4811
  7303  1606  2E08               	goto	u4810
  7304  1607                     u4811:
  7305  1607  2E09               	goto	l5739
  7306  1608                     u4810:
  7307  1608                     l5737:
  7308  1608  1449               	bsf	___fladd@aexp,0
  7309  1609                     l5739:
  7310  1609  0849               	movf	___fladd@aexp,w
  7311  160A  1903               	btfsc	3,2
  7312  160B  2E0D               	goto	u4821
  7313  160C  2E0E               	goto	u4820
  7314  160D                     u4821:
  7315  160D  2E1E               	goto	l5749
  7316  160E                     u4820:
  7317  160E                     l5741:
  7318  160E  0A49               	incf	___fladd@aexp,w
  7319  160F  1D03               	btfss	3,2
  7320  1610  2E12               	goto	u4831
  7321  1611  2E13               	goto	u4830
  7322  1612                     u4831:
  7323  1612  2E1B               	goto	l5745
  7324  1613                     u4830:
  7325  1613                     l5743:
  7326  1613  3000               	movlw	0
  7327  1614  00BF               	movwf	___fladd@a+3
  7328  1615  3000               	movlw	0
  7329  1616  00BE               	movwf	___fladd@a+2
  7330  1617  3000               	movlw	0
  7331  1618  00BD               	movwf	___fladd@a+1
  7332  1619  3000               	movlw	0
  7333  161A  00BC               	movwf	___fladd@a
  7334  161B                     l5745:
  7335  161B  17BE               	bsf	___fladd@a+2,7
  7336  161C                     l5747:
  7337  161C  01BF               	clrf	___fladd@a+3
  7338  161D  2E26               	goto	l1354
  7339  161E                     l5749:
  7340  161E  3000               	movlw	0
  7341  161F  00BF               	movwf	___fladd@a+3
  7342  1620  3000               	movlw	0
  7343  1621  00BE               	movwf	___fladd@a+2
  7344  1622  3000               	movlw	0
  7345  1623  00BD               	movwf	___fladd@a+1
  7346  1624  3000               	movlw	0
  7347  1625  00BC               	movwf	___fladd@a
  7348  1626                     l1354:
  7349  1626  084A               	movf	___fladd@bexp,w
  7350  1627  0249               	subwf	___fladd@aexp,w
  7351  1628  1803               	skipnc
  7352  1629  2E2B               	goto	u4841
  7353  162A  2E2C               	goto	u4840
  7354  162B                     u4841:
  7355  162B  2E70               	goto	l5785
  7356  162C                     u4840:
  7357  162C                     l5751:
  7358  162C  1F48               	btfss	___fladd@signs,6
  7359  162D  2E2F               	goto	u4851
  7360  162E  2E30               	goto	u4850
  7361  162F                     u4851:
  7362  162F  2E34               	goto	l5755
  7363  1630                     u4850:
  7364  1630                     l5753:
  7365  1630  3080               	movlw	128
  7366  1631  00C0               	movwf	??___fladd
  7367  1632  0840               	movf	??___fladd,w
  7368  1633  06C8               	xorwf	___fladd@signs,f
  7369  1634                     l5755:
  7370  1634  084A               	movf	___fladd@bexp,w
  7371  1635  00C0               	movwf	??___fladd
  7372  1636  0840               	movf	??___fladd,w
  7373  1637  00CB               	movwf	___fladd@grs
  7374  1638                     l5757:
  7375  1638  0849               	movf	___fladd@aexp,w
  7376  1639  00C0               	movwf	??___fladd
  7377  163A  0840               	movf	??___fladd,w
  7378  163B  00CA               	movwf	___fladd@bexp
  7379  163C                     l5759:
  7380  163C  084B               	movf	___fladd@grs,w
  7381  163D  00C0               	movwf	??___fladd
  7382  163E  0840               	movf	??___fladd,w
  7383  163F  00C9               	movwf	___fladd@aexp
  7384  1640                     l5761:
  7385  1640  0838               	movf	___fladd@b,w
  7386  1641  00C0               	movwf	??___fladd
  7387  1642  0840               	movf	??___fladd,w
  7388  1643  00CB               	movwf	___fladd@grs
  7389  1644                     l5763:
  7390  1644  083C               	movf	___fladd@a,w
  7391  1645  00C0               	movwf	??___fladd
  7392  1646  0840               	movf	??___fladd,w
  7393  1647  00B8               	movwf	___fladd@b
  7394  1648                     l5765:
  7395  1648  084B               	movf	___fladd@grs,w
  7396  1649  00C0               	movwf	??___fladd
  7397  164A  0840               	movf	??___fladd,w
  7398  164B  00BC               	movwf	___fladd@a
  7399  164C                     l5767:
  7400  164C  0839               	movf	___fladd@b+1,w
  7401  164D  00C0               	movwf	??___fladd
  7402  164E  0840               	movf	??___fladd,w
  7403  164F  00CB               	movwf	___fladd@grs
  7404  1650                     l5769:
  7405  1650  083D               	movf	___fladd@a+1,w
  7406  1651  00C0               	movwf	??___fladd
  7407  1652  0840               	movf	??___fladd,w
  7408  1653  00B9               	movwf	___fladd@b+1
  7409  1654                     l5771:
  7410  1654  084B               	movf	___fladd@grs,w
  7411  1655  00C0               	movwf	??___fladd
  7412  1656  0840               	movf	??___fladd,w
  7413  1657  00BD               	movwf	___fladd@a+1
  7414  1658                     l5773:
  7415  1658  083A               	movf	___fladd@b+2,w
  7416  1659  00C0               	movwf	??___fladd
  7417  165A  0840               	movf	??___fladd,w
  7418  165B  00CB               	movwf	___fladd@grs
  7419  165C                     l5775:
  7420  165C  083E               	movf	___fladd@a+2,w
  7421  165D  00C0               	movwf	??___fladd
  7422  165E  0840               	movf	??___fladd,w
  7423  165F  00BA               	movwf	___fladd@b+2
  7424  1660                     l5777:
  7425  1660  084B               	movf	___fladd@grs,w
  7426  1661  00C0               	movwf	??___fladd
  7427  1662  0840               	movf	??___fladd,w
  7428  1663  00BE               	movwf	___fladd@a+2
  7429  1664                     l5779:
  7430  1664  083B               	movf	___fladd@b+3,w
  7431  1665  00C0               	movwf	??___fladd
  7432  1666  0840               	movf	??___fladd,w
  7433  1667  00CB               	movwf	___fladd@grs
  7434  1668                     l5781:
  7435  1668  083F               	movf	___fladd@a+3,w
  7436  1669  00C0               	movwf	??___fladd
  7437  166A  0840               	movf	??___fladd,w
  7438  166B  00BB               	movwf	___fladd@b+3
  7439  166C                     l5783:
  7440  166C  084B               	movf	___fladd@grs,w
  7441  166D  00C0               	movwf	??___fladd
  7442  166E  0840               	movf	??___fladd,w
  7443  166F  00BF               	movwf	___fladd@a+3
  7444  1670                     l5785:
  7445  1670  01CB               	clrf	___fladd@grs
  7446  1671                     l5787:
  7447  1671  0849               	movf	___fladd@aexp,w
  7448  1672  00C0               	movwf	??___fladd
  7449  1673  01C1               	clrf	??___fladd+1
  7450  1674  0841               	movf	??___fladd+1,w
  7451  1675  00C3               	movwf	??___fladd+3
  7452  1676  084A               	movf	___fladd@bexp,w
  7453  1677  0240               	subwf	??___fladd,w
  7454  1678  00C2               	movwf	??___fladd+2
  7455  1679  1C03               	skipc
  7456  167A  03C3               	decf	??___fladd+3,f
  7457  167B  0843               	movf	??___fladd+3,w
  7458  167C  3A80               	xorlw	128
  7459  167D  00C4               	movwf	??___fladd+4
  7460  167E  3080               	movlw	128
  7461  167F  0244               	subwf	??___fladd+4,w
  7462  1680  1D03               	skipz
  7463  1681  2E84               	goto	u4865
  7464  1682  301A               	movlw	26
  7465  1683  0242               	subwf	??___fladd+2,w
  7466  1684                     u4865:
  7467  1684  1C03               	skipc
  7468  1685  2E87               	goto	u4861
  7469  1686  2E88               	goto	u4860
  7470  1687                     u4861:
  7471  1687  2EC0               	goto	l5803
  7472  1688                     u4860:
  7473  1688                     l5789:
  7474  1688  0020               	movlb	0	; select bank0
  7475  1689  083B               	movf	___fladd@b+3,w
  7476  168A  043A               	iorwf	___fladd@b+2,w
  7477  168B  0439               	iorwf	___fladd@b+1,w
  7478  168C  0438               	iorwf	___fladd@b,w
  7479  168D  1D03               	skipz
  7480  168E  2E90               	goto	u4871
  7481  168F  2E92               	goto	u4870
  7482  1690                     u4871:
  7483  1690  3001               	movlw	1
  7484  1691  2E93               	goto	u4880
  7485  1692                     u4870:
  7486  1692  3000               	movlw	0
  7487  1693                     u4880:
  7488  1693  00C0               	movwf	??___fladd
  7489  1694  0840               	movf	??___fladd,w
  7490  1695  00CB               	movwf	___fladd@grs
  7491  1696  3000               	movlw	0
  7492  1697  00BB               	movwf	___fladd@b+3
  7493  1698  3000               	movlw	0
  7494  1699  00BA               	movwf	___fladd@b+2
  7495  169A  3000               	movlw	0
  7496  169B  00B9               	movwf	___fladd@b+1
  7497  169C  3000               	movlw	0
  7498  169D  00B8               	movwf	___fladd@b
  7499  169E  0849               	movf	___fladd@aexp,w
  7500  169F  00C0               	movwf	??___fladd
  7501  16A0  0840               	movf	??___fladd,w
  7502  16A1  00CA               	movwf	___fladd@bexp
  7503  16A2  2EC7               	goto	l1358
  7504  16A3                     l1360:
  7505  16A3  1C4B               	btfss	___fladd@grs,0
  7506  16A4  2EA6               	goto	u4891
  7507  16A5  2EA7               	goto	u4890
  7508  16A6                     u4891:
  7509  16A6  2EAD               	goto	l5793
  7510  16A7                     u4890:
  7511  16A7                     l5791:
  7512  16A7  364B               	lsrf	___fladd@grs,w
  7513  16A8  3801               	iorlw	1
  7514  16A9  00C0               	movwf	??___fladd
  7515  16AA  0840               	movf	??___fladd,w
  7516  16AB  00CB               	movwf	___fladd@grs
  7517  16AC  2EAF               	goto	l5795
  7518  16AD                     l5793:
  7519  16AD  1003               	clrc
  7520  16AE  0CCB               	rrf	___fladd@grs,f
  7521  16AF                     l5795:
  7522  16AF  1C38               	btfss	___fladd@b,0
  7523  16B0  2EB2               	goto	u4901
  7524  16B1  2EB3               	goto	u4900
  7525  16B2                     u4901:
  7526  16B2  2EB4               	goto	l5799
  7527  16B3                     u4900:
  7528  16B3                     l5797:
  7529  16B3  17CB               	bsf	___fladd@grs,7
  7530  16B4                     l5799:
  7531  16B4  3001               	movlw	1
  7532  16B5  00C0               	movwf	??___fladd
  7533  16B6                     u4915:
  7534  16B6  37BB               	asrf	___fladd@b+3,f
  7535  16B7  0CBA               	rrf	___fladd@b+2,f
  7536  16B8  0CB9               	rrf	___fladd@b+1,f
  7537  16B9  0CB8               	rrf	___fladd@b,f
  7538  16BA  0BC0               	decfsz	??___fladd& (0+127),f
  7539  16BB  2EB6               	goto	u4915
  7540  16BC                     l5801:
  7541  16BC  3001               	movlw	1
  7542  16BD  00C0               	movwf	??___fladd
  7543  16BE  0840               	movf	??___fladd,w
  7544  16BF  07CA               	addwf	___fladd@bexp,f
  7545  16C0                     l5803:
  7546  16C0  0020               	movlb	0	; select bank0
  7547  16C1  0849               	movf	___fladd@aexp,w
  7548  16C2  024A               	subwf	___fladd@bexp,w
  7549  16C3  1C03               	skipc
  7550  16C4  2EC6               	goto	u4921
  7551  16C5  2EC7               	goto	u4920
  7552  16C6                     u4921:
  7553  16C6  2EA3               	goto	l1360
  7554  16C7                     u4920:
  7555  16C7                     l1358:
  7556  16C7  1B48               	btfsc	___fladd@signs,6
  7557  16C8  2ECA               	goto	u4931
  7558  16C9  2ECB               	goto	u4930
  7559  16CA                     u4931:
  7560  16CA  2F03               	goto	l5829
  7561  16CB                     u4930:
  7562  16CB                     l5805:
  7563  16CB  084A               	movf	___fladd@bexp,w
  7564  16CC  1D03               	btfss	3,2
  7565  16CD  2ECF               	goto	u4941
  7566  16CE  2ED0               	goto	u4940
  7567  16CF                     u4941:
  7568  16CF  2ED9               	goto	l5811
  7569  16D0                     u4940:
  7570  16D0                     l5807:
  7571  16D0  3000               	movlw	0
  7572  16D1  00BB               	movwf	?___fladd+3
  7573  16D2  3000               	movlw	0
  7574  16D3  00BA               	movwf	?___fladd+2
  7575  16D4  3000               	movlw	0
  7576  16D5  00B9               	movwf	?___fladd+1
  7577  16D6  3000               	movlw	0
  7578  16D7  00B8               	movwf	?___fladd
  7579  16D8  2FFF               	goto	l1367
  7580  16D9                     l5811:
  7581  16D9  083C               	movf	___fladd@a,w
  7582  16DA  07B8               	addwf	___fladd@b,f
  7583  16DB  083D               	movf	___fladd@a+1,w
  7584  16DC  3DB9               	addwfc	___fladd@b+1,f
  7585  16DD  083E               	movf	___fladd@a+2,w
  7586  16DE  3DBA               	addwfc	___fladd@b+2,f
  7587  16DF  083F               	movf	___fladd@a+3,w
  7588  16E0  3DBB               	addwfc	___fladd@b+3,f
  7589  16E1                     l5813:
  7590  16E1  1C3B               	btfss	___fladd@b+3,0
  7591  16E2  2EE4               	goto	u4951
  7592  16E3  2EE5               	goto	u4950
  7593  16E4                     u4951:
  7594  16E4  2F8F               	goto	l5863
  7595  16E5                     u4950:
  7596  16E5                     l5815:
  7597  16E5  1C4B               	btfss	___fladd@grs,0
  7598  16E6  2EE8               	goto	u4961
  7599  16E7  2EE9               	goto	u4960
  7600  16E8                     u4961:
  7601  16E8  2EEF               	goto	l5819
  7602  16E9                     u4960:
  7603  16E9                     l5817:
  7604  16E9  364B               	lsrf	___fladd@grs,w
  7605  16EA  3801               	iorlw	1
  7606  16EB  00C0               	movwf	??___fladd
  7607  16EC  0840               	movf	??___fladd,w
  7608  16ED  00CB               	movwf	___fladd@grs
  7609  16EE  2EF1               	goto	l5821
  7610  16EF                     l5819:
  7611  16EF  1003               	clrc
  7612  16F0  0CCB               	rrf	___fladd@grs,f
  7613  16F1                     l5821:
  7614  16F1  1C38               	btfss	___fladd@b,0
  7615  16F2  2EF4               	goto	u4971
  7616  16F3  2EF5               	goto	u4970
  7617  16F4                     u4971:
  7618  16F4  2EF6               	goto	l5825
  7619  16F5                     u4970:
  7620  16F5                     l5823:
  7621  16F5  17CB               	bsf	___fladd@grs,7
  7622  16F6                     l5825:
  7623  16F6  3001               	movlw	1
  7624  16F7  00C0               	movwf	??___fladd
  7625  16F8                     u4985:
  7626  16F8  37BB               	asrf	___fladd@b+3,f
  7627  16F9  0CBA               	rrf	___fladd@b+2,f
  7628  16FA  0CB9               	rrf	___fladd@b+1,f
  7629  16FB  0CB8               	rrf	___fladd@b,f
  7630  16FC  0BC0               	decfsz	??___fladd& (0+127),f
  7631  16FD  2EF8               	goto	u4985
  7632  16FE                     l5827:
  7633  16FE  3001               	movlw	1
  7634  16FF  00C0               	movwf	??___fladd
  7635  1700  0840               	movf	??___fladd,w
  7636  1701  07CA               	addwf	___fladd@bexp,f
  7637  1702  2F8F               	goto	l5863
  7638  1703                     l5829:
  7639  1703  083B               	movf	___fladd@b+3,w
  7640  1704  3A80               	xorlw	128
  7641  1705  00C0               	movwf	??___fladd
  7642  1706  083F               	movf	___fladd@a+3,w
  7643  1707  3A80               	xorlw	128
  7644  1708  0240               	subwf	??___fladd,w
  7645  1709  1D03               	skipz
  7646  170A  2F15               	goto	u4993
  7647  170B  083E               	movf	___fladd@a+2,w
  7648  170C  023A               	subwf	___fladd@b+2,w
  7649  170D  1D03               	skipz
  7650  170E  2F15               	goto	u4993
  7651  170F  083D               	movf	___fladd@a+1,w
  7652  1710  0239               	subwf	___fladd@b+1,w
  7653  1711  1D03               	skipz
  7654  1712  2F15               	goto	u4993
  7655  1713  083C               	movf	___fladd@a,w
  7656  1714  0238               	subwf	___fladd@b,w
  7657  1715                     u4993:
  7658  1715  1803               	skipnc
  7659  1716  2F18               	goto	u4991
  7660  1717  2F19               	goto	u4990
  7661  1718                     u4991:
  7662  1718  2F51               	goto	l5839
  7663  1719                     u4990:
  7664  1719                     l5831:
  7665  1719  30FF               	movlw	255
  7666  171A  00C0               	movwf	??___fladd
  7667  171B  30FF               	movlw	255
  7668  171C  00C1               	movwf	??___fladd+1
  7669  171D  30FF               	movlw	255
  7670  171E  00C2               	movwf	??___fladd+2
  7671  171F  30FF               	movlw	255
  7672  1720  00C3               	movwf	??___fladd+3
  7673  1721  0838               	movf	___fladd@b,w
  7674  1722  023C               	subwf	___fladd@a,w
  7675  1723  00C4               	movwf	??___fladd+4
  7676  1724  0839               	movf	___fladd@b+1,w
  7677  1725  3B3D               	subwfb	___fladd@a+1,w
  7678  1726  00C5               	movwf	??___fladd+5
  7679  1727  083A               	movf	___fladd@b+2,w
  7680  1728  3B3E               	subwfb	___fladd@a+2,w
  7681  1729  00C6               	movwf	??___fladd+6
  7682  172A  083B               	movf	___fladd@b+3,w
  7683  172B  3B3F               	subwfb	___fladd@a+3,w
  7684  172C  00C7               	movwf	??___fladd+7
  7685  172D  0844               	movf	??___fladd+4,w
  7686  172E  07C0               	addwf	??___fladd,f
  7687  172F  0845               	movf	??___fladd+5,w
  7688  1730  3DC1               	addwfc	??___fladd+1,f
  7689  1731  0846               	movf	??___fladd+6,w
  7690  1732  3DC2               	addwfc	??___fladd+2,f
  7691  1733  0847               	movf	??___fladd+7,w
  7692  1734  3DC3               	addwfc	??___fladd+3,f
  7693  1735  0843               	movf	??___fladd+3,w
  7694  1736  00BB               	movwf	___fladd@b+3
  7695  1737  0842               	movf	??___fladd+2,w
  7696  1738  00BA               	movwf	___fladd@b+2
  7697  1739  0841               	movf	??___fladd+1,w
  7698  173A  00B9               	movwf	___fladd@b+1
  7699  173B  0840               	movf	??___fladd,w
  7700  173C  00B8               	movwf	___fladd@b
  7701  173D                     l5833:
  7702  173D  3080               	movlw	128
  7703  173E  00C0               	movwf	??___fladd
  7704  173F  0840               	movf	??___fladd,w
  7705  1740  06C8               	xorwf	___fladd@signs,f
  7706  1741  09CB               	comf	___fladd@grs,f
  7707  1742  0ACB               	incf	___fladd@grs,f
  7708  1743                     l5835:
  7709  1743  084B               	movf	___fladd@grs,w
  7710  1744  1D03               	btfss	3,2
  7711  1745  2F47               	goto	u5001
  7712  1746  2F48               	goto	u5000
  7713  1747                     u5001:
  7714  1747  2F59               	goto	l1375
  7715  1748                     u5000:
  7716  1748                     l5837:
  7717  1748  3001               	movlw	1
  7718  1749  07B8               	addwf	___fladd@b,f
  7719  174A  3000               	movlw	0
  7720  174B  3DB9               	addwfc	___fladd@b+1,f
  7721  174C  3000               	movlw	0
  7722  174D  3DBA               	addwfc	___fladd@b+2,f
  7723  174E  3000               	movlw	0
  7724  174F  3DBB               	addwfc	___fladd@b+3,f
  7725  1750  2F59               	goto	l1375
  7726  1751                     l5839:
  7727  1751  083C               	movf	___fladd@a,w
  7728  1752  02B8               	subwf	___fladd@b,f
  7729  1753  083D               	movf	___fladd@a+1,w
  7730  1754  3BB9               	subwfb	___fladd@b+1,f
  7731  1755  083E               	movf	___fladd@a+2,w
  7732  1756  3BBA               	subwfb	___fladd@b+2,f
  7733  1757  083F               	movf	___fladd@a+3,w
  7734  1758  3BBB               	subwfb	___fladd@b+3,f
  7735  1759                     l1375:
  7736  1759  083B               	movf	___fladd@b+3,w
  7737  175A  043A               	iorwf	___fladd@b+2,w
  7738  175B  0439               	iorwf	___fladd@b+1,w
  7739  175C  0438               	iorwf	___fladd@b,w
  7740  175D  1D03               	skipz
  7741  175E  2F60               	goto	u5011
  7742  175F  2F61               	goto	u5010
  7743  1760                     u5011:
  7744  1760  2F8B               	goto	l5861
  7745  1761                     u5010:
  7746  1761                     l5841:
  7747  1761  084B               	movf	___fladd@grs,w
  7748  1762  1D03               	btfss	3,2
  7749  1763  2F65               	goto	u5021
  7750  1764  2F66               	goto	u5020
  7751  1765                     u5021:
  7752  1765  2F8B               	goto	l5861
  7753  1766                     u5020:
  7754  1766                     l5843:
  7755  1766  3000               	movlw	0
  7756  1767  00BB               	movwf	?___fladd+3
  7757  1768  3000               	movlw	0
  7758  1769  00BA               	movwf	?___fladd+2
  7759  176A  3000               	movlw	0
  7760  176B  00B9               	movwf	?___fladd+1
  7761  176C  3000               	movlw	0
  7762  176D  00B8               	movwf	?___fladd
  7763  176E  2FFF               	goto	l1367
  7764  176F                     l5847:
  7765  176F  3001               	movlw	1
  7766  1770                     u5035:
  7767  1770  35B8               	lslf	___fladd@b,f
  7768  1771  0DB9               	rlf	___fladd@b+1,f
  7769  1772  0DBA               	rlf	___fladd@b+2,f
  7770  1773  0DBB               	rlf	___fladd@b+3,f
  7771  1774  0B89               	decfsz	9,f
  7772  1775  2F70               	goto	u5035
  7773  1776                     l5849:
  7774  1776  1FCB               	btfss	___fladd@grs,7
  7775  1777  2F79               	goto	u5041
  7776  1778  2F7A               	goto	u5040
  7777  1779                     u5041:
  7778  1779  2F7B               	goto	l1379
  7779  177A                     u5040:
  7780  177A                     l5851:
  7781  177A  1438               	bsf	___fladd@b,0
  7782  177B                     l1379:
  7783  177B  1C4B               	btfss	___fladd@grs,0
  7784  177C  2F7E               	goto	u5051
  7785  177D  2F7F               	goto	u5050
  7786  177E                     u5051:
  7787  177E  2F82               	goto	l5855
  7788  177F                     u5050:
  7789  177F                     l5853:
  7790  177F  1403               	setc
  7791  1780  0DCB               	rlf	___fladd@grs,f
  7792  1781  2F84               	goto	l5857
  7793  1782                     l5855:
  7794  1782  1003               	clrc
  7795  1783  0DCB               	rlf	___fladd@grs,f
  7796  1784                     l5857:
  7797  1784  084A               	movf	___fladd@bexp,w
  7798  1785  1903               	btfsc	3,2
  7799  1786  2F88               	goto	u5061
  7800  1787  2F89               	goto	u5060
  7801  1788                     u5061:
  7802  1788  2F8B               	goto	l5861
  7803  1789                     u5060:
  7804  1789                     l5859:
  7805  1789  3001               	movlw	1
  7806  178A  02CA               	subwf	___fladd@bexp,f
  7807  178B                     l5861:
  7808  178B  1FBA               	btfss	___fladd@b+2,7
  7809  178C  2F8E               	goto	u5071
  7810  178D  2F8F               	goto	u5070
  7811  178E                     u5071:
  7812  178E  2F6F               	goto	l5847
  7813  178F                     u5070:
  7814  178F                     l5863:
  7815  178F  01C9               	clrf	___fladd@aexp
  7816  1790                     l5865:
  7817  1790  1FCB               	btfss	___fladd@grs,7
  7818  1791  2F93               	goto	u5081
  7819  1792  2F94               	goto	u5080
  7820  1793                     u5081:
  7821  1793  2FA2               	goto	l5873
  7822  1794                     u5080:
  7823  1794                     l5867:
  7824  1794  084B               	movf	___fladd@grs,w
  7825  1795  397F               	andlw	127
  7826  1796  1903               	btfsc	3,2
  7827  1797  2F99               	goto	u5091
  7828  1798  2F9A               	goto	u5090
  7829  1799                     u5091:
  7830  1799  2F9D               	goto	l1385
  7831  179A                     u5090:
  7832  179A                     l5869:
  7833  179A  01C9               	clrf	___fladd@aexp
  7834  179B  0AC9               	incf	___fladd@aexp,f
  7835  179C  2FA2               	goto	l5873
  7836  179D                     l1385:
  7837  179D  1C38               	btfss	___fladd@b,0
  7838  179E  2FA0               	goto	u5101
  7839  179F  2FA1               	goto	u5100
  7840  17A0                     u5101:
  7841  17A0  2FA2               	goto	l5873
  7842  17A1                     u5100:
  7843  17A1  2F9A               	goto	l5869
  7844  17A2                     l5873:
  7845  17A2  0849               	movf	___fladd@aexp,w
  7846  17A3  1903               	btfsc	3,2
  7847  17A4  2FA6               	goto	u5111
  7848  17A5  2FA7               	goto	u5110
  7849  17A6                     u5111:
  7850  17A6  2FD4               	goto	l1388
  7851  17A7                     u5110:
  7852  17A7                     l5875:
  7853  17A7  3001               	movlw	1
  7854  17A8  07B8               	addwf	___fladd@b,f
  7855  17A9  3000               	movlw	0
  7856  17AA  3DB9               	addwfc	___fladd@b+1,f
  7857  17AB  3000               	movlw	0
  7858  17AC  3DBA               	addwfc	___fladd@b+2,f
  7859  17AD  3000               	movlw	0
  7860  17AE  3DBB               	addwfc	___fladd@b+3,f
  7861  17AF                     l5877:
  7862  17AF  1C3B               	btfss	___fladd@b+3,0
  7863  17B0  2FB2               	goto	u5121
  7864  17B1  2FB3               	goto	u5120
  7865  17B2                     u5121:
  7866  17B2  2FD4               	goto	l1388
  7867  17B3                     u5120:
  7868  17B3                     l5879:
  7869  17B3  0838               	movf	___fladd@b,w
  7870  17B4  00C0               	movwf	??___fladd
  7871  17B5  0839               	movf	___fladd@b+1,w
  7872  17B6  00C1               	movwf	??___fladd+1
  7873  17B7  083A               	movf	___fladd@b+2,w
  7874  17B8  00C2               	movwf	??___fladd+2
  7875  17B9  083B               	movf	___fladd@b+3,w
  7876  17BA  00C3               	movwf	??___fladd+3
  7877  17BB  3001               	movlw	1
  7878  17BC  00C4               	movwf	??___fladd+4
  7879  17BD                     u5135:
  7880  17BD  37C3               	asrf	??___fladd+3,f
  7881  17BE  0CC2               	rrf	??___fladd+2,f
  7882  17BF  0CC1               	rrf	??___fladd+1,f
  7883  17C0  0CC0               	rrf	??___fladd,f
  7884  17C1                     u5130:
  7885  17C1  0BC4               	decfsz	??___fladd+4,f
  7886  17C2  2FBD               	goto	u5135
  7887  17C3  0843               	movf	??___fladd+3,w
  7888  17C4  00BB               	movwf	___fladd@b+3
  7889  17C5  0842               	movf	??___fladd+2,w
  7890  17C6  00BA               	movwf	___fladd@b+2
  7891  17C7  0841               	movf	??___fladd+1,w
  7892  17C8  00B9               	movwf	___fladd@b+1
  7893  17C9  0840               	movf	??___fladd,w
  7894  17CA  00B8               	movwf	___fladd@b
  7895  17CB  0A4A               	incf	___fladd@bexp,w
  7896  17CC  1903               	btfsc	3,2
  7897  17CD  2FCF               	goto	u5141
  7898  17CE  2FD0               	goto	u5140
  7899  17CF                     u5141:
  7900  17CF  2FD4               	goto	l1388
  7901  17D0                     u5140:
  7902  17D0                     l5881:
  7903  17D0  3001               	movlw	1
  7904  17D1  00C0               	movwf	??___fladd
  7905  17D2  0840               	movf	??___fladd,w
  7906  17D3  07CA               	addwf	___fladd@bexp,f
  7907  17D4                     l1388:
  7908  17D4  0A4A               	incf	___fladd@bexp,w
  7909  17D5  1903               	btfsc	3,2
  7910  17D6  2FD8               	goto	u5151
  7911  17D7  2FD9               	goto	u5150
  7912  17D8                     u5151:
  7913  17D8  2FDE               	goto	l5885
  7914  17D9                     u5150:
  7915  17D9                     l5883:
  7916  17D9  084A               	movf	___fladd@bexp,w
  7917  17DA  1D03               	btfss	3,2
  7918  17DB  2FDD               	goto	u5161
  7919  17DC  2FDE               	goto	u5160
  7920  17DD                     u5161:
  7921  17DD  2FEC               	goto	l5891
  7922  17DE                     u5160:
  7923  17DE                     l5885:
  7924  17DE  3000               	movlw	0
  7925  17DF  00BB               	movwf	___fladd@b+3
  7926  17E0  3000               	movlw	0
  7927  17E1  00BA               	movwf	___fladd@b+2
  7928  17E2  3000               	movlw	0
  7929  17E3  00B9               	movwf	___fladd@b+1
  7930  17E4  3000               	movlw	0
  7931  17E5  00B8               	movwf	___fladd@b
  7932  17E6                     l5887:
  7933  17E6  084A               	movf	___fladd@bexp,w
  7934  17E7  1D03               	btfss	3,2
  7935  17E8  2FEA               	goto	u5171
  7936  17E9  2FEB               	goto	u5170
  7937  17EA                     u5171:
  7938  17EA  2FEC               	goto	l5891
  7939  17EB                     u5170:
  7940  17EB                     l5889:
  7941  17EB  01C8               	clrf	___fladd@signs
  7942  17EC                     l5891:
  7943  17EC  1C4A               	btfss	___fladd@bexp,0
  7944  17ED  2FEF               	goto	u5181
  7945  17EE  2FF0               	goto	u5180
  7946  17EF                     u5181:
  7947  17EF  2FF2               	goto	l5895
  7948  17F0                     u5180:
  7949  17F0                     l5893:
  7950  17F0  17BA               	bsf	___fladd@b+2,7
  7951  17F1  2FF6               	goto	l1396
  7952  17F2                     l5895:
  7953  17F2  307F               	movlw	127
  7954  17F3  00C0               	movwf	??___fladd
  7955  17F4  0840               	movf	??___fladd,w
  7956  17F5  05BA               	andwf	___fladd@b+2,f
  7957  17F6                     l1396:
  7958  17F6  364A               	lsrf	___fladd@bexp,w
  7959  17F7  00C0               	movwf	??___fladd
  7960  17F8  0840               	movf	??___fladd,w
  7961  17F9  00BB               	movwf	___fladd@b+3
  7962  17FA                     l5897:
  7963  17FA  1FC8               	btfss	___fladd@signs,7
  7964  17FB  2FFD               	goto	u5191
  7965  17FC  2FFE               	goto	u5190
  7966  17FD                     u5191:
  7967  17FD  2FFF               	goto	l1397
  7968  17FE                     u5190:
  7969  17FE                     l5899:
  7970  17FE  17BB               	bsf	___fladd@b+3,7
  7971  17FF                     l1397:
  7972  17FF                     l1367:
  7973  17FF  0008               	return
  7974  1800                     __end_of___fladd:
  7975                           
  7976                           	psect	text7
  7977  061F                     __ptext7:	
  7978 ;; *************** function ___fldiv *****************
  7979 ;; Defined at:
  7980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  a               4   29[BANK1 ] unsigned char 
  7983 ;;  b               4   33[BANK1 ] unsigned char 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  grs             4   49[BANK1 ] unsigned long 
  7986 ;;  rem             4   42[BANK1 ] unsigned long 
  7987 ;;  new_exp         2   47[BANK1 ] int 
  7988 ;;  aexp            1   54[BANK1 ] unsigned char 
  7989 ;;  bexp            1   53[BANK1 ] unsigned char 
  7990 ;;  sign            1   46[BANK1 ] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  4   29[BANK1 ] unsigned char 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8000 ;;      Params:         0       0       8       0       0       0       0       0
  8001 ;;      Locals:         0       0      13       0       0       0       0       0
  8002 ;;      Temps:          0       0       5       0       0       0       0       0
  8003 ;;      Totals:         0       0      26       0       0       0       0       0
  8004 ;;Total ram usage:       26 bytes
  8005 ;; Hardware stack levels used: 1
  8006 ;; Hardware stack levels required when called: 4
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_map
  8011 ;;		_get_ntc_temperature
  8012 ;;		_logf
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016  061F                     ___fldiv:	
  8017                           ;psect for function ___fldiv
  8018                           
  8019  061F                     l5921:	
  8020                           ;incstack = 0
  8021                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8022                           
  8023  061F  0021               	movlb	1	; select bank1
  8024  0620  0844               	movf	(___fldiv@b^(0+128)+3),w
  8025  0621  3980               	andlw	128
  8026  0622  00C5               	movwf	??___fldiv^(0+128)
  8027  0623  0845               	movf	??___fldiv^(0+128),w
  8028  0624  00CE               	movwf	___fldiv@sign^(0+128)
  8029  0625                     l5923:
  8030  0625  3544               	lslf	(___fldiv@b^(0+128)+3),w
  8031  0626  00C5               	movwf	??___fldiv^(0+128)
  8032  0627  0845               	movf	??___fldiv^(0+128),w
  8033  0628  00D5               	movwf	___fldiv@bexp^(0+128)
  8034  0629                     l5925:
  8035  0629  1FC3               	btfss	(___fldiv@b^(0+128)+2),7
  8036  062A  2E2C               	goto	u5231
  8037  062B  2E2D               	goto	u5230
  8038  062C                     u5231:
  8039  062C  2E2E               	goto	l5929
  8040  062D                     u5230:
  8041  062D                     l5927:
  8042  062D  1455               	bsf	___fldiv@bexp^(0+128),0
  8043  062E                     l5929:
  8044  062E  0855               	movf	___fldiv@bexp^(0+128),w
  8045  062F  1903               	btfsc	3,2
  8046  0630  2E32               	goto	u5241
  8047  0631  2E33               	goto	u5240
  8048  0632                     u5241:
  8049  0632  2E43               	goto	l5939
  8050  0633                     u5240:
  8051  0633                     l5931:
  8052  0633  0A55               	incf	___fldiv@bexp^(0+128),w
  8053  0634  1D03               	btfss	3,2
  8054  0635  2E37               	goto	u5251
  8055  0636  2E38               	goto	u5250
  8056  0637                     u5251:
  8057  0637  2E40               	goto	l5935
  8058  0638                     u5250:
  8059  0638                     l5933:
  8060  0638  3000               	movlw	0
  8061  0639  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8062  063A  3000               	movlw	0
  8063  063B  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8064  063C  3000               	movlw	0
  8065  063D  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8066  063E  3000               	movlw	0
  8067  063F  00C1               	movwf	___fldiv@b^(0+128)
  8068  0640                     l5935:
  8069  0640  17C3               	bsf	(___fldiv@b^(0+128)+2),7
  8070  0641                     l5937:
  8071  0641  01C4               	clrf	(___fldiv@b^(0+128)+3)
  8072  0642  2E4B               	goto	l5941
  8073  0643                     l5939:
  8074  0643  3000               	movlw	0
  8075  0644  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8076  0645  3000               	movlw	0
  8077  0646  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8078  0647  3000               	movlw	0
  8079  0648  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8080  0649  3000               	movlw	0
  8081  064A  00C1               	movwf	___fldiv@b^(0+128)
  8082  064B                     l5941:
  8083  064B  0840               	movf	(___fldiv@a^(0+128)+3),w
  8084  064C  3980               	andlw	128
  8085  064D  00C5               	movwf	??___fldiv^(0+128)
  8086  064E  0845               	movf	??___fldiv^(0+128),w
  8087  064F  06CE               	xorwf	___fldiv@sign^(0+128),f
  8088  0650                     l5943:
  8089  0650  3540               	lslf	(___fldiv@a^(0+128)+3),w
  8090  0651  00C5               	movwf	??___fldiv^(0+128)
  8091  0652  0845               	movf	??___fldiv^(0+128),w
  8092  0653  00D6               	movwf	___fldiv@aexp^(0+128)
  8093  0654                     l5945:
  8094  0654  1FBF               	btfss	(___fldiv@a^(0+128)+2),7
  8095  0655  2E57               	goto	u5261
  8096  0656  2E58               	goto	u5260
  8097  0657                     u5261:
  8098  0657  2E59               	goto	l5949
  8099  0658                     u5260:
  8100  0658                     l5947:
  8101  0658  1456               	bsf	___fldiv@aexp^(0+128),0
  8102  0659                     l5949:
  8103  0659  0856               	movf	___fldiv@aexp^(0+128),w
  8104  065A  1903               	btfsc	3,2
  8105  065B  2E5D               	goto	u5271
  8106  065C  2E5E               	goto	u5270
  8107  065D                     u5271:
  8108  065D  2E6E               	goto	l5959
  8109  065E                     u5270:
  8110  065E                     l5951:
  8111  065E  0A56               	incf	___fldiv@aexp^(0+128),w
  8112  065F  1D03               	btfss	3,2
  8113  0660  2E62               	goto	u5281
  8114  0661  2E63               	goto	u5280
  8115  0662                     u5281:
  8116  0662  2E6B               	goto	l5955
  8117  0663                     u5280:
  8118  0663                     l5953:
  8119  0663  3000               	movlw	0
  8120  0664  00C0               	movwf	(___fldiv@a+3)^(0+128)
  8121  0665  3000               	movlw	0
  8122  0666  00BF               	movwf	(___fldiv@a+2)^(0+128)
  8123  0667  3000               	movlw	0
  8124  0668  00BE               	movwf	(___fldiv@a+1)^(0+128)
  8125  0669  3000               	movlw	0
  8126  066A  00BD               	movwf	___fldiv@a^(0+128)
  8127  066B                     l5955:
  8128  066B  17BF               	bsf	(___fldiv@a^(0+128)+2),7
  8129  066C                     l5957:
  8130  066C  01C0               	clrf	(___fldiv@a^(0+128)+3)
  8131  066D  2E76               	goto	l1410
  8132  066E                     l5959:
  8133  066E  3000               	movlw	0
  8134  066F  00C0               	movwf	(___fldiv@a+3)^(0+128)
  8135  0670  3000               	movlw	0
  8136  0671  00BF               	movwf	(___fldiv@a+2)^(0+128)
  8137  0672  3000               	movlw	0
  8138  0673  00BE               	movwf	(___fldiv@a+1)^(0+128)
  8139  0674  3000               	movlw	0
  8140  0675  00BD               	movwf	___fldiv@a^(0+128)
  8141  0676                     l1410:
  8142  0676  0840               	movf	(___fldiv@a+3)^(0+128),w
  8143  0677  043F               	iorwf	(___fldiv@a+2)^(0+128),w
  8144  0678  043E               	iorwf	(___fldiv@a+1)^(0+128),w
  8145  0679  043D               	iorwf	___fldiv@a^(0+128),w
  8146  067A  1D03               	skipz
  8147  067B  2E7D               	goto	u5291
  8148  067C  2E7E               	goto	u5290
  8149  067D                     u5291:
  8150  067D  2E97               	goto	l5969
  8151  067E                     u5290:
  8152  067E                     l5961:
  8153  067E  3000               	movlw	0
  8154  067F  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8155  0680  3000               	movlw	0
  8156  0681  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8157  0682  3000               	movlw	0
  8158  0683  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8159  0684  3000               	movlw	0
  8160  0685  00C1               	movwf	___fldiv@b^(0+128)
  8161  0686  3080               	movlw	128
  8162  0687  04C3               	iorwf	(___fldiv@b^(0+128)+2),f
  8163  0688  307F               	movlw	127
  8164  0689  04C4               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8165  068A                     l5963:
  8166  068A  084E               	movf	___fldiv@sign^(0+128),w
  8167  068B  00C5               	movwf	??___fldiv^(0+128)
  8168  068C  0845               	movf	??___fldiv^(0+128),w
  8169  068D  04C4               	iorwf	(___fldiv@b^(0+128)+3),f
  8170  068E                     l5965:
  8171  068E  0844               	movf	(___fldiv@b+3)^(0+128),w
  8172  068F  00C0               	movwf	(?___fldiv+3)^(0+128)
  8173  0690  0843               	movf	(___fldiv@b+2)^(0+128),w
  8174  0691  00BF               	movwf	(?___fldiv+2)^(0+128)
  8175  0692  0842               	movf	(___fldiv@b+1)^(0+128),w
  8176  0693  00BE               	movwf	(?___fldiv+1)^(0+128)
  8177  0694  0841               	movf	___fldiv@b^(0+128),w
  8178  0695  00BD               	movwf	?___fldiv^(0+128)
  8179  0696  2FD2               	goto	l1412
  8180  0697                     l5969:
  8181  0697  0855               	movf	___fldiv@bexp^(0+128),w
  8182  0698  1D03               	btfss	3,2
  8183  0699  2E9B               	goto	u5301
  8184  069A  2E9C               	goto	u5300
  8185  069B                     u5301:
  8186  069B  2EA5               	goto	l5975
  8187  069C                     u5300:
  8188  069C                     l5971:
  8189  069C  3000               	movlw	0
  8190  069D  00C0               	movwf	(?___fldiv+3)^(0+128)
  8191  069E  3000               	movlw	0
  8192  069F  00BF               	movwf	(?___fldiv+2)^(0+128)
  8193  06A0  3000               	movlw	0
  8194  06A1  00BE               	movwf	(?___fldiv+1)^(0+128)
  8195  06A2  3000               	movlw	0
  8196  06A3  00BD               	movwf	?___fldiv^(0+128)
  8197  06A4  2FD2               	goto	l1412
  8198  06A5                     l5975:
  8199  06A5  0855               	movf	___fldiv@bexp^(0+128),w
  8200  06A6  00C5               	movwf	??___fldiv^(0+128)
  8201  06A7  01C6               	clrf	(??___fldiv^(0+128)+1)
  8202  06A8  0846               	movf	(??___fldiv+1)^(0+128),w
  8203  06A9  00C8               	movwf	((??___fldiv+2)^(0+128)+1)
  8204  06AA  0856               	movf	___fldiv@aexp^(0+128),w
  8205  06AB  0245               	subwf	??___fldiv^(0+128),w
  8206  06AC  00C7               	movwf	(??___fldiv+2)^(0+128)
  8207  06AD  1C03               	skipc
  8208  06AE  03C8               	decf	((??___fldiv+2)^(0+128)+1),f
  8209  06AF  0847               	movf	(??___fldiv+2)^(0+128),w
  8210  06B0  3E7F               	addlw	127
  8211  06B1  00CF               	movwf	___fldiv@new_exp^(0+128)
  8212  06B2  3000               	movlw	0
  8213  06B3  3D48               	addwfc	(??___fldiv+3)^(0+128),w
  8214  06B4  00D0               	movwf	(___fldiv@new_exp+1)^(0+128)
  8215  06B5                     l5977:
  8216  06B5  0844               	movf	(___fldiv@b+3)^(0+128),w
  8217  06B6  00CD               	movwf	(___fldiv@rem+3)^(0+128)
  8218  06B7  0843               	movf	(___fldiv@b+2)^(0+128),w
  8219  06B8  00CC               	movwf	(___fldiv@rem+2)^(0+128)
  8220  06B9  0842               	movf	(___fldiv@b+1)^(0+128),w
  8221  06BA  00CB               	movwf	(___fldiv@rem+1)^(0+128)
  8222  06BB  0841               	movf	___fldiv@b^(0+128),w
  8223  06BC  00CA               	movwf	___fldiv@rem^(0+128)
  8224  06BD                     l5979:
  8225  06BD  3000               	movlw	0
  8226  06BE  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8227  06BF  3000               	movlw	0
  8228  06C0  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8229  06C1  3000               	movlw	0
  8230  06C2  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8231  06C3  3000               	movlw	0
  8232  06C4  00C1               	movwf	___fldiv@b^(0+128)
  8233  06C5                     l5981:
  8234  06C5  3000               	movlw	0
  8235  06C6  00D4               	movwf	(___fldiv@grs+3)^(0+128)
  8236  06C7  3000               	movlw	0
  8237  06C8  00D3               	movwf	(___fldiv@grs+2)^(0+128)
  8238  06C9  3000               	movlw	0
  8239  06CA  00D2               	movwf	(___fldiv@grs+1)^(0+128)
  8240  06CB  3000               	movlw	0
  8241  06CC  00D1               	movwf	___fldiv@grs^(0+128)
  8242  06CD                     l5983:
  8243  06CD  01D6               	clrf	___fldiv@aexp^(0+128)
  8244  06CE  2F0D               	goto	l6003
  8245  06CF                     l5985:
  8246  06CF  0856               	movf	___fldiv@aexp^(0+128),w
  8247  06D0  1903               	btfsc	3,2
  8248  06D1  2ED3               	goto	u5311
  8249  06D2  2ED4               	goto	u5310
  8250  06D3                     u5311:
  8251  06D3  2EEE               	goto	l5995
  8252  06D4                     u5310:
  8253  06D4                     l5987:
  8254  06D4  3001               	movlw	1
  8255  06D5                     u5325:
  8256  06D5  35CA               	lslf	___fldiv@rem^(0+128),f
  8257  06D6  0DCB               	rlf	(___fldiv@rem+1)^(0+128),f
  8258  06D7  0DCC               	rlf	(___fldiv@rem+2)^(0+128),f
  8259  06D8  0DCD               	rlf	(___fldiv@rem+3)^(0+128),f
  8260  06D9  0B89               	decfsz	9,f
  8261  06DA  2ED5               	goto	u5325
  8262  06DB  3001               	movlw	1
  8263  06DC                     u5335:
  8264  06DC  35C1               	lslf	___fldiv@b^(0+128),f
  8265  06DD  0DC2               	rlf	(___fldiv@b+1)^(0+128),f
  8266  06DE  0DC3               	rlf	(___fldiv@b+2)^(0+128),f
  8267  06DF  0DC4               	rlf	(___fldiv@b+3)^(0+128),f
  8268  06E0  0B89               	decfsz	9,f
  8269  06E1  2EDC               	goto	u5335
  8270  06E2                     l5989:
  8271  06E2  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  8272  06E3  2EE5               	goto	u5341
  8273  06E4  2EE6               	goto	u5340
  8274  06E5                     u5341:
  8275  06E5  2EE7               	goto	l5993
  8276  06E6                     u5340:
  8277  06E6                     l5991:
  8278  06E6  1441               	bsf	___fldiv@b^(0+128),0
  8279  06E7                     l5993:
  8280  06E7  3001               	movlw	1
  8281  06E8                     u5355:
  8282  06E8  35D1               	lslf	___fldiv@grs^(0+128),f
  8283  06E9  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  8284  06EA  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  8285  06EB  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  8286  06EC  0B89               	decfsz	9,f
  8287  06ED  2EE8               	goto	u5355
  8288  06EE                     l5995:
  8289  06EE  0840               	movf	(___fldiv@a+3)^(0+128),w
  8290  06EF  024D               	subwf	(___fldiv@rem+3)^(0+128),w
  8291  06F0  1D03               	skipz
  8292  06F1  2EFC               	goto	u5365
  8293  06F2  083F               	movf	(___fldiv@a+2)^(0+128),w
  8294  06F3  024C               	subwf	(___fldiv@rem+2)^(0+128),w
  8295  06F4  1D03               	skipz
  8296  06F5  2EFC               	goto	u5365
  8297  06F6  083E               	movf	(___fldiv@a+1)^(0+128),w
  8298  06F7  024B               	subwf	(___fldiv@rem+1)^(0+128),w
  8299  06F8  1D03               	skipz
  8300  06F9  2EFC               	goto	u5365
  8301  06FA  083D               	movf	___fldiv@a^(0+128),w
  8302  06FB  024A               	subwf	___fldiv@rem^(0+128),w
  8303  06FC                     u5365:
  8304  06FC  1C03               	skipc
  8305  06FD  2EFF               	goto	u5361
  8306  06FE  2F00               	goto	u5360
  8307  06FF                     u5361:
  8308  06FF  2F09               	goto	l6001
  8309  0700                     u5360:
  8310  0700                     l5997:
  8311  0700  1754               	bsf	(___fldiv@grs^(0+128)+3),6
  8312  0701                     l5999:
  8313  0701  083D               	movf	___fldiv@a^(0+128),w
  8314  0702  02CA               	subwf	___fldiv@rem^(0+128),f
  8315  0703  083E               	movf	(___fldiv@a+1)^(0+128),w
  8316  0704  3BCB               	subwfb	(___fldiv@rem+1)^(0+128),f
  8317  0705  083F               	movf	(___fldiv@a+2)^(0+128),w
  8318  0706  3BCC               	subwfb	(___fldiv@rem+2)^(0+128),f
  8319  0707  0840               	movf	(___fldiv@a+3)^(0+128),w
  8320  0708  3BCD               	subwfb	(___fldiv@rem+3)^(0+128),f
  8321  0709                     l6001:
  8322  0709  3001               	movlw	1
  8323  070A  00C5               	movwf	??___fldiv^(0+128)
  8324  070B  0845               	movf	??___fldiv^(0+128),w
  8325  070C  07D6               	addwf	___fldiv@aexp^(0+128),f
  8326  070D                     l6003:
  8327  070D  301A               	movlw	26
  8328  070E  0256               	subwf	___fldiv@aexp^(0+128),w
  8329  070F  1C03               	skipc
  8330  0710  2F12               	goto	u5371
  8331  0711  2F13               	goto	u5370
  8332  0712                     u5371:
  8333  0712  2ECF               	goto	l5985
  8334  0713                     u5370:
  8335  0713                     l6005:
  8336  0713  084D               	movf	(___fldiv@rem+3)^(0+128),w
  8337  0714  044C               	iorwf	(___fldiv@rem+2)^(0+128),w
  8338  0715  044B               	iorwf	(___fldiv@rem+1)^(0+128),w
  8339  0716  044A               	iorwf	___fldiv@rem^(0+128),w
  8340  0717  1903               	skipnz
  8341  0718  2F1A               	goto	u5381
  8342  0719  2F1B               	goto	u5380
  8343  071A                     u5381:
  8344  071A  2F34               	goto	l6019
  8345  071B                     u5380:
  8346  071B                     l6007:
  8347  071B  1451               	bsf	___fldiv@grs^(0+128),0
  8348  071C  2F34               	goto	l6019
  8349  071D                     l6009:
  8350  071D  3001               	movlw	1
  8351  071E                     u5395:
  8352  071E  35C1               	lslf	___fldiv@b^(0+128),f
  8353  071F  0DC2               	rlf	(___fldiv@b+1)^(0+128),f
  8354  0720  0DC3               	rlf	(___fldiv@b+2)^(0+128),f
  8355  0721  0DC4               	rlf	(___fldiv@b+3)^(0+128),f
  8356  0722  0B89               	decfsz	9,f
  8357  0723  2F1E               	goto	u5395
  8358  0724                     l6011:
  8359  0724  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  8360  0725  2F27               	goto	u5401
  8361  0726  2F28               	goto	u5400
  8362  0727                     u5401:
  8363  0727  2F29               	goto	l6015
  8364  0728                     u5400:
  8365  0728                     l6013:
  8366  0728  1441               	bsf	___fldiv@b^(0+128),0
  8367  0729                     l6015:
  8368  0729  3001               	movlw	1
  8369  072A                     u5415:
  8370  072A  35D1               	lslf	___fldiv@grs^(0+128),f
  8371  072B  0DD2               	rlf	(___fldiv@grs+1)^(0+128),f
  8372  072C  0DD3               	rlf	(___fldiv@grs+2)^(0+128),f
  8373  072D  0DD4               	rlf	(___fldiv@grs+3)^(0+128),f
  8374  072E  0B89               	decfsz	9,f
  8375  072F  2F2A               	goto	u5415
  8376  0730                     l6017:
  8377  0730  30FF               	movlw	255
  8378  0731  07CF               	addwf	___fldiv@new_exp^(0+128),f
  8379  0732  30FF               	movlw	255
  8380  0733  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8381  0734                     l6019:
  8382  0734  1FC3               	btfss	(___fldiv@b+2)^(0+128),7
  8383  0735  2F37               	goto	u5421
  8384  0736  2F38               	goto	u5420
  8385  0737                     u5421:
  8386  0737  2F1D               	goto	l6009
  8387  0738                     u5420:
  8388  0738                     l6021:
  8389  0738  01D6               	clrf	___fldiv@aexp^(0+128)
  8390  0739                     l6023:
  8391  0739  1FD4               	btfss	(___fldiv@grs+3)^(0+128),7
  8392  073A  2F3C               	goto	u5431
  8393  073B  2F3D               	goto	u5430
  8394  073C                     u5431:
  8395  073C  2F59               	goto	l6031
  8396  073D                     u5430:
  8397  073D                     l6025:
  8398  073D  30FF               	movlw	255
  8399  073E  0551               	andwf	___fldiv@grs^(0+128),w
  8400  073F  00C5               	movwf	??___fldiv^(0+128)
  8401  0740  30FF               	movlw	255
  8402  0741  0552               	andwf	(___fldiv@grs+1)^(0+128),w
  8403  0742  00C6               	movwf	(??___fldiv^(0+128)+1)
  8404  0743  30FF               	movlw	255
  8405  0744  0553               	andwf	(___fldiv@grs+2)^(0+128),w
  8406  0745  00C7               	movwf	(??___fldiv^(0+128)+2)
  8407  0746  307F               	movlw	127
  8408  0747  0554               	andwf	(___fldiv@grs+3)^(0+128),w
  8409  0748  00C8               	movwf	(??___fldiv^(0+128)+3)
  8410  0749  0848               	movf	(??___fldiv+3)^(0+128),w
  8411  074A  0447               	iorwf	(??___fldiv+2)^(0+128),w
  8412  074B  0446               	iorwf	(??___fldiv+1)^(0+128),w
  8413  074C  0445               	iorwf	??___fldiv^(0+128),w
  8414  074D  1903               	skipnz
  8415  074E  2F50               	goto	u5441
  8416  074F  2F51               	goto	u5440
  8417  0750                     u5441:
  8418  0750  2F54               	goto	l1426
  8419  0751                     u5440:
  8420  0751                     l6027:
  8421  0751  01D6               	clrf	___fldiv@aexp^(0+128)
  8422  0752  0AD6               	incf	___fldiv@aexp^(0+128),f
  8423  0753  2F59               	goto	l6031
  8424  0754                     l1426:
  8425  0754  1C41               	btfss	___fldiv@b^(0+128),0
  8426  0755  2F57               	goto	u5451
  8427  0756  2F58               	goto	u5450
  8428  0757                     u5451:
  8429  0757  2F59               	goto	l6031
  8430  0758                     u5450:
  8431  0758  2F51               	goto	l6027
  8432  0759                     l6031:
  8433  0759  0856               	movf	___fldiv@aexp^(0+128),w
  8434  075A  1903               	btfsc	3,2
  8435  075B  2F5D               	goto	u5461
  8436  075C  2F5E               	goto	u5460
  8437  075D                     u5461:
  8438  075D  2F86               	goto	l6041
  8439  075E                     u5460:
  8440  075E                     l6033:
  8441  075E  3001               	movlw	1
  8442  075F  07C1               	addwf	___fldiv@b^(0+128),f
  8443  0760  3000               	movlw	0
  8444  0761  3DC2               	addwfc	(___fldiv@b+1)^(0+128),f
  8445  0762  3000               	movlw	0
  8446  0763  3DC3               	addwfc	(___fldiv@b+2)^(0+128),f
  8447  0764  3000               	movlw	0
  8448  0765  3DC4               	addwfc	(___fldiv@b+3)^(0+128),f
  8449  0766                     l6035:
  8450  0766  1C44               	btfss	(___fldiv@b+3)^(0+128),0
  8451  0767  2F69               	goto	u5471
  8452  0768  2F6A               	goto	u5470
  8453  0769                     u5471:
  8454  0769  2F86               	goto	l6041
  8455  076A                     u5470:
  8456  076A                     l6037:
  8457  076A  0841               	movf	___fldiv@b^(0+128),w
  8458  076B  00C5               	movwf	??___fldiv^(0+128)
  8459  076C  0842               	movf	(___fldiv@b+1)^(0+128),w
  8460  076D  00C6               	movwf	(??___fldiv^(0+128)+1)
  8461  076E  0843               	movf	(___fldiv@b+2)^(0+128),w
  8462  076F  00C7               	movwf	(??___fldiv^(0+128)+2)
  8463  0770  0844               	movf	(___fldiv@b+3)^(0+128),w
  8464  0771  00C8               	movwf	(??___fldiv^(0+128)+3)
  8465  0772  3001               	movlw	1
  8466  0773  00C9               	movwf	(??___fldiv+4)^(0+128)
  8467  0774                     u5485:
  8468  0774  37C8               	asrf	(??___fldiv^(0+128)+3),f
  8469  0775  0CC7               	rrf	(??___fldiv^(0+128)+2),f
  8470  0776  0CC6               	rrf	(??___fldiv^(0+128)+1),f
  8471  0777  0CC5               	rrf	??___fldiv^(0+128),f
  8472  0778                     u5480:
  8473  0778  0BC9               	decfsz	(??___fldiv+4)^(0+128),f
  8474  0779  2F74               	goto	u5485
  8475  077A  0848               	movf	(??___fldiv+3)^(0+128),w
  8476  077B  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8477  077C  0847               	movf	(??___fldiv+2)^(0+128),w
  8478  077D  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8479  077E  0846               	movf	(??___fldiv+1)^(0+128),w
  8480  077F  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8481  0780  0845               	movf	??___fldiv^(0+128),w
  8482  0781  00C1               	movwf	___fldiv@b^(0+128)
  8483  0782                     l6039:
  8484  0782  3001               	movlw	1
  8485  0783  07CF               	addwf	___fldiv@new_exp^(0+128),f
  8486  0784  3000               	movlw	0
  8487  0785  3DD0               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  8488  0786                     l6041:
  8489  0786  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  8490  0787  3A80               	xorlw	128
  8491  0788  00C5               	movwf	??___fldiv^(0+128)
  8492  0789  3080               	movlw	128
  8493  078A  0245               	subwf	??___fldiv^(0+128),w
  8494  078B  1D03               	skipz
  8495  078C  2F8F               	goto	u5495
  8496  078D  30FF               	movlw	255
  8497  078E  024F               	subwf	___fldiv@new_exp^(0+128),w
  8498  078F                     u5495:
  8499  078F  1C03               	skipc
  8500  0790  2F92               	goto	u5491
  8501  0791  2F93               	goto	u5490
  8502  0792                     u5491:
  8503  0792  2FA0               	goto	l1431
  8504  0793                     u5490:
  8505  0793                     l6043:
  8506  0793  30FF               	movlw	255
  8507  0794  0021               	movlb	1	; select bank1
  8508  0795  00CF               	movwf	___fldiv@new_exp^(0+128)
  8509  0796  3000               	movlw	0
  8510  0797  00D0               	movwf	(___fldiv@new_exp^(0+128)+1)
  8511  0798  3000               	movlw	0
  8512  0799  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8513  079A  3000               	movlw	0
  8514  079B  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8515  079C  3000               	movlw	0
  8516  079D  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8517  079E  3000               	movlw	0
  8518  079F  00C1               	movwf	___fldiv@b^(0+128)
  8519  07A0                     l1431:
  8520  07A0  0021               	movlb	1	; select bank1
  8521  07A1  0850               	movf	(___fldiv@new_exp+1)^(0+128),w
  8522  07A2  3A80               	xorlw	128
  8523  07A3  00C5               	movwf	??___fldiv^(0+128)
  8524  07A4  3080               	movlw	128
  8525  07A5  0245               	subwf	??___fldiv^(0+128),w
  8526  07A6  1D03               	skipz
  8527  07A7  2FAA               	goto	u5505
  8528  07A8  3001               	movlw	1
  8529  07A9  024F               	subwf	___fldiv@new_exp^(0+128),w
  8530  07AA                     u5505:
  8531  07AA  1803               	skipnc
  8532  07AB  2FAD               	goto	u5501
  8533  07AC  2FAE               	goto	u5500
  8534  07AD                     u5501:
  8535  07AD  2FBA               	goto	l1432
  8536  07AE                     u5500:
  8537  07AE                     l6045:
  8538  07AE  0021               	movlb	1	; select bank1
  8539  07AF  01CF               	clrf	___fldiv@new_exp^(0+128)
  8540  07B0  01D0               	clrf	(___fldiv@new_exp+1)^(0+128)
  8541  07B1                     l6047:
  8542  07B1  3000               	movlw	0
  8543  07B2  00C4               	movwf	(___fldiv@b+3)^(0+128)
  8544  07B3  3000               	movlw	0
  8545  07B4  00C3               	movwf	(___fldiv@b+2)^(0+128)
  8546  07B5  3000               	movlw	0
  8547  07B6  00C2               	movwf	(___fldiv@b+1)^(0+128)
  8548  07B7  3000               	movlw	0
  8549  07B8  00C1               	movwf	___fldiv@b^(0+128)
  8550  07B9                     l6049:
  8551  07B9  01CE               	clrf	___fldiv@sign^(0+128)
  8552  07BA                     l1432:
  8553  07BA  0021               	movlb	1	; select bank1
  8554  07BB  084F               	movf	___fldiv@new_exp^(0+128),w
  8555  07BC  00C5               	movwf	??___fldiv^(0+128)
  8556  07BD  0845               	movf	??___fldiv^(0+128),w
  8557  07BE  00D5               	movwf	___fldiv@bexp^(0+128)
  8558  07BF                     l6051:
  8559  07BF  1C55               	btfss	___fldiv@bexp^(0+128),0
  8560  07C0  2FC2               	goto	u5511
  8561  07C1  2FC3               	goto	u5510
  8562  07C2                     u5511:
  8563  07C2  2FC5               	goto	l6055
  8564  07C3                     u5510:
  8565  07C3                     l6053:
  8566  07C3  17C3               	bsf	(___fldiv@b^(0+128)+2),7
  8567  07C4  2FC9               	goto	l1434
  8568  07C5                     l6055:
  8569  07C5  307F               	movlw	127
  8570  07C6  00C5               	movwf	??___fldiv^(0+128)
  8571  07C7  0845               	movf	??___fldiv^(0+128),w
  8572  07C8  05C3               	andwf	(___fldiv@b^(0+128)+2),f
  8573  07C9                     l1434:
  8574  07C9  3655               	lsrf	___fldiv@bexp^(0+128),w
  8575  07CA  00C5               	movwf	??___fldiv^(0+128)
  8576  07CB  0845               	movf	??___fldiv^(0+128),w
  8577  07CC  00C4               	movwf	(___fldiv@b^(0+128)+3)
  8578  07CD  084E               	movf	___fldiv@sign^(0+128),w
  8579  07CE  00C5               	movwf	??___fldiv^(0+128)
  8580  07CF  0845               	movf	??___fldiv^(0+128),w
  8581  07D0  04C4               	iorwf	(___fldiv@b^(0+128)+3),f
  8582  07D1  2E8E               	goto	l5965
  8583  07D2                     l1412:
  8584  07D2  0008               	return
  8585  07D3                     __end_of___fldiv:
  8586                           
  8587                           	psect	text8
  8588  11C7                     __ptext8:	
  8589 ;; *************** function ___flge *****************
  8590 ;; Defined at:
  8591 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  ff1             4   24[BANK0 ] unsigned char 
  8594 ;;  ff2             4   28[BANK0 ] unsigned char 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;		None               void
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8606 ;;      Params:         0       8       0       0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0
  8608 ;;      Temps:          0       4       0       0       0       0       0       0
  8609 ;;      Totals:         0      12       0       0       0       0       0       0
  8610 ;;Total ram usage:       12 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 4
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_main
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620  11C7                     ___flge:	
  8621                           ;psect for function ___flge
  8622                           
  8623  11C7                     l5187:	
  8624                           ;incstack = 0
  8625                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8626                           
  8627  11C7  3000               	movlw	0
  8628  11C8  0020               	movlb	0	; select bank0
  8629  11C9  0538               	andwf	___flge@ff1,w
  8630  11CA  00C0               	movwf	??___flge
  8631  11CB  3000               	movlw	0
  8632  11CC  0539               	andwf	___flge@ff1+1,w
  8633  11CD  00C1               	movwf	??___flge+1
  8634  11CE  3080               	movlw	128
  8635  11CF  053A               	andwf	___flge@ff1+2,w
  8636  11D0  00C2               	movwf	??___flge+2
  8637  11D1  307F               	movlw	127
  8638  11D2  053B               	andwf	___flge@ff1+3,w
  8639  11D3  00C3               	movwf	??___flge+3
  8640  11D4  0843               	movf	??___flge+3,w
  8641  11D5  0442               	iorwf	??___flge+2,w
  8642  11D6  0441               	iorwf	??___flge+1,w
  8643  11D7  0440               	iorwf	??___flge,w
  8644  11D8  1D03               	skipz
  8645  11D9  29DB               	goto	u4201
  8646  11DA  29DC               	goto	u4200
  8647  11DB                     u4201:
  8648  11DB  29E4               	goto	l1231
  8649  11DC                     u4200:
  8650  11DC                     l5189:
  8651  11DC  3000               	movlw	0
  8652  11DD  00BB               	movwf	___flge@ff1+3
  8653  11DE  3000               	movlw	0
  8654  11DF  00BA               	movwf	___flge@ff1+2
  8655  11E0  3000               	movlw	0
  8656  11E1  00B9               	movwf	___flge@ff1+1
  8657  11E2  3000               	movlw	0
  8658  11E3  00B8               	movwf	___flge@ff1
  8659  11E4                     l1231:
  8660  11E4  3000               	movlw	0
  8661  11E5  053C               	andwf	___flge@ff2,w
  8662  11E6  00C0               	movwf	??___flge
  8663  11E7  3000               	movlw	0
  8664  11E8  053D               	andwf	___flge@ff2+1,w
  8665  11E9  00C1               	movwf	??___flge+1
  8666  11EA  3080               	movlw	128
  8667  11EB  053E               	andwf	___flge@ff2+2,w
  8668  11EC  00C2               	movwf	??___flge+2
  8669  11ED  307F               	movlw	127
  8670  11EE  053F               	andwf	___flge@ff2+3,w
  8671  11EF  00C3               	movwf	??___flge+3
  8672  11F0  0843               	movf	??___flge+3,w
  8673  11F1  0442               	iorwf	??___flge+2,w
  8674  11F2  0441               	iorwf	??___flge+1,w
  8675  11F3  0440               	iorwf	??___flge,w
  8676  11F4  1D03               	skipz
  8677  11F5  29F7               	goto	u4211
  8678  11F6  29F8               	goto	u4210
  8679  11F7                     u4211:
  8680  11F7  2A00               	goto	l5193
  8681  11F8                     u4210:
  8682  11F8                     l5191:
  8683  11F8  3000               	movlw	0
  8684  11F9  00BF               	movwf	___flge@ff2+3
  8685  11FA  3000               	movlw	0
  8686  11FB  00BE               	movwf	___flge@ff2+2
  8687  11FC  3000               	movlw	0
  8688  11FD  00BD               	movwf	___flge@ff2+1
  8689  11FE  3000               	movlw	0
  8690  11FF  00BC               	movwf	___flge@ff2
  8691  1200                     l5193:
  8692  1200  1FBB               	btfss	___flge@ff1+3,7
  8693  1201  2A03               	goto	u4221
  8694  1202  2A04               	goto	u4220
  8695  1203                     u4221:
  8696  1203  2A1C               	goto	l5197
  8697  1204                     u4220:
  8698  1204                     l5195:
  8699  1204  3000               	movlw	0
  8700  1205  00C0               	movwf	??___flge
  8701  1206  3000               	movlw	0
  8702  1207  00C1               	movwf	??___flge+1
  8703  1208  3000               	movlw	0
  8704  1209  00C2               	movwf	??___flge+2
  8705  120A  3080               	movlw	128
  8706  120B  00C3               	movwf	??___flge+3
  8707  120C  0838               	movf	___flge@ff1,w
  8708  120D  02C0               	subwf	??___flge,f
  8709  120E  0839               	movf	___flge@ff1+1,w
  8710  120F  3BC1               	subwfb	??___flge+1,f
  8711  1210  083A               	movf	___flge@ff1+2,w
  8712  1211  3BC2               	subwfb	??___flge+2,f
  8713  1212  083B               	movf	___flge@ff1+3,w
  8714  1213  3BC3               	subwfb	??___flge+3,f
  8715  1214  0843               	movf	??___flge+3,w
  8716  1215  00BB               	movwf	___flge@ff1+3
  8717  1216  0842               	movf	??___flge+2,w
  8718  1217  00BA               	movwf	___flge@ff1+2
  8719  1218  0841               	movf	??___flge+1,w
  8720  1219  00B9               	movwf	___flge@ff1+1
  8721  121A  0840               	movf	??___flge,w
  8722  121B  00B8               	movwf	___flge@ff1
  8723  121C                     l5197:
  8724  121C  1FBF               	btfss	___flge@ff2+3,7
  8725  121D  2A1F               	goto	u4231
  8726  121E  2A20               	goto	u4230
  8727  121F                     u4231:
  8728  121F  2A38               	goto	l1234
  8729  1220                     u4230:
  8730  1220                     l5199:
  8731  1220  3000               	movlw	0
  8732  1221  00C0               	movwf	??___flge
  8733  1222  3000               	movlw	0
  8734  1223  00C1               	movwf	??___flge+1
  8735  1224  3000               	movlw	0
  8736  1225  00C2               	movwf	??___flge+2
  8737  1226  3080               	movlw	128
  8738  1227  00C3               	movwf	??___flge+3
  8739  1228  083C               	movf	___flge@ff2,w
  8740  1229  02C0               	subwf	??___flge,f
  8741  122A  083D               	movf	___flge@ff2+1,w
  8742  122B  3BC1               	subwfb	??___flge+1,f
  8743  122C  083E               	movf	___flge@ff2+2,w
  8744  122D  3BC2               	subwfb	??___flge+2,f
  8745  122E  083F               	movf	___flge@ff2+3,w
  8746  122F  3BC3               	subwfb	??___flge+3,f
  8747  1230  0843               	movf	??___flge+3,w
  8748  1231  00BF               	movwf	___flge@ff2+3
  8749  1232  0842               	movf	??___flge+2,w
  8750  1233  00BE               	movwf	___flge@ff2+2
  8751  1234  0841               	movf	??___flge+1,w
  8752  1235  00BD               	movwf	___flge@ff2+1
  8753  1236  0840               	movf	??___flge,w
  8754  1237  00BC               	movwf	___flge@ff2
  8755  1238                     l1234:
  8756  1238  3080               	movlw	128
  8757  1239  06BB               	xorwf	___flge@ff1+3,f
  8758  123A  3080               	movlw	128
  8759  123B  06BF               	xorwf	___flge@ff2+3,f
  8760  123C  083F               	movf	___flge@ff2+3,w
  8761  123D  023B               	subwf	___flge@ff1+3,w
  8762  123E  1D03               	skipz
  8763  123F  2A4A               	goto	u4245
  8764  1240  083E               	movf	___flge@ff2+2,w
  8765  1241  023A               	subwf	___flge@ff1+2,w
  8766  1242  1D03               	skipz
  8767  1243  2A4A               	goto	u4245
  8768  1244  083D               	movf	___flge@ff2+1,w
  8769  1245  0239               	subwf	___flge@ff1+1,w
  8770  1246  1D03               	skipz
  8771  1247  2A4A               	goto	u4245
  8772  1248  083C               	movf	___flge@ff2,w
  8773  1249  0238               	subwf	___flge@ff1,w
  8774  124A                     u4245:
  8775  124A  1803               	skipnc
  8776  124B  2A4D               	goto	u4241
  8777  124C  2A4E               	goto	u4240
  8778  124D                     u4241:
  8779  124D  2A50               	goto	l5203
  8780  124E                     u4240:
  8781  124E                     l5201:
  8782  124E  1003               	clrc
  8783  124F  2A51               	goto	l1239
  8784  1250                     l5203:
  8785  1250  1403               	setc
  8786  1251                     l1239:
  8787  1251  0008               	return
  8788  1252                     __end_of___flge:
  8789                           
  8790                           	psect	text9
  8791  1C4C                     __ptext9:	
  8792 ;; *************** function _SYSTEM_Initialize *****************
  8793 ;; Defined at:
  8794 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8808 ;;      Params:         0       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 6
  8815 ;; This function calls:
  8816 ;;		_EUSART_Initialize
  8817 ;;		_I2C_Initialize
  8818 ;;		_OSCILLATOR_Initialize
  8819 ;;		_PIN_MANAGER_Initialize
  8820 ;;		_TMR0_Initialize
  8821 ;;		_TMR1_Initialize
  8822 ;;		_WDT_Initialize
  8823 ;; This function is called by:
  8824 ;;		_main
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828  1C4C                     _SYSTEM_Initialize:	
  8829                           ;psect for function _SYSTEM_Initialize
  8830                           
  8831  1C4C                     l6501:	
  8832                           ;incstack = 0
  8833                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8834                           
  8835                           
  8836                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  8837  1C4C  319B  234F  319C   	fcall	_I2C_Initialize
  8838                           
  8839                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8840  1C4F  319C  2479  319C   	fcall	_PIN_MANAGER_Initialize
  8841                           
  8842                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8843  1C52  319A  22EA  319C   	fcall	_OSCILLATOR_Initialize
  8844                           
  8845                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  8846  1C55  319A  229D  319C   	fcall	_WDT_Initialize
  8847                           
  8848                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8849  1C58  319C  2492  319C   	fcall	_TMR1_Initialize
  8850                           
  8851                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  8852  1C5B  319C  2436  319C   	fcall	_TMR0_Initialize
  8853                           
  8854                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  8855  1C5E  319F  2750  319C   	fcall	_EUSART_Initialize
  8856  1C61                     l186:
  8857  1C61  0008               	return
  8858  1C62                     __end_of_SYSTEM_Initialize:
  8859                           
  8860                           	psect	text10
  8861  1A9D                     __ptext10:	
  8862 ;; *************** function _WDT_Initialize *****************
  8863 ;; Defined at:
  8864 ;;		line 70 in file "mcc_generated_files/mcc.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8878 ;;      Params:         0       0       0       0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0
  8881 ;;      Totals:         0       0       0       0       0       0       0       0
  8882 ;;Total ram usage:        0 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; Hardware stack levels required when called: 4
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_SYSTEM_Initialize
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892  1A9D                     _WDT_Initialize:	
  8893                           ;psect for function _WDT_Initialize
  8894                           
  8895  1A9D                     l4677:	
  8896                           ;incstack = 0
  8897                           ; Regs used in _WDT_Initialize: [wreg]
  8898                           
  8899                           
  8900                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x1A;
  8901  1A9D  301A               	movlw	26
  8902  1A9E  0021               	movlb	1	; select bank1
  8903  1A9F  0097               	movwf	23	;volatile
  8904  1AA0                     l192:
  8905  1AA0  0008               	return
  8906  1AA1                     __end_of_WDT_Initialize:
  8907                           
  8908                           	psect	text11
  8909  1C92                     __ptext11:	
  8910 ;; *************** function _TMR1_Initialize *****************
  8911 ;; Defined at:
  8912 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, pclath, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8926 ;;      Params:         0       0       0       0       0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0
  8929 ;;      Totals:         0       0       0       0       0       0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used: 1
  8932 ;; Hardware stack levels required when called: 5
  8933 ;; This function calls:
  8934 ;;		_TMR1_SetInterruptHandler
  8935 ;; This function is called by:
  8936 ;;		_SYSTEM_Initialize
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940  1C92                     _TMR1_Initialize:	
  8941                           ;psect for function _TMR1_Initialize
  8942                           
  8943  1C92                     l4679:	
  8944                           ;incstack = 0
  8945                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8946                           
  8947                           
  8948                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  8949  1C92  0020               	movlb	0	; select bank0
  8950  1C93  0199               	clrf	25	;volatile
  8951  1C94                     l4681:
  8952                           
  8953                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xB1;
  8954  1C94  30B1               	movlw	177
  8955  1C95  0097               	movwf	23	;volatile
  8956  1C96                     l4683:
  8957                           
  8958                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0xE0;
  8959  1C96  30E0               	movlw	224
  8960  1C97  0096               	movwf	22	;volatile
  8961  1C98                     l4685:
  8962                           
  8963                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  8964  1C98  1011               	bcf	17,0	;volatile
  8965  1C99                     l4687:
  8966                           
  8967                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8968  1C99  0817               	movf	23,w	;volatile
  8969  1C9A  00E1               	movwf	_timer1ReloadVal+1	;volatile
  8970  1C9B  0816               	movf	22,w	;volatile
  8971  1C9C  00E0               	movwf	_timer1ReloadVal	;volatile
  8972  1C9D                     l4689:
  8973                           
  8974                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  8975  1C9D  0021               	movlb	1	; select bank1
  8976  1C9E  1411               	bsf	17,0	;volatile
  8977  1C9F                     l4691:
  8978                           
  8979                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(mbus_timer_handler);
  8980  1C9F  3059               	movlw	low _mbus_timer_handler
  8981  1CA0  0020               	movlb	0	; select bank0
  8982  1CA1  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8983  1CA2  301B               	movlw	high _mbus_timer_handler
  8984  1CA3  00AB               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8985  1CA4  319A  22F6  319C   	fcall	_TMR1_SetInterruptHandler
  8986  1CA7                     l4693:
  8987                           
  8988                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x01;
  8989  1CA7  3001               	movlw	1
  8990  1CA8  0020               	movlb	0	; select bank0
  8991  1CA9  0098               	movwf	24	;volatile
  8992  1CAA                     l702:
  8993  1CAA  0008               	return
  8994  1CAB                     __end_of_TMR1_Initialize:
  8995                           
  8996                           	psect	text12
  8997  1AF6                     __ptext12:	
  8998 ;; *************** function _TMR1_SetInterruptHandler *****************
  8999 ;; Defined at:
  9000 ;;		line 179 in file "mcc_generated_files/tmr1.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  InterruptHan    2   10[BANK0 ] PTR FTN()void 
  9003 ;;		 -> mbus_timer_handler(1), 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9015 ;;      Params:         0       2       0       0       0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0
  9018 ;;      Totals:         0       2       0       0       0       0       0       0
  9019 ;;Total ram usage:        2 bytes
  9020 ;; Hardware stack levels used: 1
  9021 ;; Hardware stack levels required when called: 4
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		_TMR1_Initialize
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029  1AF6                     _TMR1_SetInterruptHandler:	
  9030                           ;psect for function _TMR1_SetInterruptHandler
  9031                           
  9032  1AF6                     l4279:	
  9033                           ;incstack = 0
  9034                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9035                           
  9036                           
  9037                           ;mcc_generated_files/tmr1.c: 180:     TMR1_InterruptHandler = InterruptHandler;
  9038  1AF6  0020               	movlb	0	; select bank0
  9039  1AF7  082B               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9040  1AF8  00DF               	movwf	_TMR1_InterruptHandler+1
  9041  1AF9  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9042  1AFA  00DE               	movwf	_TMR1_InterruptHandler
  9043  1AFB                     l735:
  9044  1AFB  0008               	return
  9045  1AFC                     __end_of_TMR1_SetInterruptHandler:
  9046                           
  9047                           	psect	text13
  9048  1C36                     __ptext13:	
  9049 ;; *************** function _TMR0_Initialize *****************
  9050 ;; Defined at:
  9051 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, pclath, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9065 ;;      Params:         0       0       0       0       0       0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0
  9067 ;;      Temps:          0       1       0       0       0       0       0       0
  9068 ;;      Totals:         0       1       0       0       0       0       0       0
  9069 ;;Total ram usage:        1 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 5
  9072 ;; This function calls:
  9073 ;;		_TMR0_SetInterruptHandler
  9074 ;; This function is called by:
  9075 ;;		_SYSTEM_Initialize
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079  1C36                     _TMR0_Initialize:	
  9080                           ;psect for function _TMR0_Initialize
  9081                           
  9082  1C36                     l4695:	
  9083                           ;incstack = 0
  9084                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9085                           
  9086                           
  9087                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  9088  1C36  0021               	movlb	1	; select bank1
  9089  1C37  0815               	movf	21,w	;volatile
  9090  1C38  39C0               	andlw	192
  9091  1C39  3817               	iorlw	23
  9092  1C3A  0095               	movwf	21	;volatile
  9093  1C3B                     l4697:
  9094                           
  9095                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xF8;
  9096  1C3B  30F8               	movlw	248
  9097  1C3C  0020               	movlb	0	; select bank0
  9098  1C3D  0095               	movwf	21	;volatile
  9099  1C3E                     l4699:
  9100                           
  9101                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 248;
  9102  1C3E  30F8               	movlw	248
  9103  1C3F  00AC               	movwf	??_TMR0_Initialize
  9104  1C40  082C               	movf	??_TMR0_Initialize,w
  9105  1C41  00E2               	movwf	_timer0ReloadVal	;volatile
  9106  1C42                     l4701:
  9107                           
  9108                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  9109  1C42  110B               	bcf	11,2	;volatile
  9110  1C43                     l4703:
  9111                           
  9112                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  9113  1C43  168B               	bsf	11,5	;volatile
  9114  1C44                     l4705:
  9115                           
  9116                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9117  1C44  3077               	movlw	low _TMR0_DefaultInterruptHandler
  9118  1C45  00AA               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9119  1C46  301A               	movlw	high _TMR0_DefaultInterruptHandler
  9120  1C47  00AB               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9121  1C48  319A  22F0  319C   	fcall	_TMR0_SetInterruptHandler
  9122  1C4B                     l757:
  9123  1C4B  0008               	return
  9124  1C4C                     __end_of_TMR0_Initialize:
  9125                           
  9126                           	psect	text14
  9127  1AF0                     __ptext14:	
  9128 ;; *************** function _TMR0_SetInterruptHandler *****************
  9129 ;; Defined at:
  9130 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  InterruptHan    2   10[BANK0 ] PTR FTN()void 
  9133 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;		None
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9145 ;;      Params:         0       2       0       0       0       0       0       0
  9146 ;;      Locals:         0       0       0       0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0
  9148 ;;      Totals:         0       2       0       0       0       0       0       0
  9149 ;;Total ram usage:        2 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 4
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_TMR0_Initialize
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159  1AF0                     _TMR0_SetInterruptHandler:	
  9160                           ;psect for function _TMR0_SetInterruptHandler
  9161                           
  9162  1AF0                     l4281:	
  9163                           ;incstack = 0
  9164                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9165                           
  9166                           
  9167                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  9168  1AF0  0020               	movlb	0	; select bank0
  9169  1AF1  082B               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9170  1AF2  00DD               	movwf	_TMR0_InterruptHandler+1
  9171  1AF3  082A               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9172  1AF4  00DC               	movwf	_TMR0_InterruptHandler
  9173  1AF5                     l776:
  9174  1AF5  0008               	return
  9175  1AF6                     __end_of_TMR0_SetInterruptHandler:
  9176                           
  9177                           	psect	text15
  9178  1C79                     __ptext15:	
  9179 ;; *************** function _PIN_MANAGER_Initialize *****************
  9180 ;; Defined at:
  9181 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9195 ;;      Params:         0       0       0       0       0       0       0       0
  9196 ;;      Locals:         0       0       0       0       0       0       0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0       0
  9198 ;;      Totals:         0       0       0       0       0       0       0       0
  9199 ;;Total ram usage:        0 bytes
  9200 ;; Hardware stack levels used: 1
  9201 ;; Hardware stack levels required when called: 4
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_SYSTEM_Initialize
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209  1C79                     _PIN_MANAGER_Initialize:	
  9210                           ;psect for function _PIN_MANAGER_Initialize
  9211                           
  9212  1C79                     l4645:	
  9213                           ;incstack = 0
  9214                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9215                           
  9216                           
  9217                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9218  1C79  0022               	movlb	2	; select bank2
  9219  1C7A  018C               	clrf	12	;volatile
  9220                           
  9221                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9222  1C7B  018D               	clrf	13	;volatile
  9223                           
  9224                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9225  1C7C  018E               	clrf	14	;volatile
  9226  1C7D                     l4647:
  9227                           
  9228                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  9229  1C7D  303F               	movlw	63
  9230  1C7E  0021               	movlb	1	; select bank1
  9231  1C7F  008C               	movwf	12	;volatile
  9232  1C80                     l4649:
  9233                           
  9234                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  9235  1C80  3070               	movlw	112
  9236  1C81  008D               	movwf	13	;volatile
  9237  1C82                     l4651:
  9238                           
  9239                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x3F;
  9240  1C82  303F               	movlw	63
  9241  1C83  008E               	movwf	14	;volatile
  9242  1C84                     l4653:
  9243                           
  9244                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0F;
  9245  1C84  300F               	movlw	15
  9246  1C85  0023               	movlb	3	; select bank3
  9247  1C86  008E               	movwf	14	;volatile
  9248                           
  9249                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  9250  1C87  018D               	clrf	13	;volatile
  9251  1C88                     l4655:
  9252                           
  9253                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  9254  1C88  3017               	movlw	23
  9255  1C89  008C               	movwf	12	;volatile
  9256  1C8A                     l4657:
  9257                           
  9258                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9259  1C8A  0024               	movlb	4	; select bank4
  9260  1C8B  018D               	clrf	13	;volatile
  9261  1C8C                     l4659:
  9262                           
  9263                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  9264  1C8C  018C               	clrf	12	;volatile
  9265  1C8D                     l4661:
  9266                           
  9267                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  9268  1C8D  0021               	movlb	1	; select bank1
  9269  1C8E  1795               	bsf	21,7	;volatile
  9270  1C8F                     l4663:
  9271                           
  9272                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  9273  1C8F  0022               	movlb	2	; select bank2
  9274  1C90  019D               	clrf	29	;volatile
  9275  1C91                     l160:
  9276  1C91  0008               	return
  9277  1C92                     __end_of_PIN_MANAGER_Initialize:
  9278                           
  9279                           	psect	text16
  9280  1AEA                     __ptext16:	
  9281 ;; *************** function _OSCILLATOR_Initialize *****************
  9282 ;; Defined at:
  9283 ;;		line 62 in file "mcc_generated_files/mcc.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      void 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9297 ;;      Params:         0       0       0       0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0
  9300 ;;      Totals:         0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:        0 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 4
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		_SYSTEM_Initialize
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311  1AEA                     _OSCILLATOR_Initialize:	
  9312                           ;psect for function _OSCILLATOR_Initialize
  9313                           
  9314  1AEA                     l4673:	
  9315                           ;incstack = 0
  9316                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9317                           
  9318                           
  9319                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  9320  1AEA  3070               	movlw	112
  9321  1AEB  0021               	movlb	1	; select bank1
  9322  1AEC  0099               	movwf	25	;volatile
  9323  1AED                     l4675:
  9324                           
  9325                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  9326  1AED  0022               	movlb	2	; select bank2
  9327  1AEE  0196               	clrf	22	;volatile
  9328  1AEF                     l189:
  9329  1AEF  0008               	return
  9330  1AF0                     __end_of_OSCILLATOR_Initialize:
  9331                           
  9332                           	psect	text17
  9333  1B4F                     __ptext17:	
  9334 ;; *************** function _I2C_Initialize *****************
  9335 ;; Defined at:
  9336 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9350 ;;      Params:         0       0       0       0       0       0       0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0
  9353 ;;      Totals:         0       0       0       0       0       0       0       0
  9354 ;;Total ram usage:        0 bytes
  9355 ;; Hardware stack levels used: 1
  9356 ;; Hardware stack levels required when called: 4
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_SYSTEM_Initialize
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364  1B4F                     _I2C_Initialize:	
  9365                           ;psect for function _I2C_Initialize
  9366                           
  9367  1B4F                     l4665:	
  9368                           ;incstack = 0
  9369                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  9370                           
  9371                           
  9372                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x80;
  9373  1B4F  3080               	movlw	128
  9374  1B50  0024               	movlb	4	; select bank4
  9375  1B51  0094               	movwf	20	;volatile
  9376                           
  9377                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  9378  1B52  3008               	movlw	8
  9379  1B53  0095               	movwf	21	;volatile
  9380  1B54                     l4667:
  9381                           
  9382                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  9383  1B54  0196               	clrf	22	;volatile
  9384  1B55                     l4669:
  9385                           
  9386                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x13;
  9387  1B55  3013               	movlw	19
  9388  1B56  0092               	movwf	18	;volatile
  9389  1B57                     l4671:
  9390                           
  9391                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9392  1B57  1295               	bcf	21,5	;volatile
  9393  1B58                     l299:
  9394  1B58  0008               	return
  9395  1B59                     __end_of_I2C_Initialize:
  9396                           
  9397                           	psect	text18
  9398  1F50                     __ptext18:	
  9399 ;; *************** function _EUSART_Initialize *****************
  9400 ;; Defined at:
  9401 ;;		line 88 in file "mcc_generated_files/eusart.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, pclath, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9415 ;;      Params:         0       0       0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0
  9417 ;;      Temps:          0       1       0       0       0       0       0       0
  9418 ;;      Totals:         0       1       0       0       0       0       0       0
  9419 ;;Total ram usage:        1 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; Hardware stack levels required when called: 5
  9422 ;; This function calls:
  9423 ;;		_EUSART_SetErrorHandler
  9424 ;;		_EUSART_SetFramingErrorHandler
  9425 ;;		_EUSART_SetOverrunErrorHandler
  9426 ;;		_EUSART_SetRxInterruptHandler
  9427 ;;		_EUSART_SetTxInterruptHandler
  9428 ;; This function is called by:
  9429 ;;		_SYSTEM_Initialize
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433  1F50                     _EUSART_Initialize:	
  9434                           ;psect for function _EUSART_Initialize
  9435                           
  9436  1F50                     l6245:	
  9437                           ;incstack = 0
  9438                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9439                           
  9440                           
  9441                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  9442  1F50  0021               	movlb	1	; select bank1
  9443  1F51  1291               	bcf	17,5	;volatile
  9444  1F52                     l6247:
  9445                           
  9446                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(mbus_rx_handler);
  9447  1F52  30A5               	movlw	low _mbus_rx_handler
  9448  1F53  0020               	movlb	0	; select bank0
  9449  1F54  00AA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  9450  1F55  301E               	movlw	high _mbus_rx_handler
  9451  1F56  00AB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  9452  1F57  319B  233D  319F   	fcall	_EUSART_SetRxInterruptHandler
  9453  1F5A                     l6249:
  9454                           
  9455                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  9456  1F5A  0021               	movlb	1	; select bank1
  9457  1F5B  1211               	bcf	17,4	;volatile
  9458                           
  9459                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(mbus_tx_handler);
  9460  1F5C  3013               	movlw	low _mbus_tx_handler
  9461  1F5D  0020               	movlb	0	; select bank0
  9462  1F5E  00AA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  9463  1F5F  301E               	movlw	high _mbus_tx_handler
  9464  1F60  00AB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  9465  1F61  319B  2346  319F   	fcall	_EUSART_SetTxInterruptHandler
  9466  1F64                     l6251:
  9467                           
  9468                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  9469  1F64  3008               	movlw	8
  9470  1F65  0023               	movlb	3	; select bank3
  9471  1F66  009F               	movwf	31	;volatile
  9472  1F67                     l6253:
  9473                           
  9474                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  9475  1F67  3090               	movlw	144
  9476  1F68  009D               	movwf	29	;volatile
  9477  1F69                     l6255:
  9478                           
  9479                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  9480  1F69  3024               	movlw	36
  9481  1F6A  009E               	movwf	30	;volatile
  9482  1F6B                     l6257:
  9483                           
  9484                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  9485  1F6B  30CF               	movlw	207
  9486  1F6C  009B               	movwf	27	;volatile
  9487  1F6D                     l6259:
  9488                           
  9489                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  9490  1F6D  019C               	clrf	28	;volatile
  9491  1F6E                     l6261:
  9492                           
  9493                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  9494  1F6E  3000               	movlw	0
  9495  1F6F  0020               	movlb	0	; select bank0
  9496  1F70  00AA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9497  1F71  3000               	movlw	0
  9498  1F72  00AB               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9499  1F73  319B  232B  319F   	fcall	_EUSART_SetFramingErrorHandler
  9500  1F76                     l6263:
  9501                           
  9502                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  9503  1F76  3000               	movlw	0
  9504  1F77  0020               	movlb	0	; select bank0
  9505  1F78  00AA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9506  1F79  3000               	movlw	0
  9507  1F7A  00AB               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9508  1F7B  319B  2334  319F   	fcall	_EUSART_SetOverrunErrorHandler
  9509  1F7E                     l6265:
  9510                           
  9511                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  9512  1F7E  3000               	movlw	0
  9513  1F7F  0020               	movlb	0	; select bank0
  9514  1F80  00AA               	movwf	EUSART_SetErrorHandler@interruptHandler
  9515  1F81  3000               	movlw	0
  9516  1F82  00AB               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9517  1F83  319B  2322  319F   	fcall	_EUSART_SetErrorHandler
  9518                           
  9519                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  9520  1F86  0020               	movlb	0	; select bank0
  9521  1F87  01D8               	clrf	_eusartRxLastError	;volatile
  9522                           
  9523                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  9524  1F88  01DB               	clrf	_eusartTxHead	;volatile
  9525                           
  9526                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  9527  1F89  01DA               	clrf	_eusartTxTail	;volatile
  9528  1F8A                     l6267:
  9529                           
  9530                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  9531  1F8A  3040               	movlw	64
  9532  1F8B  00AC               	movwf	??_EUSART_Initialize
  9533  1F8C  082C               	movf	??_EUSART_Initialize,w
  9534  1F8D  00E3               	movwf	_eusartTxBufferRemaining	;volatile
  9535  1F8E                     l6269:
  9536                           
  9537                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  9538  1F8E  01D9               	clrf	_eusartRxHead	;volatile
  9539  1F8F                     l6271:
  9540                           
  9541                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  9542  1F8F  01FD               	clrf	_eusartRxTail	;volatile
  9543  1F90                     l6273:
  9544                           
  9545                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  9546  1F90  01FC               	clrf	_eusartRxCount	;volatile
  9547  1F91                     l6275:
  9548                           
  9549                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  9550  1F91  0021               	movlb	1	; select bank1
  9551  1F92  1691               	bsf	17,5	;volatile
  9552  1F93                     l604:
  9553  1F93  0008               	return
  9554  1F94                     __end_of_EUSART_Initialize:
  9555                           
  9556                           	psect	text19
  9557  1B46                     __ptext19:	
  9558 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  9559 ;; Defined at:
  9560 ;;		line 276 in file "mcc_generated_files/eusart.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  9563 ;;		 -> mbus_tx_handler(1), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;		None
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  1    wreg      void 
  9568 ;; Registers used:
  9569 ;;		wreg
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9575 ;;      Params:         0       2       0       0       0       0       0       0
  9576 ;;      Locals:         0       0       0       0       0       0       0       0
  9577 ;;      Temps:          0       0       0       0       0       0       0       0
  9578 ;;      Totals:         0       2       0       0       0       0       0       0
  9579 ;;Total ram usage:        2 bytes
  9580 ;; Hardware stack levels used: 1
  9581 ;; Hardware stack levels required when called: 4
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		_EUSART_Initialize
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589  1B46                     _EUSART_SetTxInterruptHandler:	
  9590                           ;psect for function _EUSART_SetTxInterruptHandler
  9591                           
  9592  1B46                     l4271:	
  9593                           ;incstack = 0
  9594                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  9595                           
  9596                           
  9597                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  9598  1B46  0020               	movlb	0	; select bank0
  9599  1B47  082B               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  9600  1B48  0023               	movlb	3	; select bank3
  9601  1B49  00EF               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384)
  9602  1B4A  0020               	movlb	0	; select bank0
  9603  1B4B  082A               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  9604  1B4C  0023               	movlb	3	; select bank3
  9605  1B4D  00EE               	movwf	_EUSART_TxDefaultInterruptHandler^(0+384)
  9606  1B4E                     l670:
  9607  1B4E  0008               	return
  9608  1B4F                     __end_of_EUSART_SetTxInterruptHandler:
  9609                           
  9610                           	psect	text20
  9611  1B3D                     __ptext20:	
  9612 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  9613 ;; Defined at:
  9614 ;;		line 280 in file "mcc_generated_files/eusart.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  9617 ;;		 -> mbus_rx_handler(1), 
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9629 ;;      Params:         0       2       0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0
  9632 ;;      Totals:         0       2       0       0       0       0       0       0
  9633 ;;Total ram usage:        2 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 4
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_EUSART_Initialize
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643  1B3D                     _EUSART_SetRxInterruptHandler:	
  9644                           ;psect for function _EUSART_SetRxInterruptHandler
  9645                           
  9646  1B3D                     l4269:	
  9647                           ;incstack = 0
  9648                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  9649                           
  9650                           
  9651                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  9652  1B3D  0020               	movlb	0	; select bank0
  9653  1B3E  082B               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  9654  1B3F  0023               	movlb	3	; select bank3
  9655  1B40  00ED               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
  9656  1B41  0020               	movlb	0	; select bank0
  9657  1B42  082A               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  9658  1B43  0023               	movlb	3	; select bank3
  9659  1B44  00EC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
  9660  1B45                     l673:
  9661  1B45  0008               	return
  9662  1B46                     __end_of_EUSART_SetRxInterruptHandler:
  9663                           
  9664                           	psect	text21
  9665  1B34                     __ptext21:	
  9666 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9667 ;; Defined at:
  9668 ;;		line 268 in file "mcc_generated_files/eusart.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  9671 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9683 ;;      Params:         0       2       0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0
  9686 ;;      Totals:         0       2       0       0       0       0       0       0
  9687 ;;Total ram usage:        2 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 4
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_EUSART_Initialize
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697  1B34                     _EUSART_SetOverrunErrorHandler:	
  9698                           ;psect for function _EUSART_SetOverrunErrorHandler
  9699                           
  9700  1B34                     l4275:	
  9701                           ;incstack = 0
  9702                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9703                           
  9704                           
  9705                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  9706  1B34  0020               	movlb	0	; select bank0
  9707  1B35  082B               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9708  1B36  0024               	movlb	4	; select bank4
  9709  1B37  00E0               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+512)
  9710  1B38  0020               	movlb	0	; select bank0
  9711  1B39  082A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9712  1B3A  0024               	movlb	4	; select bank4
  9713  1B3B  00DF               	movwf	_EUSART_OverrunErrorHandler^(0+512)
  9714  1B3C                     l664:
  9715  1B3C  0008               	return
  9716  1B3D                     __end_of_EUSART_SetOverrunErrorHandler:
  9717                           
  9718                           	psect	text22
  9719  1B2B                     __ptext22:	
  9720 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9721 ;; Defined at:
  9722 ;;		line 264 in file "mcc_generated_files/eusart.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  9725 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9737 ;;      Params:         0       2       0       0       0       0       0       0
  9738 ;;      Locals:         0       0       0       0       0       0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0
  9740 ;;      Totals:         0       2       0       0       0       0       0       0
  9741 ;;Total ram usage:        2 bytes
  9742 ;; Hardware stack levels used: 1
  9743 ;; Hardware stack levels required when called: 4
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_EUSART_Initialize
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751  1B2B                     _EUSART_SetFramingErrorHandler:	
  9752                           ;psect for function _EUSART_SetFramingErrorHandler
  9753                           
  9754  1B2B                     l4273:	
  9755                           ;incstack = 0
  9756                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9757                           
  9758                           
  9759                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  9760  1B2B  0020               	movlb	0	; select bank0
  9761  1B2C  082B               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9762  1B2D  0024               	movlb	4	; select bank4
  9763  1B2E  00E2               	movwf	(_EUSART_FramingErrorHandler+1)^(0+512)
  9764  1B2F  0020               	movlb	0	; select bank0
  9765  1B30  082A               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9766  1B31  0024               	movlb	4	; select bank4
  9767  1B32  00E1               	movwf	_EUSART_FramingErrorHandler^(0+512)
  9768  1B33                     l661:
  9769  1B33  0008               	return
  9770  1B34                     __end_of_EUSART_SetFramingErrorHandler:
  9771                           
  9772                           	psect	text23
  9773  1B22                     __ptext23:	
  9774 ;; *************** function _EUSART_SetErrorHandler *****************
  9775 ;; Defined at:
  9776 ;;		line 272 in file "mcc_generated_files/eusart.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  interruptHan    2   10[BANK0 ] PTR FTN()void 
  9779 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9791 ;;      Params:         0       2       0       0       0       0       0       0
  9792 ;;      Locals:         0       0       0       0       0       0       0       0
  9793 ;;      Temps:          0       0       0       0       0       0       0       0
  9794 ;;      Totals:         0       2       0       0       0       0       0       0
  9795 ;;Total ram usage:        2 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 4
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_EUSART_Initialize
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805  1B22                     _EUSART_SetErrorHandler:	
  9806                           ;psect for function _EUSART_SetErrorHandler
  9807                           
  9808  1B22                     l4277:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9811                           
  9812                           
  9813                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9814  1B22  0020               	movlb	0	; select bank0
  9815  1B23  082B               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9816  1B24  0024               	movlb	4	; select bank4
  9817  1B25  00DE               	movwf	(_EUSART_ErrorHandler+1)^(0+512)
  9818  1B26  0020               	movlb	0	; select bank0
  9819  1B27  082A               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9820  1B28  0024               	movlb	4	; select bank4
  9821  1B29  00DD               	movwf	_EUSART_ErrorHandler^(0+512)
  9822  1B2A                     l667:
  9823  1B2A  0008               	return
  9824  1B2B                     __end_of_EUSART_SetErrorHandler:
  9825                           
  9826                           	psect	text24
  9827  114B                     __ptext24:	
  9828 ;; *************** function _MCP3422_ReadVoltage *****************
  9829 ;; Defined at:
  9830 ;;		line 114 in file "main.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  channel         1    wreg     unsigned char 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  channel         1   37[BANK1 ] unsigned char 
  9835 ;;  adc_value       4   41[BANK1 ] unsigned long 
  9836 ;;  data            3   38[BANK1 ] unsigned char [3]
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  4   29[BANK1 ] float 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9846 ;;      Params:         0       0       4       0       0       0       0       0
  9847 ;;      Locals:         0       0       8       0       0       0       0       0
  9848 ;;      Temps:          0       0       4       0       0       0       0       0
  9849 ;;      Totals:         0       0      16       0       0       0       0       0
  9850 ;;Total ram usage:       16 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 14
  9853 ;; This function calls:
  9854 ;;		_MCP3422_Read
  9855 ;;		_MCP3422_Write
  9856 ;;		___flmul
  9857 ;;		___xxtofl
  9858 ;; This function is called by:
  9859 ;;		_main
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863  114B                     _MCP3422_ReadVoltage:	
  9864                           ;psect for function _MCP3422_ReadVoltage
  9865                           
  9866                           
  9867                           ;incstack = 0
  9868                           ; Regs used in _MCP3422_ReadVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9869                           ;MCP3422_ReadVoltage@channel stored from wreg
  9870  114B  0021               	movlb	1	; select bank1
  9871  114C  00C5               	movwf	MCP3422_ReadVoltage@channel^(0+128)
  9872  114D                     l6507:
  9873                           
  9874                           ;main.c: 117:     uint8_t data[3] = {0U};
  9875  114D  3000               	movlw	0
  9876  114E  00C6               	movwf	MCP3422_ReadVoltage@data^(0+128)
  9877  114F  3000               	movlw	0
  9878  1150  00C7               	movwf	(MCP3422_ReadVoltage@data+1)^(0+128)
  9879  1151  3000               	movlw	0
  9880  1152  00C8               	movwf	(MCP3422_ReadVoltage@data+2)^(0+128)
  9881  1153                     l6509:
  9882                           
  9883                           ;main.c: 119:     MCP3422_Write(((0x10 | 0x00 | 0x0C) | channel));
  9884  1153  0845               	movf	MCP3422_ReadVoltage@channel^(0+128),w
  9885  1154  381C               	iorlw	28
  9886  1155  3190  2000  3191   	fcall	_MCP3422_Write
  9887  1158                     l6511:
  9888                           
  9889                           ;main.c: 120:     _delay((unsigned long)((420)*(8000000/4000.0)));
  9890  1158  3005               	movlw	5
  9891  1159  0021               	movlb	1	; select bank1
  9892  115A  00C2               	movwf	(??_MCP3422_ReadVoltage^(0+128)+1)
  9893  115B  3043               	movlw	67
  9894  115C  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9895  115D  30E3               	movlw	227
  9896  115E                     u6597:
  9897  115E  0B89               	decfsz	9,f
  9898  115F  295E               	goto	u6597
  9899  1160  0BC1               	decfsz	??_MCP3422_ReadVoltage^(0+128),f
  9900  1161  295E               	goto	u6597
  9901  1162  0BC2               	decfsz	(??_MCP3422_ReadVoltage^(0+128)+1),f
  9902  1163  295E               	goto	u6597
  9903  1164  3200               	nop2
  9904                           
  9905                           ;main.c: 122:     MCP3422_Read(data, 3U);
  9906  1165  3003               	movlw	3
  9907  1166  0021               	movlb	1	; select bank1
  9908  1167  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9909  1168  0841               	movf	??_MCP3422_ReadVoltage^(0+128),w
  9910  1169  0020               	movlb	0	; select bank0
  9911  116A  00C1               	movwf	MCP3422_Read@count
  9912  116B  30C6               	movlw	(low (MCP3422_ReadVoltage@data| 0))& (0+255)
  9913  116C  319B  23C3  3191   	fcall	_MCP3422_Read
  9914  116F                     l6513:
  9915                           
  9916                           ;main.c: 123:     adc_value = data[0];
  9917  116F  0021               	movlb	1	; select bank1
  9918  1170  0846               	movf	MCP3422_ReadVoltage@data^(0+128),w
  9919  1171  00C1               	movwf	??_MCP3422_ReadVoltage^(0+128)
  9920  1172  01C2               	clrf	(??_MCP3422_ReadVoltage^(0+128)+1)
  9921  1173  01C3               	clrf	(??_MCP3422_ReadVoltage^(0+128)+2)
  9922  1174  01C4               	clrf	(??_MCP3422_ReadVoltage^(0+128)+3)
  9923  1175  0844               	movf	(??_MCP3422_ReadVoltage+3)^(0+128),w
  9924  1176  00CC               	movwf	(MCP3422_ReadVoltage@adc_value+3)^(0+128)
  9925  1177  0843               	movf	(??_MCP3422_ReadVoltage+2)^(0+128),w
  9926  1178  00CB               	movwf	(MCP3422_ReadVoltage@adc_value+2)^(0+128)
  9927  1179  0842               	movf	(??_MCP3422_ReadVoltage+1)^(0+128),w
  9928  117A  00CA               	movwf	(MCP3422_ReadVoltage@adc_value+1)^(0+128)
  9929  117B  0841               	movf	??_MCP3422_ReadVoltage^(0+128),w
  9930  117C  00C9               	movwf	MCP3422_ReadVoltage@adc_value^(0+128)
  9931  117D                     l6515:
  9932                           
  9933                           ;main.c: 124:     adc_value <<= 8U;
  9934  117D  3008               	movlw	8
  9935  117E                     u6215:
  9936  117E  35C9               	lslf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9937  117F  0DCA               	rlf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),f
  9938  1180  0DCB               	rlf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),f
  9939  1181  0DCC               	rlf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),f
  9940  1182  0B89               	decfsz	9,f
  9941  1183  297E               	goto	u6215
  9942  1184                     l6517:
  9943                           
  9944                           ;main.c: 125:     adc_value |= data[1];
  9945  1184  0847               	movf	(MCP3422_ReadVoltage@data^(0+128)+1),w
  9946  1185  04C9               	iorwf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9947  1186                     l6519:
  9948                           
  9949                           ;main.c: 126:     adc_value <<= 8U;
  9950  1186  3008               	movlw	8
  9951  1187                     u6225:
  9952  1187  35C9               	lslf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9953  1188  0DCA               	rlf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),f
  9954  1189  0DCB               	rlf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),f
  9955  118A  0DCC               	rlf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),f
  9956  118B  0B89               	decfsz	9,f
  9957  118C  2987               	goto	u6225
  9958  118D                     l6521:
  9959                           
  9960                           ;main.c: 127:     adc_value |= data[2];
  9961  118D  0848               	movf	(MCP3422_ReadVoltage@data^(0+128)+2),w
  9962  118E  04C9               	iorwf	MCP3422_ReadVoltage@adc_value^(0+128),f
  9963  118F                     l6523:
  9964                           
  9965                           ;main.c: 130:     return ((float)adc_value * 0.015625f);
  9966  118F  303C               	movlw	60
  9967  1190  00AB               	movwf	(___flmul@b+3)^(0+128)
  9968  1191  3080               	movlw	128
  9969  1192  00AA               	movwf	(___flmul@b+2)^(0+128)
  9970  1193  3000               	movlw	0
  9971  1194  00A9               	movwf	(___flmul@b+1)^(0+128)
  9972  1195  3000               	movlw	0
  9973  1196  00A8               	movwf	___flmul@b^(0+128)
  9974  1197  084C               	movf	(MCP3422_ReadVoltage@adc_value+3)^(0+128),w
  9975  1198  0020               	movlb	0	; select bank0
  9976  1199  00AD               	movwf	___xxtofl@val+3
  9977  119A  0021               	movlb	1	; select bank1
  9978  119B  084B               	movf	(MCP3422_ReadVoltage@adc_value+2)^(0+128),w
  9979  119C  0020               	movlb	0	; select bank0
  9980  119D  00AC               	movwf	___xxtofl@val+2
  9981  119E  0021               	movlb	1	; select bank1
  9982  119F  084A               	movf	(MCP3422_ReadVoltage@adc_value+1)^(0+128),w
  9983  11A0  0020               	movlb	0	; select bank0
  9984  11A1  00AB               	movwf	___xxtofl@val+1
  9985  11A2  0021               	movlb	1	; select bank1
  9986  11A3  0849               	movf	MCP3422_ReadVoltage@adc_value^(0+128),w
  9987  11A4  0020               	movlb	0	; select bank0
  9988  11A5  00AA               	movwf	___xxtofl@val
  9989  11A6  3000               	movlw	0
  9990  11A7  3192  2252  3191   	fcall	___xxtofl
  9991  11AA  0020               	movlb	0	; select bank0
  9992  11AB  082D               	movf	?___xxtofl+3,w
  9993  11AC  0021               	movlb	1	; select bank1
  9994  11AD  00AF               	movwf	(___flmul@a+3)^(0+128)
  9995  11AE  0020               	movlb	0	; select bank0
  9996  11AF  082C               	movf	?___xxtofl+2,w
  9997  11B0  0021               	movlb	1	; select bank1
  9998  11B1  00AE               	movwf	(___flmul@a+2)^(0+128)
  9999  11B2  0020               	movlb	0	; select bank0
 10000  11B3  082B               	movf	?___xxtofl+1,w
 10001  11B4  0021               	movlb	1	; select bank1
 10002  11B5  00AD               	movwf	(___flmul@a+1)^(0+128)
 10003  11B6  0020               	movlb	0	; select bank0
 10004  11B7  082A               	movf	?___xxtofl,w
 10005  11B8  0021               	movlb	1	; select bank1
 10006  11B9  00AC               	movwf	___flmul@a^(0+128)
 10007  11BA  3189  21A4  3191   	fcall	___flmul
 10008  11BD  0021               	movlb	1	; select bank1
 10009  11BE  082B               	movf	(?___flmul+3)^(0+128),w
 10010  11BF  00C0               	movwf	(?_MCP3422_ReadVoltage+3)^(0+128)
 10011  11C0  082A               	movf	(?___flmul+2)^(0+128),w
 10012  11C1  00BF               	movwf	(?_MCP3422_ReadVoltage+2)^(0+128)
 10013  11C2  0829               	movf	(?___flmul+1)^(0+128),w
 10014  11C3  00BE               	movwf	(?_MCP3422_ReadVoltage+1)^(0+128)
 10015  11C4  0828               	movf	?___flmul^(0+128),w
 10016  11C5  00BD               	movwf	?_MCP3422_ReadVoltage^(0+128)
 10017  11C6                     l859:
 10018  11C6  0008               	return
 10019  11C7                     __end_of_MCP3422_ReadVoltage:
 10020                           
 10021                           	psect	text25
 10022  1252                     __ptext25:	
 10023 ;; *************** function ___xxtofl *****************
 10024 ;; Defined at:
 10025 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;  sign            1    wreg     unsigned char 
 10028 ;;  val             4   10[BANK0 ] long 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  sign            1   18[BANK0 ] unsigned char 
 10031 ;;  arg             4   20[BANK0 ] unsigned long 
 10032 ;;  exp             1   19[BANK0 ] unsigned char 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  4   10[BANK0 ] unsigned char 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10042 ;;      Params:         0       4       0       0       0       0       0       0
 10043 ;;      Locals:         0       6       0       0       0       0       0       0
 10044 ;;      Temps:          0       4       0       0       0       0       0       0
 10045 ;;      Totals:         0      14       0       0       0       0       0       0
 10046 ;;Total ram usage:       14 bytes
 10047 ;; Hardware stack levels used: 1
 10048 ;; Hardware stack levels required when called: 4
 10049 ;; This function calls:
 10050 ;;		Nothing
 10051 ;; This function is called by:
 10052 ;;		_map
 10053 ;;		_MCP3422_ReadVoltage
 10054 ;;		_main
 10055 ;;		_logf
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059  1252                     ___xxtofl:	
 10060                           ;psect for function ___xxtofl
 10061                           
 10062                           
 10063                           ;incstack = 0
 10064                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10065                           ;___xxtofl@sign stored from wreg
 10066  1252  0020               	movlb	0	; select bank0
 10067  1253  00B2               	movwf	___xxtofl@sign
 10068  1254                     l6201:
 10069  1254  0832               	movf	___xxtofl@sign,w
 10070  1255  1903               	btfsc	3,2
 10071  1256  2A58               	goto	u5781
 10072  1257  2A59               	goto	u5780
 10073  1258                     u5781:
 10074  1258  2A6D               	goto	l6207
 10075  1259                     u5780:
 10076  1259                     l6203:
 10077  1259  1FAD               	btfss	___xxtofl@val+3,7
 10078  125A  2A5C               	goto	u5791
 10079  125B  2A5D               	goto	u5790
 10080  125C                     u5791:
 10081  125C  2A6D               	goto	l6207
 10082  125D                     u5790:
 10083  125D                     l6205:
 10084  125D  092A               	comf	___xxtofl@val,w
 10085  125E  00B4               	movwf	___xxtofl@arg
 10086  125F  092B               	comf	___xxtofl@val+1,w
 10087  1260  00B5               	movwf	___xxtofl@arg+1
 10088  1261  092C               	comf	___xxtofl@val+2,w
 10089  1262  00B6               	movwf	___xxtofl@arg+2
 10090  1263  092D               	comf	___xxtofl@val+3,w
 10091  1264  00B7               	movwf	___xxtofl@arg+3
 10092  1265  0AB4               	incf	___xxtofl@arg,f
 10093  1266  1903               	skipnz
 10094  1267  0AB5               	incf	___xxtofl@arg+1,f
 10095  1268  1903               	skipnz
 10096  1269  0AB6               	incf	___xxtofl@arg+2,f
 10097  126A  1903               	skipnz
 10098  126B  0AB7               	incf	___xxtofl@arg+3,f
 10099  126C  2A75               	goto	l1494
 10100  126D                     l6207:
 10101  126D  082D               	movf	___xxtofl@val+3,w
 10102  126E  00B7               	movwf	___xxtofl@arg+3
 10103  126F  082C               	movf	___xxtofl@val+2,w
 10104  1270  00B6               	movwf	___xxtofl@arg+2
 10105  1271  082B               	movf	___xxtofl@val+1,w
 10106  1272  00B5               	movwf	___xxtofl@arg+1
 10107  1273  082A               	movf	___xxtofl@val,w
 10108  1274  00B4               	movwf	___xxtofl@arg
 10109  1275                     l1494:
 10110  1275  082D               	movf	___xxtofl@val+3,w
 10111  1276  042C               	iorwf	___xxtofl@val+2,w
 10112  1277  042B               	iorwf	___xxtofl@val+1,w
 10113  1278  042A               	iorwf	___xxtofl@val,w
 10114  1279  1D03               	skipz
 10115  127A  2A7C               	goto	u5801
 10116  127B  2A7D               	goto	u5800
 10117  127C                     u5801:
 10118  127C  2A86               	goto	l6213
 10119  127D                     u5800:
 10120  127D                     l6209:
 10121  127D  3000               	movlw	0
 10122  127E  00AD               	movwf	?___xxtofl+3
 10123  127F  3000               	movlw	0
 10124  1280  00AC               	movwf	?___xxtofl+2
 10125  1281  3000               	movlw	0
 10126  1282  00AB               	movwf	?___xxtofl+1
 10127  1283  3000               	movlw	0
 10128  1284  00AA               	movwf	?___xxtofl
 10129  1285  2AFE               	goto	l1496
 10130  1286                     l6213:
 10131  1286  3096               	movlw	150
 10132  1287  00AE               	movwf	??___xxtofl
 10133  1288  082E               	movf	??___xxtofl,w
 10134  1289  00B3               	movwf	___xxtofl@exp
 10135  128A  2A96               	goto	l6217
 10136  128B                     l6215:
 10137  128B  3001               	movlw	1
 10138  128C  00AE               	movwf	??___xxtofl
 10139  128D  082E               	movf	??___xxtofl,w
 10140  128E  07B3               	addwf	___xxtofl@exp,f
 10141  128F  3001               	movlw	1
 10142  1290                     u5815:
 10143  1290  36B7               	lsrf	___xxtofl@arg+3,f
 10144  1291  0CB6               	rrf	___xxtofl@arg+2,f
 10145  1292  0CB5               	rrf	___xxtofl@arg+1,f
 10146  1293  0CB4               	rrf	___xxtofl@arg,f
 10147  1294  0B89               	decfsz	9,f
 10148  1295  2A90               	goto	u5815
 10149  1296                     l6217:
 10150  1296  30FE               	movlw	254
 10151  1297  0537               	andwf	___xxtofl@arg+3,w
 10152  1298  1D03               	btfss	3,2
 10153  1299  2A9B               	goto	u5821
 10154  129A  2A9C               	goto	u5820
 10155  129B                     u5821:
 10156  129B  2A8B               	goto	l6215
 10157  129C                     u5820:
 10158  129C  2AB0               	goto	l1500
 10159  129D                     l6219:
 10160  129D  3001               	movlw	1
 10161  129E  00AE               	movwf	??___xxtofl
 10162  129F  082E               	movf	??___xxtofl,w
 10163  12A0  07B3               	addwf	___xxtofl@exp,f
 10164  12A1                     l6221:
 10165  12A1  3001               	movlw	1
 10166  12A2  07B4               	addwf	___xxtofl@arg,f
 10167  12A3  3000               	movlw	0
 10168  12A4  3DB5               	addwfc	___xxtofl@arg+1,f
 10169  12A5  3000               	movlw	0
 10170  12A6  3DB6               	addwfc	___xxtofl@arg+2,f
 10171  12A7  3000               	movlw	0
 10172  12A8  3DB7               	addwfc	___xxtofl@arg+3,f
 10173  12A9                     l6223:
 10174  12A9  3001               	movlw	1
 10175  12AA                     u5835:
 10176  12AA  36B7               	lsrf	___xxtofl@arg+3,f
 10177  12AB  0CB6               	rrf	___xxtofl@arg+2,f
 10178  12AC  0CB5               	rrf	___xxtofl@arg+1,f
 10179  12AD  0CB4               	rrf	___xxtofl@arg,f
 10180  12AE  0B89               	decfsz	9,f
 10181  12AF  2AAA               	goto	u5835
 10182  12B0                     l1500:
 10183  12B0  30FF               	movlw	255
 10184  12B1  0537               	andwf	___xxtofl@arg+3,w
 10185  12B2  1D03               	btfss	3,2
 10186  12B3  2AB5               	goto	u5841
 10187  12B4  2AB6               	goto	u5840
 10188  12B5                     u5841:
 10189  12B5  2A9D               	goto	l6219
 10190  12B6                     u5840:
 10191  12B6  2AC0               	goto	l6227
 10192  12B7                     l6225:
 10193  12B7  3001               	movlw	1
 10194  12B8  02B3               	subwf	___xxtofl@exp,f
 10195  12B9  3001               	movlw	1
 10196  12BA                     u5855:
 10197  12BA  35B4               	lslf	___xxtofl@arg,f
 10198  12BB  0DB5               	rlf	___xxtofl@arg+1,f
 10199  12BC  0DB6               	rlf	___xxtofl@arg+2,f
 10200  12BD  0DB7               	rlf	___xxtofl@arg+3,f
 10201  12BE  0B89               	decfsz	9,f
 10202  12BF  2ABA               	goto	u5855
 10203  12C0                     l6227:
 10204  12C0  1BB6               	btfsc	___xxtofl@arg+2,7
 10205  12C1  2AC3               	goto	u5861
 10206  12C2  2AC4               	goto	u5860
 10207  12C3                     u5861:
 10208  12C3  2ACA               	goto	l1507
 10209  12C4                     u5860:
 10210  12C4                     l6229:
 10211  12C4  3002               	movlw	2
 10212  12C5  0233               	subwf	___xxtofl@exp,w
 10213  12C6  1803               	skipnc
 10214  12C7  2AC9               	goto	u5871
 10215  12C8  2ACA               	goto	u5870
 10216  12C9                     u5871:
 10217  12C9  2AB7               	goto	l6225
 10218  12CA                     u5870:
 10219  12CA                     l1507:
 10220  12CA  1833               	btfsc	___xxtofl@exp,0
 10221  12CB  2ACD               	goto	u5881
 10222  12CC  2ACE               	goto	u5880
 10223  12CD                     u5881:
 10224  12CD  2AD6               	goto	l1508
 10225  12CE                     u5880:
 10226  12CE                     l6231:
 10227  12CE  30FF               	movlw	255
 10228  12CF  05B4               	andwf	___xxtofl@arg,f
 10229  12D0  30FF               	movlw	255
 10230  12D1  05B5               	andwf	___xxtofl@arg+1,f
 10231  12D2  307F               	movlw	127
 10232  12D3  05B6               	andwf	___xxtofl@arg+2,f
 10233  12D4  30FF               	movlw	255
 10234  12D5  05B7               	andwf	___xxtofl@arg+3,f
 10235  12D6                     l1508:
 10236  12D6  1003               	clrc
 10237  12D7  0CB3               	rrf	___xxtofl@exp,f
 10238  12D8                     l6233:
 10239  12D8  0833               	movf	___xxtofl@exp,w
 10240  12D9  00AE               	movwf	??___xxtofl
 10241  12DA  01AF               	clrf	??___xxtofl+1
 10242  12DB  01B0               	clrf	??___xxtofl+2
 10243  12DC  01B1               	clrf	??___xxtofl+3
 10244  12DD  3018               	movlw	24
 10245  12DE                     u5895:
 10246  12DE  35AE               	lslf	??___xxtofl,f
 10247  12DF  0DAF               	rlf	??___xxtofl+1,f
 10248  12E0  0DB0               	rlf	??___xxtofl+2,f
 10249  12E1  0DB1               	rlf	??___xxtofl+3,f
 10250  12E2                     u5890:
 10251  12E2  0B89               	decfsz	9,f
 10252  12E3  2ADE               	goto	u5895
 10253  12E4  082E               	movf	??___xxtofl,w
 10254  12E5  04B4               	iorwf	___xxtofl@arg,f
 10255  12E6  082F               	movf	??___xxtofl+1,w
 10256  12E7  04B5               	iorwf	___xxtofl@arg+1,f
 10257  12E8  0830               	movf	??___xxtofl+2,w
 10258  12E9  04B6               	iorwf	___xxtofl@arg+2,f
 10259  12EA  0831               	movf	??___xxtofl+3,w
 10260  12EB  04B7               	iorwf	___xxtofl@arg+3,f
 10261  12EC                     l6235:
 10262  12EC  0832               	movf	___xxtofl@sign,w
 10263  12ED  1903               	btfsc	3,2
 10264  12EE  2AF0               	goto	u5901
 10265  12EF  2AF1               	goto	u5900
 10266  12F0                     u5901:
 10267  12F0  2AF6               	goto	l6241
 10268  12F1                     u5900:
 10269  12F1                     l6237:
 10270  12F1  1FAD               	btfss	___xxtofl@val+3,7
 10271  12F2  2AF4               	goto	u5911
 10272  12F3  2AF5               	goto	u5910
 10273  12F4                     u5911:
 10274  12F4  2AF6               	goto	l6241
 10275  12F5                     u5910:
 10276  12F5                     l6239:
 10277  12F5  17B7               	bsf	___xxtofl@arg+3,7
 10278  12F6                     l6241:
 10279  12F6  0837               	movf	___xxtofl@arg+3,w
 10280  12F7  00AD               	movwf	?___xxtofl+3
 10281  12F8  0836               	movf	___xxtofl@arg+2,w
 10282  12F9  00AC               	movwf	?___xxtofl+2
 10283  12FA  0835               	movf	___xxtofl@arg+1,w
 10284  12FB  00AB               	movwf	?___xxtofl+1
 10285  12FC  0834               	movf	___xxtofl@arg,w
 10286  12FD  00AA               	movwf	?___xxtofl
 10287  12FE                     l1496:
 10288  12FE  0008               	return
 10289  12FF                     __end_of___xxtofl:
 10290                           
 10291                           	psect	text26
 10292  09A4                     __ptext26:	
 10293 ;; *************** function ___flmul *****************
 10294 ;; Defined at:
 10295 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  b               4    8[BANK1 ] unsigned char 
 10298 ;;  a               4   12[BANK1 ] unsigned char 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;  prod            4   23[BANK1 ] struct .
 10301 ;;  grs             4   18[BANK1 ] unsigned long 
 10302 ;;  temp            2   27[BANK1 ] struct .
 10303 ;;  bexp            1   22[BANK1 ] unsigned char 
 10304 ;;  aexp            1   17[BANK1 ] unsigned char 
 10305 ;;  sign            1   16[BANK1 ] unsigned char 
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  4    8[BANK1 ] unsigned char 
 10308 ;; Registers used:
 10309 ;;		wreg, status,2, status,0, pclath, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10315 ;;      Params:         0       0       8       0       0       0       0       0
 10316 ;;      Locals:         0       0      13       0       0       0       0       0
 10317 ;;      Temps:          0       5       0       0       0       0       0       0
 10318 ;;      Totals:         0       5      21       0       0       0       0       0
 10319 ;;Total ram usage:       26 bytes
 10320 ;; Hardware stack levels used: 1
 10321 ;; Hardware stack levels required when called: 5
 10322 ;; This function calls:
 10323 ;;		__Umul8_16
 10324 ;; This function is called by:
 10325 ;;		_map
 10326 ;;		_MCP3422_ReadVoltage
 10327 ;;		_main
 10328 ;;		_logf
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332  09A4                     ___flmul:	
 10333                           ;psect for function ___flmul
 10334                           
 10335  09A4                     l6061:	
 10336                           ;incstack = 0
 10337                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10338                           
 10339  09A4  0021               	movlb	1	; select bank1
 10340  09A5  082B               	movf	(___flmul@b^(0+128)+3),w
 10341  09A6  3980               	andlw	128
 10342  09A7  0020               	movlb	0	; select bank0
 10343  09A8  00CC               	movwf	??___flmul
 10344  09A9  084C               	movf	??___flmul,w
 10345  09AA  0021               	movlb	1	; select bank1
 10346  09AB  00B0               	movwf	___flmul@sign^(0+128)
 10347  09AC                     l6063:
 10348  09AC  352B               	lslf	(___flmul@b^(0+128)+3),w
 10349  09AD  0020               	movlb	0	; select bank0
 10350  09AE  00CC               	movwf	??___flmul
 10351  09AF  084C               	movf	??___flmul,w
 10352  09B0  0021               	movlb	1	; select bank1
 10353  09B1  00B6               	movwf	___flmul@bexp^(0+128)
 10354  09B2                     l6065:
 10355  09B2  1FAA               	btfss	(___flmul@b^(0+128)+2),7
 10356  09B3  29B5               	goto	u5521
 10357  09B4  29B6               	goto	u5520
 10358  09B5                     u5521:
 10359  09B5  29B7               	goto	l6069
 10360  09B6                     u5520:
 10361  09B6                     l6067:
 10362  09B6  1436               	bsf	___flmul@bexp^(0+128),0
 10363  09B7                     l6069:
 10364  09B7  0836               	movf	___flmul@bexp^(0+128),w
 10365  09B8  1903               	btfsc	3,2
 10366  09B9  29BB               	goto	u5531
 10367  09BA  29BC               	goto	u5530
 10368  09BB                     u5531:
 10369  09BB  29CB               	goto	l6077
 10370  09BC                     u5530:
 10371  09BC                     l6071:
 10372  09BC  0A36               	incf	___flmul@bexp^(0+128),w
 10373  09BD  1D03               	btfss	3,2
 10374  09BE  29C0               	goto	u5541
 10375  09BF  29C1               	goto	u5540
 10376  09C0                     u5541:
 10377  09C0  29C9               	goto	l6075
 10378  09C1                     u5540:
 10379  09C1                     l6073:
 10380  09C1  3000               	movlw	0
 10381  09C2  00AB               	movwf	(___flmul@b+3)^(0+128)
 10382  09C3  3000               	movlw	0
 10383  09C4  00AA               	movwf	(___flmul@b+2)^(0+128)
 10384  09C5  3000               	movlw	0
 10385  09C6  00A9               	movwf	(___flmul@b+1)^(0+128)
 10386  09C7  3000               	movlw	0
 10387  09C8  00A8               	movwf	___flmul@b^(0+128)
 10388  09C9                     l6075:
 10389  09C9  17AA               	bsf	(___flmul@b^(0+128)+2),7
 10390  09CA  29D3               	goto	l6079
 10391  09CB                     l6077:
 10392  09CB  3000               	movlw	0
 10393  09CC  00AB               	movwf	(___flmul@b+3)^(0+128)
 10394  09CD  3000               	movlw	0
 10395  09CE  00AA               	movwf	(___flmul@b+2)^(0+128)
 10396  09CF  3000               	movlw	0
 10397  09D0  00A9               	movwf	(___flmul@b+1)^(0+128)
 10398  09D1  3000               	movlw	0
 10399  09D2  00A8               	movwf	___flmul@b^(0+128)
 10400  09D3                     l6079:
 10401  09D3  082F               	movf	(___flmul@a^(0+128)+3),w
 10402  09D4  3980               	andlw	128
 10403  09D5  0020               	movlb	0	; select bank0
 10404  09D6  00CC               	movwf	??___flmul
 10405  09D7  084C               	movf	??___flmul,w
 10406  09D8  0021               	movlb	1	; select bank1
 10407  09D9  06B0               	xorwf	___flmul@sign^(0+128),f
 10408  09DA                     l6081:
 10409  09DA  352F               	lslf	(___flmul@a^(0+128)+3),w
 10410  09DB  0020               	movlb	0	; select bank0
 10411  09DC  00CC               	movwf	??___flmul
 10412  09DD  084C               	movf	??___flmul,w
 10413  09DE  0021               	movlb	1	; select bank1
 10414  09DF  00B1               	movwf	___flmul@aexp^(0+128)
 10415  09E0                     l6083:
 10416  09E0  1FAE               	btfss	(___flmul@a^(0+128)+2),7
 10417  09E1  29E3               	goto	u5551
 10418  09E2  29E4               	goto	u5550
 10419  09E3                     u5551:
 10420  09E3  29E5               	goto	l6087
 10421  09E4                     u5550:
 10422  09E4                     l6085:
 10423  09E4  1431               	bsf	___flmul@aexp^(0+128),0
 10424  09E5                     l6087:
 10425  09E5  0831               	movf	___flmul@aexp^(0+128),w
 10426  09E6  1903               	btfsc	3,2
 10427  09E7  29E9               	goto	u5561
 10428  09E8  29EA               	goto	u5560
 10429  09E9                     u5561:
 10430  09E9  29F9               	goto	l6095
 10431  09EA                     u5560:
 10432  09EA                     l6089:
 10433  09EA  0A31               	incf	___flmul@aexp^(0+128),w
 10434  09EB  1D03               	btfss	3,2
 10435  09EC  29EE               	goto	u5571
 10436  09ED  29EF               	goto	u5570
 10437  09EE                     u5571:
 10438  09EE  29F7               	goto	l6093
 10439  09EF                     u5570:
 10440  09EF                     l6091:
 10441  09EF  3000               	movlw	0
 10442  09F0  00AF               	movwf	(___flmul@a+3)^(0+128)
 10443  09F1  3000               	movlw	0
 10444  09F2  00AE               	movwf	(___flmul@a+2)^(0+128)
 10445  09F3  3000               	movlw	0
 10446  09F4  00AD               	movwf	(___flmul@a+1)^(0+128)
 10447  09F5  3000               	movlw	0
 10448  09F6  00AC               	movwf	___flmul@a^(0+128)
 10449  09F7                     l6093:
 10450  09F7  17AE               	bsf	(___flmul@a^(0+128)+2),7
 10451  09F8  2A01               	goto	l6097
 10452  09F9                     l6095:
 10453  09F9  3000               	movlw	0
 10454  09FA  00AF               	movwf	(___flmul@a+3)^(0+128)
 10455  09FB  3000               	movlw	0
 10456  09FC  00AE               	movwf	(___flmul@a+2)^(0+128)
 10457  09FD  3000               	movlw	0
 10458  09FE  00AD               	movwf	(___flmul@a+1)^(0+128)
 10459  09FF  3000               	movlw	0
 10460  0A00  00AC               	movwf	___flmul@a^(0+128)
 10461  0A01                     l6097:
 10462  0A01  0831               	movf	___flmul@aexp^(0+128),w
 10463  0A02  1903               	btfsc	3,2
 10464  0A03  2A05               	goto	u5581
 10465  0A04  2A06               	goto	u5580
 10466  0A05                     u5581:
 10467  0A05  2A0B               	goto	l6101
 10468  0A06                     u5580:
 10469  0A06                     l6099:
 10470  0A06  0836               	movf	___flmul@bexp^(0+128),w
 10471  0A07  1D03               	btfss	3,2
 10472  0A08  2A0A               	goto	u5591
 10473  0A09  2A0B               	goto	u5590
 10474  0A0A                     u5591:
 10475  0A0A  2A14               	goto	l6105
 10476  0A0B                     u5590:
 10477  0A0B                     l6101:
 10478  0A0B  3000               	movlw	0
 10479  0A0C  00AB               	movwf	(?___flmul+3)^(0+128)
 10480  0A0D  3000               	movlw	0
 10481  0A0E  00AA               	movwf	(?___flmul+2)^(0+128)
 10482  0A0F  3000               	movlw	0
 10483  0A10  00A9               	movwf	(?___flmul+1)^(0+128)
 10484  0A11  3000               	movlw	0
 10485  0A12  00A8               	movwf	?___flmul^(0+128)
 10486  0A13  2C9C               	goto	l1450
 10487  0A14                     l6105:
 10488  0A14  0828               	movf	___flmul@b^(0+128),w
 10489  0A15  0020               	movlb	0	; select bank0
 10490  0A16  00CC               	movwf	??___flmul
 10491  0A17  084C               	movf	??___flmul,w
 10492  0A18  00AA               	movwf	__Umul8_16@multiplicand
 10493  0A19  0021               	movlb	1	; select bank1
 10494  0A1A  082E               	movf	(___flmul@a^(0+128)+2),w
 10495  0A1B  319D  256A  3189   	fcall	__Umul8_16
 10496  0A1E  0020               	movlb	0	; select bank0
 10497  0A1F  082B               	movf	?__Umul8_16+1,w
 10498  0A20  0021               	movlb	1	; select bank1
 10499  0A21  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10500  0A22  0020               	movlb	0	; select bank0
 10501  0A23  082A               	movf	?__Umul8_16,w
 10502  0A24  0021               	movlb	1	; select bank1
 10503  0A25  00BB               	movwf	___flmul@temp^(0+128)
 10504  0A26                     l6107:
 10505  0A26  083B               	movf	___flmul@temp^(0+128),w
 10506  0A27  0020               	movlb	0	; select bank0
 10507  0A28  00CC               	movwf	??___flmul
 10508  0A29  01CD               	clrf	??___flmul+1
 10509  0A2A  01CE               	clrf	??___flmul+2
 10510  0A2B  01CF               	clrf	??___flmul+3
 10511  0A2C  084F               	movf	??___flmul+3,w
 10512  0A2D  0021               	movlb	1	; select bank1
 10513  0A2E  00B5               	movwf	(___flmul@grs+3)^(0+128)
 10514  0A2F  0020               	movlb	0	; select bank0
 10515  0A30  084E               	movf	??___flmul+2,w
 10516  0A31  0021               	movlb	1	; select bank1
 10517  0A32  00B4               	movwf	(___flmul@grs+2)^(0+128)
 10518  0A33  0020               	movlb	0	; select bank0
 10519  0A34  084D               	movf	??___flmul+1,w
 10520  0A35  0021               	movlb	1	; select bank1
 10521  0A36  00B3               	movwf	(___flmul@grs+1)^(0+128)
 10522  0A37  0020               	movlb	0	; select bank0
 10523  0A38  084C               	movf	??___flmul,w
 10524  0A39  0021               	movlb	1	; select bank1
 10525  0A3A  00B2               	movwf	___flmul@grs^(0+128)
 10526  0A3B                     l6109:
 10527  0A3B  083C               	movf	(___flmul@temp^(0+128)+1),w
 10528  0A3C  0020               	movlb	0	; select bank0
 10529  0A3D  00CC               	movwf	??___flmul
 10530  0A3E  01CD               	clrf	??___flmul+1
 10531  0A3F  01CE               	clrf	??___flmul+2
 10532  0A40  01CF               	clrf	??___flmul+3
 10533  0A41  084F               	movf	??___flmul+3,w
 10534  0A42  0021               	movlb	1	; select bank1
 10535  0A43  00BA               	movwf	(___flmul@prod+3)^(0+128)
 10536  0A44  0020               	movlb	0	; select bank0
 10537  0A45  084E               	movf	??___flmul+2,w
 10538  0A46  0021               	movlb	1	; select bank1
 10539  0A47  00B9               	movwf	(___flmul@prod+2)^(0+128)
 10540  0A48  0020               	movlb	0	; select bank0
 10541  0A49  084D               	movf	??___flmul+1,w
 10542  0A4A  0021               	movlb	1	; select bank1
 10543  0A4B  00B8               	movwf	(___flmul@prod+1)^(0+128)
 10544  0A4C  0020               	movlb	0	; select bank0
 10545  0A4D  084C               	movf	??___flmul,w
 10546  0A4E  0021               	movlb	1	; select bank1
 10547  0A4F  00B7               	movwf	___flmul@prod^(0+128)
 10548  0A50  0829               	movf	(___flmul@b^(0+128)+1),w
 10549  0A51  0020               	movlb	0	; select bank0
 10550  0A52  00CC               	movwf	??___flmul
 10551  0A53  084C               	movf	??___flmul,w
 10552  0A54  00AA               	movwf	__Umul8_16@multiplicand
 10553  0A55  0021               	movlb	1	; select bank1
 10554  0A56  082D               	movf	(___flmul@a^(0+128)+1),w
 10555  0A57  319D  256A  3189   	fcall	__Umul8_16
 10556  0A5A  0020               	movlb	0	; select bank0
 10557  0A5B  082B               	movf	?__Umul8_16+1,w
 10558  0A5C  0021               	movlb	1	; select bank1
 10559  0A5D  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10560  0A5E  0020               	movlb	0	; select bank0
 10561  0A5F  082A               	movf	?__Umul8_16,w
 10562  0A60  0021               	movlb	1	; select bank1
 10563  0A61  00BB               	movwf	___flmul@temp^(0+128)
 10564  0A62                     l6111:
 10565  0A62  083B               	movf	___flmul@temp^(0+128),w
 10566  0A63  0020               	movlb	0	; select bank0
 10567  0A64  00CC               	movwf	??___flmul
 10568  0A65  01CD               	clrf	??___flmul+1
 10569  0A66  01CE               	clrf	??___flmul+2
 10570  0A67  01CF               	clrf	??___flmul+3
 10571  0A68  084C               	movf	??___flmul,w
 10572  0A69  0021               	movlb	1	; select bank1
 10573  0A6A  07B2               	addwf	___flmul@grs^(0+128),f
 10574  0A6B  0020               	movlb	0	; select bank0
 10575  0A6C  084D               	movf	??___flmul+1,w
 10576  0A6D  0021               	movlb	1	; select bank1
 10577  0A6E  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
 10578  0A6F  0020               	movlb	0	; select bank0
 10579  0A70  084E               	movf	??___flmul+2,w
 10580  0A71  0021               	movlb	1	; select bank1
 10581  0A72  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
 10582  0A73  0020               	movlb	0	; select bank0
 10583  0A74  084F               	movf	??___flmul+3,w
 10584  0A75  0021               	movlb	1	; select bank1
 10585  0A76  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
 10586  0A77                     l6113:
 10587  0A77  083C               	movf	(___flmul@temp^(0+128)+1),w
 10588  0A78  0020               	movlb	0	; select bank0
 10589  0A79  00CC               	movwf	??___flmul
 10590  0A7A  01CD               	clrf	??___flmul+1
 10591  0A7B  01CE               	clrf	??___flmul+2
 10592  0A7C  01CF               	clrf	??___flmul+3
 10593  0A7D  084C               	movf	??___flmul,w
 10594  0A7E  0021               	movlb	1	; select bank1
 10595  0A7F  07B7               	addwf	___flmul@prod^(0+128),f
 10596  0A80  0020               	movlb	0	; select bank0
 10597  0A81  084D               	movf	??___flmul+1,w
 10598  0A82  0021               	movlb	1	; select bank1
 10599  0A83  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10600  0A84  0020               	movlb	0	; select bank0
 10601  0A85  084E               	movf	??___flmul+2,w
 10602  0A86  0021               	movlb	1	; select bank1
 10603  0A87  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10604  0A88  0020               	movlb	0	; select bank0
 10605  0A89  084F               	movf	??___flmul+3,w
 10606  0A8A  0021               	movlb	1	; select bank1
 10607  0A8B  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10608  0A8C  082A               	movf	(___flmul@b^(0+128)+2),w
 10609  0A8D  0020               	movlb	0	; select bank0
 10610  0A8E  00CC               	movwf	??___flmul
 10611  0A8F  084C               	movf	??___flmul,w
 10612  0A90  00AA               	movwf	__Umul8_16@multiplicand
 10613  0A91  0021               	movlb	1	; select bank1
 10614  0A92  082C               	movf	___flmul@a^(0+128),w
 10615  0A93  319D  256A  3189   	fcall	__Umul8_16
 10616  0A96  0020               	movlb	0	; select bank0
 10617  0A97  082B               	movf	?__Umul8_16+1,w
 10618  0A98  0021               	movlb	1	; select bank1
 10619  0A99  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10620  0A9A  0020               	movlb	0	; select bank0
 10621  0A9B  082A               	movf	?__Umul8_16,w
 10622  0A9C  0021               	movlb	1	; select bank1
 10623  0A9D  00BB               	movwf	___flmul@temp^(0+128)
 10624  0A9E                     l6115:
 10625  0A9E  083B               	movf	___flmul@temp^(0+128),w
 10626  0A9F  0020               	movlb	0	; select bank0
 10627  0AA0  00CC               	movwf	??___flmul
 10628  0AA1  01CD               	clrf	??___flmul+1
 10629  0AA2  01CE               	clrf	??___flmul+2
 10630  0AA3  01CF               	clrf	??___flmul+3
 10631  0AA4  084C               	movf	??___flmul,w
 10632  0AA5  0021               	movlb	1	; select bank1
 10633  0AA6  07B2               	addwf	___flmul@grs^(0+128),f
 10634  0AA7  0020               	movlb	0	; select bank0
 10635  0AA8  084D               	movf	??___flmul+1,w
 10636  0AA9  0021               	movlb	1	; select bank1
 10637  0AAA  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
 10638  0AAB  0020               	movlb	0	; select bank0
 10639  0AAC  084E               	movf	??___flmul+2,w
 10640  0AAD  0021               	movlb	1	; select bank1
 10641  0AAE  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
 10642  0AAF  0020               	movlb	0	; select bank0
 10643  0AB0  084F               	movf	??___flmul+3,w
 10644  0AB1  0021               	movlb	1	; select bank1
 10645  0AB2  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
 10646  0AB3                     l6117:
 10647  0AB3  083C               	movf	(___flmul@temp^(0+128)+1),w
 10648  0AB4  0020               	movlb	0	; select bank0
 10649  0AB5  00CC               	movwf	??___flmul
 10650  0AB6  01CD               	clrf	??___flmul+1
 10651  0AB7  01CE               	clrf	??___flmul+2
 10652  0AB8  01CF               	clrf	??___flmul+3
 10653  0AB9  084C               	movf	??___flmul,w
 10654  0ABA  0021               	movlb	1	; select bank1
 10655  0ABB  07B7               	addwf	___flmul@prod^(0+128),f
 10656  0ABC  0020               	movlb	0	; select bank0
 10657  0ABD  084D               	movf	??___flmul+1,w
 10658  0ABE  0021               	movlb	1	; select bank1
 10659  0ABF  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10660  0AC0  0020               	movlb	0	; select bank0
 10661  0AC1  084E               	movf	??___flmul+2,w
 10662  0AC2  0021               	movlb	1	; select bank1
 10663  0AC3  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10664  0AC4  0020               	movlb	0	; select bank0
 10665  0AC5  084F               	movf	??___flmul+3,w
 10666  0AC6  0021               	movlb	1	; select bank1
 10667  0AC7  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10668  0AC8                     l6119:
 10669  0AC8  3008               	movlw	8
 10670  0AC9                     u5605:
 10671  0AC9  35B2               	lslf	___flmul@grs^(0+128),f
 10672  0ACA  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
 10673  0ACB  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
 10674  0ACC  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
 10675  0ACD  0B89               	decfsz	9,f
 10676  0ACE  2AC9               	goto	u5605
 10677  0ACF                     l6121:
 10678  0ACF  0829               	movf	(___flmul@b^(0+128)+1),w
 10679  0AD0  0020               	movlb	0	; select bank0
 10680  0AD1  00CC               	movwf	??___flmul
 10681  0AD2  084C               	movf	??___flmul,w
 10682  0AD3  00AA               	movwf	__Umul8_16@multiplicand
 10683  0AD4  0021               	movlb	1	; select bank1
 10684  0AD5  082C               	movf	___flmul@a^(0+128),w
 10685  0AD6  319D  256A  3189   	fcall	__Umul8_16
 10686  0AD9  0020               	movlb	0	; select bank0
 10687  0ADA  082B               	movf	?__Umul8_16+1,w
 10688  0ADB  0021               	movlb	1	; select bank1
 10689  0ADC  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10690  0ADD  0020               	movlb	0	; select bank0
 10691  0ADE  082A               	movf	?__Umul8_16,w
 10692  0ADF  0021               	movlb	1	; select bank1
 10693  0AE0  00BB               	movwf	___flmul@temp^(0+128)
 10694  0AE1                     l6123:
 10695  0AE1  083B               	movf	___flmul@temp^(0+128),w
 10696  0AE2  07B2               	addwf	___flmul@grs^(0+128),f
 10697  0AE3  083C               	movf	(___flmul@temp+1)^(0+128),w
 10698  0AE4  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
 10699  0AE5  3000               	movlw	0
 10700  0AE6  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
 10701  0AE7  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
 10702  0AE8                     l6125:
 10703  0AE8  0828               	movf	___flmul@b^(0+128),w
 10704  0AE9  0020               	movlb	0	; select bank0
 10705  0AEA  00CC               	movwf	??___flmul
 10706  0AEB  084C               	movf	??___flmul,w
 10707  0AEC  00AA               	movwf	__Umul8_16@multiplicand
 10708  0AED  0021               	movlb	1	; select bank1
 10709  0AEE  082D               	movf	(___flmul@a^(0+128)+1),w
 10710  0AEF  319D  256A  3189   	fcall	__Umul8_16
 10711  0AF2  0020               	movlb	0	; select bank0
 10712  0AF3  082B               	movf	?__Umul8_16+1,w
 10713  0AF4  0021               	movlb	1	; select bank1
 10714  0AF5  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10715  0AF6  0020               	movlb	0	; select bank0
 10716  0AF7  082A               	movf	?__Umul8_16,w
 10717  0AF8  0021               	movlb	1	; select bank1
 10718  0AF9  00BB               	movwf	___flmul@temp^(0+128)
 10719  0AFA                     l6127:
 10720  0AFA  083B               	movf	___flmul@temp^(0+128),w
 10721  0AFB  07B2               	addwf	___flmul@grs^(0+128),f
 10722  0AFC  083C               	movf	(___flmul@temp+1)^(0+128),w
 10723  0AFD  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
 10724  0AFE  3000               	movlw	0
 10725  0AFF  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
 10726  0B00  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
 10727  0B01                     l6129:
 10728  0B01  3008               	movlw	8
 10729  0B02                     u5615:
 10730  0B02  35B2               	lslf	___flmul@grs^(0+128),f
 10731  0B03  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
 10732  0B04  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
 10733  0B05  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
 10734  0B06  0B89               	decfsz	9,f
 10735  0B07  2B02               	goto	u5615
 10736  0B08  0828               	movf	___flmul@b^(0+128),w
 10737  0B09  0020               	movlb	0	; select bank0
 10738  0B0A  00CC               	movwf	??___flmul
 10739  0B0B  084C               	movf	??___flmul,w
 10740  0B0C  00AA               	movwf	__Umul8_16@multiplicand
 10741  0B0D  0021               	movlb	1	; select bank1
 10742  0B0E  082C               	movf	___flmul@a^(0+128),w
 10743  0B0F  319D  256A  3189   	fcall	__Umul8_16
 10744  0B12  0020               	movlb	0	; select bank0
 10745  0B13  082B               	movf	?__Umul8_16+1,w
 10746  0B14  0021               	movlb	1	; select bank1
 10747  0B15  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10748  0B16  0020               	movlb	0	; select bank0
 10749  0B17  082A               	movf	?__Umul8_16,w
 10750  0B18  0021               	movlb	1	; select bank1
 10751  0B19  00BB               	movwf	___flmul@temp^(0+128)
 10752  0B1A                     l6131:
 10753  0B1A  083B               	movf	___flmul@temp^(0+128),w
 10754  0B1B  07B2               	addwf	___flmul@grs^(0+128),f
 10755  0B1C  083C               	movf	(___flmul@temp+1)^(0+128),w
 10756  0B1D  3DB3               	addwfc	(___flmul@grs+1)^(0+128),f
 10757  0B1E  3000               	movlw	0
 10758  0B1F  3DB4               	addwfc	(___flmul@grs+2)^(0+128),f
 10759  0B20  3DB5               	addwfc	(___flmul@grs+3)^(0+128),f
 10760  0B21                     l6133:
 10761  0B21  0829               	movf	(___flmul@b^(0+128)+1),w
 10762  0B22  0020               	movlb	0	; select bank0
 10763  0B23  00CC               	movwf	??___flmul
 10764  0B24  084C               	movf	??___flmul,w
 10765  0B25  00AA               	movwf	__Umul8_16@multiplicand
 10766  0B26  0021               	movlb	1	; select bank1
 10767  0B27  082E               	movf	(___flmul@a^(0+128)+2),w
 10768  0B28  319D  256A  3189   	fcall	__Umul8_16
 10769  0B2B  0020               	movlb	0	; select bank0
 10770  0B2C  082B               	movf	?__Umul8_16+1,w
 10771  0B2D  0021               	movlb	1	; select bank1
 10772  0B2E  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10773  0B2F  0020               	movlb	0	; select bank0
 10774  0B30  082A               	movf	?__Umul8_16,w
 10775  0B31  0021               	movlb	1	; select bank1
 10776  0B32  00BB               	movwf	___flmul@temp^(0+128)
 10777  0B33  083B               	movf	___flmul@temp^(0+128),w
 10778  0B34  07B7               	addwf	___flmul@prod^(0+128),f
 10779  0B35  083C               	movf	(___flmul@temp+1)^(0+128),w
 10780  0B36  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10781  0B37  3000               	movlw	0
 10782  0B38  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10783  0B39  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10784  0B3A                     l6135:
 10785  0B3A  082A               	movf	(___flmul@b^(0+128)+2),w
 10786  0B3B  0020               	movlb	0	; select bank0
 10787  0B3C  00CC               	movwf	??___flmul
 10788  0B3D  084C               	movf	??___flmul,w
 10789  0B3E  00AA               	movwf	__Umul8_16@multiplicand
 10790  0B3F  0021               	movlb	1	; select bank1
 10791  0B40  082D               	movf	(___flmul@a^(0+128)+1),w
 10792  0B41  319D  256A  3189   	fcall	__Umul8_16
 10793  0B44  0020               	movlb	0	; select bank0
 10794  0B45  082B               	movf	?__Umul8_16+1,w
 10795  0B46  0021               	movlb	1	; select bank1
 10796  0B47  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10797  0B48  0020               	movlb	0	; select bank0
 10798  0B49  082A               	movf	?__Umul8_16,w
 10799  0B4A  0021               	movlb	1	; select bank1
 10800  0B4B  00BB               	movwf	___flmul@temp^(0+128)
 10801  0B4C                     l6137:
 10802  0B4C  083B               	movf	___flmul@temp^(0+128),w
 10803  0B4D  07B7               	addwf	___flmul@prod^(0+128),f
 10804  0B4E  083C               	movf	(___flmul@temp+1)^(0+128),w
 10805  0B4F  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10806  0B50  3000               	movlw	0
 10807  0B51  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10808  0B52  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10809  0B53  082A               	movf	(___flmul@b^(0+128)+2),w
 10810  0B54  0020               	movlb	0	; select bank0
 10811  0B55  00CC               	movwf	??___flmul
 10812  0B56  084C               	movf	??___flmul,w
 10813  0B57  00AA               	movwf	__Umul8_16@multiplicand
 10814  0B58  0021               	movlb	1	; select bank1
 10815  0B59  082E               	movf	(___flmul@a^(0+128)+2),w
 10816  0B5A  319D  256A  3189   	fcall	__Umul8_16
 10817  0B5D  0020               	movlb	0	; select bank0
 10818  0B5E  082B               	movf	?__Umul8_16+1,w
 10819  0B5F  0021               	movlb	1	; select bank1
 10820  0B60  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10821  0B61  0020               	movlb	0	; select bank0
 10822  0B62  082A               	movf	?__Umul8_16,w
 10823  0B63  0021               	movlb	1	; select bank1
 10824  0B64  00BB               	movwf	___flmul@temp^(0+128)
 10825  0B65                     l6139:
 10826  0B65  083B               	movf	___flmul@temp^(0+128),w
 10827  0B66  0020               	movlb	0	; select bank0
 10828  0B67  00CC               	movwf	??___flmul
 10829  0B68  0021               	movlb	1	; select bank1
 10830  0B69  083C               	movf	(___flmul@temp+1)^(0+128),w
 10831  0B6A  0020               	movlb	0	; select bank0
 10832  0B6B  00CD               	movwf	??___flmul+1
 10833  0B6C  01CE               	clrf	??___flmul+2
 10834  0B6D  01CF               	clrf	??___flmul+3
 10835  0B6E  3008               	movlw	8
 10836  0B6F                     u5625:
 10837  0B6F  35CC               	lslf	??___flmul,f
 10838  0B70  0DCD               	rlf	??___flmul+1,f
 10839  0B71  0DCE               	rlf	??___flmul+2,f
 10840  0B72  0DCF               	rlf	??___flmul+3,f
 10841  0B73                     u5620:
 10842  0B73  0B89               	decfsz	9,f
 10843  0B74  2B6F               	goto	u5625
 10844  0B75  084C               	movf	??___flmul,w
 10845  0B76  0021               	movlb	1	; select bank1
 10846  0B77  07B7               	addwf	___flmul@prod^(0+128),f
 10847  0B78  0020               	movlb	0	; select bank0
 10848  0B79  084D               	movf	??___flmul+1,w
 10849  0B7A  0021               	movlb	1	; select bank1
 10850  0B7B  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10851  0B7C  0020               	movlb	0	; select bank0
 10852  0B7D  084E               	movf	??___flmul+2,w
 10853  0B7E  0021               	movlb	1	; select bank1
 10854  0B7F  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10855  0B80  0020               	movlb	0	; select bank0
 10856  0B81  084F               	movf	??___flmul+3,w
 10857  0B82  0021               	movlb	1	; select bank1
 10858  0B83  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10859  0B84                     l6141:
 10860  0B84  0832               	movf	___flmul@grs^(0+128),w
 10861  0B85  0020               	movlb	0	; select bank0
 10862  0B86  00CC               	movwf	??___flmul
 10863  0B87  0021               	movlb	1	; select bank1
 10864  0B88  0833               	movf	(___flmul@grs+1)^(0+128),w
 10865  0B89  0020               	movlb	0	; select bank0
 10866  0B8A  00CD               	movwf	??___flmul+1
 10867  0B8B  0021               	movlb	1	; select bank1
 10868  0B8C  0834               	movf	(___flmul@grs+2)^(0+128),w
 10869  0B8D  0020               	movlb	0	; select bank0
 10870  0B8E  00CE               	movwf	??___flmul+2
 10871  0B8F  0021               	movlb	1	; select bank1
 10872  0B90  0835               	movf	(___flmul@grs+3)^(0+128),w
 10873  0B91  0020               	movlb	0	; select bank0
 10874  0B92  00CF               	movwf	??___flmul+3
 10875  0B93  3018               	movlw	24
 10876  0B94                     u5635:
 10877  0B94  36CF               	lsrf	??___flmul+3,f
 10878  0B95  0CCE               	rrf	??___flmul+2,f
 10879  0B96  0CCD               	rrf	??___flmul+1,f
 10880  0B97  0CCC               	rrf	??___flmul,f
 10881  0B98                     u5630:
 10882  0B98  0B89               	decfsz	9,f
 10883  0B99  2B94               	goto	u5635
 10884  0B9A  084C               	movf	??___flmul,w
 10885  0B9B  0021               	movlb	1	; select bank1
 10886  0B9C  07B7               	addwf	___flmul@prod^(0+128),f
 10887  0B9D  0020               	movlb	0	; select bank0
 10888  0B9E  084D               	movf	??___flmul+1,w
 10889  0B9F  0021               	movlb	1	; select bank1
 10890  0BA0  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 10891  0BA1  0020               	movlb	0	; select bank0
 10892  0BA2  084E               	movf	??___flmul+2,w
 10893  0BA3  0021               	movlb	1	; select bank1
 10894  0BA4  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 10895  0BA5  0020               	movlb	0	; select bank0
 10896  0BA6  084F               	movf	??___flmul+3,w
 10897  0BA7  0021               	movlb	1	; select bank1
 10898  0BA8  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 10899  0BA9                     l6143:
 10900  0BA9  3008               	movlw	8
 10901  0BAA                     u5645:
 10902  0BAA  35B2               	lslf	___flmul@grs^(0+128),f
 10903  0BAB  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
 10904  0BAC  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
 10905  0BAD  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
 10906  0BAE  0B89               	decfsz	9,f
 10907  0BAF  2BAA               	goto	u5645
 10908  0BB0                     l6145:
 10909  0BB0  0836               	movf	___flmul@bexp^(0+128),w
 10910  0BB1  0731               	addwf	___flmul@aexp^(0+128),w
 10911  0BB2  0020               	movlb	0	; select bank0
 10912  0BB3  00CC               	movwf	??___flmul
 10913  0BB4  01CD               	clrf	??___flmul+1
 10914  0BB5  0DCD               	rlf	??___flmul+1,f
 10915  0BB6  084C               	movf	??___flmul,w
 10916  0BB7  3E82               	addlw	130
 10917  0BB8  0021               	movlb	1	; select bank1
 10918  0BB9  00BB               	movwf	___flmul@temp^(0+128)
 10919  0BBA  30FF               	movlw	255
 10920  0BBB  0020               	movlb	0	; select bank0
 10921  0BBC  3D4D               	addwfc	??___flmul+1,w
 10922  0BBD  0021               	movlb	1	; select bank1
 10923  0BBE  00BC               	movwf	(___flmul@temp+1)^(0+128)
 10924  0BBF  2BD7               	goto	l6157
 10925  0BC0                     l6147:
 10926  0BC0  3001               	movlw	1
 10927  0BC1                     u5655:
 10928  0BC1  35B7               	lslf	___flmul@prod^(0+128),f
 10929  0BC2  0DB8               	rlf	(___flmul@prod+1)^(0+128),f
 10930  0BC3  0DB9               	rlf	(___flmul@prod+2)^(0+128),f
 10931  0BC4  0DBA               	rlf	(___flmul@prod+3)^(0+128),f
 10932  0BC5  0B89               	decfsz	9,f
 10933  0BC6  2BC1               	goto	u5655
 10934  0BC7                     l6149:
 10935  0BC7  1FB5               	btfss	(___flmul@grs+3)^(0+128),7
 10936  0BC8  2BCA               	goto	u5661
 10937  0BC9  2BCB               	goto	u5660
 10938  0BCA                     u5661:
 10939  0BCA  2BCC               	goto	l6153
 10940  0BCB                     u5660:
 10941  0BCB                     l6151:
 10942  0BCB  1437               	bsf	___flmul@prod^(0+128),0
 10943  0BCC                     l6153:
 10944  0BCC  3001               	movlw	1
 10945  0BCD                     u5675:
 10946  0BCD  35B2               	lslf	___flmul@grs^(0+128),f
 10947  0BCE  0DB3               	rlf	(___flmul@grs+1)^(0+128),f
 10948  0BCF  0DB4               	rlf	(___flmul@grs+2)^(0+128),f
 10949  0BD0  0DB5               	rlf	(___flmul@grs+3)^(0+128),f
 10950  0BD1  0B89               	decfsz	9,f
 10951  0BD2  2BCD               	goto	u5675
 10952  0BD3                     l6155:
 10953  0BD3  30FF               	movlw	255
 10954  0BD4  07BB               	addwf	___flmul@temp^(0+128),f
 10955  0BD5  30FF               	movlw	255
 10956  0BD6  3DBC               	addwfc	(___flmul@temp+1)^(0+128),f
 10957  0BD7                     l6157:
 10958  0BD7  1FB9               	btfss	(___flmul@prod+2)^(0+128),7
 10959  0BD8  2BDA               	goto	u5681
 10960  0BD9  2BDB               	goto	u5680
 10961  0BDA                     u5681:
 10962  0BDA  2BC0               	goto	l6147
 10963  0BDB                     u5680:
 10964  0BDB                     l6159:
 10965  0BDB  01B1               	clrf	___flmul@aexp^(0+128)
 10966  0BDC                     l6161:
 10967  0BDC  1FB5               	btfss	(___flmul@grs+3)^(0+128),7
 10968  0BDD  2BDF               	goto	u5691
 10969  0BDE  2BE0               	goto	u5690
 10970  0BDF                     u5691:
 10971  0BDF  2C05               	goto	l6169
 10972  0BE0                     u5690:
 10973  0BE0                     l6163:
 10974  0BE0  30FF               	movlw	255
 10975  0BE1  0532               	andwf	___flmul@grs^(0+128),w
 10976  0BE2  0020               	movlb	0	; select bank0
 10977  0BE3  00CC               	movwf	??___flmul
 10978  0BE4  30FF               	movlw	255
 10979  0BE5  0021               	movlb	1	; select bank1
 10980  0BE6  0533               	andwf	(___flmul@grs+1)^(0+128),w
 10981  0BE7  0020               	movlb	0	; select bank0
 10982  0BE8  00CD               	movwf	??___flmul+1
 10983  0BE9  30FF               	movlw	255
 10984  0BEA  0021               	movlb	1	; select bank1
 10985  0BEB  0534               	andwf	(___flmul@grs+2)^(0+128),w
 10986  0BEC  0020               	movlb	0	; select bank0
 10987  0BED  00CE               	movwf	??___flmul+2
 10988  0BEE  307F               	movlw	127
 10989  0BEF  0021               	movlb	1	; select bank1
 10990  0BF0  0535               	andwf	(___flmul@grs+3)^(0+128),w
 10991  0BF1  0020               	movlb	0	; select bank0
 10992  0BF2  00CF               	movwf	??___flmul+3
 10993  0BF3  084F               	movf	??___flmul+3,w
 10994  0BF4  044E               	iorwf	??___flmul+2,w
 10995  0BF5  044D               	iorwf	??___flmul+1,w
 10996  0BF6  044C               	iorwf	??___flmul,w
 10997  0BF7  1903               	skipnz
 10998  0BF8  2BFA               	goto	u5701
 10999  0BF9  2BFB               	goto	u5700
 11000  0BFA                     u5701:
 11001  0BFA  2BFF               	goto	l1456
 11002  0BFB                     u5700:
 11003  0BFB                     l6165:
 11004  0BFB  0021               	movlb	1	; select bank1
 11005  0BFC  01B1               	clrf	___flmul@aexp^(0+128)
 11006  0BFD  0AB1               	incf	___flmul@aexp^(0+128),f
 11007  0BFE  2C05               	goto	l6169
 11008  0BFF                     l1456:
 11009  0BFF  0021               	movlb	1	; select bank1
 11010  0C00  1C37               	btfss	___flmul@prod^(0+128),0
 11011  0C01  2C03               	goto	u5711
 11012  0C02  2C04               	goto	u5710
 11013  0C03                     u5711:
 11014  0C03  2C05               	goto	l6169
 11015  0C04                     u5710:
 11016  0C04  2BFB               	goto	l6165
 11017  0C05                     l6169:
 11018  0C05  0831               	movf	___flmul@aexp^(0+128),w
 11019  0C06  1903               	btfsc	3,2
 11020  0C07  2C09               	goto	u5721
 11021  0C08  2C0A               	goto	u5720
 11022  0C09                     u5721:
 11023  0C09  2C40               	goto	l6179
 11024  0C0A                     u5720:
 11025  0C0A                     l6171:
 11026  0C0A  3001               	movlw	1
 11027  0C0B  07B7               	addwf	___flmul@prod^(0+128),f
 11028  0C0C  3000               	movlw	0
 11029  0C0D  3DB8               	addwfc	(___flmul@prod+1)^(0+128),f
 11030  0C0E  3000               	movlw	0
 11031  0C0F  3DB9               	addwfc	(___flmul@prod+2)^(0+128),f
 11032  0C10  3000               	movlw	0
 11033  0C11  3DBA               	addwfc	(___flmul@prod+3)^(0+128),f
 11034  0C12                     l6173:
 11035  0C12  1C3A               	btfss	(___flmul@prod+3)^(0+128),0
 11036  0C13  2C15               	goto	u5731
 11037  0C14  2C16               	goto	u5730
 11038  0C15                     u5731:
 11039  0C15  2C40               	goto	l6179
 11040  0C16                     u5730:
 11041  0C16                     l6175:
 11042  0C16  0837               	movf	___flmul@prod^(0+128),w
 11043  0C17  0020               	movlb	0	; select bank0
 11044  0C18  00CC               	movwf	??___flmul
 11045  0C19  0021               	movlb	1	; select bank1
 11046  0C1A  0838               	movf	(___flmul@prod+1)^(0+128),w
 11047  0C1B  0020               	movlb	0	; select bank0
 11048  0C1C  00CD               	movwf	??___flmul+1
 11049  0C1D  0021               	movlb	1	; select bank1
 11050  0C1E  0839               	movf	(___flmul@prod+2)^(0+128),w
 11051  0C1F  0020               	movlb	0	; select bank0
 11052  0C20  00CE               	movwf	??___flmul+2
 11053  0C21  0021               	movlb	1	; select bank1
 11054  0C22  083A               	movf	(___flmul@prod+3)^(0+128),w
 11055  0C23  0020               	movlb	0	; select bank0
 11056  0C24  00CF               	movwf	??___flmul+3
 11057  0C25  3001               	movlw	1
 11058  0C26  00D0               	movwf	??___flmul+4
 11059  0C27                     u5745:
 11060  0C27  37CF               	asrf	??___flmul+3,f
 11061  0C28  0CCE               	rrf	??___flmul+2,f
 11062  0C29  0CCD               	rrf	??___flmul+1,f
 11063  0C2A  0CCC               	rrf	??___flmul,f
 11064  0C2B                     u5740:
 11065  0C2B  0BD0               	decfsz	??___flmul+4,f
 11066  0C2C  2C27               	goto	u5745
 11067  0C2D  084F               	movf	??___flmul+3,w
 11068  0C2E  0021               	movlb	1	; select bank1
 11069  0C2F  00BA               	movwf	(___flmul@prod+3)^(0+128)
 11070  0C30  0020               	movlb	0	; select bank0
 11071  0C31  084E               	movf	??___flmul+2,w
 11072  0C32  0021               	movlb	1	; select bank1
 11073  0C33  00B9               	movwf	(___flmul@prod+2)^(0+128)
 11074  0C34  0020               	movlb	0	; select bank0
 11075  0C35  084D               	movf	??___flmul+1,w
 11076  0C36  0021               	movlb	1	; select bank1
 11077  0C37  00B8               	movwf	(___flmul@prod+1)^(0+128)
 11078  0C38  0020               	movlb	0	; select bank0
 11079  0C39  084C               	movf	??___flmul,w
 11080  0C3A  0021               	movlb	1	; select bank1
 11081  0C3B  00B7               	movwf	___flmul@prod^(0+128)
 11082  0C3C                     l6177:
 11083  0C3C  3001               	movlw	1
 11084  0C3D  07BB               	addwf	___flmul@temp^(0+128),f
 11085  0C3E  3000               	movlw	0
 11086  0C3F  3DBC               	addwfc	(___flmul@temp+1)^(0+128),f
 11087  0C40                     l6179:
 11088  0C40  083C               	movf	(___flmul@temp+1)^(0+128),w
 11089  0C41  3A80               	xorlw	128
 11090  0C42  0020               	movlb	0	; select bank0
 11091  0C43  00CC               	movwf	??___flmul
 11092  0C44  3080               	movlw	128
 11093  0C45  024C               	subwf	??___flmul,w
 11094  0C46  1D03               	skipz
 11095  0C47  2C4B               	goto	u5755
 11096  0C48  30FF               	movlw	255
 11097  0C49  0021               	movlb	1	; select bank1
 11098  0C4A  023B               	subwf	___flmul@temp^(0+128),w
 11099  0C4B                     u5755:
 11100  0C4B  1C03               	skipc
 11101  0C4C  2C4E               	goto	u5751
 11102  0C4D  2C4F               	goto	u5750
 11103  0C4E                     u5751:
 11104  0C4E  2C59               	goto	l6183
 11105  0C4F                     u5750:
 11106  0C4F                     l6181:
 11107  0C4F  307F               	movlw	127
 11108  0C50  0021               	movlb	1	; select bank1
 11109  0C51  00BA               	movwf	(___flmul@prod+3)^(0+128)
 11110  0C52  3080               	movlw	128
 11111  0C53  00B9               	movwf	(___flmul@prod+2)^(0+128)
 11112  0C54  3000               	movlw	0
 11113  0C55  00B8               	movwf	(___flmul@prod+1)^(0+128)
 11114  0C56  3000               	movlw	0
 11115  0C57  00B7               	movwf	___flmul@prod^(0+128)
 11116  0C58  2C8E               	goto	l1462
 11117  0C59                     l6183:
 11118  0C59  0021               	movlb	1	; select bank1
 11119  0C5A  083C               	movf	(___flmul@temp+1)^(0+128),w
 11120  0C5B  3A80               	xorlw	128
 11121  0C5C  0020               	movlb	0	; select bank0
 11122  0C5D  00CC               	movwf	??___flmul
 11123  0C5E  3080               	movlw	128
 11124  0C5F  024C               	subwf	??___flmul,w
 11125  0C60  1D03               	skipz
 11126  0C61  2C65               	goto	u5765
 11127  0C62  3001               	movlw	1
 11128  0C63  0021               	movlb	1	; select bank1
 11129  0C64  023B               	subwf	___flmul@temp^(0+128),w
 11130  0C65                     u5765:
 11131  0C65  1803               	skipnc
 11132  0C66  2C68               	goto	u5761
 11133  0C67  2C69               	goto	u5760
 11134  0C68                     u5761:
 11135  0C68  2C74               	goto	l6189
 11136  0C69                     u5760:
 11137  0C69                     l6185:
 11138  0C69  3000               	movlw	0
 11139  0C6A  0021               	movlb	1	; select bank1
 11140  0C6B  00BA               	movwf	(___flmul@prod+3)^(0+128)
 11141  0C6C  3000               	movlw	0
 11142  0C6D  00B9               	movwf	(___flmul@prod+2)^(0+128)
 11143  0C6E  3000               	movlw	0
 11144  0C6F  00B8               	movwf	(___flmul@prod+1)^(0+128)
 11145  0C70  3000               	movlw	0
 11146  0C71  00B7               	movwf	___flmul@prod^(0+128)
 11147  0C72                     l6187:
 11148  0C72  01B0               	clrf	___flmul@sign^(0+128)
 11149  0C73  2C8E               	goto	l1462
 11150  0C74                     l6189:
 11151  0C74  0021               	movlb	1	; select bank1
 11152  0C75  083B               	movf	___flmul@temp^(0+128),w
 11153  0C76  0020               	movlb	0	; select bank0
 11154  0C77  00CC               	movwf	??___flmul
 11155  0C78  084C               	movf	??___flmul,w
 11156  0C79  0021               	movlb	1	; select bank1
 11157  0C7A  00B6               	movwf	___flmul@bexp^(0+128)
 11158  0C7B  30FF               	movlw	255
 11159  0C7C  05B7               	andwf	___flmul@prod^(0+128),f
 11160  0C7D  30FF               	movlw	255
 11161  0C7E  05B8               	andwf	(___flmul@prod+1)^(0+128),f
 11162  0C7F  307F               	movlw	127
 11163  0C80  05B9               	andwf	(___flmul@prod+2)^(0+128),f
 11164  0C81  3000               	movlw	0
 11165  0C82  05BA               	andwf	(___flmul@prod+3)^(0+128),f
 11166  0C83                     l6191:
 11167  0C83  1C36               	btfss	___flmul@bexp^(0+128),0
 11168  0C84  2C86               	goto	u5771
 11169  0C85  2C87               	goto	u5770
 11170  0C86                     u5771:
 11171  0C86  2C88               	goto	l6195
 11172  0C87                     u5770:
 11173  0C87                     l6193:
 11174  0C87  17B9               	bsf	(___flmul@prod^(0+128)+2),7
 11175  0C88                     l6195:
 11176  0C88  3636               	lsrf	___flmul@bexp^(0+128),w
 11177  0C89  0020               	movlb	0	; select bank0
 11178  0C8A  00CC               	movwf	??___flmul
 11179  0C8B  084C               	movf	??___flmul,w
 11180  0C8C  0021               	movlb	1	; select bank1
 11181  0C8D  00BA               	movwf	(___flmul@prod^(0+128)+3)
 11182  0C8E                     l1462:
 11183  0C8E  0830               	movf	___flmul@sign^(0+128),w
 11184  0C8F  0020               	movlb	0	; select bank0
 11185  0C90  00CC               	movwf	??___flmul
 11186  0C91  084C               	movf	??___flmul,w
 11187  0C92  0021               	movlb	1	; select bank1
 11188  0C93  04BA               	iorwf	(___flmul@prod^(0+128)+3),f
 11189  0C94                     l6197:
 11190  0C94  083A               	movf	(___flmul@prod+3)^(0+128),w
 11191  0C95  00AB               	movwf	(?___flmul+3)^(0+128)
 11192  0C96  0839               	movf	(___flmul@prod+2)^(0+128),w
 11193  0C97  00AA               	movwf	(?___flmul+2)^(0+128)
 11194  0C98  0838               	movf	(___flmul@prod+1)^(0+128),w
 11195  0C99  00A9               	movwf	(?___flmul+1)^(0+128)
 11196  0C9A  0837               	movf	___flmul@prod^(0+128),w
 11197  0C9B  00A8               	movwf	?___flmul^(0+128)
 11198  0C9C                     l1450:
 11199  0C9C  0008               	return
 11200  0C9D                     __end_of___flmul:
 11201                           
 11202                           	psect	text27
 11203  1D6A                     __ptext27:	
 11204 ;; *************** function __Umul8_16 *****************
 11205 ;; Defined at:
 11206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  multiplier      1    wreg     unsigned char 
 11209 ;;  multiplicand    1   10[BANK0 ] unsigned char 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  multiplier      1   18[BANK0 ] unsigned char 
 11212 ;;  word_mpld       2   16[BANK0 ] unsigned int 
 11213 ;;  product         2   14[BANK0 ] unsigned int 
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  2   10[BANK0 ] unsigned int 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11223 ;;      Params:         0       2       0       0       0       0       0       0
 11224 ;;      Locals:         0       5       0       0       0       0       0       0
 11225 ;;      Temps:          0       2       0       0       0       0       0       0
 11226 ;;      Totals:         0       9       0       0       0       0       0       0
 11227 ;;Total ram usage:        9 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 4
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		___flmul
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237  1D6A                     __Umul8_16:	
 11238                           ;psect for function __Umul8_16
 11239                           
 11240                           
 11241                           ;incstack = 0
 11242                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11243                           ;__Umul8_16@multiplier stored from wreg
 11244  1D6A  0020               	movlb	0	; select bank0
 11245  1D6B  00B2               	movwf	__Umul8_16@multiplier
 11246  1D6C                     l5901:
 11247  1D6C  01AE               	clrf	__Umul8_16@product
 11248  1D6D  01AF               	clrf	__Umul8_16@product+1
 11249  1D6E                     l5903:
 11250  1D6E  082A               	movf	__Umul8_16@multiplicand,w
 11251  1D6F  00AC               	movwf	??__Umul8_16
 11252  1D70  01AD               	clrf	??__Umul8_16+1
 11253  1D71  082C               	movf	??__Umul8_16,w
 11254  1D72  00B0               	movwf	__Umul8_16@word_mpld
 11255  1D73  082D               	movf	??__Umul8_16+1,w
 11256  1D74  00B1               	movwf	__Umul8_16@word_mpld+1
 11257  1D75                     l5905:
 11258  1D75  1C32               	btfss	__Umul8_16@multiplier,0
 11259  1D76  2D78               	goto	u5201
 11260  1D77  2D79               	goto	u5200
 11261  1D78                     u5201:
 11262  1D78  2D7D               	goto	l1469
 11263  1D79                     u5200:
 11264  1D79                     l5907:
 11265  1D79  0830               	movf	__Umul8_16@word_mpld,w
 11266  1D7A  07AE               	addwf	__Umul8_16@product,f
 11267  1D7B  0831               	movf	__Umul8_16@word_mpld+1,w
 11268  1D7C  3DAF               	addwfc	__Umul8_16@product+1,f
 11269  1D7D                     l1469:
 11270  1D7D  3001               	movlw	1
 11271  1D7E                     u5215:
 11272  1D7E  35B0               	lslf	__Umul8_16@word_mpld,f
 11273  1D7F  0DB1               	rlf	__Umul8_16@word_mpld+1,f
 11274  1D80  0B89               	decfsz	9,f
 11275  1D81  2D7E               	goto	u5215
 11276  1D82  1003               	clrc
 11277  1D83  0CB2               	rrf	__Umul8_16@multiplier,f
 11278  1D84                     l5909:
 11279  1D84  0832               	movf	__Umul8_16@multiplier,w
 11280  1D85  1D03               	btfss	3,2
 11281  1D86  2D88               	goto	u5221
 11282  1D87  2D89               	goto	u5220
 11283  1D88                     u5221:
 11284  1D88  2D75               	goto	l5905
 11285  1D89                     u5220:
 11286  1D89                     l5911:
 11287  1D89  082F               	movf	__Umul8_16@product+1,w
 11288  1D8A  00AB               	movwf	?__Umul8_16+1
 11289  1D8B  082E               	movf	__Umul8_16@product,w
 11290  1D8C  00AA               	movwf	?__Umul8_16
 11291  1D8D                     l1471:
 11292  1D8D  0008               	return
 11293  1D8E                     __end_of__Umul8_16:
 11294                           
 11295                           	psect	text28
 11296  1000                     __ptext28:	
 11297 ;; *************** function _MCP3422_Write *****************
 11298 ;; Defined at:
 11299 ;;		line 104 in file "main.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  data            1    wreg     unsigned char 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  data            1   34[BANK0 ] unsigned char 
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1    wreg      void 
 11306 ;; Registers used:
 11307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11313 ;;      Params:         0       0       0       0       0       0       0       0
 11314 ;;      Locals:         0       1       0       0       0       0       0       0
 11315 ;;      Temps:          0       1       0       0       0       0       0       0
 11316 ;;      Totals:         0       2       0       0       0       0       0       0
 11317 ;;Total ram usage:        2 bytes
 11318 ;; Hardware stack levels used: 1
 11319 ;; Hardware stack levels required when called: 13
 11320 ;; This function calls:
 11321 ;;		_I2C_WriteNBytes
 11322 ;; This function is called by:
 11323 ;;		_MCP3422_ReadVoltage
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327  1000                     _MCP3422_Write:	
 11328                           ;psect for function _MCP3422_Write
 11329                           
 11330                           
 11331                           ;incstack = 0
 11332                           ; Regs used in _MCP3422_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11333                           ;MCP3422_Write@data stored from wreg
 11334  1000  0020               	movlb	0	; select bank0
 11335  1001  00C2               	movwf	MCP3422_Write@data
 11336  1002                     l4785:
 11337                           
 11338                           ;main.c: 104: static void MCP3422_Write(uint8_t data);main.c: 105: {;main.c: 106:     I2
      +                          C_WriteNBytes(0x68,&data,1U);
 11339  1002  3042               	movlw	(low (MCP3422_Write@data| 0))& (0+255)
 11340  1003  00C1               	movwf	??_MCP3422_Write
 11341  1004  0841               	movf	??_MCP3422_Write,w
 11342  1005  00BD               	movwf	I2C_WriteNBytes@data
 11343  1006  3001               	movlw	1
 11344  1007  00BE               	movwf	I2C_WriteNBytes@len
 11345  1008  3000               	movlw	0
 11346  1009  00BF               	movwf	I2C_WriteNBytes@len+1
 11347  100A  3068               	movlw	104
 11348  100B  319D  258E  3190   	fcall	_I2C_WriteNBytes
 11349  100E                     l851:
 11350  100E  0008               	return
 11351  100F                     __end_of_MCP3422_Write:
 11352                           
 11353                           	psect	text29
 11354  1D8E                     __ptext29:	
 11355 ;; *************** function _I2C_WriteNBytes *****************
 11356 ;; Defined at:
 11357 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  address         1    wreg     unsigned char 
 11360 ;;  data            1   29[BANK0 ] PTR unsigned char 
 11361 ;;		 -> MCP3422_Write@data(1), 
 11362 ;;  len             2   30[BANK0 ] unsigned int 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  address         1   32[BANK0 ] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      void 
 11367 ;; Registers used:
 11368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11374 ;;      Params:         0       3       0       0       0       0       0       0
 11375 ;;      Locals:         0       1       0       0       0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0
 11377 ;;      Totals:         0       4       0       0       0       0       0       0
 11378 ;;Total ram usage:        4 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 12
 11381 ;; This function calls:
 11382 ;;		_I2C_Close
 11383 ;;		_I2C_MasterWrite
 11384 ;;		_I2C_Open
 11385 ;;		_I2C_SetAddressNackCallback
 11386 ;;		_I2C_SetBuffer
 11387 ;; This function is called by:
 11388 ;;		_MCP3422_Write
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392  1D8E                     _I2C_WriteNBytes:	
 11393                           ;psect for function _I2C_WriteNBytes
 11394                           
 11395                           
 11396                           ;incstack = 0
 11397                           ; Regs used in _I2C_WriteNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11398                           ;I2C_WriteNBytes@address stored from wreg
 11399  1D8E  0020               	movlb	0	; select bank0
 11400  1D8F  00C0               	movwf	I2C_WriteNBytes@address
 11401  1D90                     l4247:
 11402  1D90                     l4249:	
 11403                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
 11404                           
 11405  1D90  0020               	movlb	0	; select bank0
 11406  1D91  0840               	movf	I2C_WriteNBytes@address,w
 11407  1D92  319F  270F  319D   	fcall	_I2C_Open
 11408  1D95  3A00               	xorlw	0
 11409  1D96  1903               	skipnz
 11410  1D97  2D99               	goto	u2991
 11411  1D98  2D9A               	goto	u2990
 11412  1D99                     u2991:
 11413  1D99  2D90               	goto	l4249
 11414  1D9A                     u2990:
 11415  1D9A                     l4251:
 11416                           
 11417                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
 11418  1D9A  0020               	movlb	0	; select bank0
 11419  1D9B  083F               	movf	I2C_WriteNBytes@len+1,w
 11420  1D9C  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 11421  1D9D  083E               	movf	I2C_WriteNBytes@len,w
 11422  1D9E  00AA               	movwf	I2C_SetBuffer@bufferSize
 11423  1D9F  083D               	movf	I2C_WriteNBytes@data,w
 11424  1DA0  319C  2462  319D   	fcall	_I2C_SetBuffer
 11425  1DA3                     l4253:
 11426                           
 11427                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
 11428  1DA3  3000               	movlw	0
 11429  1DA4  0020               	movlb	0	; select bank0
 11430  1DA5  00AF               	movwf	I2C_SetAddressNackCallback@cb
 11431  1DA6  00B0               	movwf	I2C_SetAddressNackCallback@cb+1
 11432  1DA7  01B1               	clrf	I2C_SetAddressNackCallback@ptr
 11433  1DA8  319B  23B5  319D   	fcall	_I2C_SetAddressNackCallback
 11434  1DAB                     l4255:
 11435                           
 11436                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
 11437  1DAB  319A  22D3  319D   	fcall	_I2C_MasterWrite
 11438  1DAE                     l4257:	
 11439                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
 11440                           
 11441  1DAE  319D  2505  319D   	fcall	_I2C_Close
 11442  1DB1  3A01               	xorlw	1
 11443  1DB2  1903               	skipnz
 11444  1DB3  2DB5               	goto	u3001
 11445  1DB4  2DB6               	goto	u3000
 11446  1DB5                     u3001:
 11447  1DB5  2DAE               	goto	l4257
 11448  1DB6                     u3000:
 11449  1DB6                     l69:
 11450  1DB6  0008               	return
 11451  1DB7                     __end_of_I2C_WriteNBytes:
 11452                           
 11453                           	psect	text30
 11454  1BB5                     __ptext30:	
 11455 ;; *************** function _I2C_SetAddressNackCallback *****************
 11456 ;; Defined at:
 11457 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  cb              2   15[BANK0 ] PTR FTN(PTR void ,)enum 
 11460 ;;		 -> Absolute function(1), 
 11461 ;;  ptr             1   17[BANK0 ] PTR void 
 11462 ;;		 -> NULL(0), 
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;		None
 11465 ;; Return value:  Size  Location     Type
 11466 ;;                  1    wreg      void 
 11467 ;; Registers used:
 11468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11474 ;;      Params:         0       3       0       0       0       0       0       0
 11475 ;;      Locals:         0       0       0       0       0       0       0       0
 11476 ;;      Temps:          0       1       0       0       0       0       0       0
 11477 ;;      Totals:         0       4       0       0       0       0       0       0
 11478 ;;Total ram usage:        4 bytes
 11479 ;; Hardware stack levels used: 1
 11480 ;; Hardware stack levels required when called: 5
 11481 ;; This function calls:
 11482 ;;		_I2C_SetCallback
 11483 ;; This function is called by:
 11484 ;;		_I2C_WriteNBytes
 11485 ;;		_I2C_Read1ByteRegister
 11486 ;;		_I2C_Read2ByteRegister
 11487 ;;		_I2C_Write1ByteRegister
 11488 ;;		_I2C_Write2ByteRegister
 11489 ;;		_I2C_ReadDataBlock
 11490 ;; This function uses a non-reentrant model
 11491 ;;
 11492                           
 11493  1BB5                     _I2C_SetAddressNackCallback:	
 11494                           ;psect for function _I2C_SetAddressNackCallback
 11495                           
 11496  1BB5                     l4011:	
 11497                           ;incstack = 0
 11498                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11499                           
 11500                           
 11501                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 11502  1BB5  0020               	movlb	0	; select bank0
 11503  1BB6  0830               	movf	I2C_SetAddressNackCallback@cb+1,w
 11504  1BB7  00AB               	movwf	I2C_SetCallback@cb+1
 11505  1BB8  082F               	movf	I2C_SetAddressNackCallback@cb,w
 11506  1BB9  00AA               	movwf	I2C_SetCallback@cb
 11507  1BBA  0831               	movf	I2C_SetAddressNackCallback@ptr,w
 11508  1BBB  00B2               	movwf	??_I2C_SetAddressNackCallback
 11509  1BBC  0832               	movf	??_I2C_SetAddressNackCallback,w
 11510  1BBD  00AC               	movwf	I2C_SetCallback@ptr
 11511  1BBE  3002               	movlw	2
 11512  1BBF  3187  27D3  319B   	fcall	_I2C_SetCallback
 11513  1BC2                     l335:
 11514  1BC2  0008               	return
 11515  1BC3                     __end_of_I2C_SetAddressNackCallback:
 11516                           
 11517                           	psect	text31
 11518  1AD3                     __ptext31:	
 11519 ;; *************** function _I2C_MasterWrite *****************
 11520 ;; Defined at:
 11521 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;		None
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;		None
 11526 ;; Return value:  Size  Location     Type
 11527 ;;                  1    wreg      enum E355
 11528 ;; Registers used:
 11529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11530 ;; Tracked objects:
 11531 ;;		On entry : 0/0
 11532 ;;		On exit  : 0/0
 11533 ;;		Unchanged: 0/0
 11534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11535 ;;      Params:         0       0       0       0       0       0       0       0
 11536 ;;      Locals:         0       0       0       0       0       0       0       0
 11537 ;;      Temps:          0       0       0       0       0       0       0       0
 11538 ;;      Totals:         0       0       0       0       0       0       0       0
 11539 ;;Total ram usage:        0 bytes
 11540 ;; Hardware stack levels used: 1
 11541 ;; Hardware stack levels required when called: 11
 11542 ;; This function calls:
 11543 ;;		_I2C_MasterOperation
 11544 ;; This function is called by:
 11545 ;;		_I2C_WriteNBytes
 11546 ;;		_I2C_Read1ByteRegister
 11547 ;;		_I2C_Read2ByteRegister
 11548 ;;		_I2C_Write1ByteRegister
 11549 ;;		_I2C_Write2ByteRegister
 11550 ;;		_I2C_ReadDataBlock
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554  1AD3                     _I2C_MasterWrite:	
 11555                           ;psect for function _I2C_MasterWrite
 11556                           
 11557  1AD3                     l4013:	
 11558                           ;incstack = 0
 11559                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11560                           
 11561                           
 11562                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 11563  1AD3  3000               	movlw	0
 11564  1AD4  319D  2547  319A   	fcall	_I2C_MasterOperation
 11565  1AD7                     l319:
 11566  1AD7  0008               	return
 11567  1AD8                     __end_of_I2C_MasterWrite:
 11568                           
 11569                           	psect	text32
 11570  1BC3                     __ptext32:	
 11571 ;; *************** function _MCP3422_Read *****************
 11572 ;; Defined at:
 11573 ;;		line 109 in file "main.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;  data            1    wreg     PTR unsigned char 
 11576 ;;		 -> MCP3422_ReadVoltage@data(3), 
 11577 ;;  count           1   33[BANK0 ] unsigned char 
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;  data            1   37[BANK0 ] PTR unsigned char 
 11580 ;;		 -> MCP3422_ReadVoltage@data(3), 
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11590 ;;      Params:         0       1       0       0       0       0       0       0
 11591 ;;      Locals:         0       1       0       0       0       0       0       0
 11592 ;;      Temps:          0       3       0       0       0       0       0       0
 11593 ;;      Totals:         0       5       0       0       0       0       0       0
 11594 ;;Total ram usage:        5 bytes
 11595 ;; Hardware stack levels used: 1
 11596 ;; Hardware stack levels required when called: 13
 11597 ;; This function calls:
 11598 ;;		_I2C_ReadNBytes
 11599 ;; This function is called by:
 11600 ;;		_MCP3422_ReadVoltage
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604  1BC3                     _MCP3422_Read:	
 11605                           ;psect for function _MCP3422_Read
 11606                           
 11607                           
 11608                           ;incstack = 0
 11609                           ; Regs used in _MCP3422_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11610                           ;MCP3422_Read@data stored from wreg
 11611  1BC3  0020               	movlb	0	; select bank0
 11612  1BC4  00C5               	movwf	MCP3422_Read@data
 11613  1BC5                     l4787:
 11614                           
 11615                           ;main.c: 109: static void MCP3422_Read(uint8_t *data, uint8_t count);main.c: 110: {;main
      +                          .c: 111:     I2C_ReadNBytes(0x68, data, count);
 11616  1BC5  0845               	movf	MCP3422_Read@data,w
 11617  1BC6  00C2               	movwf	??_MCP3422_Read
 11618  1BC7  0842               	movf	??_MCP3422_Read,w
 11619  1BC8  00BD               	movwf	I2C_ReadNBytes@data
 11620  1BC9  0841               	movf	MCP3422_Read@count,w
 11621  1BCA  00C3               	movwf	??_MCP3422_Read+1
 11622  1BCB  01C4               	clrf	??_MCP3422_Read+2
 11623  1BCC  0843               	movf	??_MCP3422_Read+1,w
 11624  1BCD  00BE               	movwf	I2C_ReadNBytes@len
 11625  1BCE  0844               	movf	??_MCP3422_Read+2,w
 11626  1BCF  00BF               	movwf	I2C_ReadNBytes@len+1
 11627  1BD0  3068               	movlw	104
 11628  1BD1  319D  2526  319B   	fcall	_I2C_ReadNBytes
 11629  1BD4                     l854:
 11630  1BD4  0008               	return
 11631  1BD5                     __end_of_MCP3422_Read:
 11632                           
 11633                           	psect	text33
 11634  1D26                     __ptext33:	
 11635 ;; *************** function _I2C_ReadNBytes *****************
 11636 ;; Defined at:
 11637 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  address         1    wreg     unsigned char 
 11640 ;;  data            1   29[BANK0 ] PTR unsigned char 
 11641 ;;		 -> MCP3422_ReadVoltage@data(3), 
 11642 ;;  len             2   30[BANK0 ] unsigned int 
 11643 ;; Auto vars:     Size  Location     Type
 11644 ;;  address         1   32[BANK0 ] unsigned char 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  1    wreg      void 
 11647 ;; Registers used:
 11648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11654 ;;      Params:         0       3       0       0       0       0       0       0
 11655 ;;      Locals:         0       1       0       0       0       0       0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0
 11657 ;;      Totals:         0       4       0       0       0       0       0       0
 11658 ;;Total ram usage:        4 bytes
 11659 ;; Hardware stack levels used: 1
 11660 ;; Hardware stack levels required when called: 12
 11661 ;; This function calls:
 11662 ;;		_I2C_Close
 11663 ;;		_I2C_MasterRead
 11664 ;;		_I2C_Open
 11665 ;;		_I2C_SetBuffer
 11666 ;; This function is called by:
 11667 ;;		_MCP3422_Read
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671  1D26                     _I2C_ReadNBytes:	
 11672                           ;psect for function _I2C_ReadNBytes
 11673                           
 11674                           
 11675                           ;incstack = 0
 11676                           ; Regs used in _I2C_ReadNBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11677                           ;I2C_ReadNBytes@address stored from wreg
 11678  1D26  0020               	movlb	0	; select bank0
 11679  1D27  00C0               	movwf	I2C_ReadNBytes@address
 11680  1D28                     l4259:
 11681  1D28                     l4261:	
 11682                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
 11683                           
 11684  1D28  0020               	movlb	0	; select bank0
 11685  1D29  0840               	movf	I2C_ReadNBytes@address,w
 11686  1D2A  319F  270F  319D   	fcall	_I2C_Open
 11687  1D2D  3A00               	xorlw	0
 11688  1D2E  1903               	skipnz
 11689  1D2F  2D31               	goto	u3011
 11690  1D30  2D32               	goto	u3010
 11691  1D31                     u3011:
 11692  1D31  2D28               	goto	l4261
 11693  1D32                     u3010:
 11694  1D32                     l4263:
 11695                           
 11696                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
 11697  1D32  0020               	movlb	0	; select bank0
 11698  1D33  083F               	movf	I2C_ReadNBytes@len+1,w
 11699  1D34  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 11700  1D35  083E               	movf	I2C_ReadNBytes@len,w
 11701  1D36  00AA               	movwf	I2C_SetBuffer@bufferSize
 11702  1D37  083D               	movf	I2C_ReadNBytes@data,w
 11703  1D38  319C  2462  319D   	fcall	_I2C_SetBuffer
 11704  1D3B                     l4265:
 11705                           
 11706                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
 11707  1D3B  319A  22CE  319D   	fcall	_I2C_MasterRead
 11708  1D3E                     l4267:	
 11709                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
 11710                           
 11711  1D3E  319D  2505  319D   	fcall	_I2C_Close
 11712  1D41  3A01               	xorlw	1
 11713  1D42  1903               	skipnz
 11714  1D43  2D45               	goto	u3021
 11715  1D44  2D46               	goto	u3020
 11716  1D45                     u3021:
 11717  1D45  2D3E               	goto	l4267
 11718  1D46                     u3020:
 11719  1D46                     l78:
 11720  1D46  0008               	return
 11721  1D47                     __end_of_I2C_ReadNBytes:
 11722                           
 11723                           	psect	text34
 11724  1F0F                     __ptext34:	
 11725 ;; *************** function _I2C_Open *****************
 11726 ;; Defined at:
 11727 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  address         1    wreg     unsigned char 
 11730 ;; Auto vars:     Size  Location     Type
 11731 ;;  address         1   11[BANK0 ] unsigned char 
 11732 ;;  returnValue     1   12[BANK0 ] enum E355
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  1    wreg      enum E355
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0, pclath, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11742 ;;      Params:         0       0       0       0       0       0       0       0
 11743 ;;      Locals:         0       2       0       0       0       0       0       0
 11744 ;;      Temps:          0       1       0       0       0       0       0       0
 11745 ;;      Totals:         0       3       0       0       0       0       0       0
 11746 ;;Total ram usage:        3 bytes
 11747 ;; Hardware stack levels used: 1
 11748 ;; Hardware stack levels required when called: 5
 11749 ;; This function calls:
 11750 ;;		_I2C_MasterClearIrq
 11751 ;;		_I2C_MasterOpen
 11752 ;; This function is called by:
 11753 ;;		_I2C_WriteNBytes
 11754 ;;		_I2C_ReadNBytes
 11755 ;;		_I2C_Read1ByteRegister
 11756 ;;		_I2C_Read2ByteRegister
 11757 ;;		_I2C_Write1ByteRegister
 11758 ;;		_I2C_Write2ByteRegister
 11759 ;;		_I2C_ReadDataBlock
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763  1F0F                     _I2C_Open:	
 11764                           ;psect for function _I2C_Open
 11765                           
 11766                           
 11767                           ;incstack = 0
 11768                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
 11769                           ;I2C_Open@address stored from wreg
 11770  1F0F  0020               	movlb	0	; select bank0
 11771  1F10  00AB               	movwf	I2C_Open@address
 11772  1F11                     l3979:
 11773                           
 11774                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 11775  1F11  01AC               	clrf	I2C_Open@returnValue
 11776  1F12  0AAC               	incf	I2C_Open@returnValue,f
 11777                           
 11778                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 11779  1F13  0024               	movlb	4	; select bank4
 11780  1F14  193C               	btfsc	(_I2C_Status^(0+512)+28),2
 11781  1F15  2F17               	goto	u2511
 11782  1F16  2F18               	goto	u2510
 11783  1F17                     u2511:
 11784  1F17  2F4D               	goto	l302
 11785  1F18                     u2510:
 11786  1F18                     l3981:
 11787                           
 11788                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 11789  1F18  0020               	movlb	0	; select bank0
 11790  1F19  082B               	movf	I2C_Open@address,w
 11791  1F1A  00AA               	movwf	??_I2C_Open
 11792  1F1B  082A               	movf	??_I2C_Open,w
 11793  1F1C  0024               	movlb	4	; select bank4
 11794  1F1D  00B6               	movwf	(_I2C_Status^(0+512)+22)
 11795  1F1E                     l3983:
 11796                           
 11797                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 11798  1F1E  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 11799  1F1F                     l3985:
 11800                           
 11801                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 11802  1F1F  153C               	bsf	(_I2C_Status^(0+512)+28),2
 11803  1F20                     l3987:
 11804                           
 11805                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 11806  1F20  103C               	bcf	(_I2C_Status^(0+512)+28),0
 11807                           
 11808                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 11809  1F21  300E               	movlw	14
 11810  1F22  0020               	movlb	0	; select bank0
 11811  1F23  00AA               	movwf	??_I2C_Open
 11812  1F24  082A               	movf	??_I2C_Open,w
 11813  1F25  0024               	movlb	4	; select bank4
 11814  1F26  00BA               	movwf	(_I2C_Status^(0+512)+26)
 11815                           
 11816                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 11817  1F27  30F4               	movlw	244
 11818  1F28  00B4               	movwf	(_I2C_Status^(0+512)+20)
 11819  1F29  3001               	movlw	1
 11820  1F2A  00B5               	movwf	(_I2C_Status^(0+512)+21)
 11821  1F2B                     l3989:
 11822                           
 11823                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 11824  1F2B  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 11825                           
 11826                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 11827  1F2C  3078               	movlw	low _I2C_CallbackReturnStop
 11828  1F2D  00A0               	movwf	_I2C_Status^(0+512)
 11829  1F2E  301A               	movlw	high _I2C_CallbackReturnStop
 11830  1F2F  00A1               	movwf	(_I2C_Status^(0+512)+1)
 11831  1F30                     l3991:
 11832                           
 11833                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 11834  1F30  01AC               	clrf	(low ((_I2C_Status| (0+512)+12)))^0
 11835  1F31                     l3993:
 11836                           
 11837                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 11838  1F31  3078               	movlw	low _I2C_CallbackReturnStop
 11839  1F32  00A2               	movwf	(low ((_I2C_Status| (0+512)+2)))^0
 11840  1F33  301A               	movlw	high _I2C_CallbackReturnStop
 11841  1F34  00A3               	movwf	((low ((_I2C_Status| (0+512)+2)))^0+1)
 11842                           
 11843                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 11844  1F35  01AD               	clrf	(low ((_I2C_Status| (0+512)+13)))^0
 11845  1F36                     l3995:
 11846                           
 11847                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 11848  1F36  3078               	movlw	low _I2C_CallbackReturnStop
 11849  1F37  00A4               	movwf	(low ((_I2C_Status| (0+512)+4)))^0
 11850  1F38  301A               	movlw	high _I2C_CallbackReturnStop
 11851  1F39  00A5               	movwf	((low ((_I2C_Status| (0+512)+4)))^0+1)
 11852  1F3A                     l3997:
 11853                           
 11854                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 11855  1F3A  01AE               	clrf	(low ((_I2C_Status| (0+512)+14)))^0
 11856                           
 11857                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 11858  1F3B  3078               	movlw	low _I2C_CallbackReturnStop
 11859  1F3C  00A6               	movwf	(low ((_I2C_Status| (0+512)+6)))^0
 11860  1F3D  301A               	movlw	high _I2C_CallbackReturnStop
 11861  1F3E  00A7               	movwf	((low ((_I2C_Status| (0+512)+6)))^0+1)
 11862  1F3F                     l3999:
 11863                           
 11864                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 11865  1F3F  01AF               	clrf	(low ((_I2C_Status| (0+512)+15)))^0
 11866  1F40                     l4001:
 11867                           
 11868                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 11869  1F40  3002               	movlw	low _I2C_CallbackReturnReset
 11870  1F41  00A8               	movwf	(low ((_I2C_Status| (0+512)+8)))^0
 11871  1F42  3000               	movlw	high _I2C_CallbackReturnReset
 11872  1F43  00A9               	movwf	((low ((_I2C_Status| (0+512)+8)))^0+1)
 11873                           
 11874                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 11875  1F44  01B0               	clrf	(low ((_I2C_Status| (0+512)+16)))^0
 11876  1F45                     l4003:
 11877                           
 11878                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 11879  1F45  319A  227A  319F   	fcall	_I2C_MasterClearIrq
 11880  1F48                     l4005:
 11881                           
 11882                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 11883  1F48  319B  23A7  319F   	fcall	_I2C_MasterOpen
 11884  1F4B                     l4007:
 11885                           
 11886                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 11887  1F4B  0020               	movlb	0	; select bank0
 11888  1F4C  01AC               	clrf	I2C_Open@returnValue
 11889  1F4D                     l302:	
 11890                           ;mcc_generated_files/i2c_master.c: 205:     }
 11891                           
 11892                           
 11893                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 11894  1F4D  0020               	movlb	0	; select bank0
 11895  1F4E  082C               	movf	I2C_Open@returnValue,w
 11896  1F4F                     l303:
 11897  1F4F  0008               	return
 11898  1F50                     __end_of_I2C_Open:
 11899                           
 11900                           	psect	text35
 11901  1BA7                     __ptext35:	
 11902 ;; *************** function _I2C_MasterOpen *****************
 11903 ;; Defined at:
 11904 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;		None
 11907 ;; Auto vars:     Size  Location     Type
 11908 ;;		None
 11909 ;; Return value:  Size  Location     Type
 11910 ;;                  1    wreg      _Bool 
 11911 ;; Registers used:
 11912 ;;		wreg, status,2
 11913 ;; Tracked objects:
 11914 ;;		On entry : 0/0
 11915 ;;		On exit  : 0/0
 11916 ;;		Unchanged: 0/0
 11917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11918 ;;      Params:         0       0       0       0       0       0       0       0
 11919 ;;      Locals:         0       0       0       0       0       0       0       0
 11920 ;;      Temps:          0       0       0       0       0       0       0       0
 11921 ;;      Totals:         0       0       0       0       0       0       0       0
 11922 ;;Total ram usage:        0 bytes
 11923 ;; Hardware stack levels used: 1
 11924 ;; Hardware stack levels required when called: 4
 11925 ;; This function calls:
 11926 ;;		Nothing
 11927 ;; This function is called by:
 11928 ;;		_I2C_Open
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932  1BA7                     _I2C_MasterOpen:	
 11933                           ;psect for function _I2C_MasterOpen
 11934                           
 11935  1BA7                     l3943:	
 11936                           ;incstack = 0
 11937                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
 11938                           
 11939                           
 11940                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 11941  1BA7  0024               	movlb	4	; select bank4
 11942  1BA8  1A95               	btfsc	21,5	;volatile
 11943  1BA9  2BAB               	goto	u2481
 11944  1BAA  2BAC               	goto	u2480
 11945  1BAB                     u2481:
 11946  1BAB  2BB4               	goto	l468
 11947  1BAC                     u2480:
 11948  1BAC                     l3945:
 11949                           
 11950                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x80;
 11951  1BAC  3080               	movlw	128
 11952  1BAD  0094               	movwf	20	;volatile
 11953                           
 11954                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
 11955  1BAE  3008               	movlw	8
 11956  1BAF  0095               	movwf	21	;volatile
 11957  1BB0                     l3947:
 11958                           
 11959                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
 11960  1BB0  0196               	clrf	22	;volatile
 11961  1BB1                     l3949:
 11962                           
 11963                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x13;
 11964  1BB1  3013               	movlw	19
 11965  1BB2  0092               	movwf	18	;volatile
 11966  1BB3                     l3951:
 11967                           
 11968                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 11969  1BB3  1695               	bsf	21,5	;volatile
 11970  1BB4                     l468:
 11971  1BB4  0008               	return
 11972  1BB5                     __end_of_I2C_MasterOpen:
 11973                           
 11974                           	psect	text36
 11975  1ACE                     __ptext36:	
 11976 ;; *************** function _I2C_MasterRead *****************
 11977 ;; Defined at:
 11978 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;		None
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      enum E355
 11985 ;; Registers used:
 11986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11992 ;;      Params:         0       0       0       0       0       0       0       0
 11993 ;;      Locals:         0       0       0       0       0       0       0       0
 11994 ;;      Temps:          0       0       0       0       0       0       0       0
 11995 ;;      Totals:         0       0       0       0       0       0       0       0
 11996 ;;Total ram usage:        0 bytes
 11997 ;; Hardware stack levels used: 1
 11998 ;; Hardware stack levels required when called: 11
 11999 ;; This function calls:
 12000 ;;		_I2C_MasterOperation
 12001 ;; This function is called by:
 12002 ;;		_I2C_ReadNBytes
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006  1ACE                     _I2C_MasterRead:	
 12007                           ;psect for function _I2C_MasterRead
 12008                           
 12009  1ACE                     l4035:	
 12010                           ;incstack = 0
 12011                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12012                           
 12013                           
 12014                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
 12015  1ACE  3001               	movlw	1
 12016  1ACF  319D  2547  319A   	fcall	_I2C_MasterOperation
 12017  1AD2                     l316:
 12018  1AD2  0008               	return
 12019  1AD3                     __end_of_I2C_MasterRead:
 12020                           
 12021                           	psect	text37
 12022  1D47                     __ptext37:	
 12023 ;; *************** function _I2C_MasterOperation *****************
 12024 ;; Defined at:
 12025 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  read            1    wreg     _Bool 
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;  read            1   27[BANK0 ] _Bool 
 12030 ;;  returnValue     1   28[BANK0 ] enum E355
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      enum E355
 12033 ;; Registers used:
 12034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12040 ;;      Params:         0       0       0       0       0       0       0       0
 12041 ;;      Locals:         0       2       0       0       0       0       0       0
 12042 ;;      Temps:          0       1       0       0       0       0       0       0
 12043 ;;      Totals:         0       3       0       0       0       0       0       0
 12044 ;;Total ram usage:        3 bytes
 12045 ;; Hardware stack levels used: 1
 12046 ;; Hardware stack levels required when called: 10
 12047 ;; This function calls:
 12048 ;;		_I2C_MasterStart
 12049 ;;		_I2C_Poller
 12050 ;; This function is called by:
 12051 ;;		_I2C_MasterRead
 12052 ;;		_I2C_MasterWrite
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056  1D47                     _I2C_MasterOperation:	
 12057                           ;psect for function _I2C_MasterOperation
 12058                           
 12059                           
 12060                           ;incstack = 0
 12061                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12062                           ;I2C_MasterOperation@read stored from wreg
 12063  1D47  0020               	movlb	0	; select bank0
 12064  1D48  00BB               	movwf	I2C_MasterOperation@read
 12065  1D49                     l3959:
 12066                           
 12067                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12068  1D49  01BC               	clrf	I2C_MasterOperation@returnValue
 12069  1D4A  0ABC               	incf	I2C_MasterOperation@returnValue,f
 12070                           
 12071                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 12072  1D4B  0024               	movlb	4	; select bank4
 12073  1D4C  18BC               	btfsc	(_I2C_Status^(0+512)+28),1
 12074  1D4D  2D4F               	goto	u2491
 12075  1D4E  2D50               	goto	u2490
 12076  1D4F                     u2491:
 12077  1D4F  2D67               	goto	l3975
 12078  1D50                     u2490:
 12079  1D50                     l3961:
 12080                           
 12081                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 12082  1D50  14BC               	bsf	(_I2C_Status^(0+512)+28),1
 12083  1D51                     l3963:
 12084                           
 12085                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 12086  1D51  0020               	movlb	0	; select bank0
 12087  1D52  01BC               	clrf	I2C_MasterOperation@returnValue
 12088  1D53                     l3965:
 12089                           
 12090                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 12091  1D53  083B               	movf	I2C_MasterOperation@read,w
 12092  1D54  1903               	btfsc	3,2
 12093  1D55  2D57               	goto	u2501
 12094  1D56  2D58               	goto	u2500
 12095  1D57                     u2501:
 12096  1D57  2D5C               	goto	l3969
 12097  1D58                     u2500:
 12098  1D58                     l3967:
 12099                           
 12100                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 12101  1D58  0024               	movlb	4	; select bank4
 12102  1D59  01BA               	clrf	(_I2C_Status^(0+512)+26)
 12103  1D5A  0ABA               	incf	(_I2C_Status^(0+512)+26),f
 12104                           
 12105                           ;mcc_generated_files/i2c_master.c: 235:         }
 12106  1D5B  2D61               	goto	l3971
 12107  1D5C                     l3969:
 12108                           
 12109                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 12110  1D5C  3002               	movlw	2
 12111  1D5D  00BA               	movwf	??_I2C_MasterOperation
 12112  1D5E  083A               	movf	??_I2C_MasterOperation,w
 12113  1D5F  0024               	movlb	4	; select bank4
 12114  1D60  00BA               	movwf	(_I2C_Status^(0+512)+26)
 12115  1D61                     l3971:
 12116                           
 12117                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 12118  1D61  319A  2283  319D   	fcall	_I2C_MasterStart
 12119  1D64                     l3973:
 12120                           
 12121                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 12122  1D64  319B  238C  319D   	fcall	_I2C_Poller
 12123  1D67                     l3975:
 12124                           
 12125                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 12126  1D67  0020               	movlb	0	; select bank0
 12127  1D68  083C               	movf	I2C_MasterOperation@returnValue,w
 12128  1D69                     l313:
 12129  1D69  0008               	return
 12130  1D6A                     __end_of_I2C_MasterOperation:
 12131                           
 12132                           	psect	text38
 12133  1B8C                     __ptext38:	
 12134 ;; *************** function _I2C_Poller *****************
 12135 ;; Defined at:
 12136 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12150 ;;      Params:         0       0       0       0       0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used: 1
 12156 ;; Hardware stack levels required when called: 9
 12157 ;; This function calls:
 12158 ;;		_I2C_MasterFsm
 12159 ;;		_I2C_MasterWaitForEvent
 12160 ;; This function is called by:
 12161 ;;		_I2C_MasterOperation
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165  1B8C                     _I2C_Poller:	
 12166                           ;psect for function _I2C_Poller
 12167                           
 12168  1B8C                     l3935:	
 12169                           ;incstack = 0
 12170                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12171                           
 12172                           
 12173                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12174  1B8C  2B93               	goto	l3941
 12175  1B8D                     l3937:
 12176                           
 12177                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 12178  1B8D  319A  22E4  319B   	fcall	_I2C_MasterWaitForEvent
 12179  1B90                     l3939:
 12180                           
 12181                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 12182  1B90  319D  25E5  319B   	fcall	_I2C_MasterFsm
 12183  1B93                     l3941:
 12184                           
 12185                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12186  1B93  0024               	movlb	4	; select bank4
 12187  1B94  18BC               	btfsc	(_I2C_Status^(0+512)+28),1
 12188  1B95  2B97               	goto	u2471
 12189  1B96  2B98               	goto	u2470
 12190  1B97                     u2471:
 12191  1B97  2B8D               	goto	l3937
 12192  1B98                     u2470:
 12193  1B98                     l352:
 12194  1B98  0008               	return
 12195  1B99                     __end_of_I2C_Poller:
 12196                           
 12197                           	psect	text39
 12198  1AE4                     __ptext39:	
 12199 ;; *************** function _I2C_MasterWaitForEvent *****************
 12200 ;; Defined at:
 12201 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		None
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12215 ;;      Params:         0       0       0       0       0       0       0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0
 12218 ;;      Totals:         0       0       0       0       0       0       0       0
 12219 ;;Total ram usage:        0 bytes
 12220 ;; Hardware stack levels used: 1
 12221 ;; Hardware stack levels required when called: 4
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_I2C_Poller
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229  1AE4                     _I2C_MasterWaitForEvent:	
 12230                           ;psect for function _I2C_MasterWaitForEvent
 12231                           
 12232  1AE4                     l525:	
 12233                           ;incstack = 0
 12234                           ; Regs used in _I2C_MasterWaitForEvent: []
 12235                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
 12236                           
 12237                           
 12238                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
 12239  1AE4  0020               	movlb	0	; select bank0
 12240  1AE5  1D91               	btfss	17,3	;volatile
 12241  1AE6  2AE8               	goto	u2441
 12242  1AE7  2AE9               	goto	u2440
 12243  1AE8                     u2441:
 12244  1AE8  2AE4               	goto	l525
 12245  1AE9                     u2440:
 12246  1AE9                     l529:
 12247  1AE9  0008               	return
 12248  1AEA                     __end_of_I2C_MasterWaitForEvent:
 12249                           
 12250                           	psect	text40
 12251  1DE5                     __ptext40:	
 12252 ;; *************** function _I2C_MasterFsm *****************
 12253 ;; Defined at:
 12254 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12268 ;;      Params:         0       0       0       0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0
 12270 ;;      Temps:          0       3       0       0       0       0       0       0
 12271 ;;      Totals:         0       3       0       0       0       0       0       0
 12272 ;;Total ram usage:        3 bytes
 12273 ;; Hardware stack levels used: 1
 12274 ;; Hardware stack levels required when called: 8
 12275 ;; This function calls:
 12276 ;;		_I2C_DO_ADDRESS_NACK
 12277 ;;		_I2C_DO_IDLE
 12278 ;;		_I2C_DO_RCEN
 12279 ;;		_I2C_DO_RESET
 12280 ;;		_I2C_DO_RX
 12281 ;;		_I2C_DO_RX_ACK
 12282 ;;		_I2C_DO_RX_NACK_RESTART
 12283 ;;		_I2C_DO_RX_NACK_STOP
 12284 ;;		_I2C_DO_SEND_ADR_READ
 12285 ;;		_I2C_DO_SEND_ADR_WRITE
 12286 ;;		_I2C_DO_SEND_RESTART
 12287 ;;		_I2C_DO_SEND_RESTART_READ
 12288 ;;		_I2C_DO_SEND_RESTART_WRITE
 12289 ;;		_I2C_DO_SEND_STOP
 12290 ;;		_I2C_DO_TX
 12291 ;;		_I2C_DO_TX_EMPTY
 12292 ;;		_I2C_MasterClearIrq
 12293 ;;		_I2C_MasterIsNack
 12294 ;; This function is called by:
 12295 ;;		_I2C_Poller
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299  1DE5                     _I2C_MasterFsm:	
 12300                           ;psect for function _I2C_MasterFsm
 12301                           
 12302  1DE5                     l3923:	
 12303                           ;incstack = 0
 12304                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12305                           
 12306                           
 12307                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 12308  1DE5  319A  227A  319D   	fcall	_I2C_MasterClearIrq
 12309  1DE8                     l3925:
 12310                           
 12311                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12312  1DE8  0024               	movlb	4	; select bank4
 12313  1DE9  1C3C               	btfss	(_I2C_Status^(0+512)+28),0
 12314  1DEA  2DEC               	goto	u2451
 12315  1DEB  2DED               	goto	u2450
 12316  1DEC                     u2451:
 12317  1DEC  2DFB               	goto	l3931
 12318  1DED                     u2450:
 12319  1DED                     l3927:
 12320  1DED  319A  22DE  319D   	fcall	_I2C_MasterIsNack
 12321  1DF0  3A00               	xorlw	0
 12322  1DF1  1903               	skipnz
 12323  1DF2  2DF4               	goto	u2461
 12324  1DF3  2DF5               	goto	u2460
 12325  1DF4                     u2461:
 12326  1DF4  2DFB               	goto	l3931
 12327  1DF5                     u2460:
 12328  1DF5                     l3929:
 12329                           
 12330                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12331  1DF5  300F               	movlw	15
 12332  1DF6  0020               	movlb	0	; select bank0
 12333  1DF7  00B7               	movwf	??_I2C_MasterFsm
 12334  1DF8  0837               	movf	??_I2C_MasterFsm,w
 12335  1DF9  0024               	movlb	4	; select bank4
 12336  1DFA  00BA               	movwf	(_I2C_Status^(0+512)+26)
 12337  1DFB                     l3931:
 12338                           
 12339                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12340  1DFB  0024               	movlb	4	; select bank4
 12341  1DFC  083A               	movf	(_I2C_Status^(0+512)+26),w
 12342  1DFD  0020               	movlb	0	; select bank0
 12343  1DFE  00B7               	movwf	??_I2C_MasterFsm
 12344  1DFF  01B8               	clrf	??_I2C_MasterFsm+1
 12345  1E00  35B7               	lslf	??_I2C_MasterFsm,f
 12346  1E01  0DB8               	rlf	??_I2C_MasterFsm+1,f
 12347  1E02  3000               	movlw	low (_i2c_fsmStateTable| (0+32768))
 12348  1E03  0737               	addwf	??_I2C_MasterFsm,w
 12349  1E04  0084               	movwf	4
 12350  1E05  3098               	movlw	high (_i2c_fsmStateTable| (0+32768))
 12351  1E06  3D38               	addwfc	??_I2C_MasterFsm+1,w
 12352  1E07  0085               	movwf	5
 12353  1E08  3F01               	moviw [1]fsr0
 12354  1E09  008A               	movwf	10
 12355  1E0A  3F00               	moviw [0]fsr0
 12356  1E0B  000A               	callw
 12357  1E0C  319D               	pagesel	$
 12358  1E0D  0020               	movlb	0	; select bank0
 12359  1E0E  00B9               	movwf	??_I2C_MasterFsm+2
 12360  1E0F  0839               	movf	??_I2C_MasterFsm+2,w
 12361  1E10  0024               	movlb	4	; select bank4
 12362  1E11  00BA               	movwf	(_I2C_Status^(0+512)+26)
 12363  1E12                     l356:
 12364  1E12  0008               	return
 12365  1E13                     __end_of_I2C_MasterFsm:
 12366                           
 12367                           	psect	text41
 12368  1E42                     __ptext41:	
 12369 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 12370 ;; Defined at:
 12371 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  1    wreg      enum E3885
 12378 ;; Registers used:
 12379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12385 ;;      Params:         0       0       0       0       0       0       0       0
 12386 ;;      Locals:         0       0       0       0       0       0       0       0
 12387 ;;      Temps:          0       3       0       0       0       0       0       0
 12388 ;;      Totals:         0       3       0       0       0       0       0       0
 12389 ;;Total ram usage:        3 bytes
 12390 ;; Hardware stack levels used: 1
 12391 ;; Hardware stack levels required when called: 7
 12392 ;; This function calls:
 12393 ;;		Absolute function
 12394 ;;		_I2C_CallbackReturnReset
 12395 ;;		_I2C_CallbackReturnStop
 12396 ;;		_I2C_DO_SEND_RESTART
 12397 ;;		_I2C_DO_SEND_STOP
 12398 ;;		_rd1RegCompleteHandler
 12399 ;;		_rd2RegCompleteHandler
 12400 ;;		_rdBlkRegCompleteHandler
 12401 ;;		_wr1RegCompleteHandler
 12402 ;;		_wr2RegCompleteHandler
 12403 ;; This function is called by:
 12404 ;;		_I2C_MasterFsm
 12405 ;; This function uses a non-reentrant model
 12406 ;;
 12407                           
 12408  1E42                     _I2C_DO_ADDRESS_NACK:	
 12409                           ;psect for function _I2C_DO_ADDRESS_NACK
 12410                           
 12411  1E42                     l3901:	
 12412                           ;incstack = 0
 12413                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12414                           
 12415                           
 12416                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 12417  1E42  0024               	movlb	4	; select bank4
 12418  1E43  103C               	bcf	(_I2C_Status^(0+512)+28),0
 12419  1E44                     l3903:
 12420                           
 12421                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 12422  1E44  3002               	movlw	2
 12423  1E45  0020               	movlb	0	; select bank0
 12424  1E46  00B4               	movwf	??_I2C_DO_ADDRESS_NACK
 12425  1E47  0834               	movf	??_I2C_DO_ADDRESS_NACK,w
 12426  1E48  0024               	movlb	4	; select bank4
 12427  1E49  00BB               	movwf	(_I2C_Status^(0+512)+27)
 12428                           
 12429                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 12430  1E4A  2E53               	goto	l3915
 12431  1E4B                     l3905:
 12432                           
 12433                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 12434  1E4B  319A  22B0  319E   	fcall	_I2C_DO_SEND_RESTART
 12435  1E4E  2E72               	goto	l447
 12436  1E4F                     l3909:
 12437                           
 12438                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 12439  1E4F  319A  22B5  319E   	fcall	_I2C_DO_SEND_STOP
 12440  1E52  2E72               	goto	l447
 12441  1E53                     l3915:
 12442  1E53  082E               	movf	(low ((_I2C_Status| (0+512)+14)))^0,w
 12443  1E54  0020               	movlb	0	; select bank0
 12444  1E55  00B4               	movwf	??_I2C_DO_ADDRESS_NACK
 12445  1E56  0834               	movf	??_I2C_DO_ADDRESS_NACK,w
 12446  1E57  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 12447  1E58  3004               	movlw	4
 12448  1E59  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 12449  1E5A  0086               	movwf	6
 12450  1E5B  3002               	movlw	2	; select bank4/5
 12451  1E5C  0087               	movwf	7
 12452  1E5D  3F41               	moviw [1]fsr1
 12453  1E5E  008A               	movwf	10
 12454  1E5F  3F40               	moviw [0]fsr1
 12455  1E60  000A               	callw
 12456  1E61  319E               	pagesel	$
 12457  1E62  0020               	movlb	0	; select bank0
 12458  1E63  00B5               	movwf	??_I2C_DO_ADDRESS_NACK+1
 12459  1E64  01B6               	clrf	??_I2C_DO_ADDRESS_NACK+2
 12460                           
 12461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12462                           ; Switch size 1, requested type "simple"
 12463                           ; Number of cases is 1, Range of values is 0 to 0
 12464                           ; switch strategies available:
 12465                           ; Name         Instructions Cycles
 12466                           ; simple_byte            4     3 (average)
 12467                           ; direct_byte            8     6 (fixed)
 12468                           ; jumptable            260     6 (fixed)
 12469                           ;	Chosen strategy is simple_byte
 12470  1E65  0836               	movf	??_I2C_DO_ADDRESS_NACK+2,w
 12471  1E66  3A00               	xorlw	0	; case 0
 12472  1E67  1903               	skipnz
 12473  1E68  2E6A               	goto	l6841
 12474  1E69  2E4F               	goto	l3909
 12475  1E6A                     l6841:
 12476                           
 12477                           ; Switch size 1, requested type "simple"
 12478                           ; Number of cases is 2, Range of values is 2 to 3
 12479                           ; switch strategies available:
 12480                           ; Name         Instructions Cycles
 12481                           ; simple_byte            7     4 (average)
 12482                           ; direct_byte           13     9 (fixed)
 12483                           ; jumptable            263     9 (fixed)
 12484                           ;	Chosen strategy is simple_byte
 12485  1E6A  0835               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 12486  1E6B  3A02               	xorlw	2	; case 2
 12487  1E6C  1903               	skipnz
 12488  1E6D  2E4B               	goto	l3905
 12489  1E6E  3A01               	xorlw	1	; case 3
 12490  1E6F  1903               	skipnz
 12491  1E70  2E4B               	goto	l3905
 12492  1E71  2E4F               	goto	l3909
 12493  1E72                     l447:
 12494  1E72  0008               	return
 12495  1E73                     __end_of_I2C_DO_ADDRESS_NACK:
 12496                           
 12497                           	psect	text42
 12498  1AC9                     __ptext42:	
 12499 ;; *************** function _I2C_DO_RESET *****************
 12500 ;; Defined at:
 12501 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;		None
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;		None
 12506 ;; Return value:  Size  Location     Type
 12507 ;;                  1    wreg      enum E3885
 12508 ;; Registers used:
 12509 ;;		wreg, status,2
 12510 ;; Tracked objects:
 12511 ;;		On entry : 0/0
 12512 ;;		On exit  : 0/0
 12513 ;;		Unchanged: 0/0
 12514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12515 ;;      Params:         0       0       0       0       0       0       0       0
 12516 ;;      Locals:         0       0       0       0       0       0       0       0
 12517 ;;      Temps:          0       0       0       0       0       0       0       0
 12518 ;;      Totals:         0       0       0       0       0       0       0       0
 12519 ;;Total ram usage:        0 bytes
 12520 ;; Hardware stack levels used: 1
 12521 ;; Hardware stack levels required when called: 4
 12522 ;; This function calls:
 12523 ;;		Nothing
 12524 ;; This function is called by:
 12525 ;;		_I2C_MasterFsm
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529  1AC9                     _I2C_DO_RESET:	
 12530                           ;psect for function _I2C_DO_RESET
 12531                           
 12532  1AC9                     l3893:	
 12533                           ;incstack = 0
 12534                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 12535                           
 12536                           
 12537                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 12538  1AC9  0024               	movlb	4	; select bank4
 12539  1ACA  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 12540  1ACB                     l3895:
 12541                           
 12542                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 12543  1ACB  01BB               	clrf	(_I2C_Status^(0+512)+27)
 12544  1ACC                     l3897:
 12545                           
 12546                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 12547  1ACC  300E               	movlw	14
 12548  1ACD                     l441:
 12549  1ACD  0008               	return
 12550  1ACE                     __end_of_I2C_DO_RESET:
 12551                           
 12552                           	psect	text43
 12553  1AC4                     __ptext43:	
 12554 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 12555 ;; Defined at:
 12556 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 12557 ;; Parameters:    Size  Location     Type
 12558 ;;		None
 12559 ;; Auto vars:     Size  Location     Type
 12560 ;;		None
 12561 ;; Return value:  Size  Location     Type
 12562 ;;                  1    wreg      enum E3885
 12563 ;; Registers used:
 12564 ;;		wreg, status,2, status,0, pclath, cstack
 12565 ;; Tracked objects:
 12566 ;;		On entry : 0/0
 12567 ;;		On exit  : 0/0
 12568 ;;		Unchanged: 0/0
 12569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12570 ;;      Params:         0       0       0       0       0       0       0       0
 12571 ;;      Locals:         0       0       0       0       0       0       0       0
 12572 ;;      Temps:          0       0       0       0       0       0       0       0
 12573 ;;      Totals:         0       0       0       0       0       0       0       0
 12574 ;;Total ram usage:        0 bytes
 12575 ;; Hardware stack levels used: 1
 12576 ;; Hardware stack levels required when called: 5
 12577 ;; This function calls:
 12578 ;;		_I2C_MasterSendNack
 12579 ;; This function is called by:
 12580 ;;		_I2C_DO_RX
 12581 ;;		_I2C_MasterFsm
 12582 ;; This function uses a non-reentrant model
 12583 ;;
 12584                           
 12585  1AC4                     _I2C_DO_RX_NACK_RESTART:	
 12586                           ;psect for function _I2C_DO_RX_NACK_RESTART
 12587                           
 12588  1AC4                     l3735:	
 12589                           ;incstack = 0
 12590                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 12591                           
 12592                           
 12593                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 12594  1AC4  319A  2295  319A   	fcall	_I2C_MasterSendNack
 12595  1AC7                     l3737:
 12596                           
 12597                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 12598  1AC7  3009               	movlw	9
 12599  1AC8                     l438:
 12600  1AC8  0008               	return
 12601  1AC9                     __end_of_I2C_DO_RX_NACK_RESTART:
 12602                           
 12603                           	psect	text44
 12604  1ABF                     __ptext44:	
 12605 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 12606 ;; Defined at:
 12607 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;		None
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;		None
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  1    wreg      enum E3885
 12614 ;; Registers used:
 12615 ;;		wreg, status,2, status,0, pclath, cstack
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12621 ;;      Params:         0       0       0       0       0       0       0       0
 12622 ;;      Locals:         0       0       0       0       0       0       0       0
 12623 ;;      Temps:          0       0       0       0       0       0       0       0
 12624 ;;      Totals:         0       0       0       0       0       0       0       0
 12625 ;;Total ram usage:        0 bytes
 12626 ;; Hardware stack levels used: 1
 12627 ;; Hardware stack levels required when called: 5
 12628 ;; This function calls:
 12629 ;;		_I2C_MasterSendNack
 12630 ;; This function is called by:
 12631 ;;		_I2C_DO_RX
 12632 ;;		_I2C_MasterFsm
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636  1ABF                     _I2C_DO_RX_NACK_STOP:	
 12637                           ;psect for function _I2C_DO_RX_NACK_STOP
 12638                           
 12639  1ABF                     l3741:	
 12640                           ;incstack = 0
 12641                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 12642                           
 12643                           
 12644                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 12645  1ABF  319A  2295  319A   	fcall	_I2C_MasterSendNack
 12646  1AC2                     l3743:
 12647                           
 12648                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 12649  1AC2  300A               	movlw	10
 12650  1AC3                     l435:
 12651  1AC3  0008               	return
 12652  1AC4                     __end_of_I2C_DO_RX_NACK_STOP:
 12653                           
 12654                           	psect	text45
 12655  1ABA                     __ptext45:	
 12656 ;; *************** function _I2C_DO_RX_ACK *****************
 12657 ;; Defined at:
 12658 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;		None
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      enum E3885
 12665 ;; Registers used:
 12666 ;;		wreg, status,2, status,0, pclath, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12672 ;;      Params:         0       0       0       0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0
 12675 ;;      Totals:         0       0       0       0       0       0       0       0
 12676 ;;Total ram usage:        0 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; Hardware stack levels required when called: 5
 12679 ;; This function calls:
 12680 ;;		_I2C_MasterSendAck
 12681 ;; This function is called by:
 12682 ;;		_I2C_MasterFsm
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686  1ABA                     _I2C_DO_RX_ACK:	
 12687                           ;psect for function _I2C_DO_RX_ACK
 12688                           
 12689  1ABA                     l3887:	
 12690                           ;incstack = 0
 12691                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 12692                           
 12693                           
 12694                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 12695  1ABA  319A  2299  319A   	fcall	_I2C_MasterSendAck
 12696  1ABD                     l3889:
 12697                           
 12698                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 12699  1ABD  3005               	movlw	5
 12700  1ABE                     l432:
 12701  1ABE  0008               	return
 12702  1ABF                     __end_of_I2C_DO_RX_ACK:
 12703                           
 12704                           	psect	text46
 12705  1AB5                     __ptext46:	
 12706 ;; *************** function _I2C_DO_SEND_STOP *****************
 12707 ;; Defined at:
 12708 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;		None
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;		None
 12713 ;; Return value:  Size  Location     Type
 12714 ;;                  1    wreg      enum E3885
 12715 ;; Registers used:
 12716 ;;		wreg, status,2, status,0, pclath, cstack
 12717 ;; Tracked objects:
 12718 ;;		On entry : 0/0
 12719 ;;		On exit  : 0/0
 12720 ;;		Unchanged: 0/0
 12721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12722 ;;      Params:         0       0       0       0       0       0       0       0
 12723 ;;      Locals:         0       0       0       0       0       0       0       0
 12724 ;;      Temps:          0       0       0       0       0       0       0       0
 12725 ;;      Totals:         0       0       0       0       0       0       0       0
 12726 ;;Total ram usage:        0 bytes
 12727 ;; Hardware stack levels used: 1
 12728 ;; Hardware stack levels required when called: 5
 12729 ;; This function calls:
 12730 ;;		_I2C_MasterStop
 12731 ;; This function is called by:
 12732 ;;		_I2C_DO_TX
 12733 ;;		_I2C_DO_TX_EMPTY
 12734 ;;		_I2C_DO_ADDRESS_NACK
 12735 ;;		_I2C_MasterFsm
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739  1AB5                     _I2C_DO_SEND_STOP:	
 12740                           ;psect for function _I2C_DO_SEND_STOP
 12741                           
 12742  1AB5                     l3723:	
 12743                           ;incstack = 0
 12744                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 12745                           
 12746                           
 12747                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 12748  1AB5  319A  2289  319A   	fcall	_I2C_MasterStop
 12749  1AB8                     l3725:
 12750                           
 12751                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 12752  1AB8  3000               	movlw	0
 12753  1AB9                     l429:
 12754  1AB9  0008               	return
 12755  1ABA                     __end_of_I2C_DO_SEND_STOP:
 12756                           
 12757                           	psect	text47
 12758  1AB0                     __ptext47:	
 12759 ;; *************** function _I2C_DO_SEND_RESTART *****************
 12760 ;; Defined at:
 12761 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;		None
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;		None
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  1    wreg      enum E3885
 12768 ;; Registers used:
 12769 ;;		wreg, status,2, status,0, pclath, cstack
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12775 ;;      Params:         0       0       0       0       0       0       0       0
 12776 ;;      Locals:         0       0       0       0       0       0       0       0
 12777 ;;      Temps:          0       0       0       0       0       0       0       0
 12778 ;;      Totals:         0       0       0       0       0       0       0       0
 12779 ;;Total ram usage:        0 bytes
 12780 ;; Hardware stack levels used: 1
 12781 ;; Hardware stack levels required when called: 5
 12782 ;; This function calls:
 12783 ;;		_I2C_MasterEnableRestart
 12784 ;; This function is called by:
 12785 ;;		_I2C_DO_TX_EMPTY
 12786 ;;		_I2C_DO_ADDRESS_NACK
 12787 ;;		_I2C_MasterFsm
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791  1AB0                     _I2C_DO_SEND_RESTART:	
 12792                           ;psect for function _I2C_DO_SEND_RESTART
 12793                           
 12794  1AB0                     l3749:	
 12795                           ;incstack = 0
 12796                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 12797                           
 12798                           
 12799                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 12800  1AB0  319A  2286  319A   	fcall	_I2C_MasterEnableRestart
 12801  1AB3                     l3751:
 12802                           
 12803                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 12804  1AB3  3001               	movlw	1
 12805  1AB4                     l426:
 12806  1AB4  0008               	return
 12807  1AB5                     __end_of_I2C_DO_SEND_RESTART:
 12808                           
 12809                           	psect	text48
 12810  1AAB                     __ptext48:	
 12811 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 12812 ;; Defined at:
 12813 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;		None
 12816 ;; Auto vars:     Size  Location     Type
 12817 ;;		None
 12818 ;; Return value:  Size  Location     Type
 12819 ;;                  1    wreg      enum E3885
 12820 ;; Registers used:
 12821 ;;		wreg, status,2, status,0, pclath, cstack
 12822 ;; Tracked objects:
 12823 ;;		On entry : 0/0
 12824 ;;		On exit  : 0/0
 12825 ;;		Unchanged: 0/0
 12826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12827 ;;      Params:         0       0       0       0       0       0       0       0
 12828 ;;      Locals:         0       0       0       0       0       0       0       0
 12829 ;;      Temps:          0       0       0       0       0       0       0       0
 12830 ;;      Totals:         0       0       0       0       0       0       0       0
 12831 ;;Total ram usage:        0 bytes
 12832 ;; Hardware stack levels used: 1
 12833 ;; Hardware stack levels required when called: 5
 12834 ;; This function calls:
 12835 ;;		_I2C_MasterEnableRestart
 12836 ;; This function is called by:
 12837 ;;		_I2C_DO_TX
 12838 ;;		_I2C_MasterFsm
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842  1AAB                     _I2C_DO_SEND_RESTART_WRITE:	
 12843                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 12844                           
 12845  1AAB                     l3717:	
 12846                           ;incstack = 0
 12847                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 12848                           
 12849                           
 12850                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 12851  1AAB  319A  2286  319A   	fcall	_I2C_MasterEnableRestart
 12852  1AAE                     l3719:
 12853                           
 12854                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 12855  1AAE  3002               	movlw	2
 12856  1AAF                     l423:
 12857  1AAF  0008               	return
 12858  1AB0                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 12859                           
 12860                           	psect	text49
 12861  1AA6                     __ptext49:	
 12862 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 12863 ;; Defined at:
 12864 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;		None
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;		None
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  1    wreg      enum E3885
 12871 ;; Registers used:
 12872 ;;		wreg, status,2, status,0, pclath, cstack
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12878 ;;      Params:         0       0       0       0       0       0       0       0
 12879 ;;      Locals:         0       0       0       0       0       0       0       0
 12880 ;;      Temps:          0       0       0       0       0       0       0       0
 12881 ;;      Totals:         0       0       0       0       0       0       0       0
 12882 ;;Total ram usage:        0 bytes
 12883 ;; Hardware stack levels used: 1
 12884 ;; Hardware stack levels required when called: 5
 12885 ;; This function calls:
 12886 ;;		_I2C_MasterEnableRestart
 12887 ;; This function is called by:
 12888 ;;		_I2C_DO_TX
 12889 ;;		_I2C_MasterFsm
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893  1AA6                     _I2C_DO_SEND_RESTART_READ:	
 12894                           ;psect for function _I2C_DO_SEND_RESTART_READ
 12895                           
 12896  1AA6                     l3711:	
 12897                           ;incstack = 0
 12898                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 12899                           
 12900                           
 12901                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 12902  1AA6  319A  2286  319A   	fcall	_I2C_MasterEnableRestart
 12903  1AA9                     l3713:
 12904                           
 12905                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 12906  1AA9  3001               	movlw	1
 12907  1AAA                     l420:
 12908  1AAA  0008               	return
 12909  1AAB                     __end_of_I2C_DO_SEND_RESTART_READ:
 12910                           
 12911                           	psect	text50
 12912  1B02                     __ptext50:	
 12913 ;; *************** function _I2C_DO_RCEN *****************
 12914 ;; Defined at:
 12915 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;		None
 12918 ;; Auto vars:     Size  Location     Type
 12919 ;;		None
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  1    wreg      enum E3885
 12922 ;; Registers used:
 12923 ;;		wreg, status,2, status,0, pclath, cstack
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12929 ;;      Params:         0       0       0       0       0       0       0       0
 12930 ;;      Locals:         0       0       0       0       0       0       0       0
 12931 ;;      Temps:          0       0       0       0       0       0       0       0
 12932 ;;      Totals:         0       0       0       0       0       0       0       0
 12933 ;;Total ram usage:        0 bytes
 12934 ;; Hardware stack levels used: 1
 12935 ;; Hardware stack levels required when called: 5
 12936 ;; This function calls:
 12937 ;;		_I2C_MasterStartRx
 12938 ;; This function is called by:
 12939 ;;		_I2C_MasterFsm
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943  1B02                     _I2C_DO_RCEN:	
 12944                           ;psect for function _I2C_DO_RCEN
 12945                           
 12946  1B02                     l3855:	
 12947                           ;incstack = 0
 12948                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 12949                           
 12950                           
 12951                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 12952  1B02  0024               	movlb	4	; select bank4
 12953  1B03  103C               	bcf	(_I2C_Status^(0+512)+28),0
 12954  1B04                     l3857:
 12955                           
 12956                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 12957  1B04  319A  228C  319B   	fcall	_I2C_MasterStartRx
 12958  1B07                     l3859:
 12959                           
 12960                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 12961  1B07  3004               	movlw	4
 12962  1B08                     l396:
 12963  1B08  0008               	return
 12964  1B09                     __end_of_I2C_DO_RCEN:
 12965                           
 12966                           	psect	text51
 12967  1F94                     __ptext51:	
 12968 ;; *************** function _I2C_DO_RX *****************
 12969 ;; Defined at:
 12970 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;		None
 12973 ;; Auto vars:     Size  Location     Type
 12974 ;;		None
 12975 ;; Return value:  Size  Location     Type
 12976 ;;                  1    wreg      enum E3885
 12977 ;; Registers used:
 12978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12979 ;; Tracked objects:
 12980 ;;		On entry : 0/0
 12981 ;;		On exit  : 0/0
 12982 ;;		Unchanged: 0/0
 12983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12984 ;;      Params:         0       0       0       0       0       0       0       0
 12985 ;;      Locals:         0       0       0       0       0       0       0       0
 12986 ;;      Temps:          0       3       0       0       0       0       0       0
 12987 ;;      Totals:         0       3       0       0       0       0       0       0
 12988 ;;Total ram usage:        3 bytes
 12989 ;; Hardware stack levels used: 1
 12990 ;; Hardware stack levels required when called: 7
 12991 ;; This function calls:
 12992 ;;		Absolute function
 12993 ;;		_I2C_CallbackReturnReset
 12994 ;;		_I2C_CallbackReturnStop
 12995 ;;		_I2C_DO_RX_NACK_RESTART
 12996 ;;		_I2C_DO_RX_NACK_STOP
 12997 ;;		_I2C_MasterGetRxData
 12998 ;;		_I2C_MasterSendAck
 12999 ;;		_rd1RegCompleteHandler
 13000 ;;		_rd2RegCompleteHandler
 13001 ;;		_rdBlkRegCompleteHandler
 13002 ;;		_wr1RegCompleteHandler
 13003 ;;		_wr2RegCompleteHandler
 13004 ;; This function is called by:
 13005 ;;		_I2C_MasterFsm
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009  1F94                     _I2C_DO_RX:	
 13010                           ;psect for function _I2C_DO_RX
 13011                           
 13012  1F94                     l3825:	
 13013                           ;incstack = 0
 13014                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13015                           
 13016                           
 13017                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13018  1F94  319A  228F  319F   	fcall	_I2C_MasterGetRxData
 13019  1F97  0020               	movlb	0	; select bank0
 13020  1F98  00B4               	movwf	??_I2C_DO_RX
 13021  1F99  0024               	movlb	4	; select bank4
 13022  1F9A  0837               	movf	(low ((_I2C_Status| (0+512)+23)))^0,w
 13023  1F9B  0086               	movwf	6
 13024  1F9C  0187               	clrf	7
 13025  1F9D  0020               	movlb	0	; select bank0
 13026  1F9E  0834               	movf	??_I2C_DO_RX,w
 13027  1F9F  0081               	movwf	1
 13028  1FA0                     l3827:
 13029  1FA0  3001               	movlw	1
 13030  1FA1  00B4               	movwf	??_I2C_DO_RX
 13031  1FA2  0834               	movf	??_I2C_DO_RX,w
 13032  1FA3  0024               	movlb	4	; select bank4
 13033  1FA4  07B7               	addwf	(low ((_I2C_Status| (0+512)+23)))^0,f
 13034  1FA5                     l3829:
 13035                           
 13036                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 13037  1FA5  3001               	movlw	1
 13038  1FA6  02B8               	subwf	(_I2C_Status^(0+512)+24),f
 13039  1FA7  3000               	movlw	0
 13040  1FA8  3BB9               	subwfb	((_I2C_Status+1)^(0+512)+24),f
 13041  1FA9  0838               	movf	(_I2C_Status^(0+512)+24),w
 13042  1FAA  0439               	iorwf	((_I2C_Status+1)^(0+512)+24),w
 13043  1FAB  1903               	btfsc	3,2
 13044  1FAC  2FAE               	goto	u2431
 13045  1FAD  2FAF               	goto	u2430
 13046  1FAE                     u2431:
 13047  1FAE  2FB4               	goto	l384
 13048  1FAF                     u2430:
 13049  1FAF                     l3831:
 13050                           
 13051                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 13052  1FAF  319A  2299  319F   	fcall	_I2C_MasterSendAck
 13053  1FB2                     l3833:
 13054                           
 13055                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 13056  1FB2  3005               	movlw	5
 13057  1FB3  2FDF               	goto	l385
 13058  1FB4                     l384:	
 13059                           ;mcc_generated_files/i2c_master.c: 386:     else
 13060                           
 13061                           
 13062                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 13063  1FB4  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 13064                           
 13065                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13066  1FB5  2FBE               	goto	l3849
 13067  1FB6                     l3839:
 13068                           
 13069                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 13070  1FB6  319A  22C4  319F   	fcall	_I2C_DO_RX_NACK_RESTART
 13071  1FB9  2FDF               	goto	l385
 13072  1FBA                     l3843:
 13073                           
 13074                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 13075  1FBA  319A  22BF  319F   	fcall	_I2C_DO_RX_NACK_STOP
 13076  1FBD  2FDF               	goto	l385
 13077  1FBE                     l3849:
 13078  1FBE  082C               	movf	(low ((_I2C_Status| (0+512)+12)))^0,w
 13079  1FBF  0020               	movlb	0	; select bank0
 13080  1FC0  00B4               	movwf	??_I2C_DO_RX
 13081  1FC1  0834               	movf	??_I2C_DO_RX,w
 13082  1FC2  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 13083  1FC3  0024               	movlb	4	; select bank4
 13084  1FC4  0821               	movf	(_I2C_Status+1)^(0+512),w
 13085  1FC5  008A               	movwf	10
 13086  1FC6  0820               	movf	_I2C_Status^(0+512),w
 13087  1FC7  000A               	callw
 13088  1FC8  319F               	pagesel	$
 13089  1FC9  0020               	movlb	0	; select bank0
 13090  1FCA  00B5               	movwf	??_I2C_DO_RX+1
 13091  1FCB  01B6               	clrf	??_I2C_DO_RX+2
 13092                           
 13093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13094                           ; Switch size 1, requested type "simple"
 13095                           ; Number of cases is 1, Range of values is 0 to 0
 13096                           ; switch strategies available:
 13097                           ; Name         Instructions Cycles
 13098                           ; simple_byte            4     3 (average)
 13099                           ; direct_byte            8     6 (fixed)
 13100                           ; jumptable            260     6 (fixed)
 13101                           ;	Chosen strategy is simple_byte
 13102  1FCC  0836               	movf	??_I2C_DO_RX+2,w
 13103  1FCD  3A00               	xorlw	0	; case 0
 13104  1FCE  1903               	skipnz
 13105  1FCF  2FD1               	goto	l6843
 13106  1FD0  2FBA               	goto	l3843
 13107  1FD1                     l6843:
 13108                           
 13109                           ; Switch size 1, requested type "simple"
 13110                           ; Number of cases is 4, Range of values is 1 to 4
 13111                           ; switch strategies available:
 13112                           ; Name         Instructions Cycles
 13113                           ; simple_byte           13     7 (average)
 13114                           ; direct_byte           17     9 (fixed)
 13115                           ; jumptable            263     9 (fixed)
 13116                           ;	Chosen strategy is simple_byte
 13117  1FD1  0835               	movf	??_I2C_DO_RX+1,w
 13118  1FD2  3A01               	xorlw	1	; case 1
 13119  1FD3  1903               	skipnz
 13120  1FD4  2FBA               	goto	l3843
 13121  1FD5  3A03               	xorlw	3	; case 2
 13122  1FD6  1903               	skipnz
 13123  1FD7  2FB6               	goto	l3839
 13124  1FD8  3A01               	xorlw	1	; case 3
 13125  1FD9  1903               	skipnz
 13126  1FDA  2FB6               	goto	l3839
 13127  1FDB  3A07               	xorlw	7	; case 4
 13128  1FDC  1903               	skipnz
 13129  1FDD  2FBA               	goto	l3843
 13130  1FDE  2FBA               	goto	l3843
 13131  1FDF                     l385:
 13132  1FDF  0008               	return
 13133  1FE0                     __end_of_I2C_DO_RX:
 13134                           
 13135                           	psect	text52
 13136  100F                     __ptext52:	
 13137 ;; *************** function _I2C_DO_TX *****************
 13138 ;; Defined at:
 13139 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;		None
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;		None
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  1    wreg      enum E3885
 13146 ;; Registers used:
 13147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13153 ;;      Params:         0       0       0       0       0       0       0       0
 13154 ;;      Locals:         0       0       0       0       0       0       0       0
 13155 ;;      Temps:          0       3       0       0       0       0       0       0
 13156 ;;      Totals:         0       3       0       0       0       0       0       0
 13157 ;;Total ram usage:        3 bytes
 13158 ;; Hardware stack levels used: 1
 13159 ;; Hardware stack levels required when called: 7
 13160 ;; This function calls:
 13161 ;;		Absolute function
 13162 ;;		_I2C_CallbackReturnReset
 13163 ;;		_I2C_CallbackReturnStop
 13164 ;;		_I2C_DO_SEND_RESTART_READ
 13165 ;;		_I2C_DO_SEND_RESTART_WRITE
 13166 ;;		_I2C_DO_SEND_STOP
 13167 ;;		_I2C_MasterIsNack
 13168 ;;		_I2C_MasterSendTxData
 13169 ;;		_rd1RegCompleteHandler
 13170 ;;		_rd2RegCompleteHandler
 13171 ;;		_rdBlkRegCompleteHandler
 13172 ;;		_wr1RegCompleteHandler
 13173 ;;		_wr2RegCompleteHandler
 13174 ;; This function is called by:
 13175 ;;		_I2C_MasterFsm
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179  100F                     _I2C_DO_TX:	
 13180                           ;psect for function _I2C_DO_TX
 13181                           
 13182  100F                     l3791:	
 13183                           ;incstack = 0
 13184                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13185                           
 13186                           
 13187                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 13188  100F  319A  22DE  3190   	fcall	_I2C_MasterIsNack
 13189  1012  3A00               	xorlw	0
 13190  1013  1903               	skipnz
 13191  1014  2816               	goto	u2411
 13192  1015  2817               	goto	u2410
 13193  1016                     u2411:
 13194  1016  284A               	goto	l368
 13195  1017                     u2410:
 13196  1017  2824               	goto	l3809
 13197  1018                     l3795:
 13198                           
 13199                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13200  1018  319A  22A6  3190   	fcall	_I2C_DO_SEND_RESTART_READ
 13201  101B  2867               	goto	l371
 13202  101C                     l3799:
 13203                           
 13204                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13205  101C  319A  22AB  3190   	fcall	_I2C_DO_SEND_RESTART_WRITE
 13206  101F  2867               	goto	l371
 13207  1020                     l3803:
 13208                           
 13209                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 13210  1020  319A  22B5  3190   	fcall	_I2C_DO_SEND_STOP
 13211  1023  2867               	goto	l371
 13212  1024                     l3809:
 13213  1024  0024               	movlb	4	; select bank4
 13214  1025  082F               	movf	(low ((_I2C_Status| (0+512)+15)))^0,w
 13215  1026  0020               	movlb	0	; select bank0
 13216  1027  00B4               	movwf	??_I2C_DO_TX
 13217  1028  0834               	movf	??_I2C_DO_TX,w
 13218  1029  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 13219  102A  3006               	movlw	6
 13220  102B  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 13221  102C  0086               	movwf	6
 13222  102D  3002               	movlw	2	; select bank4/5
 13223  102E  0087               	movwf	7
 13224  102F  3F41               	moviw [1]fsr1
 13225  1030  008A               	movwf	10
 13226  1031  3F40               	moviw [0]fsr1
 13227  1032  000A               	callw
 13228  1033  3190               	pagesel	$
 13229  1034  0020               	movlb	0	; select bank0
 13230  1035  00B5               	movwf	??_I2C_DO_TX+1
 13231  1036  01B6               	clrf	??_I2C_DO_TX+2
 13232                           
 13233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13234                           ; Switch size 1, requested type "simple"
 13235                           ; Number of cases is 1, Range of values is 0 to 0
 13236                           ; switch strategies available:
 13237                           ; Name         Instructions Cycles
 13238                           ; simple_byte            4     3 (average)
 13239                           ; direct_byte            8     6 (fixed)
 13240                           ; jumptable            260     6 (fixed)
 13241                           ;	Chosen strategy is simple_byte
 13242  1037  0836               	movf	??_I2C_DO_TX+2,w
 13243  1038  3A00               	xorlw	0	; case 0
 13244  1039  1903               	skipnz
 13245  103A  283C               	goto	l6845
 13246  103B  2820               	goto	l3803
 13247  103C                     l6845:
 13248                           
 13249                           ; Switch size 1, requested type "simple"
 13250                           ; Number of cases is 4, Range of values is 1 to 4
 13251                           ; switch strategies available:
 13252                           ; Name         Instructions Cycles
 13253                           ; simple_byte           13     7 (average)
 13254                           ; direct_byte           17     9 (fixed)
 13255                           ; jumptable            263     9 (fixed)
 13256                           ;	Chosen strategy is simple_byte
 13257  103C  0835               	movf	??_I2C_DO_TX+1,w
 13258  103D  3A01               	xorlw	1	; case 1
 13259  103E  1903               	skipnz
 13260  103F  2820               	goto	l3803
 13261  1040  3A03               	xorlw	3	; case 2
 13262  1041  1903               	skipnz
 13263  1042  2818               	goto	l3795
 13264  1043  3A01               	xorlw	1	; case 3
 13265  1044  1903               	skipnz
 13266  1045  281C               	goto	l3799
 13267  1046  3A07               	xorlw	7	; case 4
 13268  1047  1903               	skipnz
 13269  1048  2820               	goto	l3803
 13270  1049  2820               	goto	l3803
 13271  104A                     l368:	
 13272                           ;mcc_generated_files/i2c_master.c: 370:     else
 13273                           
 13274                           
 13275                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 13276  104A  0024               	movlb	4	; select bank4
 13277  104B  103C               	bcf	(_I2C_Status^(0+512)+28),0
 13278  104C                     l3811:
 13279                           
 13280                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13281  104C  3017               	movlw	23
 13282  104D  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 13283  104E  0086               	movwf	6
 13284  104F  3002               	movlw	2	; select bank4/5
 13285  1050  0087               	movwf	7
 13286  1051  3F40               	moviw [0]fsr1
 13287  1052  0084               	movwf	4
 13288  1053  0185               	clrf	5
 13289  1054  0A81               	incf	1,f
 13290  1055  0800               	movf	0,w
 13291  1056  319A  22D8  3190   	fcall	_I2C_MasterSendTxData
 13292  1059                     l3813:
 13293                           
 13294                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13295  1059  3001               	movlw	1
 13296  105A  0024               	movlb	4	; select bank4
 13297  105B  02B8               	subwf	(_I2C_Status^(0+512)+24),f
 13298  105C  3000               	movlw	0
 13299  105D  3BB9               	subwfb	((_I2C_Status+1)^(0+512)+24),f
 13300  105E  0838               	movf	(_I2C_Status^(0+512)+24),w
 13301  105F  0439               	iorwf	((_I2C_Status+1)^(0+512)+24),w
 13302  1060  1D03               	btfss	3,2
 13303  1061  2863               	goto	u2421
 13304  1062  2864               	goto	u2420
 13305  1063                     u2421:
 13306  1063  2866               	goto	l3817
 13307  1064                     u2420:
 13308  1064                     l3815:
 13309  1064  3006               	movlw	6
 13310  1065  2867               	goto	l371
 13311  1066                     l3817:
 13312  1066  3003               	movlw	3
 13313  1067                     l371:
 13314  1067  0008               	return
 13315  1068                     __end_of_I2C_DO_TX:
 13316                           
 13317                           	psect	text53
 13318  1B11                     __ptext53:	
 13319 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13320 ;; Defined at:
 13321 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;		None
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;		None
 13326 ;; Return value:  Size  Location     Type
 13327 ;;                  1    wreg      enum E3885
 13328 ;; Registers used:
 13329 ;;		wreg, status,2, status,0, pclath, cstack
 13330 ;; Tracked objects:
 13331 ;;		On entry : 0/0
 13332 ;;		On exit  : 0/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13335 ;;      Params:         0       0       0       0       0       0       0       0
 13336 ;;      Locals:         0       0       0       0       0       0       0       0
 13337 ;;      Temps:          0       0       0       0       0       0       0       0
 13338 ;;      Totals:         0       0       0       0       0       0       0       0
 13339 ;;Total ram usage:        0 bytes
 13340 ;; Hardware stack levels used: 1
 13341 ;; Hardware stack levels required when called: 5
 13342 ;; This function calls:
 13343 ;;		_I2C_MasterSendTxData
 13344 ;; This function is called by:
 13345 ;;		_I2C_MasterFsm
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349  1B11                     _I2C_DO_SEND_ADR_WRITE:	
 13350                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 13351                           
 13352  1B11                     l3783:	
 13353                           ;incstack = 0
 13354                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13355                           
 13356                           
 13357                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 13358  1B11  0024               	movlb	4	; select bank4
 13359  1B12  143C               	bsf	(_I2C_Status^(0+512)+28),0
 13360  1B13                     l3785:
 13361                           
 13362                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 13363  1B13  3536               	lslf	(_I2C_Status^(0+512)+22),w
 13364  1B14  319A  22D8  319B   	fcall	_I2C_MasterSendTxData
 13365  1B17                     l3787:
 13366                           
 13367                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 13368  1B17  3003               	movlw	3
 13369  1B18                     l365:
 13370  1B18  0008               	return
 13371  1B19                     __end_of_I2C_DO_SEND_ADR_WRITE:
 13372                           
 13373                           	psect	text54
 13374  1B19                     __ptext54:	
 13375 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 13376 ;; Defined at:
 13377 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      enum E3885
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0, pclath, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13391 ;;      Params:         0       0       0       0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0
 13394 ;;      Totals:         0       0       0       0       0       0       0       0
 13395 ;;Total ram usage:        0 bytes
 13396 ;; Hardware stack levels used: 1
 13397 ;; Hardware stack levels required when called: 5
 13398 ;; This function calls:
 13399 ;;		_I2C_MasterSendTxData
 13400 ;; This function is called by:
 13401 ;;		_I2C_MasterFsm
 13402 ;; This function uses a non-reentrant model
 13403 ;;
 13404                           
 13405  1B19                     _I2C_DO_SEND_ADR_READ:	
 13406                           ;psect for function _I2C_DO_SEND_ADR_READ
 13407                           
 13408  1B19                     l3775:	
 13409                           ;incstack = 0
 13410                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 13411                           
 13412                           
 13413                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 13414  1B19  0024               	movlb	4	; select bank4
 13415  1B1A  143C               	bsf	(_I2C_Status^(0+512)+28),0
 13416  1B1B                     l3777:
 13417                           
 13418                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 13419  1B1B  1403               	setc
 13420  1B1C  0D36               	rlf	(_I2C_Status^(0+512)+22),w
 13421  1B1D  319A  22D8  319B   	fcall	_I2C_MasterSendTxData
 13422  1B20                     l3779:
 13423                           
 13424                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 13425  1B20  3005               	movlw	5
 13426  1B21                     l362:
 13427  1B21  0008               	return
 13428  1B22                     __end_of_I2C_DO_SEND_ADR_READ:
 13429                           
 13430                           	psect	text55
 13431  1AA1                     __ptext55:	
 13432 ;; *************** function _I2C_DO_IDLE *****************
 13433 ;; Defined at:
 13434 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      enum E3885
 13441 ;; Registers used:
 13442 ;;		wreg, status,2
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13448 ;;      Params:         0       0       0       0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0
 13451 ;;      Totals:         0       0       0       0       0       0       0       0
 13452 ;;Total ram usage:        0 bytes
 13453 ;; Hardware stack levels used: 1
 13454 ;; Hardware stack levels required when called: 4
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_I2C_MasterFsm
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462  1AA1                     _I2C_DO_IDLE:	
 13463                           ;psect for function _I2C_DO_IDLE
 13464                           
 13465  1AA1                     l3767:	
 13466                           ;incstack = 0
 13467                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 13468                           
 13469                           
 13470                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 13471  1AA1  0024               	movlb	4	; select bank4
 13472  1AA2  10BC               	bcf	(_I2C_Status^(0+512)+28),1
 13473  1AA3                     l3769:
 13474                           
 13475                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 13476  1AA3  01BB               	clrf	(_I2C_Status^(0+512)+27)
 13477  1AA4                     l3771:
 13478                           
 13479                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 13480  1AA4  300E               	movlw	14
 13481  1AA5                     l359:
 13482  1AA5  0008               	return
 13483  1AA6                     __end_of_I2C_DO_IDLE:
 13484                           
 13485                           	psect	text56
 13486  1E73                     __ptext56:	
 13487 ;; *************** function _I2C_DO_TX_EMPTY *****************
 13488 ;; Defined at:
 13489 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;		None
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;		None
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      enum E3885
 13496 ;; Registers used:
 13497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13503 ;;      Params:         0       0       0       0       0       0       0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0
 13505 ;;      Temps:          0       3       0       0       0       0       0       0
 13506 ;;      Totals:         0       3       0       0       0       0       0       0
 13507 ;;Total ram usage:        3 bytes
 13508 ;; Hardware stack levels used: 1
 13509 ;; Hardware stack levels required when called: 7
 13510 ;; This function calls:
 13511 ;;		Absolute function
 13512 ;;		_I2C_CallbackReturnReset
 13513 ;;		_I2C_CallbackReturnStop
 13514 ;;		_I2C_DO_SEND_RESTART
 13515 ;;		_I2C_DO_SEND_STOP
 13516 ;;		_I2C_MasterSetIrq
 13517 ;;		_rd1RegCompleteHandler
 13518 ;;		_rd2RegCompleteHandler
 13519 ;;		_rdBlkRegCompleteHandler
 13520 ;;		_wr1RegCompleteHandler
 13521 ;;		_wr2RegCompleteHandler
 13522 ;; This function is called by:
 13523 ;;		_I2C_MasterFsm
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527  1E73                     _I2C_DO_TX_EMPTY:	
 13528                           ;psect for function _I2C_DO_TX_EMPTY
 13529                           
 13530  1E73                     l3863:	
 13531                           ;incstack = 0
 13532                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13533                           
 13534                           
 13535                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 13536  1E73  0024               	movlb	4	; select bank4
 13537  1E74  15BC               	bsf	(_I2C_Status^(0+512)+28),3
 13538                           
 13539                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13540  1E75  2E83               	goto	l3881
 13541  1E76                     l3865:
 13542                           
 13543                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 13544  1E76  319A  22B0  319E   	fcall	_I2C_DO_SEND_RESTART
 13545  1E79  2EA4               	goto	l402
 13546  1E7A                     l3869:
 13547                           
 13548                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 13549  1E7A  319A  2292  319E   	fcall	_I2C_MasterSetIrq
 13550  1E7D                     l3871:
 13551                           
 13552                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 13553  1E7D  3003               	movlw	3
 13554  1E7E  2EA4               	goto	l402
 13555  1E7F                     l3875:
 13556                           
 13557                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 13558  1E7F  319A  22B5  319E   	fcall	_I2C_DO_SEND_STOP
 13559  1E82  2EA4               	goto	l402
 13560  1E83                     l3881:
 13561  1E83  082C               	movf	(low ((_I2C_Status| (0+512)+12)))^0,w
 13562  1E84  0020               	movlb	0	; select bank0
 13563  1E85  00B4               	movwf	??_I2C_DO_TX_EMPTY
 13564  1E86  0834               	movf	??_I2C_DO_TX_EMPTY,w
 13565  1E87  00B3               	movwf	I2C_CallbackReturnReset@funPtr
 13566  1E88  0024               	movlb	4	; select bank4
 13567  1E89  0821               	movf	(_I2C_Status+1)^(0+512),w
 13568  1E8A  008A               	movwf	10
 13569  1E8B  0820               	movf	_I2C_Status^(0+512),w
 13570  1E8C  000A               	callw
 13571  1E8D  319E               	pagesel	$
 13572  1E8E  0020               	movlb	0	; select bank0
 13573  1E8F  00B5               	movwf	??_I2C_DO_TX_EMPTY+1
 13574  1E90  01B6               	clrf	??_I2C_DO_TX_EMPTY+2
 13575                           
 13576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13577                           ; Switch size 1, requested type "simple"
 13578                           ; Number of cases is 1, Range of values is 0 to 0
 13579                           ; switch strategies available:
 13580                           ; Name         Instructions Cycles
 13581                           ; simple_byte            4     3 (average)
 13582                           ; direct_byte            8     6 (fixed)
 13583                           ; jumptable            260     6 (fixed)
 13584                           ;	Chosen strategy is simple_byte
 13585  1E91  0836               	movf	??_I2C_DO_TX_EMPTY+2,w
 13586  1E92  3A00               	xorlw	0	; case 0
 13587  1E93  1903               	skipnz
 13588  1E94  2E96               	goto	l6847
 13589  1E95  2E7F               	goto	l3875
 13590  1E96                     l6847:
 13591                           
 13592                           ; Switch size 1, requested type "simple"
 13593                           ; Number of cases is 4, Range of values is 1 to 4
 13594                           ; switch strategies available:
 13595                           ; Name         Instructions Cycles
 13596                           ; simple_byte           13     7 (average)
 13597                           ; direct_byte           17     9 (fixed)
 13598                           ; jumptable            263     9 (fixed)
 13599                           ;	Chosen strategy is simple_byte
 13600  1E96  0835               	movf	??_I2C_DO_TX_EMPTY+1,w
 13601  1E97  3A01               	xorlw	1	; case 1
 13602  1E98  1903               	skipnz
 13603  1E99  2E7F               	goto	l3875
 13604  1E9A  3A03               	xorlw	3	; case 2
 13605  1E9B  1903               	skipnz
 13606  1E9C  2E76               	goto	l3865
 13607  1E9D  3A01               	xorlw	1	; case 3
 13608  1E9E  1903               	skipnz
 13609  1E9F  2E76               	goto	l3865
 13610  1EA0  3A07               	xorlw	7	; case 4
 13611  1EA1  1903               	skipnz
 13612  1EA2  2E7A               	goto	l3869
 13613  1EA3  2E7F               	goto	l3875
 13614  1EA4                     l402:
 13615  1EA4  0008               	return
 13616  1EA5                     __end_of_I2C_DO_TX_EMPTY:
 13617                           
 13618                           	psect	text57
 13619  1A92                     __ptext57:	
 13620 ;; *************** function _I2C_MasterSetIrq *****************
 13621 ;; Defined at:
 13622 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 13623 ;; Parameters:    Size  Location     Type
 13624 ;;		None
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;		None
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      void 
 13629 ;; Registers used:
 13630 ;;		None
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13636 ;;      Params:         0       0       0       0       0       0       0       0
 13637 ;;      Locals:         0       0       0       0       0       0       0       0
 13638 ;;      Temps:          0       0       0       0       0       0       0       0
 13639 ;;      Totals:         0       0       0       0       0       0       0       0
 13640 ;;Total ram usage:        0 bytes
 13641 ;; Hardware stack levels used: 1
 13642 ;; Hardware stack levels required when called: 4
 13643 ;; This function calls:
 13644 ;;		Nothing
 13645 ;; This function is called by:
 13646 ;;		_I2C_DO_TX_EMPTY
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650  1A92                     _I2C_MasterSetIrq:	
 13651                           ;psect for function _I2C_MasterSetIrq
 13652                           
 13653  1A92                     l3755:	
 13654                           ;incstack = 0
 13655                           ; Regs used in _I2C_MasterSetIrq: []
 13656                           
 13657                           
 13658                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
 13659  1A92  0020               	movlb	0	; select bank0
 13660  1A93  1591               	bsf	17,3	;volatile
 13661  1A94                     l522:
 13662  1A94  0008               	return
 13663  1A95                     __end_of_I2C_MasterSetIrq:
 13664                           
 13665                           	psect	text58
 13666  1ADE                     __ptext58:	
 13667 ;; *************** function _I2C_MasterIsNack *****************
 13668 ;; Defined at:
 13669 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;		None
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;		None
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      _Bool 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13683 ;;      Params:         0       0       0       0       0       0       0       0
 13684 ;;      Locals:         0       0       0       0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0
 13686 ;;      Totals:         0       0       0       0       0       0       0       0
 13687 ;;Total ram usage:        0 bytes
 13688 ;; Hardware stack levels used: 1
 13689 ;; Hardware stack levels required when called: 4
 13690 ;; This function calls:
 13691 ;;		Nothing
 13692 ;; This function is called by:
 13693 ;;		_I2C_MasterFsm
 13694 ;;		_I2C_DO_TX
 13695 ;; This function uses a non-reentrant model
 13696 ;;
 13697                           
 13698  1ADE                     _I2C_MasterIsNack:	
 13699                           ;psect for function _I2C_MasterIsNack
 13700                           
 13701  1ADE                     l3705:	
 13702                           ;incstack = 0
 13703                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 13704                           
 13705                           
 13706                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 13707  1ADE  0024               	movlb	4	; select bank4
 13708  1ADF  0E16               	swapf	22,w	;volatile
 13709  1AE0  0C89               	rrf	9,f
 13710  1AE1  0C89               	rrf	9,f
 13711  1AE2  3901               	andlw	1
 13712  1AE3                     l495:
 13713  1AE3  0008               	return
 13714  1AE4                     __end_of_I2C_MasterIsNack:
 13715                           
 13716                           	psect	text59
 13717  1AD8                     __ptext59:	
 13718 ;; *************** function _I2C_MasterSendTxData *****************
 13719 ;; Defined at:
 13720 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 13721 ;; Parameters:    Size  Location     Type
 13722 ;;  data            1    wreg     unsigned char 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  data            1   10[BANK0 ] unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13734 ;;      Params:         0       0       0       0       0       0       0       0
 13735 ;;      Locals:         0       1       0       0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0
 13737 ;;      Totals:         0       1       0       0       0       0       0       0
 13738 ;;Total ram usage:        1 bytes
 13739 ;; Hardware stack levels used: 1
 13740 ;; Hardware stack levels required when called: 4
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_I2C_DO_SEND_ADR_READ
 13745 ;;		_I2C_DO_SEND_ADR_WRITE
 13746 ;;		_I2C_DO_TX
 13747 ;; This function uses a non-reentrant model
 13748 ;;
 13749                           
 13750  1AD8                     _I2C_MasterSendTxData:	
 13751                           ;psect for function _I2C_MasterSendTxData
 13752                           
 13753                           
 13754                           ;incstack = 0
 13755                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 13756                           ;I2C_MasterSendTxData@data stored from wreg
 13757  1AD8  0020               	movlb	0	; select bank0
 13758  1AD9  00AA               	movwf	I2C_MasterSendTxData@data
 13759  1ADA                     l3709:
 13760                           
 13761                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
 13762  1ADA  082A               	movf	I2C_MasterSendTxData@data,w
 13763  1ADB  0024               	movlb	4	; select bank4
 13764  1ADC  0091               	movwf	17	;volatile
 13765  1ADD                     l477:
 13766  1ADD  0008               	return
 13767  1ADE                     __end_of_I2C_MasterSendTxData:
 13768                           
 13769                           	psect	text60
 13770  1A99                     __ptext60:	
 13771 ;; *************** function _I2C_MasterSendAck *****************
 13772 ;; Defined at:
 13773 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;		None
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;		None
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      void 
 13780 ;; Registers used:
 13781 ;;		None
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13787 ;;      Params:         0       0       0       0       0       0       0       0
 13788 ;;      Locals:         0       0       0       0       0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0
 13790 ;;      Totals:         0       0       0       0       0       0       0       0
 13791 ;;Total ram usage:        0 bytes
 13792 ;; Hardware stack levels used: 1
 13793 ;; Hardware stack levels required when called: 4
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_I2C_DO_RX
 13798 ;;		_I2C_DO_RX_ACK
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802  1A99                     _I2C_MasterSendAck:	
 13803                           ;psect for function _I2C_MasterSendAck
 13804                           
 13805  1A99                     l3733:	
 13806                           ;incstack = 0
 13807                           ; Regs used in _I2C_MasterSendAck: []
 13808                           
 13809                           
 13810                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 13811  1A99  0024               	movlb	4	; select bank4
 13812  1A9A  1296               	bcf	22,5	;volatile
 13813                           
 13814                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 13815  1A9B  1616               	bsf	22,4	;volatile
 13816  1A9C                     l498:
 13817  1A9C  0008               	return
 13818  1A9D                     __end_of_I2C_MasterSendAck:
 13819                           
 13820                           	psect	text61
 13821  1A8F                     __ptext61:	
 13822 ;; *************** function _I2C_MasterGetRxData *****************
 13823 ;; Defined at:
 13824 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;		None
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;		None
 13829 ;; Return value:  Size  Location     Type
 13830 ;;                  1    wreg      unsigned char 
 13831 ;; Registers used:
 13832 ;;		wreg
 13833 ;; Tracked objects:
 13834 ;;		On entry : 0/0
 13835 ;;		On exit  : 0/0
 13836 ;;		Unchanged: 0/0
 13837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13838 ;;      Params:         0       0       0       0       0       0       0       0
 13839 ;;      Locals:         0       0       0       0       0       0       0       0
 13840 ;;      Temps:          0       0       0       0       0       0       0       0
 13841 ;;      Totals:         0       0       0       0       0       0       0       0
 13842 ;;Total ram usage:        0 bytes
 13843 ;; Hardware stack levels used: 1
 13844 ;; Hardware stack levels required when called: 4
 13845 ;; This function calls:
 13846 ;;		Nothing
 13847 ;; This function is called by:
 13848 ;;		_I2C_DO_RX
 13849 ;; This function uses a non-reentrant model
 13850 ;;
 13851                           
 13852  1A8F                     _I2C_MasterGetRxData:	
 13853                           ;psect for function _I2C_MasterGetRxData
 13854                           
 13855  1A8F                     l3729:	
 13856                           ;incstack = 0
 13857                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 13858                           
 13859                           
 13860                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
 13861  1A8F  0024               	movlb	4	; select bank4
 13862  1A90  0811               	movf	17,w	;volatile
 13863  1A91                     l474:
 13864  1A91  0008               	return
 13865  1A92                     __end_of_I2C_MasterGetRxData:
 13866                           
 13867                           	psect	text62
 13868  1A95                     __ptext62:	
 13869 ;; *************** function _I2C_MasterSendNack *****************
 13870 ;; Defined at:
 13871 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 13872 ;; Parameters:    Size  Location     Type
 13873 ;;		None
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;		None
 13876 ;; Return value:  Size  Location     Type
 13877 ;;                  1    wreg      void 
 13878 ;; Registers used:
 13879 ;;		None
 13880 ;; Tracked objects:
 13881 ;;		On entry : 0/0
 13882 ;;		On exit  : 0/0
 13883 ;;		Unchanged: 0/0
 13884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13885 ;;      Params:         0       0       0       0       0       0       0       0
 13886 ;;      Locals:         0       0       0       0       0       0       0       0
 13887 ;;      Temps:          0       0       0       0       0       0       0       0
 13888 ;;      Totals:         0       0       0       0       0       0       0       0
 13889 ;;Total ram usage:        0 bytes
 13890 ;; Hardware stack levels used: 1
 13891 ;; Hardware stack levels required when called: 4
 13892 ;; This function calls:
 13893 ;;		Nothing
 13894 ;; This function is called by:
 13895 ;;		_I2C_DO_RX_NACK_STOP
 13896 ;;		_I2C_DO_RX_NACK_RESTART
 13897 ;; This function uses a non-reentrant model
 13898 ;;
 13899                           
 13900  1A95                     _I2C_MasterSendNack:	
 13901                           ;psect for function _I2C_MasterSendNack
 13902                           
 13903  1A95                     l3665:	
 13904                           ;incstack = 0
 13905                           ; Regs used in _I2C_MasterSendNack: []
 13906                           
 13907                           
 13908                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 13909  1A95  0024               	movlb	4	; select bank4
 13910  1A96  1696               	bsf	22,5	;volatile
 13911                           
 13912                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 13913  1A97  1616               	bsf	22,4	;volatile
 13914  1A98                     l501:
 13915  1A98  0008               	return
 13916  1A99                     __end_of_I2C_MasterSendNack:
 13917                           
 13918                           	psect	text63
 13919  1A8C                     __ptext63:	
 13920 ;; *************** function _I2C_MasterStartRx *****************
 13921 ;; Defined at:
 13922 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		None
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13936 ;;      Params:         0       0       0       0       0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used: 1
 13942 ;; Hardware stack levels required when called: 4
 13943 ;; This function calls:
 13944 ;;		Nothing
 13945 ;; This function is called by:
 13946 ;;		_I2C_DO_RCEN
 13947 ;; This function uses a non-reentrant model
 13948 ;;
 13949                           
 13950  1A8C                     _I2C_MasterStartRx:	
 13951                           ;psect for function _I2C_MasterStartRx
 13952                           
 13953  1A8C                     l3747:	
 13954                           ;incstack = 0
 13955                           ; Regs used in _I2C_MasterStartRx: []
 13956                           
 13957                           
 13958                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
 13959  1A8C  0024               	movlb	4	; select bank4
 13960  1A8D  1596               	bsf	22,3	;volatile
 13961  1A8E                     l486:
 13962  1A8E  0008               	return
 13963  1A8F                     __end_of_I2C_MasterStartRx:
 13964                           
 13965                           	psect	text64
 13966  0002                     __ptext64:	
 13967 ;; *************** function _I2C_CallbackReturnReset *****************
 13968 ;; Defined at:
 13969 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  funPtr          1   19[BANK0 ] PTR void 
 13972 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 13973 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 13974 ;; Auto vars:     Size  Location     Type
 13975 ;;		None
 13976 ;; Return value:  Size  Location     Type
 13977 ;;                  1    wreg      enum E360
 13978 ;; Registers used:
 13979 ;;		wreg
 13980 ;; Tracked objects:
 13981 ;;		On entry : 0/0
 13982 ;;		On exit  : 0/0
 13983 ;;		Unchanged: 0/0
 13984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13985 ;;      Params:         0       1       0       0       0       0       0       0
 13986 ;;      Locals:         0       0       0       0       0       0       0       0
 13987 ;;      Temps:          0       0       0       0       0       0       0       0
 13988 ;;      Totals:         0       1       0       0       0       0       0       0
 13989 ;;Total ram usage:        1 bytes
 13990 ;; Hardware stack levels used: 1
 13991 ;; Hardware stack levels required when called: 4
 13992 ;; This function calls:
 13993 ;;		Nothing
 13994 ;; This function is called by:
 13995 ;;		_I2C_Open
 13996 ;;		_I2C_DO_TX
 13997 ;;		_I2C_DO_RX
 13998 ;;		_I2C_DO_TX_EMPTY
 13999 ;;		_I2C_DO_ADDRESS_NACK
 14000 ;;		_I2C_DO_RX_EMPTY
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004  0002                     _I2C_CallbackReturnReset:	
 14005                           ;psect for function _I2C_CallbackReturnReset
 14006                           
 14007  0002                     l3761:	
 14008                           ;incstack = 0
 14009                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 14010                           
 14011                           
 14012                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 14013  0002  3005               	movlw	5
 14014  0003                     l458:
 14015  0003  0008               	return
 14016  0004                     __end_of_I2C_CallbackReturnReset:
 14017                           
 14018                           	psect	text65
 14019  1A78                     __ptext65:	
 14020 ;; *************** function _I2C_CallbackReturnStop *****************
 14021 ;; Defined at:
 14022 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  funPtr          1   19[BANK0 ] PTR void 
 14025 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14026 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;		None
 14029 ;; Return value:  Size  Location     Type
 14030 ;;                  1    wreg      enum E360
 14031 ;; Registers used:
 14032 ;;		wreg
 14033 ;; Tracked objects:
 14034 ;;		On entry : 0/0
 14035 ;;		On exit  : 0/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14038 ;;      Params:         0       1       0       0       0       0       0       0
 14039 ;;      Locals:         0       0       0       0       0       0       0       0
 14040 ;;      Temps:          0       0       0       0       0       0       0       0
 14041 ;;      Totals:         0       1       0       0       0       0       0       0
 14042 ;;Total ram usage:        1 bytes
 14043 ;; Hardware stack levels used: 1
 14044 ;; Hardware stack levels required when called: 4
 14045 ;; This function calls:
 14046 ;;		Nothing
 14047 ;; This function is called by:
 14048 ;;		_I2C_Open
 14049 ;;		_I2C_SetCallback
 14050 ;;		_I2C_DO_TX
 14051 ;;		_I2C_DO_RX
 14052 ;;		_I2C_DO_TX_EMPTY
 14053 ;;		_I2C_DO_ADDRESS_NACK
 14054 ;;		_I2C_DO_RX_EMPTY
 14055 ;; This function uses a non-reentrant model
 14056 ;;
 14057                           
 14058  1A78                     _I2C_CallbackReturnStop:	
 14059                           ;psect for function _I2C_CallbackReturnStop
 14060                           
 14061  1A78                     l3757:	
 14062                           ;incstack = 0
 14063                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 14064                           
 14065                           
 14066                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 14067  1A78  3001               	movlw	1
 14068  1A79                     l455:
 14069  1A79  0008               	return
 14070  1A7A                     __end_of_I2C_CallbackReturnStop:
 14071                           
 14072                           	psect	text66
 14073  1CAB                     __ptext66:	
 14074 ;; *************** function _rdBlkRegCompleteHandler *****************
 14075 ;; Defined at:
 14076 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;  ptr             1   19[BANK0 ] PTR void 
 14079 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14080 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      enum E360
 14085 ;; Registers used:
 14086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14092 ;;      Params:         0       1       0       0       0       0       0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0       0
 14095 ;;      Totals:         0       1       0       0       0       0       0       0
 14096 ;;Total ram usage:        1 bytes
 14097 ;; Hardware stack levels used: 1
 14098 ;; Hardware stack levels required when called: 6
 14099 ;; This function calls:
 14100 ;;		_I2C_SetBuffer
 14101 ;;		_I2C_SetDataCompleteCallback
 14102 ;; This function is called by:
 14103 ;;		_I2C_ReadDataBlock
 14104 ;;		_I2C_DO_TX
 14105 ;;		_I2C_DO_RX
 14106 ;;		_I2C_DO_TX_EMPTY
 14107 ;;		_I2C_DO_ADDRESS_NACK
 14108 ;;		_I2C_DO_RX_EMPTY
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112  1CAB                     _rdBlkRegCompleteHandler:	
 14113                           ;psect for function _rdBlkRegCompleteHandler
 14114                           
 14115  1CAB                     l3699:	
 14116                           ;incstack = 0
 14117                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14118                           
 14119                           
 14120                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14121  1CAB  0020               	movlb	0	; select bank0
 14122  1CAC  0833               	movf	rdBlkRegCompleteHandler@ptr,w
 14123  1CAD  0086               	movwf	6
 14124  1CAE  0187               	clrf	7
 14125  1CAF  3F40               	moviw [0]fsr1
 14126  1CB0  00AA               	movwf	I2C_SetBuffer@bufferSize
 14127  1CB1  3F41               	moviw [1]fsr1
 14128  1CB2  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 14129  1CB3  0833               	movf	rdBlkRegCompleteHandler@ptr,w
 14130  1CB4  3E02               	addlw	2
 14131  1CB5  0086               	movwf	6
 14132  1CB6  0187               	clrf	7
 14133  1CB7  0801               	movf	1,w
 14134  1CB8  319C  2462  319C   	fcall	_I2C_SetBuffer
 14135                           
 14136                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14137  1CBB  3000               	movlw	0
 14138  1CBC  0020               	movlb	0	; select bank0
 14139  1CBD  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 14140  1CBE  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 14141  1CBF  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 14142  1CC0  319B  2399  319C   	fcall	_I2C_SetDataCompleteCallback
 14143  1CC3                     l3701:
 14144                           
 14145                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14146  1CC3  3002               	movlw	2
 14147  1CC4                     l102:
 14148  1CC4  0008               	return
 14149  1CC5                     __end_of_rdBlkRegCompleteHandler:
 14150                           
 14151                           	psect	text67
 14152  1C0E                     __ptext67:	
 14153 ;; *************** function _wr1RegCompleteHandler *****************
 14154 ;; Defined at:
 14155 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;  ptr             1   19[BANK0 ] PTR void 
 14158 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14159 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;		None
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  1    wreg      enum E360
 14164 ;; Registers used:
 14165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14171 ;;      Params:         0       1       0       0       0       0       0       0
 14172 ;;      Locals:         0       0       0       0       0       0       0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0
 14174 ;;      Totals:         0       1       0       0       0       0       0       0
 14175 ;;Total ram usage:        1 bytes
 14176 ;; Hardware stack levels used: 1
 14177 ;; Hardware stack levels required when called: 6
 14178 ;; This function calls:
 14179 ;;		_I2C_SetBuffer
 14180 ;;		_I2C_SetDataCompleteCallback
 14181 ;; This function is called by:
 14182 ;;		_I2C_Write1ByteRegister
 14183 ;;		_I2C_DO_TX
 14184 ;;		_I2C_DO_RX
 14185 ;;		_I2C_DO_TX_EMPTY
 14186 ;;		_I2C_DO_ADDRESS_NACK
 14187 ;;		_I2C_DO_RX_EMPTY
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191  1C0E                     _wr1RegCompleteHandler:	
 14192                           ;psect for function _wr1RegCompleteHandler
 14193                           
 14194  1C0E                     l3683:	
 14195                           ;incstack = 0
 14196                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14197                           
 14198                           
 14199                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14200  1C0E  3001               	movlw	1
 14201  1C0F  0020               	movlb	0	; select bank0
 14202  1C10  00AA               	movwf	I2C_SetBuffer@bufferSize
 14203  1C11  3000               	movlw	0
 14204  1C12  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 14205  1C13  0833               	movf	wr1RegCompleteHandler@ptr,w
 14206  1C14  319C  2462  319C   	fcall	_I2C_SetBuffer
 14207  1C17                     l3685:
 14208                           
 14209                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14210  1C17  3000               	movlw	0
 14211  1C18  0020               	movlb	0	; select bank0
 14212  1C19  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 14213  1C1A  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 14214  1C1B  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 14215  1C1C  319B  2399  319C   	fcall	_I2C_SetDataCompleteCallback
 14216  1C1F                     l3687:
 14217                           
 14218                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14219  1C1F  3004               	movlw	4
 14220  1C20                     l96:
 14221  1C20  0008               	return
 14222  1C21                     __end_of_wr1RegCompleteHandler:
 14223                           
 14224                           	psect	text68
 14225  1BFB                     __ptext68:	
 14226 ;; *************** function _rd2RegCompleteHandler *****************
 14227 ;; Defined at:
 14228 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14229 ;; Parameters:    Size  Location     Type
 14230 ;;  ptr             1   19[BANK0 ] PTR void 
 14231 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14232 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;		None
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      enum E360
 14237 ;; Registers used:
 14238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14239 ;; Tracked objects:
 14240 ;;		On entry : 0/0
 14241 ;;		On exit  : 0/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14244 ;;      Params:         0       1       0       0       0       0       0       0
 14245 ;;      Locals:         0       0       0       0       0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0
 14247 ;;      Totals:         0       1       0       0       0       0       0       0
 14248 ;;Total ram usage:        1 bytes
 14249 ;; Hardware stack levels used: 1
 14250 ;; Hardware stack levels required when called: 6
 14251 ;; This function calls:
 14252 ;;		_I2C_SetBuffer
 14253 ;;		_I2C_SetDataCompleteCallback
 14254 ;; This function is called by:
 14255 ;;		_I2C_Read2ByteRegister
 14256 ;;		_I2C_DO_TX
 14257 ;;		_I2C_DO_RX
 14258 ;;		_I2C_DO_TX_EMPTY
 14259 ;;		_I2C_DO_ADDRESS_NACK
 14260 ;;		_I2C_DO_RX_EMPTY
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264  1BFB                     _rd2RegCompleteHandler:	
 14265                           ;psect for function _rd2RegCompleteHandler
 14266                           
 14267  1BFB                     l3675:	
 14268                           ;incstack = 0
 14269                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14270                           
 14271                           
 14272                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14273  1BFB  3002               	movlw	2
 14274  1BFC  0020               	movlb	0	; select bank0
 14275  1BFD  00AA               	movwf	I2C_SetBuffer@bufferSize
 14276  1BFE  3000               	movlw	0
 14277  1BFF  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 14278  1C00  0833               	movf	rd2RegCompleteHandler@ptr,w
 14279  1C01  319C  2462  319B   	fcall	_I2C_SetBuffer
 14280  1C04                     l3677:
 14281                           
 14282                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14283  1C04  3000               	movlw	0
 14284  1C05  0020               	movlb	0	; select bank0
 14285  1C06  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 14286  1C07  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 14287  1C08  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 14288  1C09  319B  2399  319B   	fcall	_I2C_SetDataCompleteCallback
 14289  1C0C                     l3679:
 14290                           
 14291                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14292  1C0C  3002               	movlw	2
 14293  1C0D                     l93:
 14294  1C0D  0008               	return
 14295  1C0E                     __end_of_rd2RegCompleteHandler:
 14296                           
 14297                           	psect	text69
 14298  1BE8                     __ptext69:	
 14299 ;; *************** function _rd1RegCompleteHandler *****************
 14300 ;; Defined at:
 14301 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  ptr             1   19[BANK0 ] PTR void 
 14304 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14305 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1    wreg      enum E360
 14310 ;; Registers used:
 14311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14317 ;;      Params:         0       1       0       0       0       0       0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0
 14320 ;;      Totals:         0       1       0       0       0       0       0       0
 14321 ;;Total ram usage:        1 bytes
 14322 ;; Hardware stack levels used: 1
 14323 ;; Hardware stack levels required when called: 6
 14324 ;; This function calls:
 14325 ;;		_I2C_SetBuffer
 14326 ;;		_I2C_SetDataCompleteCallback
 14327 ;; This function is called by:
 14328 ;;		_I2C_Read1ByteRegister
 14329 ;;		_I2C_DO_TX
 14330 ;;		_I2C_DO_RX
 14331 ;;		_I2C_DO_TX_EMPTY
 14332 ;;		_I2C_DO_ADDRESS_NACK
 14333 ;;		_I2C_DO_RX_EMPTY
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337  1BE8                     _rd1RegCompleteHandler:	
 14338                           ;psect for function _rd1RegCompleteHandler
 14339                           
 14340  1BE8                     l3667:	
 14341                           ;incstack = 0
 14342                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14343                           
 14344                           
 14345                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14346  1BE8  3001               	movlw	1
 14347  1BE9  0020               	movlb	0	; select bank0
 14348  1BEA  00AA               	movwf	I2C_SetBuffer@bufferSize
 14349  1BEB  3000               	movlw	0
 14350  1BEC  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 14351  1BED  0833               	movf	rd1RegCompleteHandler@ptr,w
 14352  1BEE  319C  2462  319B   	fcall	_I2C_SetBuffer
 14353  1BF1                     l3669:
 14354                           
 14355                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14356  1BF1  3000               	movlw	0
 14357  1BF2  0020               	movlb	0	; select bank0
 14358  1BF3  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 14359  1BF4  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 14360  1BF5  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 14361  1BF6  319B  2399  319B   	fcall	_I2C_SetDataCompleteCallback
 14362  1BF9                     l3671:
 14363                           
 14364                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14365  1BF9  3002               	movlw	2
 14366  1BFA                     l90:
 14367  1BFA  0008               	return
 14368  1BFB                     __end_of_rd1RegCompleteHandler:
 14369                           
 14370                           	psect	text70
 14371  1BD5                     __ptext70:	
 14372 ;; *************** function _wr2RegCompleteHandler *****************
 14373 ;; Defined at:
 14374 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14375 ;; Parameters:    Size  Location     Type
 14376 ;;  ptr             1   19[BANK0 ] PTR void 
 14377 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14378 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;		None
 14381 ;; Return value:  Size  Location     Type
 14382 ;;                  1    wreg      enum E360
 14383 ;; Registers used:
 14384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14390 ;;      Params:         0       1       0       0       0       0       0       0
 14391 ;;      Locals:         0       0       0       0       0       0       0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0
 14393 ;;      Totals:         0       1       0       0       0       0       0       0
 14394 ;;Total ram usage:        1 bytes
 14395 ;; Hardware stack levels used: 1
 14396 ;; Hardware stack levels required when called: 6
 14397 ;; This function calls:
 14398 ;;		_I2C_SetBuffer
 14399 ;;		_I2C_SetDataCompleteCallback
 14400 ;; This function is called by:
 14401 ;;		_I2C_Write2ByteRegister
 14402 ;;		_I2C_DO_TX
 14403 ;;		_I2C_DO_RX
 14404 ;;		_I2C_DO_TX_EMPTY
 14405 ;;		_I2C_DO_ADDRESS_NACK
 14406 ;;		_I2C_DO_RX_EMPTY
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410  1BD5                     _wr2RegCompleteHandler:	
 14411                           ;psect for function _wr2RegCompleteHandler
 14412                           
 14413  1BD5                     l3691:	
 14414                           ;incstack = 0
 14415                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14416                           
 14417                           
 14418                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 14419  1BD5  3002               	movlw	2
 14420  1BD6  0020               	movlb	0	; select bank0
 14421  1BD7  00AA               	movwf	I2C_SetBuffer@bufferSize
 14422  1BD8  3000               	movlw	0
 14423  1BD9  00AB               	movwf	I2C_SetBuffer@bufferSize+1
 14424  1BDA  0833               	movf	wr2RegCompleteHandler@ptr,w
 14425  1BDB  319C  2462  319B   	fcall	_I2C_SetBuffer
 14426  1BDE                     l3693:
 14427                           
 14428                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14429  1BDE  3000               	movlw	0
 14430  1BDF  0020               	movlb	0	; select bank0
 14431  1BE0  00AF               	movwf	I2C_SetDataCompleteCallback@cb
 14432  1BE1  00B0               	movwf	I2C_SetDataCompleteCallback@cb+1
 14433  1BE2  01B1               	clrf	I2C_SetDataCompleteCallback@ptr
 14434  1BE3  319B  2399  319B   	fcall	_I2C_SetDataCompleteCallback
 14435  1BE6                     l3695:
 14436                           
 14437                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 14438  1BE6  3004               	movlw	4
 14439  1BE7                     l99:
 14440  1BE7  0008               	return
 14441  1BE8                     __end_of_wr2RegCompleteHandler:
 14442                           
 14443                           	psect	text71
 14444  1B99                     __ptext71:	
 14445 ;; *************** function _I2C_SetDataCompleteCallback *****************
 14446 ;; Defined at:
 14447 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  cb              2   15[BANK0 ] PTR FTN(PTR void ,)enum 
 14450 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14451 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14452 ;;  ptr             1   17[BANK0 ] PTR void 
 14453 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14454 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;		None
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      void 
 14459 ;; Registers used:
 14460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14466 ;;      Params:         0       3       0       0       0       0       0       0
 14467 ;;      Locals:         0       0       0       0       0       0       0       0
 14468 ;;      Temps:          0       1       0       0       0       0       0       0
 14469 ;;      Totals:         0       4       0       0       0       0       0       0
 14470 ;;Total ram usage:        4 bytes
 14471 ;; Hardware stack levels used: 1
 14472 ;; Hardware stack levels required when called: 5
 14473 ;; This function calls:
 14474 ;;		_I2C_SetCallback
 14475 ;; This function is called by:
 14476 ;;		_rd1RegCompleteHandler
 14477 ;;		_rd2RegCompleteHandler
 14478 ;;		_wr1RegCompleteHandler
 14479 ;;		_wr2RegCompleteHandler
 14480 ;;		_rdBlkRegCompleteHandler
 14481 ;;		_I2C_Read1ByteRegister
 14482 ;;		_I2C_Read2ByteRegister
 14483 ;;		_I2C_Write1ByteRegister
 14484 ;;		_I2C_Write2ByteRegister
 14485 ;;		_I2C_ReadDataBlock
 14486 ;; This function uses a non-reentrant model
 14487 ;;
 14488                           
 14489  1B99                     _I2C_SetDataCompleteCallback:	
 14490                           ;psect for function _I2C_SetDataCompleteCallback
 14491                           
 14492  1B99                     l3653:	
 14493                           ;incstack = 0
 14494                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14495                           
 14496                           
 14497                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 14498  1B99  0020               	movlb	0	; select bank0
 14499  1B9A  0830               	movf	I2C_SetDataCompleteCallback@cb+1,w
 14500  1B9B  00AB               	movwf	I2C_SetCallback@cb+1
 14501  1B9C  082F               	movf	I2C_SetDataCompleteCallback@cb,w
 14502  1B9D  00AA               	movwf	I2C_SetCallback@cb
 14503  1B9E  0831               	movf	I2C_SetDataCompleteCallback@ptr,w
 14504  1B9F  00B2               	movwf	??_I2C_SetDataCompleteCallback
 14505  1BA0  0832               	movf	??_I2C_SetDataCompleteCallback,w
 14506  1BA1  00AC               	movwf	I2C_SetCallback@ptr
 14507  1BA2  3000               	movlw	0
 14508  1BA3  3187  27D3  319B   	fcall	_I2C_SetCallback
 14509  1BA6                     l329:
 14510  1BA6  0008               	return
 14511  1BA7                     __end_of_I2C_SetDataCompleteCallback:
 14512                           
 14513                           	psect	text72
 14514  07D3                     __ptext72:	
 14515 ;; *************** function _I2C_SetCallback *****************
 14516 ;; Defined at:
 14517 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  idx             1    wreg     enum E3903
 14520 ;;  cb              2   10[BANK0 ] PTR FTN(PTR void ,)enum 
 14521 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14522 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14523 ;;  ptr             1   12[BANK0 ] PTR void 
 14524 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14525 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  idx             1   14[BANK0 ] enum E3903
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14537 ;;      Params:         0       3       0       0       0       0       0       0
 14538 ;;      Locals:         0       1       0       0       0       0       0       0
 14539 ;;      Temps:          0       1       0       0       0       0       0       0
 14540 ;;      Totals:         0       5       0       0       0       0       0       0
 14541 ;;Total ram usage:        5 bytes
 14542 ;; Hardware stack levels used: 1
 14543 ;; Hardware stack levels required when called: 4
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_I2C_SetDataCompleteCallback
 14548 ;;		_I2C_SetAddressNackCallback
 14549 ;;		_I2C_SetWriteCollisionCallback
 14550 ;;		_I2C_SetDataNackCallback
 14551 ;;		_I2C_SetTimeoutCallback
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555  07D3                     _I2C_SetCallback:	
 14556                           ;psect for function _I2C_SetCallback
 14557                           
 14558                           
 14559                           ;incstack = 0
 14560                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 14561                           ;I2C_SetCallback@idx stored from wreg
 14562  07D3  0020               	movlb	0	; select bank0
 14563  07D4  00AE               	movwf	I2C_SetCallback@idx
 14564  07D5                     l3647:
 14565                           
 14566                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 14567  07D5  082A               	movf	I2C_SetCallback@cb,w
 14568  07D6  042B               	iorwf	I2C_SetCallback@cb+1,w
 14569  07D7  1903               	btfsc	3,2
 14570  07D8  2FDA               	goto	u2391
 14571  07D9  2FDB               	goto	u2390
 14572  07DA                     u2391:
 14573  07DA  2FEE               	goto	l3651
 14574  07DB                     u2390:
 14575  07DB                     l3649:
 14576                           
 14577                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 14578  07DB  352E               	lslf	I2C_SetCallback@idx,w
 14579  07DC  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 14580  07DD  0086               	movwf	6
 14581  07DE  3002               	movlw	2	; select bank4/5
 14582  07DF  0087               	movwf	7
 14583  07E0  082A               	movf	I2C_SetCallback@cb,w
 14584  07E1  3FC0               	movwi [0]fsr1
 14585  07E2  082B               	movf	I2C_SetCallback@cb+1,w
 14586  07E3  3FC1               	movwi [1]fsr1
 14587                           
 14588                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 14589  07E4  082C               	movf	I2C_SetCallback@ptr,w
 14590  07E5  00AD               	movwf	??_I2C_SetCallback
 14591  07E6  082E               	movf	I2C_SetCallback@idx,w
 14592  07E7  3E2C               	addlw	(low ((_I2C_Status| (0+512)+12)))& (0+255)
 14593  07E8  0086               	movwf	6
 14594  07E9  3002               	movlw	2	; select bank4/5
 14595  07EA  0087               	movwf	7
 14596  07EB  082D               	movf	??_I2C_SetCallback,w
 14597  07EC  0081               	movwf	1
 14598                           
 14599                           ;mcc_generated_files/i2c_master.c: 304:     }
 14600  07ED  2FFD               	goto	l346
 14601  07EE                     l3651:
 14602                           
 14603                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 14604  07EE  352E               	lslf	I2C_SetCallback@idx,w
 14605  07EF  3E20               	addlw	(low (_I2C_Status| (0+512)))& (0+255)
 14606  07F0  0086               	movwf	6
 14607  07F1  3002               	movlw	2	; select bank4/5
 14608  07F2  0087               	movwf	7
 14609  07F3  3078               	movlw	low _I2C_CallbackReturnStop
 14610  07F4  3FC0               	movwi [0]fsr1
 14611  07F5  301A               	movlw	high _I2C_CallbackReturnStop
 14612  07F6  3FC1               	movwi [1]fsr1
 14613                           
 14614                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 14615  07F7  082E               	movf	I2C_SetCallback@idx,w
 14616  07F8  3E2C               	addlw	(low ((_I2C_Status| (0+512)+12)))& (0+255)
 14617  07F9  0086               	movwf	6
 14618  07FA  3002               	movlw	2	; select bank4/5
 14619  07FB  0087               	movwf	7
 14620  07FC  0181               	clrf	1
 14621  07FD                     l346:
 14622  07FD  0008               	return
 14623  07FE                     __end_of_I2C_SetCallback:
 14624                           
 14625                           	psect	text73
 14626  1C62                     __ptext73:	
 14627 ;; *************** function _I2C_SetBuffer *****************
 14628 ;; Defined at:
 14629 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;  buffer          1    wreg     PTR void 
 14632 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 14633 ;;		 -> MCP3422_ReadVoltage@data(3), MCP3422_Write@data(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
 14634 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 14635 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 14636 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 14637 ;;  bufferSize      2   10[BANK0 ] unsigned int 
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;  buffer          1   13[BANK0 ] PTR void 
 14640 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 14641 ;;		 -> MCP3422_ReadVoltage@data(3), MCP3422_Write@data(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
 14642 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 14643 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 14644 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14654 ;;      Params:         0       2       0       0       0       0       0       0
 14655 ;;      Locals:         0       1       0       0       0       0       0       0
 14656 ;;      Temps:          0       1       0       0       0       0       0       0
 14657 ;;      Totals:         0       4       0       0       0       0       0       0
 14658 ;;Total ram usage:        4 bytes
 14659 ;; Hardware stack levels used: 1
 14660 ;; Hardware stack levels required when called: 4
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_I2C_WriteNBytes
 14665 ;;		_I2C_ReadNBytes
 14666 ;;		_rd1RegCompleteHandler
 14667 ;;		_rd2RegCompleteHandler
 14668 ;;		_wr1RegCompleteHandler
 14669 ;;		_wr2RegCompleteHandler
 14670 ;;		_rdBlkRegCompleteHandler
 14671 ;;		_I2C_Read1ByteRegister
 14672 ;;		_I2C_Read2ByteRegister
 14673 ;;		_I2C_Write1ByteRegister
 14674 ;;		_I2C_Write2ByteRegister
 14675 ;;		_I2C_ReadDataBlock
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679  1C62                     _I2C_SetBuffer:	
 14680                           ;psect for function _I2C_SetBuffer
 14681                           
 14682                           
 14683                           ;incstack = 0
 14684                           ; Regs used in _I2C_SetBuffer: [wreg]
 14685                           ;I2C_SetBuffer@buffer stored from wreg
 14686  1C62  0020               	movlb	0	; select bank0
 14687  1C63  00AD               	movwf	I2C_SetBuffer@buffer
 14688  1C64                     l3655:
 14689                           
 14690                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 14691  1C64  0024               	movlb	4	; select bank4
 14692  1C65  1DBC               	btfss	(_I2C_Status^(0+512)+28),3
 14693  1C66  2C68               	goto	u2401
 14694  1C67  2C69               	goto	u2400
 14695  1C68                     u2401:
 14696  1C68  2C78               	goto	l326
 14697  1C69                     u2400:
 14698  1C69                     l3657:
 14699                           
 14700                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 14701  1C69  0020               	movlb	0	; select bank0
 14702  1C6A  082D               	movf	I2C_SetBuffer@buffer,w
 14703  1C6B  00AC               	movwf	??_I2C_SetBuffer
 14704  1C6C  082C               	movf	??_I2C_SetBuffer,w
 14705  1C6D  0024               	movlb	4	; select bank4
 14706  1C6E  00B7               	movwf	(low ((_I2C_Status| (0+512)+23)))^0
 14707                           
 14708                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 14709  1C6F  0020               	movlb	0	; select bank0
 14710  1C70  082B               	movf	I2C_SetBuffer@bufferSize+1,w
 14711  1C71  0024               	movlb	4	; select bank4
 14712  1C72  00B9               	movwf	((_I2C_Status+1)^(0+512)+24)
 14713  1C73  0020               	movlb	0	; select bank0
 14714  1C74  082A               	movf	I2C_SetBuffer@bufferSize,w
 14715  1C75  0024               	movlb	4	; select bank4
 14716  1C76  00B8               	movwf	(_I2C_Status^(0+512)+24)
 14717  1C77                     l3659:
 14718                           
 14719                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 14720  1C77  11BC               	bcf	(_I2C_Status^(0+512)+28),3
 14721  1C78                     l326:
 14722  1C78  0008               	return
 14723  1C79                     __end_of_I2C_SetBuffer:
 14724                           
 14725                           	psect	text74
 14726  1A89                     __ptext74:	
 14727 ;; *************** function _I2C_MasterStop *****************
 14728 ;; Defined at:
 14729 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;		None
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;		None
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  1    wreg      void 
 14736 ;; Registers used:
 14737 ;;		None
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14743 ;;      Params:         0       0       0       0       0       0       0       0
 14744 ;;      Locals:         0       0       0       0       0       0       0       0
 14745 ;;      Temps:          0       0       0       0       0       0       0       0
 14746 ;;      Totals:         0       0       0       0       0       0       0       0
 14747 ;;Total ram usage:        0 bytes
 14748 ;; Hardware stack levels used: 1
 14749 ;; Hardware stack levels required when called: 4
 14750 ;; This function calls:
 14751 ;;		Nothing
 14752 ;; This function is called by:
 14753 ;;		_I2C_DO_SEND_STOP
 14754 ;; This function uses a non-reentrant model
 14755 ;;
 14756                           
 14757  1A89                     _I2C_MasterStop:	
 14758                           ;psect for function _I2C_MasterStop
 14759                           
 14760  1A89                     l3663:	
 14761                           ;incstack = 0
 14762                           ; Regs used in _I2C_MasterStop: []
 14763                           
 14764                           
 14765                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
 14766  1A89  0024               	movlb	4	; select bank4
 14767  1A8A  1516               	bsf	22,2	;volatile
 14768  1A8B                     l492:
 14769  1A8B  0008               	return
 14770  1A8C                     __end_of_I2C_MasterStop:
 14771                           
 14772                           	psect	text75
 14773  1A86                     __ptext75:	
 14774 ;; *************** function _I2C_MasterEnableRestart *****************
 14775 ;; Defined at:
 14776 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 14777 ;; Parameters:    Size  Location     Type
 14778 ;;		None
 14779 ;; Auto vars:     Size  Location     Type
 14780 ;;		None
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		None
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14790 ;;      Params:         0       0       0       0       0       0       0       0
 14791 ;;      Locals:         0       0       0       0       0       0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0
 14793 ;;      Totals:         0       0       0       0       0       0       0       0
 14794 ;;Total ram usage:        0 bytes
 14795 ;; Hardware stack levels used: 1
 14796 ;; Hardware stack levels required when called: 4
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_I2C_DO_SEND_RESTART_READ
 14801 ;;		_I2C_DO_SEND_RESTART_WRITE
 14802 ;;		_I2C_DO_SEND_RESTART
 14803 ;;		_I2C_DO_RX_EMPTY
 14804 ;; This function uses a non-reentrant model
 14805 ;;
 14806                           
 14807  1A86                     _I2C_MasterEnableRestart:	
 14808                           ;psect for function _I2C_MasterEnableRestart
 14809                           
 14810  1A86                     l3661:	
 14811                           ;incstack = 0
 14812                           ; Regs used in _I2C_MasterEnableRestart: []
 14813                           
 14814                           
 14815                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
 14816  1A86  0024               	movlb	4	; select bank4
 14817  1A87  1496               	bsf	22,1	;volatile
 14818  1A88                     l480:
 14819  1A88  0008               	return
 14820  1A89                     __end_of_I2C_MasterEnableRestart:
 14821                           
 14822                           	psect	text76
 14823  1A83                     __ptext76:	
 14824 ;; *************** function _I2C_MasterStart *****************
 14825 ;; Defined at:
 14826 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      void 
 14833 ;; Registers used:
 14834 ;;		None
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14840 ;;      Params:         0       0       0       0       0       0       0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0
 14842 ;;      Temps:          0       0       0       0       0       0       0       0
 14843 ;;      Totals:         0       0       0       0       0       0       0       0
 14844 ;;Total ram usage:        0 bytes
 14845 ;; Hardware stack levels used: 1
 14846 ;; Hardware stack levels required when called: 4
 14847 ;; This function calls:
 14848 ;;		Nothing
 14849 ;; This function is called by:
 14850 ;;		_I2C_MasterOperation
 14851 ;; This function uses a non-reentrant model
 14852 ;;
 14853                           
 14854  1A83                     _I2C_MasterStart:	
 14855                           ;psect for function _I2C_MasterStart
 14856                           
 14857  1A83                     l3933:	
 14858                           ;incstack = 0
 14859                           ; Regs used in _I2C_MasterStart: []
 14860                           
 14861                           
 14862                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
 14863  1A83  0024               	movlb	4	; select bank4
 14864  1A84  1416               	bsf	22,0	;volatile
 14865  1A85                     l489:
 14866  1A85  0008               	return
 14867  1A86                     __end_of_I2C_MasterStart:
 14868                           
 14869                           	psect	text77
 14870  1D05                     __ptext77:	
 14871 ;; *************** function _I2C_Close *****************
 14872 ;; Defined at:
 14873 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 14874 ;; Parameters:    Size  Location     Type
 14875 ;;		None
 14876 ;; Auto vars:     Size  Location     Type
 14877 ;;  returnValue     1   11[BANK0 ] enum E355
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  1    wreg      enum E355
 14880 ;; Registers used:
 14881 ;;		wreg, status,2, status,0, pclath, cstack
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14887 ;;      Params:         0       0       0       0       0       0       0       0
 14888 ;;      Locals:         0       1       0       0       0       0       0       0
 14889 ;;      Temps:          0       1       0       0       0       0       0       0
 14890 ;;      Totals:         0       2       0       0       0       0       0       0
 14891 ;;Total ram usage:        2 bytes
 14892 ;; Hardware stack levels used: 1
 14893 ;; Hardware stack levels required when called: 5
 14894 ;; This function calls:
 14895 ;;		_I2C_MasterClearIrq
 14896 ;;		_I2C_MasterClose
 14897 ;;		_I2C_MasterDisableIrq
 14898 ;; This function is called by:
 14899 ;;		_I2C_WriteNBytes
 14900 ;;		_I2C_ReadNBytes
 14901 ;;		_I2C_Read1ByteRegister
 14902 ;;		_I2C_Read2ByteRegister
 14903 ;;		_I2C_Write1ByteRegister
 14904 ;;		_I2C_Write2ByteRegister
 14905 ;;		_I2C_ReadDataBlock
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909  1D05                     _I2C_Close:	
 14910                           ;psect for function _I2C_Close
 14911                           
 14912  1D05                     l4017:	
 14913                           ;incstack = 0
 14914                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
 14915                           
 14916                           
 14917                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 14918  1D05  0020               	movlb	0	; select bank0
 14919  1D06  01AB               	clrf	I2C_Close@returnValue
 14920  1D07  0AAB               	incf	I2C_Close@returnValue,f
 14921                           
 14922                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 14923  1D08  0024               	movlb	4	; select bank4
 14924  1D09  18BC               	btfsc	(_I2C_Status^(0+512)+28),1
 14925  1D0A  2D0C               	goto	u2521
 14926  1D0B  2D0D               	goto	u2520
 14927  1D0C                     u2521:
 14928  1D0C  2D23               	goto	l4031
 14929  1D0D                     u2520:
 14930  1D0D                     l4019:
 14931                           
 14932                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 14933  1D0D  113C               	bcf	(_I2C_Status^(0+512)+28),2
 14934  1D0E                     l4021:
 14935                           
 14936                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 14937  1D0E  30FF               	movlw	255
 14938  1D0F  0020               	movlb	0	; select bank0
 14939  1D10  00AA               	movwf	??_I2C_Close
 14940  1D11  082A               	movf	??_I2C_Close,w
 14941  1D12  0024               	movlb	4	; select bank4
 14942  1D13  00B6               	movwf	(_I2C_Status^(0+512)+22)
 14943  1D14                     l4023:
 14944                           
 14945                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 14946  1D14  319A  227A  319D   	fcall	_I2C_MasterClearIrq
 14947  1D17                     l4025:
 14948                           
 14949                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 14950  1D17  319A  2280  319D   	fcall	_I2C_MasterDisableIrq
 14951  1D1A                     l4027:
 14952                           
 14953                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 14954  1D1A  319A  227D  319D   	fcall	_I2C_MasterClose
 14955  1D1D                     l4029:
 14956                           
 14957                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 14958  1D1D  0024               	movlb	4	; select bank4
 14959  1D1E  083B               	movf	(_I2C_Status^(0+512)+27),w
 14960  1D1F  0020               	movlb	0	; select bank0
 14961  1D20  00AA               	movwf	??_I2C_Close
 14962  1D21  082A               	movf	??_I2C_Close,w
 14963  1D22  00AB               	movwf	I2C_Close@returnValue
 14964  1D23                     l4031:
 14965                           
 14966                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 14967  1D23  0020               	movlb	0	; select bank0
 14968  1D24  082B               	movf	I2C_Close@returnValue,w
 14969  1D25                     l307:
 14970  1D25  0008               	return
 14971  1D26                     __end_of_I2C_Close:
 14972                           
 14973                           	psect	text78
 14974  1A80                     __ptext78:	
 14975 ;; *************** function _I2C_MasterDisableIrq *****************
 14976 ;; Defined at:
 14977 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;		None
 14980 ;; Auto vars:     Size  Location     Type
 14981 ;;		None
 14982 ;; Return value:  Size  Location     Type
 14983 ;;                  1    wreg      void 
 14984 ;; Registers used:
 14985 ;;		None
 14986 ;; Tracked objects:
 14987 ;;		On entry : 0/0
 14988 ;;		On exit  : 0/0
 14989 ;;		Unchanged: 0/0
 14990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14991 ;;      Params:         0       0       0       0       0       0       0       0
 14992 ;;      Locals:         0       0       0       0       0       0       0       0
 14993 ;;      Temps:          0       0       0       0       0       0       0       0
 14994 ;;      Totals:         0       0       0       0       0       0       0       0
 14995 ;;Total ram usage:        0 bytes
 14996 ;; Hardware stack levels used: 1
 14997 ;; Hardware stack levels required when called: 4
 14998 ;; This function calls:
 14999 ;;		Nothing
 15000 ;; This function is called by:
 15001 ;;		_I2C_Close
 15002 ;;		_I2C_SetTimeOut
 15003 ;; This function uses a non-reentrant model
 15004 ;;
 15005                           
 15006  1A80                     _I2C_MasterDisableIrq:	
 15007                           ;psect for function _I2C_MasterDisableIrq
 15008                           
 15009  1A80                     l3955:	
 15010                           ;incstack = 0
 15011                           ; Regs used in _I2C_MasterDisableIrq: []
 15012                           
 15013                           
 15014                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
 15015  1A80  0021               	movlb	1	; select bank1
 15016  1A81  1191               	bcf	17,3	;volatile
 15017  1A82                     l516:
 15018  1A82  0008               	return
 15019  1A83                     __end_of_I2C_MasterDisableIrq:
 15020                           
 15021                           	psect	text79
 15022  1A7D                     __ptext79:	
 15023 ;; *************** function _I2C_MasterClose *****************
 15024 ;; Defined at:
 15025 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;		None
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;		None
 15030 ;; Return value:  Size  Location     Type
 15031 ;;                  1    wreg      void 
 15032 ;; Registers used:
 15033 ;;		None
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15039 ;;      Params:         0       0       0       0       0       0       0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0
 15042 ;;      Totals:         0       0       0       0       0       0       0       0
 15043 ;;Total ram usage:        0 bytes
 15044 ;; Hardware stack levels used: 1
 15045 ;; Hardware stack levels required when called: 4
 15046 ;; This function calls:
 15047 ;;		Nothing
 15048 ;; This function is called by:
 15049 ;;		_I2C_Close
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053  1A7D                     _I2C_MasterClose:	
 15054                           ;psect for function _I2C_MasterClose
 15055                           
 15056  1A7D                     l3957:	
 15057                           ;incstack = 0
 15058                           ; Regs used in _I2C_MasterClose: []
 15059                           
 15060                           
 15061                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 15062  1A7D  0024               	movlb	4	; select bank4
 15063  1A7E  1295               	bcf	21,5	;volatile
 15064  1A7F                     l471:
 15065  1A7F  0008               	return
 15066  1A80                     __end_of_I2C_MasterClose:
 15067                           
 15068                           	psect	text80
 15069  1A7A                     __ptext80:	
 15070 ;; *************** function _I2C_MasterClearIrq *****************
 15071 ;; Defined at:
 15072 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 15073 ;; Parameters:    Size  Location     Type
 15074 ;;		None
 15075 ;; Auto vars:     Size  Location     Type
 15076 ;;		None
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  1    wreg      void 
 15079 ;; Registers used:
 15080 ;;		None
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15086 ;;      Params:         0       0       0       0       0       0       0       0
 15087 ;;      Locals:         0       0       0       0       0       0       0       0
 15088 ;;      Temps:          0       0       0       0       0       0       0       0
 15089 ;;      Totals:         0       0       0       0       0       0       0       0
 15090 ;;Total ram usage:        0 bytes
 15091 ;; Hardware stack levels used: 1
 15092 ;; Hardware stack levels required when called: 4
 15093 ;; This function calls:
 15094 ;;		Nothing
 15095 ;; This function is called by:
 15096 ;;		_I2C_Open
 15097 ;;		_I2C_Close
 15098 ;;		_I2C_MasterFsm
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102  1A7A                     _I2C_MasterClearIrq:	
 15103                           ;psect for function _I2C_MasterClearIrq
 15104                           
 15105  1A7A                     l3765:	
 15106                           ;incstack = 0
 15107                           ; Regs used in _I2C_MasterClearIrq: []
 15108                           
 15109                           
 15110                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
 15111  1A7A  0020               	movlb	0	; select bank0
 15112  1A7B  1191               	bcf	17,3	;volatile
 15113  1A7C                     l519:
 15114  1A7C  0008               	return
 15115  1A7D                     __end_of_I2C_MasterClearIrq:
 15116                           
 15117                           	psect	text81
 15118  1C21                     __ptext81:	
 15119 ;; *************** function _InitModbusSlave *****************
 15120 ;; Defined at:
 15121 ;;		line 17 in file "modbus_slave.c"
 15122 ;; Parameters:    Size  Location     Type
 15123 ;;  u8SlaveId       1    wreg     unsigned char 
 15124 ;; Auto vars:     Size  Location     Type
 15125 ;;  u8SlaveId       1   11[BANK0 ] unsigned char 
 15126 ;; Return value:  Size  Location     Type
 15127 ;;                  1    wreg      void 
 15128 ;; Registers used:
 15129 ;;		wreg, status,2
 15130 ;; Tracked objects:
 15131 ;;		On entry : 0/0
 15132 ;;		On exit  : 0/0
 15133 ;;		Unchanged: 0/0
 15134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15135 ;;      Params:         0       0       0       0       0       0       0       0
 15136 ;;      Locals:         0       1       0       0       0       0       0       0
 15137 ;;      Temps:          0       1       0       0       0       0       0       0
 15138 ;;      Totals:         0       2       0       0       0       0       0       0
 15139 ;;Total ram usage:        2 bytes
 15140 ;; Hardware stack levels used: 1
 15141 ;; Hardware stack levels required when called: 4
 15142 ;; This function calls:
 15143 ;;		Nothing
 15144 ;; This function is called by:
 15145 ;;		_main
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149  1C21                     _InitModbusSlave:	
 15150                           ;psect for function _InitModbusSlave
 15151                           
 15152                           
 15153                           ;incstack = 0
 15154                           ; Regs used in _InitModbusSlave: [wreg+status,2]
 15155                           ;InitModbusSlave@u8SlaveId stored from wreg
 15156  1C21  0020               	movlb	0	; select bank0
 15157  1C22  00AB               	movwf	InitModbusSlave@u8SlaveId
 15158  1C23                     l5135:
 15159                           
 15160                           ;modbus_slave.c: 17: void InitModbusSlave(uint8_t u8SlaveId);modbus_slave.c: 18: {;modbu
      +                          s_slave.c: 19:     modbusSlaveData.flags.all = 0U;
 15161  1C23  0023               	movlb	3	; select bank3
 15162  1C24  01CA               	clrf	(_modbusSlaveData^(0+384)+42)	;volatile
 15163  1C25  01CB               	clrf	((_modbusSlaveData+1)^(0+384)+42)	;volatile
 15164  1C26                     l5137:
 15165                           
 15166                           ;modbus_slave.c: 21:     modbusSlaveData.address = u8SlaveId;
 15167  1C26  0020               	movlb	0	; select bank0
 15168  1C27  082B               	movf	InitModbusSlave@u8SlaveId,w
 15169  1C28  00AA               	movwf	??_InitModbusSlave
 15170  1C29  082A               	movf	??_InitModbusSlave,w
 15171  1C2A  0023               	movlb	3	; select bank3
 15172  1C2B  00CC               	movwf	(_modbusSlaveData^(0+384)+44)	;volatile
 15173  1C2C                     l5139:
 15174                           
 15175                           ;modbus_slave.c: 23:     modbusSlaveData.RxPointer = 0U;
 15176  1C2C  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 15177                           
 15178                           ;modbus_slave.c: 24:     modbusSlaveData.TotalRxValue = 8;
 15179  1C2D  3008               	movlw	8
 15180  1C2E  0020               	movlb	0	; select bank0
 15181  1C2F  00AA               	movwf	??_InitModbusSlave
 15182  1C30  082A               	movf	??_InitModbusSlave,w
 15183  1C31  0023               	movlb	3	; select bank3
 15184  1C32  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 15185  1C33                     l5141:
 15186  1C33  0022               	movlb	2	; select bank2
 15187  1C34  138E               	bcf	14,7	;volatile
 15188  1C35                     l933:
 15189  1C35  0008               	return
 15190  1C36                     __end_of_InitModbusSlave:
 15191                           
 15192                           	psect	text82
 15193  1068                     __ptext82:	
 15194 ;; *************** function _FLASH_WriteBlock *****************
 15195 ;; Defined at:
 15196 ;;		line 94 in file "mcc_generated_files/memory.c"
 15197 ;; Parameters:    Size  Location     Type
 15198 ;;  writeAddr       2   13[BANK0 ] unsigned short 
 15199 ;;  flashWordArr    1   15[BANK0 ] PTR unsigned short 
 15200 ;;		 -> main@u16CalBuffer(16), 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  blockStartAd    2   19[BANK0 ] unsigned short 
 15203 ;;  i               1   22[BANK0 ] unsigned char 
 15204 ;;  GIEBitValue     1   21[BANK0 ] unsigned char 
 15205 ;; Return value:  Size  Location     Type
 15206 ;;                  1    wreg      char 
 15207 ;; Registers used:
 15208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15209 ;; Tracked objects:
 15210 ;;		On entry : 0/0
 15211 ;;		On exit  : 0/0
 15212 ;;		Unchanged: 0/0
 15213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15214 ;;      Params:         0       3       0       0       0       0       0       0
 15215 ;;      Locals:         0       4       0       0       0       0       0       0
 15216 ;;      Temps:          0       3       0       0       0       0       0       0
 15217 ;;      Totals:         0      10       0       0       0       0       0       0
 15218 ;;Total ram usage:       10 bytes
 15219 ;; Hardware stack levels used: 1
 15220 ;; Hardware stack levels required when called: 5
 15221 ;; This function calls:
 15222 ;;		_FLASH_EraseBlock
 15223 ;; This function is called by:
 15224 ;;		_main
 15225 ;;		_FLASH_WriteWord
 15226 ;; This function uses a non-reentrant model
 15227 ;;
 15228                           
 15229  1068                     _FLASH_WriteBlock:	
 15230                           ;psect for function _FLASH_WriteBlock
 15231                           
 15232  1068                     l5057:	
 15233                           ;incstack = 0
 15234                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15235                           
 15236                           
 15237                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x2000 -1) ^ (32 -1)));
 15238  1068  30E0               	movlw	224
 15239  1069  0020               	movlb	0	; select bank0
 15240  106A  052D               	andwf	FLASH_WriteBlock@writeAddr,w
 15241  106B  00B3               	movwf	FLASH_WriteBlock@blockStartAddr
 15242  106C  301F               	movlw	31
 15243  106D  052E               	andwf	FLASH_WriteBlock@writeAddr+1,w
 15244  106E  00B4               	movwf	FLASH_WriteBlock@blockStartAddr+1
 15245  106F                     l5059:
 15246                           
 15247                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
 15248  106F  3000               	movlw	0
 15249  1070  1B8B               	btfsc	11,7	;volatile
 15250  1071  3001               	movlw	1
 15251  1072  00B5               	movwf	FLASH_WriteBlock@GIEBitValue
 15252  1073                     l5061:
 15253                           
 15254                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 101:    
      +                           if( writeAddr != blockStartAddr )
 15255  1073  0834               	movf	FLASH_WriteBlock@blockStartAddr+1,w
 15256  1074  062E               	xorwf	FLASH_WriteBlock@writeAddr+1,w
 15257  1075  1D03               	skipz
 15258  1076  2879               	goto	u4095
 15259  1077  0833               	movf	FLASH_WriteBlock@blockStartAddr,w
 15260  1078  062D               	xorwf	FLASH_WriteBlock@writeAddr,w
 15261  1079                     u4095:
 15262  1079  1903               	skipnz
 15263  107A  287C               	goto	u4091
 15264  107B  287D               	goto	u4090
 15265  107C                     u4091:
 15266  107C  287E               	goto	l810
 15267  107D                     u4090:
 15268  107D  28D5               	goto	l811
 15269  107E                     l810:	
 15270                           ;mcc_generated_files/memory.c: 104:     }
 15271                           
 15272                           
 15273                           ;mcc_generated_files/memory.c: 106:     INTCONbits.GIE = 0;
 15274  107E  138B               	bcf	11,7	;volatile
 15275  107F                     l5065:
 15276                           
 15277                           ;mcc_generated_files/memory.c: 109:     FLASH_EraseBlock(writeAddr);
 15278  107F  082E               	movf	FLASH_WriteBlock@writeAddr+1,w
 15279  1080  00AB               	movwf	FLASH_EraseBlock@startAddr+1
 15280  1081  082D               	movf	FLASH_WriteBlock@writeAddr,w
 15281  1082  00AA               	movwf	FLASH_EraseBlock@startAddr
 15282  1083  319C  24E5  3190   	fcall	_FLASH_EraseBlock
 15283  1086                     l5067:
 15284                           
 15285                           ;mcc_generated_files/memory.c: 112:     PMCON1bits.CFGS = 0;
 15286  1086  0023               	movlb	3	; select bank3
 15287  1087  1315               	bcf	21,6	;volatile
 15288  1088                     l5069:
 15289                           
 15290                           ;mcc_generated_files/memory.c: 113:     PMCON1bits.WREN = 1;
 15291  1088  1515               	bsf	21,2	;volatile
 15292  1089                     l5071:
 15293                           
 15294                           ;mcc_generated_files/memory.c: 114:     PMCON1bits.LWLO = 1;
 15295  1089  1695               	bsf	21,5	;volatile
 15296  108A                     l5073:
 15297                           
 15298                           ;mcc_generated_files/memory.c: 116:     for (i=0; i<32; i++)
 15299  108A  0020               	movlb	0	; select bank0
 15300  108B  01B6               	clrf	FLASH_WriteBlock@i
 15301  108C                     l5079:
 15302                           
 15303                           ;mcc_generated_files/memory.c: 117:     {;mcc_generated_files/memory.c: 119:         PMA
      +                          DRL = (writeAddr & 0xFF);
 15304  108C  082D               	movf	FLASH_WriteBlock@writeAddr,w
 15305  108D  0023               	movlb	3	; select bank3
 15306  108E  0091               	movwf	17	;volatile
 15307  108F                     l5081:
 15308                           
 15309                           ;mcc_generated_files/memory.c: 121:         PMADRH = ((writeAddr & 0xFF00) >> 8);
 15310  108F  0020               	movlb	0	; select bank0
 15311  1090  082E               	movf	FLASH_WriteBlock@writeAddr+1,w
 15312  1091  0023               	movlb	3	; select bank3
 15313  1092  0092               	movwf	18	;volatile
 15314  1093                     l5083:
 15315                           
 15316                           ;mcc_generated_files/memory.c: 124:         PMDATL = flashWordArray[i];
 15317  1093  0020               	movlb	0	; select bank0
 15318  1094  3536               	lslf	FLASH_WriteBlock@i,w
 15319  1095  072F               	addwf	FLASH_WriteBlock@flashWordArray,w
 15320  1096  00B0               	movwf	??_FLASH_WriteBlock
 15321  1097  0830               	movf	??_FLASH_WriteBlock,w
 15322  1098  0086               	movwf	6
 15323  1099  3001               	movlw	1	; select bank2/3
 15324  109A  0087               	movwf	7
 15325  109B  0801               	movf	1,w
 15326  109C  0023               	movlb	3	; select bank3
 15327  109D  0093               	movwf	19	;volatile
 15328  109E                     l5085:
 15329                           
 15330                           ;mcc_generated_files/memory.c: 125:         PMDATH = ((flashWordArray[i] & 0xFF00) >> 8)
      +                          ;
 15331  109E  0020               	movlb	0	; select bank0
 15332  109F  3536               	lslf	FLASH_WriteBlock@i,w
 15333  10A0  072F               	addwf	FLASH_WriteBlock@flashWordArray,w
 15334  10A1  00B0               	movwf	??_FLASH_WriteBlock
 15335  10A2  0830               	movf	??_FLASH_WriteBlock,w
 15336  10A3  0086               	movwf	6
 15337  10A4  3001               	movlw	1	; select bank2/3
 15338  10A5  0087               	movwf	7
 15339  10A6  3F40               	moviw [0]fsr1
 15340  10A7  00B1               	movwf	??_FLASH_WriteBlock+1
 15341  10A8  3F41               	moviw [1]fsr1
 15342  10A9  00B2               	movwf	??_FLASH_WriteBlock+2
 15343  10AA  0832               	movf	??_FLASH_WriteBlock+2,w
 15344  10AB  0023               	movlb	3	; select bank3
 15345  10AC  0094               	movwf	20	;volatile
 15346  10AD                     l5087:
 15347                           
 15348                           ;mcc_generated_files/memory.c: 127:         if(i == (32 -1))
 15349  10AD  301F               	movlw	31
 15350  10AE  0020               	movlb	0	; select bank0
 15351  10AF  0636               	xorwf	FLASH_WriteBlock@i,w
 15352  10B0  1D03               	btfss	3,2
 15353  10B1  28B3               	goto	u4101
 15354  10B2  28B4               	goto	u4100
 15355  10B3                     u4101:
 15356  10B3  28B6               	goto	l5091
 15357  10B4                     u4100:
 15358  10B4                     l5089:
 15359                           
 15360                           ;mcc_generated_files/memory.c: 128:         {;mcc_generated_files/memory.c: 130:        
      +                               PMCON1bits.LWLO = 0;
 15361  10B4  0023               	movlb	3	; select bank3
 15362  10B5  1295               	bcf	21,5	;volatile
 15363  10B6                     l5091:
 15364                           
 15365                           ;mcc_generated_files/memory.c: 133:         PMCON2 = 0x55;
 15366  10B6  3055               	movlw	85
 15367  10B7  0023               	movlb	3	; select bank3
 15368  10B8  0096               	movwf	22	;volsfr
 15369                           
 15370                           ;mcc_generated_files/memory.c: 134:         PMCON2 = 0xAA;
 15371  10B9  30AA               	movlw	170
 15372  10BA  0096               	movwf	22	;volsfr
 15373  10BB                     l5093:
 15374                           
 15375                           ;mcc_generated_files/memory.c: 135:         PMCON1bits.WR = 1;
 15376  10BB  1495               	bsf	21,1	;volatile
 15377  10BC                     l5095:
 15378                           
 15379                           ;mcc_generated_files/memory.c: 136:         __nop();
 15380  10BC  0000               	nop
 15381  10BD                     l5097:
 15382                           
 15383                           ;mcc_generated_files/memory.c: 137:         __nop();
 15384  10BD  0000               	nop
 15385                           
 15386                           ;mcc_generated_files/memory.c: 139:      writeAddr++;
 15387  10BE  3001               	movlw	1
 15388  10BF  0020               	movlb	0	; select bank0
 15389  10C0  07AD               	addwf	FLASH_WriteBlock@writeAddr,f
 15390  10C1  3000               	movlw	0
 15391  10C2  3DAE               	addwfc	FLASH_WriteBlock@writeAddr+1,f
 15392  10C3                     l5099:
 15393                           
 15394                           ;mcc_generated_files/memory.c: 140:     }
 15395  10C3  3001               	movlw	1
 15396  10C4  00B0               	movwf	??_FLASH_WriteBlock
 15397  10C5  0830               	movf	??_FLASH_WriteBlock,w
 15398  10C6  07B6               	addwf	FLASH_WriteBlock@i,f
 15399  10C7                     l5101:
 15400  10C7  3020               	movlw	32
 15401  10C8  0236               	subwf	FLASH_WriteBlock@i,w
 15402  10C9  1C03               	skipc
 15403  10CA  28CC               	goto	u4111
 15404  10CB  28CD               	goto	u4110
 15405  10CC                     u4111:
 15406  10CC  288C               	goto	l5079
 15407  10CD                     u4110:
 15408  10CD                     l813:
 15409                           
 15410                           ;mcc_generated_files/memory.c: 142:     PMCON1bits.WREN = 0;
 15411  10CD  0023               	movlb	3	; select bank3
 15412  10CE  1115               	bcf	21,2	;volatile
 15413  10CF                     l5103:
 15414                           
 15415                           ;mcc_generated_files/memory.c: 143:     INTCONbits.GIE = GIEBitValue;
 15416  10CF  0020               	movlb	0	; select bank0
 15417  10D0  0C35               	rrf	FLASH_WriteBlock@GIEBitValue,w
 15418  10D1  1C03               	skipc
 15419  10D2  138B               	bcf	11,7	;volatile
 15420  10D3  1803               	skipnc
 15421  10D4  178B               	bsf	11,7	;volatile
 15422  10D5                     l811:
 15423  10D5  0008               	return
 15424  10D6                     __end_of_FLASH_WriteBlock:
 15425                           
 15426                           	psect	text83
 15427  1CE5                     __ptext83:	
 15428 ;; *************** function _FLASH_EraseBlock *****************
 15429 ;; Defined at:
 15430 ;;		line 148 in file "mcc_generated_files/memory.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  startAddr       2   10[BANK0 ] unsigned short 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      void 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, status,0
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15444 ;;      Params:         0       2       0       0       0       0       0       0
 15445 ;;      Locals:         0       1       0       0       0       0       0       0
 15446 ;;      Temps:          0       0       0       0       0       0       0       0
 15447 ;;      Totals:         0       3       0       0       0       0       0       0
 15448 ;;Total ram usage:        3 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; Hardware stack levels required when called: 4
 15451 ;; This function calls:
 15452 ;;		Nothing
 15453 ;; This function is called by:
 15454 ;;		_FLASH_WriteBlock
 15455 ;; This function uses a non-reentrant model
 15456 ;;
 15457                           
 15458  1CE5                     _FLASH_EraseBlock:	
 15459                           ;psect for function _FLASH_EraseBlock
 15460                           
 15461  1CE5                     l4761:	
 15462                           ;incstack = 0
 15463                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
 15464                           
 15465                           
 15466                           ;mcc_generated_files/memory.c: 148: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 149: {;mcc_generated_files/memory.c: 150:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
 15467  1CE5  3000               	movlw	0
 15468  1CE6  1B8B               	btfsc	11,7	;volatile
 15469  1CE7  3001               	movlw	1
 15470  1CE8  0020               	movlb	0	; select bank0
 15471  1CE9  00AC               	movwf	FLASH_EraseBlock@GIEBitValue
 15472  1CEA                     l4763:
 15473                           
 15474                           ;mcc_generated_files/memory.c: 153:     INTCONbits.GIE = 0;
 15475  1CEA  138B               	bcf	11,7	;volatile
 15476  1CEB                     l4765:
 15477                           
 15478                           ;mcc_generated_files/memory.c: 155:     PMADRL = (startAddr & 0xFF);
 15479  1CEB  082A               	movf	FLASH_EraseBlock@startAddr,w
 15480  1CEC  0023               	movlb	3	; select bank3
 15481  1CED  0091               	movwf	17	;volatile
 15482  1CEE                     l4767:
 15483                           
 15484                           ;mcc_generated_files/memory.c: 157:     PMADRH = ((startAddr & 0xFF00) >> 8);
 15485  1CEE  0020               	movlb	0	; select bank0
 15486  1CEF  082B               	movf	FLASH_EraseBlock@startAddr+1,w
 15487  1CF0  0023               	movlb	3	; select bank3
 15488  1CF1  0092               	movwf	18	;volatile
 15489  1CF2                     l4769:
 15490                           
 15491                           ;mcc_generated_files/memory.c: 160:     PMCON1bits.CFGS = 0;
 15492  1CF2  1315               	bcf	21,6	;volatile
 15493  1CF3                     l4771:
 15494                           
 15495                           ;mcc_generated_files/memory.c: 161:     PMCON1bits.FREE = 1;
 15496  1CF3  1615               	bsf	21,4	;volatile
 15497  1CF4                     l4773:
 15498                           
 15499                           ;mcc_generated_files/memory.c: 162:     PMCON1bits.WREN = 1;
 15500  1CF4  1515               	bsf	21,2	;volatile
 15501                           
 15502                           ;mcc_generated_files/memory.c: 165:     PMCON2 = 0x55;
 15503  1CF5  3055               	movlw	85
 15504  1CF6  0096               	movwf	22	;volsfr
 15505                           
 15506                           ;mcc_generated_files/memory.c: 166:     PMCON2 = 0xAA;
 15507  1CF7  30AA               	movlw	170
 15508  1CF8  0096               	movwf	22	;volsfr
 15509  1CF9                     l4775:
 15510                           
 15511                           ;mcc_generated_files/memory.c: 167:     PMCON1bits.WR = 1;
 15512  1CF9  1495               	bsf	21,1	;volatile
 15513  1CFA                     l4777:
 15514                           
 15515                           ;mcc_generated_files/memory.c: 168:     __nop();
 15516  1CFA  0000               	nop
 15517  1CFB                     l4779:
 15518                           
 15519                           ;mcc_generated_files/memory.c: 169:     __nop();
 15520  1CFB  0000               	nop
 15521  1CFC                     l4781:
 15522                           
 15523                           ;mcc_generated_files/memory.c: 171:     PMCON1bits.WREN = 0;
 15524  1CFC  0023               	movlb	3	; select bank3
 15525  1CFD  1115               	bcf	21,2	;volatile
 15526  1CFE                     l4783:
 15527                           
 15528                           ;mcc_generated_files/memory.c: 172:     INTCONbits.GIE = GIEBitValue;
 15529  1CFE  0020               	movlb	0	; select bank0
 15530  1CFF  0C2C               	rrf	FLASH_EraseBlock@GIEBitValue,w
 15531  1D00  1C03               	skipc
 15532  1D01  138B               	bcf	11,7	;volatile
 15533  1D02  1803               	skipnc
 15534  1D03  178B               	bsf	11,7	;volatile
 15535  1D04                     l817:
 15536  1D04  0008               	return
 15537  1D05                     __end_of_FLASH_EraseBlock:
 15538                           
 15539                           	psect	text84
 15540  1CC5                     __ptext84:	
 15541 ;; *************** function _FLASH_ReadWord *****************
 15542 ;; Defined at:
 15543 ;;		line 58 in file "mcc_generated_files/memory.c"
 15544 ;; Parameters:    Size  Location     Type
 15545 ;;  flashAddr       2   10[BANK0 ] unsigned short 
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 15548 ;; Return value:  Size  Location     Type
 15549 ;;                  2   10[BANK0 ] unsigned short 
 15550 ;; Registers used:
 15551 ;;		wreg, status,2, status,0
 15552 ;; Tracked objects:
 15553 ;;		On entry : 0/0
 15554 ;;		On exit  : 0/0
 15555 ;;		Unchanged: 0/0
 15556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15557 ;;      Params:         0       2       0       0       0       0       0       0
 15558 ;;      Locals:         0       1       0       0       0       0       0       0
 15559 ;;      Temps:          0       0       0       0       0       0       0       0
 15560 ;;      Totals:         0       3       0       0       0       0       0       0
 15561 ;;Total ram usage:        3 bytes
 15562 ;; Hardware stack levels used: 1
 15563 ;; Hardware stack levels required when called: 4
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		_main
 15568 ;;		_FLASH_WriteWord
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572  1CC5                     _FLASH_ReadWord:	
 15573                           ;psect for function _FLASH_ReadWord
 15574                           
 15575  1CC5                     l5035:	
 15576                           ;incstack = 0
 15577                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
 15578                           
 15579                           
 15580                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
 15581  1CC5  3000               	movlw	0
 15582  1CC6  1B8B               	btfsc	11,7	;volatile
 15583  1CC7  3001               	movlw	1
 15584  1CC8  0020               	movlb	0	; select bank0
 15585  1CC9  00AC               	movwf	FLASH_ReadWord@GIEBitValue
 15586  1CCA                     l5037:
 15587                           
 15588                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
 15589  1CCA  138B               	bcf	11,7	;volatile
 15590  1CCB                     l5039:
 15591                           
 15592                           ;mcc_generated_files/memory.c: 63:     PMADRL = (flashAddr & 0x00FF);
 15593  1CCB  082A               	movf	FLASH_ReadWord@flashAddr,w
 15594  1CCC  0023               	movlb	3	; select bank3
 15595  1CCD  0091               	movwf	17	;volatile
 15596  1CCE                     l5041:
 15597                           
 15598                           ;mcc_generated_files/memory.c: 64:     PMADRH = ((flashAddr & 0xFF00) >> 8);
 15599  1CCE  0020               	movlb	0	; select bank0
 15600  1CCF  082B               	movf	FLASH_ReadWord@flashAddr+1,w
 15601  1CD0  0023               	movlb	3	; select bank3
 15602  1CD1  0092               	movwf	18	;volatile
 15603  1CD2                     l5043:
 15604                           
 15605                           ;mcc_generated_files/memory.c: 66:     PMCON1bits.CFGS = 0;
 15606  1CD2  1315               	bcf	21,6	;volatile
 15607  1CD3                     l5045:
 15608                           
 15609                           ;mcc_generated_files/memory.c: 67:     PMCON1bits.RD = 1;
 15610  1CD3  1415               	bsf	21,0	;volatile
 15611  1CD4                     l5047:
 15612                           
 15613                           ;mcc_generated_files/memory.c: 68:     __nop();
 15614  1CD4  0000               	nop
 15615  1CD5                     l5049:
 15616                           
 15617                           ;mcc_generated_files/memory.c: 69:     __nop();
 15618  1CD5  0000               	nop
 15619  1CD6                     l5051:
 15620                           
 15621                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
 15622  1CD6  0020               	movlb	0	; select bank0
 15623  1CD7  0C2C               	rrf	FLASH_ReadWord@GIEBitValue,w
 15624  1CD8  1C03               	skipc
 15625  1CD9  138B               	bcf	11,7	;volatile
 15626  1CDA  1803               	skipnc
 15627  1CDB  178B               	bsf	11,7	;volatile
 15628  1CDC                     l5053:
 15629                           
 15630                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((PMDATH << 8) | PMDATL));
 15631  1CDC  0023               	movlb	3	; select bank3
 15632  1CDD  0814               	movf	20,w	;volatile
 15633  1CDE  0020               	movlb	0	; select bank0
 15634  1CDF  00AB               	movwf	?_FLASH_ReadWord+1
 15635  1CE0  0023               	movlb	3	; select bank3
 15636  1CE1  0813               	movf	19,w	;volatile
 15637  1CE2  0020               	movlb	0	; select bank0
 15638  1CE3  00AA               	movwf	?_FLASH_ReadWord
 15639  1CE4                     l802:
 15640  1CE4  0008               	return
 15641  1CE5                     __end_of_FLASH_ReadWord:
 15642                           
 15643                           	psect	intentry
 15644  0004                     __pintentry:	
 15645 ;; *************** function _INTERRUPT_InterruptManager *****************
 15646 ;; Defined at:
 15647 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;		None
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;                  1    wreg      void 
 15654 ;; Registers used:
 15655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15656 ;; Tracked objects:
 15657 ;;		On entry : 0/0
 15658 ;;		On exit  : 0/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15661 ;;      Params:         0       0       0       0       0       0       0       0
 15662 ;;      Locals:         0       0       0       0       0       0       0       0
 15663 ;;      Temps:          0       0       0       0       0       0       0       0
 15664 ;;      Totals:         0       0       0       0       0       0       0       0
 15665 ;;Total ram usage:        0 bytes
 15666 ;; Hardware stack levels used: 1
 15667 ;; Hardware stack levels required when called: 3
 15668 ;; This function calls:
 15669 ;;		Absolute function
 15670 ;;		_TMR0_ISR
 15671 ;;		_TMR1_ISR
 15672 ;;		_mbus_rx_handler
 15673 ;;		_mbus_tx_handler
 15674 ;; This function is called by:
 15675 ;;		Interrupt level 1
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679  0004                     _INTERRUPT_InterruptManager:
 15680                           
 15681                           ;incstack = 0
 15682  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15683                           
 15684                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15685  0005  3180               	pagesel	$
 15686  0006                     i1l6551:
 15687                           
 15688                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 15689  0006  1E8B               	btfss	11,5	;volatile
 15690  0007  2809               	goto	u626_21
 15691  0008  280A               	goto	u626_20
 15692  0009                     u626_21:
 15693  0009  2812               	goto	i1l121
 15694  000A                     u626_20:
 15695  000A                     i1l6553:
 15696  000A  1D0B               	btfss	11,2	;volatile
 15697  000B  280D               	goto	u627_21
 15698  000C  280E               	goto	u627_20
 15699  000D                     u627_21:
 15700  000D  2812               	goto	i1l121
 15701  000E                     u627_20:
 15702  000E                     i1l6555:
 15703                           
 15704                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 15705  000E  319B  2309  3180   	fcall	_TMR0_ISR
 15706                           
 15707                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15708  0011  2846               	goto	i1l131
 15709  0012                     i1l121:	
 15710                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 15711                           
 15712  0012  1F0B               	btfss	11,6	;volatile
 15713  0013  2815               	goto	u628_21
 15714  0014  2816               	goto	u628_20
 15715  0015                     u628_21:
 15716  0015  2846               	goto	i1l131
 15717  0016                     u628_20:
 15718  0016                     i1l6557:
 15719                           
 15720                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 15721  0016  0021               	movlb	1	; select bank1
 15722  0017  1E11               	btfss	17,4	;volatile
 15723  0018  281A               	goto	u629_21
 15724  0019  281B               	goto	u629_20
 15725  001A                     u629_21:
 15726  001A  2827               	goto	i1l124
 15727  001B                     u629_20:
 15728  001B                     i1l6559:
 15729  001B  0020               	movlb	0	; select bank0
 15730  001C  1E11               	btfss	17,4	;volatile
 15731  001D  281F               	goto	u630_21
 15732  001E  2820               	goto	u630_20
 15733  001F                     u630_21:
 15734  001F  2827               	goto	i1l124
 15735  0020                     u630_20:
 15736  0020                     i1l6561:
 15737                           
 15738                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
 15739  0020  0023               	movlb	3	; select bank3
 15740  0021  086F               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+384),w
 15741  0022  008A               	movwf	10
 15742  0023  086E               	movf	_EUSART_TxDefaultInterruptHandler^(0+384),w
 15743  0024  000A               	callw
 15744  0025  3180               	pagesel	$
 15745                           
 15746                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 15747  0026  2846               	goto	i1l131
 15748  0027                     i1l124:	
 15749                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 15750                           
 15751  0027  0021               	movlb	1	; select bank1
 15752  0028  1E91               	btfss	17,5	;volatile
 15753  0029  282B               	goto	u631_21
 15754  002A  282C               	goto	u631_20
 15755  002B                     u631_21:
 15756  002B  2838               	goto	i1l126
 15757  002C                     u631_20:
 15758  002C                     i1l6563:
 15759  002C  0020               	movlb	0	; select bank0
 15760  002D  1E91               	btfss	17,5	;volatile
 15761  002E  2830               	goto	u632_21
 15762  002F  2831               	goto	u632_20
 15763  0030                     u632_21:
 15764  0030  2838               	goto	i1l126
 15765  0031                     u632_20:
 15766  0031                     i1l6565:
 15767                           
 15768                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
 15769  0031  0023               	movlb	3	; select bank3
 15770  0032  086D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 15771  0033  008A               	movwf	10
 15772  0034  086C               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 15773  0035  000A               	callw
 15774  0036  3180               	pagesel	$
 15775                           
 15776                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 15777  0037  2846               	goto	i1l131
 15778  0038                     i1l126:	
 15779                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 15780                           
 15781  0038  0021               	movlb	1	; select bank1
 15782  0039  1C11               	btfss	17,0	;volatile
 15783  003A  283C               	goto	u633_21
 15784  003B  283D               	goto	u633_20
 15785  003C                     u633_21:
 15786  003C  2846               	goto	i1l125
 15787  003D                     u633_20:
 15788  003D                     i1l6567:
 15789  003D  0020               	movlb	0	; select bank0
 15790  003E  1C11               	btfss	17,0	;volatile
 15791  003F  2841               	goto	u634_21
 15792  0040  2842               	goto	u634_20
 15793  0041                     u634_21:
 15794  0041  2846               	goto	i1l125
 15795  0042                     u634_20:
 15796  0042                     i1l6569:
 15797                           
 15798                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR1_ISR();
 15799  0042  319B  237F  3180   	fcall	_TMR1_ISR
 15800                           
 15801                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 15802  0045  2846               	goto	i1l131
 15803  0046                     i1l125:
 15804  0046                     i1l131:	
 15805                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 15806                           
 15807  0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15808  0047  0009               	retfie
 15809  0048                     __end_of_INTERRUPT_InterruptManager:
 15810                           
 15811                           	psect	text86
 15812  1E13                     __ptext86:	
 15813 ;; *************** function _mbus_tx_handler *****************
 15814 ;; Defined at:
 15815 ;;		line 64 in file "modbus_slave.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;		None
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;		None
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      void 
 15822 ;; Registers used:
 15823 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15829 ;;      Params:         0       0       0       0       0       0       0       0
 15830 ;;      Locals:         0       0       0       0       0       0       0       0
 15831 ;;      Temps:          1       0       0       0       0       0       0       0
 15832 ;;      Totals:         1       0       0       0       0       0       0       0
 15833 ;;Total ram usage:        1 bytes
 15834 ;; Hardware stack levels used: 1
 15835 ;; This function calls:
 15836 ;;		Nothing
 15837 ;; This function is called by:
 15838 ;;		_EUSART_Initialize
 15839 ;;		_INTERRUPT_InterruptManager
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843  1E13                     _mbus_tx_handler:	
 15844                           ;psect for function _mbus_tx_handler
 15845                           
 15846  1E13                     i1l5163:	
 15847                           ;incstack = 0
 15848                           ; Regs used in _mbus_tx_handler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15849                           
 15850                           
 15851                           ;modbus_slave.c: 66:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 15852  1E13  0020               	movlb	0	; select bank0
 15853  1E14  0196               	clrf	22	;volatile
 15854  1E15                     i1l5165:
 15855  1E15  30E0               	movlw	224
 15856  1E16  0097               	movwf	23	;volatile
 15857  1E17                     i1l5167:
 15858  1E17  1011               	bcf	17,0	;volatile
 15859  1E18                     i1l5169:
 15860                           
 15861                           ;modbus_slave.c: 67:     if(modbusSlaveData.TxPointer < modbusSlaveData.TotalTxValue)
 15862  1E18  0023               	movlb	3	; select bank3
 15863  1E19  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 15864  1E1A  0246               	subwf	(_modbusSlaveData^(0+384)+38),w	;volatile
 15865  1E1B  1803               	skipnc
 15866  1E1C  2E1E               	goto	u417_21
 15867  1E1D  2E1F               	goto	u417_20
 15868  1E1E                     u417_21:
 15869  1E1E  2E2A               	goto	i1l5175
 15870  1E1F                     u417_20:
 15871  1E1F                     i1l5171:
 15872                           
 15873                           ;modbus_slave.c: 68:     {;modbus_slave.c: 69:         TXREG = modbusSlaveData.ModbusFra
      +                          me[modbusSlaveData.TxPointer++];
 15874  1E1F  0846               	movf	(_modbusSlaveData^(0+384)+38),w	;volatile
 15875  1E20  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15876  1E21  0086               	movwf	6
 15877  1E22  3001               	movlw	1	; select bank3/4
 15878  1E23  0087               	movwf	7
 15879  1E24  0801               	movf	1,w
 15880  1E25  009A               	movwf	26	;volatile
 15881  1E26                     i1l5173:
 15882  1E26  3001               	movlw	1
 15883  1E27  00F0               	movwf	??_mbus_tx_handler
 15884  1E28  0870               	movf	??_mbus_tx_handler,w
 15885  1E29  07C6               	addwf	(_modbusSlaveData^(0+384)+38),f	;volatile
 15886  1E2A                     i1l5175:
 15887                           
 15888                           ;modbus_slave.c: 71:     if(modbusSlaveData.TxPointer == modbusSlaveData.TotalTxValue)
 15889  1E2A  0846               	movf	(_modbusSlaveData^(0+384)+38),w	;volatile
 15890  1E2B  0648               	xorwf	(_modbusSlaveData^(0+384)+40),w	;volatile
 15891  1E2C  1D03               	skipz
 15892  1E2D  2E2F               	goto	u418_21
 15893  1E2E  2E30               	goto	u418_20
 15894  1E2F                     u418_21:
 15895  1E2F  2E41               	goto	i1l956
 15896  1E30                     u418_20:
 15897  1E30                     i1l951:
 15898  1E30  1C9E               	btfss	30,1	;volatile
 15899  1E31  2E33               	goto	u419_21
 15900  1E32  2E34               	goto	u419_20
 15901  1E33                     u419_21:
 15902  1E33  2E30               	goto	i1l951
 15903  1E34                     u419_20:
 15904  1E34                     i1l953:
 15905                           
 15906                           ;modbus_slave.c: 74:         PIE1bits.TXIE = 0; TXSTAbits.TXEN = 0;
 15907  1E34  0021               	movlb	1	; select bank1
 15908  1E35  1211               	bcf	17,4	;volatile
 15909  1E36  0023               	movlb	3	; select bank3
 15910  1E37  129E               	bcf	30,5	;volatile
 15911  1E38                     i1l5179:
 15912                           
 15913                           ;modbus_slave.c: 76:         modbusSlaveData.RxPointer = 0; modbusSlaveData.TotalRxValue
      +                           = 8;;
 15914  1E38  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 15915  1E39                     i1l5181:
 15916  1E39  3008               	movlw	8
 15917  1E3A  00F0               	movwf	??_mbus_tx_handler
 15918  1E3B  0870               	movf	??_mbus_tx_handler,w
 15919  1E3C  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 15920  1E3D                     i1l5183:
 15921  1E3D  0022               	movlb	2	; select bank2
 15922  1E3E  138E               	bcf	14,7	;volatile
 15923  1E3F                     i1l5185:
 15924                           
 15925                           ;modbus_slave.c: 78:         T1CONbits.TMR1ON = 1;
 15926  1E3F  0020               	movlb	0	; select bank0
 15927  1E40  1418               	bsf	24,0	;volatile
 15928  1E41                     i1l956:
 15929  1E41  0008               	return
 15930  1E42                     __end_of_mbus_tx_handler:
 15931                           
 15932                           	psect	text87
 15933  1EA5                     __ptext87:	
 15934 ;; *************** function _mbus_rx_handler *****************
 15935 ;; Defined at:
 15936 ;;		line 45 in file "modbus_slave.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;		None
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;		None
 15941 ;; Return value:  Size  Location     Type
 15942 ;;                  1    wreg      void 
 15943 ;; Registers used:
 15944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15950 ;;      Params:         0       0       0       0       0       0       0       0
 15951 ;;      Locals:         0       0       0       0       0       0       0       0
 15952 ;;      Temps:          0       1       0       0       0       0       0       0
 15953 ;;      Totals:         0       1       0       0       0       0       0       0
 15954 ;;Total ram usage:        1 bytes
 15955 ;; Hardware stack levels used: 1
 15956 ;; Hardware stack levels required when called: 2
 15957 ;; This function calls:
 15958 ;;		_ModbusSlaveProcessReceivedQuery
 15959 ;; This function is called by:
 15960 ;;		_EUSART_Initialize
 15961 ;;		_INTERRUPT_InterruptManager
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           
 15965  1EA5                     _mbus_rx_handler:	
 15966                           ;psect for function _mbus_rx_handler
 15967                           
 15968  1EA5                     i1l6531:	
 15969                           ;incstack = 0
 15970                           ; Regs used in _mbus_rx_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15971                           
 15972                           
 15973                           ;modbus_slave.c: 47:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 15974  1EA5  0020               	movlb	0	; select bank0
 15975  1EA6  0196               	clrf	22	;volatile
 15976  1EA7                     i1l6533:
 15977  1EA7  30E0               	movlw	224
 15978  1EA8  0097               	movwf	23	;volatile
 15979  1EA9                     i1l6535:
 15980  1EA9  1011               	bcf	17,0	;volatile
 15981  1EAA                     i1l6537:
 15982                           
 15983                           ;modbus_slave.c: 48:     modbusSlaveData.ModbusFrame[modbusSlaveData.RxPointer++] = RCRE
      +                          G;
 15984  1EAA  0023               	movlb	3	; select bank3
 15985  1EAB  0819               	movf	25,w	;volatile
 15986  1EAC  0020               	movlb	0	; select bank0
 15987  1EAD  00A9               	movwf	??_mbus_rx_handler
 15988  1EAE  0023               	movlb	3	; select bank3
 15989  1EAF  0847               	movf	(_modbusSlaveData^(0+384)+39),w	;volatile
 15990  1EB0  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 15991  1EB1  0086               	movwf	6
 15992  1EB2  3001               	movlw	1	; select bank3/4
 15993  1EB3  0087               	movwf	7
 15994  1EB4  0020               	movlb	0	; select bank0
 15995  1EB5  0829               	movf	??_mbus_rx_handler,w
 15996  1EB6  0081               	movwf	1
 15997  1EB7                     i1l6539:
 15998  1EB7  3001               	movlw	1
 15999  1EB8  00A9               	movwf	??_mbus_rx_handler
 16000  1EB9  0829               	movf	??_mbus_rx_handler,w
 16001  1EBA  0023               	movlb	3	; select bank3
 16002  1EBB  07C7               	addwf	(_modbusSlaveData^(0+384)+39),f	;volatile
 16003  1EBC                     i1l6541:
 16004                           
 16005                           ;modbus_slave.c: 50:     if(modbusSlaveData.RxPointer == 7U)
 16006  1EBC  3007               	movlw	7
 16007  1EBD  0647               	xorwf	(_modbusSlaveData^(0+384)+39),w	;volatile
 16008  1EBE  1D03               	btfss	3,2
 16009  1EBF  2EC1               	goto	u623_21
 16010  1EC0  2EC2               	goto	u623_20
 16011  1EC1                     u623_21:
 16012  1EC1  2ECF               	goto	i1l6547
 16013  1EC2                     u623_20:
 16014  1EC2                     i1l6543:
 16015                           
 16016                           ;modbus_slave.c: 51:     {;modbus_slave.c: 52:         if(modbusSlaveData.ModbusFrame[1U
      +                          ] == 16U)
 16017  1EC2  3010               	movlw	16
 16018  1EC3  0631               	xorwf	(_modbusSlaveData^(0+384)+17),w	;volatile
 16019  1EC4  1D03               	btfss	3,2
 16020  1EC5  2EC7               	goto	u624_21
 16021  1EC6  2EC8               	goto	u624_20
 16022  1EC7                     u624_21:
 16023  1EC7  2ECF               	goto	i1l6547
 16024  1EC8                     u624_20:
 16025  1EC8                     i1l6545:
 16026                           
 16027                           ;modbus_slave.c: 53:         {;modbus_slave.c: 54:             modbusSlaveData.TotalRxVa
      +                          lue += (modbusSlaveData.ModbusFrame[6U]+1U);
 16028  1EC8  0836               	movf	(_modbusSlaveData^(0+384)+22),w	;volatile
 16029  1EC9  3E01               	addlw	1
 16030  1ECA  0020               	movlb	0	; select bank0
 16031  1ECB  00A9               	movwf	??_mbus_rx_handler
 16032  1ECC  0829               	movf	??_mbus_rx_handler,w
 16033  1ECD  0023               	movlb	3	; select bank3
 16034  1ECE  07C9               	addwf	(_modbusSlaveData^(0+384)+41),f	;volatile
 16035  1ECF                     i1l6547:
 16036                           
 16037                           ;modbus_slave.c: 58:     if(modbusSlaveData.RxPointer == modbusSlaveData.TotalRxValue)
 16038  1ECF  0847               	movf	(_modbusSlaveData^(0+384)+39),w	;volatile
 16039  1ED0  0649               	xorwf	(_modbusSlaveData^(0+384)+41),w	;volatile
 16040  1ED1  1D03               	skipz
 16041  1ED2  2ED4               	goto	u625_21
 16042  1ED3  2ED5               	goto	u625_20
 16043  1ED4                     u625_21:
 16044  1ED4  2ED8               	goto	i1l946
 16045  1ED5                     u625_20:
 16046  1ED5                     i1l6549:
 16047                           
 16048                           ;modbus_slave.c: 59:     {;modbus_slave.c: 60:         ModbusSlaveProcessReceivedQuery()
      +                          ;
 16049  1ED5  3194  2418  319E   	fcall	_ModbusSlaveProcessReceivedQuery
 16050  1ED8                     i1l946:
 16051  1ED8  0008               	return
 16052  1ED9                     __end_of_mbus_rx_handler:
 16053                           
 16054                           	psect	text88
 16055  1418                     __ptext88:	
 16056 ;; *************** function _ModbusSlaveProcessReceivedQuery *****************
 16057 ;; Defined at:
 16058 ;;		line 88 in file "modbus_slave.c"
 16059 ;; Parameters:    Size  Location     Type
 16060 ;;		None
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;  u16Data         2    3[BANK0 ] unsigned short 
 16063 ;;  u8ReadReg       1    0[BANK0 ] unsigned char 
 16064 ;;  i               2    7[BANK0 ] unsigned int 
 16065 ;;  j               2    5[BANK0 ] unsigned int 
 16066 ;;  k               2    1[BANK0 ] unsigned int 
 16067 ;; Return value:  Size  Location     Type
 16068 ;;                  1    wreg      void 
 16069 ;; Registers used:
 16070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16071 ;; Tracked objects:
 16072 ;;		On entry : 0/0
 16073 ;;		On exit  : 0/0
 16074 ;;		Unchanged: 0/0
 16075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16076 ;;      Params:         0       0       0       0       0       0       0       0
 16077 ;;      Locals:         0       9       0       0       0       0       0       0
 16078 ;;      Temps:          6       0       0       0       0       0       0       0
 16079 ;;      Totals:         6       9       0       0       0       0       0       0
 16080 ;;Total ram usage:       15 bytes
 16081 ;; Hardware stack levels used: 1
 16082 ;; Hardware stack levels required when called: 1
 16083 ;; This function calls:
 16084 ;;		_calculate_crc
 16085 ;; This function is called by:
 16086 ;;		_mbus_rx_handler
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090  1418                     _ModbusSlaveProcessReceivedQuery:	
 16091                           ;psect for function _ModbusSlaveProcessReceivedQuery
 16092                           
 16093  1418                     i1l6365:	
 16094                           ;incstack = 0
 16095                           ; Regs used in _ModbusSlaveProcessReceivedQuery: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 16096                           
 16097                           
 16098                           ;modbus_slave.c: 90:    unsigned int i, j, k;;modbus_slave.c: 92:     crcModbusSlave = 0
      +                          xFFFF;
 16099  1418  30FF               	movlw	255
 16100  1419  0020               	movlb	0	; select bank0
 16101  141A  00E4               	movwf	_crcModbusSlave
 16102  141B  30FF               	movlw	255
 16103  141C  00E5               	movwf	_crcModbusSlave+1
 16104  141D                     i1l6367:
 16105                           
 16106                           ;modbus_slave.c: 93:     for(i=0; i<modbusSlaveData.TotalRxValue-2; i++)
 16107  141D  01A7               	clrf	ModbusSlaveProcessReceivedQuery@i
 16108  141E  01A8               	clrf	ModbusSlaveProcessReceivedQuery@i+1
 16109  141F  2C2E               	goto	i1l6373
 16110  1420                     i1l6369:
 16111                           
 16112                           ;modbus_slave.c: 94:     {;modbus_slave.c: 95:         calculate_crc(modbusSlaveData.Mod
      +                          busFrame[i]);
 16113  1420  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 16114  1421  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16115  1422  0086               	movwf	6
 16116  1423  3001               	movlw	1	; select bank3/4
 16117  1424  0087               	movwf	7
 16118  1425  0801               	movf	1,w
 16119  1426  319D  25B7  3194   	fcall	_calculate_crc
 16120  1429                     i1l6371:
 16121                           
 16122                           ;modbus_slave.c: 96:     }
 16123  1429  3001               	movlw	1
 16124  142A  0020               	movlb	0	; select bank0
 16125  142B  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 16126  142C  3000               	movlw	0
 16127  142D  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 16128  142E                     i1l6373:
 16129  142E  0023               	movlb	3	; select bank3
 16130  142F  0849               	movf	(_modbusSlaveData^(0+384)+41),w	;volatile
 16131  1430  3EFE               	addlw	254
 16132  1431  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16133  1432  30FF               	movlw	255
 16134  1433  1803               	skipnc
 16135  1434  3000               	movlw	0
 16136  1435  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16137  1436  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16138  1437  0020               	movlb	0	; select bank0
 16139  1438  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 16140  1439  1D03               	skipz
 16141  143A  2C3D               	goto	u602_25
 16142  143B  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16143  143C  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 16144  143D                     u602_25:
 16145  143D  1C03               	skipc
 16146  143E  2C40               	goto	u602_21
 16147  143F  2C41               	goto	u602_20
 16148  1440                     u602_21:
 16149  1440  2C20               	goto	i1l6369
 16150  1441                     u602_20:
 16151  1441                     i1l6375:
 16152                           
 16153                           ;modbus_slave.c: 98:     if(modbusSlaveData.ModbusFrame[i++] != (crcModbusSlave & 0xFF))
 16154  1441  30FF               	movlw	255
 16155  1442  0564               	andwf	_crcModbusSlave,w
 16156  1443  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16157  1444  3000               	movlw	0
 16158  1445  0565               	andwf	_crcModbusSlave+1,w
 16159  1446  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16160  1447  0828               	movf	ModbusSlaveProcessReceivedQuery@i+1,w
 16161  1448  00F9               	movwf	??_ModbusSlaveProcessReceivedQuery+3
 16162  1449  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 16163  144A  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 16164  144B  0AA7               	incf	ModbusSlaveProcessReceivedQuery@i,f
 16165  144C  1903               	skipnz
 16166  144D  0AA8               	incf	ModbusSlaveProcessReceivedQuery@i+1,f
 16167  144E  0878               	movf	??_ModbusSlaveProcessReceivedQuery+2,w
 16168  144F  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16169  1450  0086               	movwf	6
 16170  1451  3001               	movlw	1	; select bank3/4
 16171  1452  0087               	movwf	7
 16172  1453  0801               	movf	1,w
 16173  1454  00FA               	movwf	??_ModbusSlaveProcessReceivedQuery+4
 16174  1455  01FB               	clrf	??_ModbusSlaveProcessReceivedQuery+5
 16175  1456  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16176  1457  067B               	xorwf	??_ModbusSlaveProcessReceivedQuery+5,w
 16177  1458  1D03               	skipz
 16178  1459  2C5C               	goto	u603_25
 16179  145A  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16180  145B  067A               	xorwf	??_ModbusSlaveProcessReceivedQuery+4,w
 16181  145C                     u603_25:
 16182  145C  1903               	skipnz
 16183  145D  2C5F               	goto	u603_21
 16184  145E  2C60               	goto	u603_20
 16185  145F                     u603_21:
 16186  145F  2C63               	goto	i1l6379
 16187  1460                     u603_20:
 16188  1460                     i1l6377:
 16189                           
 16190                           ;modbus_slave.c: 99:     {;modbus_slave.c: 100:         modbusSlaveData.flags.bitValue.e
      +                          rror = 1;
 16191  1460  0023               	movlb	3	; select bank3
 16192  1461  15CA               	bsf	(_modbusSlaveData^(0+384)+42),3	;volatile
 16193                           
 16194                           ;modbus_slave.c: 101:         return;
 16195  1462  2DC7               	goto	i1l966
 16196  1463                     i1l6379:
 16197                           
 16198                           ;modbus_slave.c: 104:     if(modbusSlaveData.ModbusFrame[i] != (crcModbusSlave>>8))
 16199  1463  0865               	movf	_crcModbusSlave+1,w
 16200  1464  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16201  1465  0864               	movf	_crcModbusSlave,w
 16202  1466  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16203  1467  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16204  1468  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16205  1469  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16206  146A  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 16207  146B  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16208  146C  0086               	movwf	6
 16209  146D  3001               	movlw	1	; select bank3/4
 16210  146E  0087               	movwf	7
 16211  146F  0801               	movf	1,w
 16212  1470  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 16213  1471  01F9               	clrf	??_ModbusSlaveProcessReceivedQuery+3
 16214  1472  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16215  1473  0679               	xorwf	??_ModbusSlaveProcessReceivedQuery+3,w
 16216  1474  1D03               	skipz
 16217  1475  2C78               	goto	u604_25
 16218  1476  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16219  1477  0678               	xorwf	??_ModbusSlaveProcessReceivedQuery+2,w
 16220  1478                     u604_25:
 16221  1478  1903               	skipnz
 16222  1479  2C7B               	goto	u604_21
 16223  147A  2C7C               	goto	u604_20
 16224  147B                     u604_21:
 16225  147B  2C7D               	goto	i1l6383
 16226  147C                     u604_20:
 16227  147C  2C60               	goto	i1l6377
 16228  147D                     i1l6383:
 16229                           
 16230                           ;modbus_slave.c: 110:     if(modbusSlaveData.ModbusFrame[0] != modbusSlaveData.address)
 16231  147D  0023               	movlb	3	; select bank3
 16232  147E  084C               	movf	(_modbusSlaveData^(0+384)+44),w	;volatile
 16233  147F  0630               	xorwf	(_modbusSlaveData^(0+384)+16),w	;volatile
 16234  1480  1903               	skipnz
 16235  1481  2C83               	goto	u605_21
 16236  1482  2C84               	goto	u605_20
 16237  1483                     u605_21:
 16238  1483  2C85               	goto	i1l6387
 16239  1484                     u605_20:
 16240  1484  2DC7               	goto	i1l966
 16241  1485                     i1l6387:
 16242                           
 16243                           ;modbus_slave.c: 114:     modbusSlaveData.TotalTxValue = 0;
 16244  1485  01C8               	clrf	(_modbusSlaveData^(0+384)+40)	;volatile
 16245                           
 16246                           ;modbus_slave.c: 115:     switch(modbusSlaveData.ModbusFrame[1])
 16247  1486  2D68               	goto	i1l6433
 16248  1487                     i1l6389:
 16249                           
 16250                           ;modbus_slave.c: 118:             modbusSlaveData.TotalTxValue = 2;
 16251  1487  3002               	movlw	2
 16252  1488  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16253  1489  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16254  148A  00C8               	movwf	(_modbusSlaveData^(0+384)+40)	;volatile
 16255                           
 16256                           ;modbus_slave.c: 119:             j = (modbusSlaveData.ModbusFrame[2] << 8U) | modbusSla
      +                          veData.ModbusFrame[3];
 16257  148B  0832               	movf	(_modbusSlaveData^(0+384)+18),w	;volatile
 16258  148C  0020               	movlb	0	; select bank0
 16259  148D  00A6               	movwf	ModbusSlaveProcessReceivedQuery@j+1
 16260  148E  0023               	movlb	3	; select bank3
 16261  148F  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 16262  1490  0020               	movlb	0	; select bank0
 16263  1491  00A5               	movwf	ModbusSlaveProcessReceivedQuery@j
 16264  1492                     i1l6391:
 16265                           
 16266                           ;modbus_slave.c: 121:             modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxVal
      +                          ue++] = modbusSlaveData.ModbusFrame[5]<<1;
 16267  1492  0023               	movlb	3	; select bank3
 16268  1493  3535               	lslf	(_modbusSlaveData^(0+384)+21),w	;volatile
 16269  1494  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16270  1495  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16271  1496  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16272  1497  0086               	movwf	6
 16273  1498  3001               	movlw	1	; select bank3/4
 16274  1499  0087               	movwf	7
 16275  149A  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16276  149B  0081               	movwf	1
 16277  149C                     i1l6393:
 16278  149C  3001               	movlw	1
 16279  149D  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16280  149E  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16281  149F  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 16282  14A0                     i1l6395:
 16283                           
 16284                           ;modbus_slave.c: 122:             uint8_t u8ReadReg = modbusSlaveData.ModbusFrame[5];
 16285  14A0  0835               	movf	(_modbusSlaveData^(0+384)+21),w	;volatile
 16286  14A1  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16287  14A2  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16288  14A3  0020               	movlb	0	; select bank0
 16289  14A4  00A0               	movwf	ModbusSlaveProcessReceivedQuery@u8ReadReg
 16290  14A5                     i1l6397:
 16291                           
 16292                           ;modbus_slave.c: 123:             for(i=j; i<(u8ReadReg+j); i++)
 16293  14A5  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 16294  14A6  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 16295  14A7  0825               	movf	ModbusSlaveProcessReceivedQuery@j,w
 16296  14A8  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 16297  14A9  2CDA               	goto	i1l6407
 16298  14AA                     i1l6399:
 16299                           
 16300                           ;modbus_slave.c: 124:             {;modbus_slave.c: 125:                 modbusSlaveData
      +                          .ModbusFrame[modbusSlaveData.TotalTxValue++] = (modbusSlaveData.ModbusHoldingRegister[i]
      +                           >> 8U) & 0xFF;
 16301  14AA  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 16302  14AB  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 16303  14AC  0086               	movwf	6
 16304  14AD  3001               	movlw	1	; select bank3/4
 16305  14AE  0087               	movwf	7
 16306  14AF  3F40               	moviw [0]fsr1
 16307  14B0  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16308  14B1  3F41               	moviw [1]fsr1
 16309  14B2  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16310  14B3  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16311  14B4  00F8               	movwf	??_ModbusSlaveProcessReceivedQuery+2
 16312  14B5  0023               	movlb	3	; select bank3
 16313  14B6  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16314  14B7  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16315  14B8  0086               	movwf	6
 16316  14B9  3001               	movlw	1	; select bank3/4
 16317  14BA  0087               	movwf	7
 16318  14BB  0878               	movf	??_ModbusSlaveProcessReceivedQuery+2,w
 16319  14BC  0081               	movwf	1
 16320  14BD                     i1l6401:
 16321  14BD  3001               	movlw	1
 16322  14BE  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16323  14BF  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16324  14C0  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 16325  14C1                     i1l6403:
 16326                           
 16327                           ;modbus_slave.c: 126:                 modbusSlaveData.ModbusFrame[modbusSlaveData.TotalT
      +                          xValue++] = modbusSlaveData.ModbusHoldingRegister[i] & 0xFF;
 16328  14C1  0020               	movlb	0	; select bank0
 16329  14C2  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 16330  14C3  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 16331  14C4  0086               	movwf	6
 16332  14C5  3001               	movlw	1	; select bank3/4
 16333  14C6  0087               	movwf	7
 16334  14C7  0801               	movf	1,w
 16335  14C8  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16336  14C9  0023               	movlb	3	; select bank3
 16337  14CA  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16338  14CB  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16339  14CC  0086               	movwf	6
 16340  14CD  3001               	movlw	1	; select bank3/4
 16341  14CE  0087               	movwf	7
 16342  14CF  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16343  14D0  0081               	movwf	1
 16344  14D1  3001               	movlw	1
 16345  14D2  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16346  14D3  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16347  14D4  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 16348  14D5                     i1l6405:
 16349                           
 16350                           ;modbus_slave.c: 127:             }
 16351  14D5  3001               	movlw	1
 16352  14D6  0020               	movlb	0	; select bank0
 16353  14D7  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 16354  14D8  3000               	movlw	0
 16355  14D9  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 16356  14DA                     i1l6407:
 16357  14DA  0820               	movf	ModbusSlaveProcessReceivedQuery@u8ReadReg,w
 16358  14DB  0725               	addwf	ModbusSlaveProcessReceivedQuery@j,w
 16359  14DC  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16360  14DD  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 16361  14DE  1803               	skipnc
 16362  14DF  0A26               	incf	ModbusSlaveProcessReceivedQuery@j+1,w
 16363  14E0  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16364  14E1  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16365  14E2  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 16366  14E3  1D03               	skipz
 16367  14E4  2CE7               	goto	u606_25
 16368  14E5  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16369  14E6  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 16370  14E7                     u606_25:
 16371  14E7  1C03               	skipc
 16372  14E8  2CEA               	goto	u606_21
 16373  14E9  2CEB               	goto	u606_20
 16374  14EA                     u606_21:
 16375  14EA  2CAA               	goto	i1l6399
 16376  14EB                     u606_20:
 16377  14EB  2D7B               	goto	i1l6435
 16378  14EC                     i1l6409:
 16379                           
 16380                           ;modbus_slave.c: 131:             i = modbusSlaveData.ModbusFrame[2];
 16381  14EC  0832               	movf	(_modbusSlaveData^(0+384)+18),w	;volatile
 16382  14ED  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16383  14EE  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16384  14EF  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16385  14F0  0020               	movlb	0	; select bank0
 16386  14F1  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 16387  14F2  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16388  14F3  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 16389                           
 16390                           ;modbus_slave.c: 132:             i <<= 8U;
 16391  14F4  3008               	movlw	8
 16392  14F5                     u607_25:
 16393  14F5  35A7               	lslf	ModbusSlaveProcessReceivedQuery@i,f
 16394  14F6  0DA8               	rlf	ModbusSlaveProcessReceivedQuery@i+1,f
 16395  14F7  0B89               	decfsz	9,f
 16396  14F8  2CF5               	goto	u607_25
 16397                           
 16398                           ;modbus_slave.c: 133:             i |= modbusSlaveData.ModbusFrame[3];
 16399  14F9  0023               	movlb	3	; select bank3
 16400  14FA  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 16401  14FB  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16402  14FC  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16403  14FD  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16404  14FE  0020               	movlb	0	; select bank0
 16405  14FF  04A7               	iorwf	ModbusSlaveProcessReceivedQuery@i,f
 16406  1500  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16407  1501  04A8               	iorwf	ModbusSlaveProcessReceivedQuery@i+1,f
 16408                           
 16409                           ;modbus_slave.c: 135:             uint16_t u16Data = modbusSlaveData.ModbusFrame[4];
 16410  1502  0023               	movlb	3	; select bank3
 16411  1503  0834               	movf	(_modbusSlaveData^(0+384)+20),w	;volatile
 16412  1504  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16413  1505  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16414  1506  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16415  1507  0020               	movlb	0	; select bank0
 16416  1508  00A3               	movwf	ModbusSlaveProcessReceivedQuery@u16Data
 16417  1509  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16418  150A  00A4               	movwf	ModbusSlaveProcessReceivedQuery@u16Data+1
 16419                           
 16420                           ;modbus_slave.c: 136:             u16Data <<= 8U;
 16421  150B  3008               	movlw	8
 16422  150C                     u608_25:
 16423  150C  35A3               	lslf	ModbusSlaveProcessReceivedQuery@u16Data,f
 16424  150D  0DA4               	rlf	ModbusSlaveProcessReceivedQuery@u16Data+1,f
 16425  150E  0B89               	decfsz	9,f
 16426  150F  2D0C               	goto	u608_25
 16427                           
 16428                           ;modbus_slave.c: 137:             u16Data |= modbusSlaveData.ModbusFrame[5];
 16429  1510  0023               	movlb	3	; select bank3
 16430  1511  0835               	movf	(_modbusSlaveData^(0+384)+21),w	;volatile
 16431  1512  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16432  1513  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16433  1514  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16434  1515  0020               	movlb	0	; select bank0
 16435  1516  04A3               	iorwf	ModbusSlaveProcessReceivedQuery@u16Data,f
 16436  1517  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16437  1518  04A4               	iorwf	ModbusSlaveProcessReceivedQuery@u16Data+1,f
 16438  1519                     i1l6411:
 16439                           
 16440                           ;modbus_slave.c: 138:             modbusSlaveData.ModbusHoldingRegister[i] = u16Data;
 16441  1519  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 16442  151A  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 16443  151B  0086               	movwf	6
 16444  151C  3001               	movlw	1	; select bank3/4
 16445  151D  0087               	movwf	7
 16446  151E  0823               	movf	ModbusSlaveProcessReceivedQuery@u16Data,w
 16447  151F  3FC0               	movwi [0]fsr1
 16448  1520  0824               	movf	ModbusSlaveProcessReceivedQuery@u16Data+1,w
 16449  1521  3FC1               	movwi [1]fsr1
 16450  1522                     i1l6413:
 16451                           
 16452                           ;modbus_slave.c: 139:             modbusSlaveData.TotalTxValue = 6;
 16453  1522  3006               	movlw	6
 16454  1523  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16455  1524  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16456  1525  0023               	movlb	3	; select bank3
 16457  1526  00C8               	movwf	(_modbusSlaveData^(0+384)+40)	;volatile
 16458                           
 16459                           ;modbus_slave.c: 140:             break;
 16460  1527  2D7B               	goto	i1l6435
 16461  1528                     i1l6415:
 16462                           
 16463                           ;modbus_slave.c: 143:             j = modbusSlaveData.ModbusFrame[3]<<1;
 16464  1528  0833               	movf	(_modbusSlaveData^(0+384)+19),w	;volatile
 16465  1529  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16466  152A  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16467  152B  35F6               	lslf	??_ModbusSlaveProcessReceivedQuery,f
 16468  152C  0DF7               	rlf	??_ModbusSlaveProcessReceivedQuery+1,f
 16469  152D  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16470  152E  0020               	movlb	0	; select bank0
 16471  152F  00A5               	movwf	ModbusSlaveProcessReceivedQuery@j
 16472  1530  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16473  1531  00A6               	movwf	ModbusSlaveProcessReceivedQuery@j+1
 16474  1532                     i1l6417:
 16475                           
 16476                           ;modbus_slave.c: 144:             k = 7;
 16477  1532  3007               	movlw	7
 16478  1533  00A1               	movwf	ModbusSlaveProcessReceivedQuery@k
 16479  1534  3000               	movlw	0
 16480  1535  00A2               	movwf	ModbusSlaveProcessReceivedQuery@k+1
 16481  1536                     i1l6419:
 16482                           
 16483                           ;modbus_slave.c: 145:             for(i=j; i<(modbusSlaveData.ModbusFrame[6]+j); i++)
 16484  1536  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 16485  1537  00A8               	movwf	ModbusSlaveProcessReceivedQuery@i+1
 16486  1538  0825               	movf	ModbusSlaveProcessReceivedQuery@j,w
 16487  1539  00A7               	movwf	ModbusSlaveProcessReceivedQuery@i
 16488  153A  2D54               	goto	i1l6427
 16489  153B                     i1l6421:
 16490                           
 16491                           ;modbus_slave.c: 146:             {;modbus_slave.c: 147:                 modbusSlaveData
      +                          .ModbusHoldingRegister[i] = modbusSlaveData.ModbusFrame[k++];
 16492  153B  0821               	movf	ModbusSlaveProcessReceivedQuery@k,w
 16493  153C  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16494  153D  0086               	movwf	6
 16495  153E  3001               	movlw	1	; select bank3/4
 16496  153F  0087               	movwf	7
 16497  1540  0801               	movf	1,w
 16498  1541  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16499  1542  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16500  1543  3527               	lslf	ModbusSlaveProcessReceivedQuery@i,w
 16501  1544  3EA0               	addlw	(low (_modbusSlaveData| (0+256)))& (0+255)
 16502  1545  0086               	movwf	6
 16503  1546  3001               	movlw	1	; select bank3/4
 16504  1547  0087               	movwf	7
 16505  1548  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16506  1549  3FC0               	movwi [0]fsr1
 16507  154A  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16508  154B  3FC1               	movwi [1]fsr1
 16509  154C                     i1l6423:
 16510  154C  3001               	movlw	1
 16511  154D  07A1               	addwf	ModbusSlaveProcessReceivedQuery@k,f
 16512  154E  3000               	movlw	0
 16513  154F  3DA2               	addwfc	ModbusSlaveProcessReceivedQuery@k+1,f
 16514  1550                     i1l6425:
 16515                           
 16516                           ;modbus_slave.c: 148:             }
 16517  1550  3001               	movlw	1
 16518  1551  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 16519  1552  3000               	movlw	0
 16520  1553  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 16521  1554                     i1l6427:
 16522  1554  0023               	movlb	3	; select bank3
 16523  1555  0836               	movf	(_modbusSlaveData^(0+384)+22),w	;volatile
 16524  1556  0020               	movlb	0	; select bank0
 16525  1557  0725               	addwf	ModbusSlaveProcessReceivedQuery@j,w
 16526  1558  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16527  1559  0826               	movf	ModbusSlaveProcessReceivedQuery@j+1,w
 16528  155A  1803               	skipnc
 16529  155B  0A26               	incf	ModbusSlaveProcessReceivedQuery@j+1,w
 16530  155C  00F7               	movwf	??_ModbusSlaveProcessReceivedQuery+1
 16531  155D  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16532  155E  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 16533  155F  1D03               	skipz
 16534  1560  2D63               	goto	u609_25
 16535  1561  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16536  1562  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 16537  1563                     u609_25:
 16538  1563  1C03               	skipc
 16539  1564  2D66               	goto	u609_21
 16540  1565  2D67               	goto	u609_20
 16541  1566                     u609_21:
 16542  1566  2D3B               	goto	i1l6421
 16543  1567                     u609_20:
 16544  1567  2D22               	goto	i1l6413
 16545  1568                     i1l6433:
 16546  1568  0831               	movf	(_modbusSlaveData^(0+384)+17),w	;volatile
 16547  1569  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16548  156A  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16549                           
 16550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16551                           ; Switch size 1, requested type "simple"
 16552                           ; Number of cases is 1, Range of values is 0 to 0
 16553                           ; switch strategies available:
 16554                           ; Name         Instructions Cycles
 16555                           ; simple_byte            4     3 (average)
 16556                           ; direct_byte            8     6 (fixed)
 16557                           ; jumptable            260     6 (fixed)
 16558                           ;	Chosen strategy is simple_byte
 16559  156B  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16560  156C  3A00               	xorlw	0	; case 0
 16561  156D  1903               	skipnz
 16562  156E  2D70               	goto	i1l6849
 16563  156F  2D7B               	goto	i1l6435
 16564  1570                     i1l6849:
 16565                           
 16566                           ; Switch size 1, requested type "simple"
 16567                           ; Number of cases is 3, Range of values is 3 to 16
 16568                           ; switch strategies available:
 16569                           ; Name         Instructions Cycles
 16570                           ; simple_byte           10     6 (average)
 16571                           ; direct_byte           37     9 (fixed)
 16572                           ; jumptable            263     9 (fixed)
 16573                           ;	Chosen strategy is simple_byte
 16574  1570  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16575  1571  3A03               	xorlw	3	; case 3
 16576  1572  1903               	skipnz
 16577  1573  2C87               	goto	i1l6389
 16578  1574  3A05               	xorlw	5	; case 6
 16579  1575  1903               	skipnz
 16580  1576  2CEC               	goto	i1l6409
 16581  1577  3A16               	xorlw	22	; case 16
 16582  1578  1903               	skipnz
 16583  1579  2D28               	goto	i1l6415
 16584  157A  2D7B               	goto	i1l6435
 16585  157B                     i1l6435:
 16586                           
 16587                           ;modbus_slave.c: 156:     crcModbusSlave = 0xFFFF;
 16588  157B  30FF               	movlw	255
 16589  157C  0020               	movlb	0	; select bank0
 16590  157D  00E4               	movwf	_crcModbusSlave
 16591  157E  30FF               	movlw	255
 16592  157F  00E5               	movwf	_crcModbusSlave+1
 16593  1580                     i1l6437:
 16594                           
 16595                           ;modbus_slave.c: 157:     for(i=0; i<modbusSlaveData.TotalTxValue; i++)
 16596  1580  01A7               	clrf	ModbusSlaveProcessReceivedQuery@i
 16597  1581  01A8               	clrf	ModbusSlaveProcessReceivedQuery@i+1
 16598  1582  2D91               	goto	i1l6443
 16599  1583                     i1l6439:
 16600                           
 16601                           ;modbus_slave.c: 158:     {;modbus_slave.c: 159:         calculate_crc(modbusSlaveData.M
      +                          odbusFrame[i]);
 16602  1583  0827               	movf	ModbusSlaveProcessReceivedQuery@i,w
 16603  1584  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16604  1585  0086               	movwf	6
 16605  1586  3001               	movlw	1	; select bank3/4
 16606  1587  0087               	movwf	7
 16607  1588  0801               	movf	1,w
 16608  1589  319D  25B7  3194   	fcall	_calculate_crc
 16609  158C                     i1l6441:
 16610                           
 16611                           ;modbus_slave.c: 160:     }
 16612  158C  3001               	movlw	1
 16613  158D  0020               	movlb	0	; select bank0
 16614  158E  07A7               	addwf	ModbusSlaveProcessReceivedQuery@i,f
 16615  158F  3000               	movlw	0
 16616  1590  3DA8               	addwfc	ModbusSlaveProcessReceivedQuery@i+1,f
 16617  1591                     i1l6443:
 16618  1591  0023               	movlb	3	; select bank3
 16619  1592  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16620  1593  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16621  1594  01F7               	clrf	??_ModbusSlaveProcessReceivedQuery+1
 16622  1595  0877               	movf	??_ModbusSlaveProcessReceivedQuery+1,w
 16623  1596  0020               	movlb	0	; select bank0
 16624  1597  0228               	subwf	ModbusSlaveProcessReceivedQuery@i+1,w
 16625  1598  1D03               	skipz
 16626  1599  2D9C               	goto	u610_25
 16627  159A  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16628  159B  0227               	subwf	ModbusSlaveProcessReceivedQuery@i,w
 16629  159C                     u610_25:
 16630  159C  1C03               	skipc
 16631  159D  2D9F               	goto	u610_21
 16632  159E  2DA0               	goto	u610_20
 16633  159F                     u610_21:
 16634  159F  2D83               	goto	i1l6439
 16635  15A0                     u610_20:
 16636  15A0                     i1l6445:
 16637                           
 16638                           ;modbus_slave.c: 161:     modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxValue++] = 
      +                          crcModbusSlave & 0xFF;
 16639  15A0  0864               	movf	_crcModbusSlave,w
 16640  15A1  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16641  15A2  0023               	movlb	3	; select bank3
 16642  15A3  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16643  15A4  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16644  15A5  0086               	movwf	6
 16645  15A6  3001               	movlw	1	; select bank3/4
 16646  15A7  0087               	movwf	7
 16647  15A8  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16648  15A9  0081               	movwf	1
 16649  15AA                     i1l6447:
 16650  15AA  3001               	movlw	1
 16651  15AB  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16652  15AC  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16653  15AD  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 16654  15AE                     i1l6449:
 16655                           
 16656                           ;modbus_slave.c: 162:     modbusSlaveData.ModbusFrame[modbusSlaveData.TotalTxValue++] = 
      +                          crcModbusSlave >> 8;
 16657  15AE  0020               	movlb	0	; select bank0
 16658  15AF  0865               	movf	_crcModbusSlave+1,w
 16659  15B0  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16660  15B1  0023               	movlb	3	; select bank3
 16661  15B2  0848               	movf	(_modbusSlaveData^(0+384)+40),w	;volatile
 16662  15B3  3EB0               	addlw	(low ((_modbusSlaveData| (0+256)+16)))& (0+255)
 16663  15B4  0086               	movwf	6
 16664  15B5  3001               	movlw	1	; select bank3/4
 16665  15B6  0087               	movwf	7
 16666  15B7  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16667  15B8  0081               	movwf	1
 16668  15B9  3001               	movlw	1
 16669  15BA  00F6               	movwf	??_ModbusSlaveProcessReceivedQuery
 16670  15BB  0876               	movf	??_ModbusSlaveProcessReceivedQuery,w
 16671  15BC  07C8               	addwf	(_modbusSlaveData^(0+384)+40),f	;volatile
 16672  15BD                     i1l6451:
 16673                           
 16674                           ;modbus_slave.c: 164:     T1CONbits.TMR1ON = 0;
 16675  15BD  0020               	movlb	0	; select bank0
 16676  15BE  1018               	bcf	24,0	;volatile
 16677  15BF                     i1l6453:
 16678                           
 16679                           ;modbus_slave.c: 165:     modbusSlaveData.TxPointer = 0;
 16680  15BF  0023               	movlb	3	; select bank3
 16681  15C0  01C6               	clrf	(_modbusSlaveData^(0+384)+38)	;volatile
 16682  15C1                     i1l6455:
 16683  15C1  0022               	movlb	2	; select bank2
 16684  15C2  178E               	bsf	14,7	;volatile
 16685  15C3                     i1l6457:
 16686                           
 16687                           ;modbus_slave.c: 167:     PIE1bits.TXIE = 1; TXSTAbits.TXEN = 1;
 16688  15C3  0021               	movlb	1	; select bank1
 16689  15C4  1611               	bsf	17,4	;volatile
 16690  15C5                     i1l6459:
 16691  15C5  0023               	movlb	3	; select bank3
 16692  15C6  169E               	bsf	30,5	;volatile
 16693  15C7                     i1l966:
 16694  15C7  0008               	return
 16695  15C8                     __end_of_ModbusSlaveProcessReceivedQuery:
 16696                           
 16697                           	psect	text89
 16698  1DB7                     __ptext89:	
 16699 ;; *************** function _calculate_crc *****************
 16700 ;; Defined at:
 16701 ;;		line 28 in file "modbus_slave.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;  crcreg          1    wreg     unsigned char 
 16704 ;; Auto vars:     Size  Location     Type
 16705 ;;  crcreg          1    2[COMMON] unsigned char 
 16706 ;;  i               1    5[COMMON] unsigned char 
 16707 ;;  crcbit          2    3[COMMON] unsigned short 
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  1    wreg      void 
 16710 ;; Registers used:
 16711 ;;		wreg, status,2, status,0
 16712 ;; Tracked objects:
 16713 ;;		On entry : 0/0
 16714 ;;		On exit  : 0/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16717 ;;      Params:         0       0       0       0       0       0       0       0
 16718 ;;      Locals:         4       0       0       0       0       0       0       0
 16719 ;;      Temps:          2       0       0       0       0       0       0       0
 16720 ;;      Totals:         6       0       0       0       0       0       0       0
 16721 ;;Total ram usage:        6 bytes
 16722 ;; Hardware stack levels used: 1
 16723 ;; This function calls:
 16724 ;;		Nothing
 16725 ;; This function is called by:
 16726 ;;		_ModbusSlaveProcessReceivedQuery
 16727 ;; This function uses a non-reentrant model
 16728 ;;
 16729                           
 16730  1DB7                     _calculate_crc:	
 16731                           ;psect for function _calculate_crc
 16732                           
 16733                           
 16734                           ;incstack = 0
 16735                           ; Regs used in _calculate_crc: [wreg+status,2+status,0]
 16736                           ;calculate_crc@crcreg stored from wreg
 16737  1DB7  00F2               	movwf	calculate_crc@crcreg
 16738  1DB8                     i1l4283:
 16739                           
 16740                           ;modbus_slave.c: 28: void calculate_crc(uint8_t crcreg);modbus_slave.c: 29: {;modbus_sla
      +                          ve.c: 30:     uint16_t crcbit;;modbus_slave.c: 32:     crcModbusSlave ^= crcreg;
 16741  1DB8  0872               	movf	calculate_crc@crcreg,w
 16742  1DB9  00F0               	movwf	??_calculate_crc
 16743  1DBA  01F1               	clrf	??_calculate_crc+1
 16744  1DBB  0870               	movf	??_calculate_crc,w
 16745  1DBC  0020               	movlb	0	; select bank0
 16746  1DBD  06E4               	xorwf	_crcModbusSlave,f
 16747  1DBE  0871               	movf	??_calculate_crc+1,w
 16748  1DBF  06E5               	xorwf	_crcModbusSlave+1,f
 16749  1DC0                     i1l4285:
 16750                           
 16751                           ;modbus_slave.c: 33:     for(uint8_t i=0; i<=7; i++)
 16752  1DC0  01F5               	clrf	calculate_crc@i
 16753  1DC1                     i1l4291:
 16754                           
 16755                           ;modbus_slave.c: 34:     {;modbus_slave.c: 35:         crcbit = 0;
 16756  1DC1  01F3               	clrf	calculate_crc@crcbit
 16757  1DC2  01F4               	clrf	calculate_crc@crcbit+1
 16758  1DC3                     i1l4293:
 16759                           
 16760                           ;modbus_slave.c: 36:         if((crcModbusSlave & 0x0001) == 0x0001)
 16761  1DC3  1C64               	btfss	_crcModbusSlave,0
 16762  1DC4  2DC6               	goto	u303_21
 16763  1DC5  2DC7               	goto	u303_20
 16764  1DC6                     u303_21:
 16765  1DC6  2DCB               	goto	i1l4297
 16766  1DC7                     u303_20:
 16767  1DC7                     i1l4295:
 16768                           
 16769                           ;modbus_slave.c: 37:             crcbit = 1;
 16770  1DC7  3001               	movlw	1
 16771  1DC8  00F3               	movwf	calculate_crc@crcbit
 16772  1DC9  3000               	movlw	0
 16773  1DCA  00F4               	movwf	calculate_crc@crcbit+1
 16774  1DCB                     i1l4297:
 16775                           
 16776                           ;modbus_slave.c: 39:         crcModbusSlave >>= 1;
 16777  1DCB  3001               	movlw	1
 16778  1DCC                     u304_25:
 16779  1DCC  36E5               	lsrf	_crcModbusSlave+1,f
 16780  1DCD  0CE4               	rrf	_crcModbusSlave,f
 16781  1DCE  0B89               	decfsz	9,f
 16782  1DCF  2DCC               	goto	u304_25
 16783  1DD0                     i1l4299:
 16784                           
 16785                           ;modbus_slave.c: 40:         if(crcbit)
 16786  1DD0  0873               	movf	calculate_crc@crcbit,w
 16787  1DD1  0474               	iorwf	calculate_crc@crcbit+1,w
 16788  1DD2  1903               	btfsc	3,2
 16789  1DD3  2DD5               	goto	u305_21
 16790  1DD4  2DD6               	goto	u305_20
 16791  1DD5                     u305_21:
 16792  1DD5  2DDA               	goto	i1l4303
 16793  1DD6                     u305_20:
 16794  1DD6                     i1l4301:
 16795                           
 16796                           ;modbus_slave.c: 41:             crcModbusSlave ^= 0xa001;
 16797  1DD6  3001               	movlw	1
 16798  1DD7  06E4               	xorwf	_crcModbusSlave,f
 16799  1DD8  30A0               	movlw	160
 16800  1DD9  06E5               	xorwf	_crcModbusSlave+1,f
 16801  1DDA                     i1l4303:
 16802                           
 16803                           ;modbus_slave.c: 42:     }
 16804  1DDA  3001               	movlw	1
 16805  1DDB  00F0               	movwf	??_calculate_crc
 16806  1DDC  0870               	movf	??_calculate_crc,w
 16807  1DDD  07F5               	addwf	calculate_crc@i,f
 16808  1DDE                     i1l4305:
 16809  1DDE  3008               	movlw	8
 16810  1DDF  0275               	subwf	calculate_crc@i,w
 16811  1DE0  1C03               	skipc
 16812  1DE1  2DE3               	goto	u306_21
 16813  1DE2  2DE4               	goto	u306_20
 16814  1DE3                     u306_21:
 16815  1DE3  2DC1               	goto	i1l4291
 16816  1DE4                     u306_20:
 16817  1DE4                     i1l940:
 16818  1DE4  0008               	return
 16819  1DE5                     __end_of_calculate_crc:
 16820                           
 16821                           	psect	text90
 16822  1B7F                     __ptext90:	
 16823 ;; *************** function _TMR1_ISR *****************
 16824 ;; Defined at:
 16825 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;		None
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2, status,0, pclath, cstack
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16839 ;;      Params:         0       0       0       0       0       0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0
 16842 ;;      Totals:         0       0       0       0       0       0       0       0
 16843 ;;Total ram usage:        0 bytes
 16844 ;; Hardware stack levels used: 1
 16845 ;; Hardware stack levels required when called: 2
 16846 ;; This function calls:
 16847 ;;		_TMR1_CallBack
 16848 ;;		_TMR1_WriteTimer
 16849 ;; This function is called by:
 16850 ;;		_INTERRUPT_InterruptManager
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854  1B7F                     _TMR1_ISR:	
 16855                           ;psect for function _TMR1_ISR
 16856                           
 16857  1B7F                     i1l5019:	
 16858                           ;incstack = 0
 16859                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16860                           
 16861                           
 16862                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 16863  1B7F  0020               	movlb	0	; select bank0
 16864  1B80  1011               	bcf	17,0	;volatile
 16865  1B81                     i1l5021:
 16866                           
 16867                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 16868  1B81  0861               	movf	_timer1ReloadVal+1,w	;volatile
 16869  1B82  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16870  1B83  0860               	movf	_timer1ReloadVal,w	;volatile
 16871  1B84  00F0               	movwf	TMR1_WriteTimer@timerVal
 16872  1B85  3188  2000  319B   	fcall	_TMR1_WriteTimer
 16873                           
 16874                           ;mcc_generated_files/tmr1.c: 167:     TMR1_CallBack();
 16875  1B88  319B  2372  319B   	fcall	_TMR1_CallBack
 16876  1B8B                     i1l728:
 16877  1B8B  0008               	return
 16878  1B8C                     __end_of_TMR1_ISR:
 16879                           
 16880                           	psect	text91
 16881  0800                     __ptext91:	
 16882 ;; *************** function _TMR1_WriteTimer *****************
 16883 ;; Defined at:
 16884 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;  timerVal        2    0[COMMON] unsigned short 
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;		None
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      void 
 16891 ;; Registers used:
 16892 ;;		wreg, status,2
 16893 ;; Tracked objects:
 16894 ;;		On entry : 0/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16898 ;;      Params:         2       0       0       0       0       0       0       0
 16899 ;;      Locals:         0       0       0       0       0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0
 16901 ;;      Totals:         2       0       0       0       0       0       0       0
 16902 ;;Total ram usage:        2 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; This function calls:
 16905 ;;		Nothing
 16906 ;; This function is called by:
 16907 ;;		_TMR1_ISR
 16908 ;;		_TMR1_Reload
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912  0800                     _TMR1_WriteTimer:	
 16913                           ;psect for function _TMR1_WriteTimer
 16914                           
 16915  0800                     i1l4739:	
 16916                           ;incstack = 0
 16917                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16918                           
 16919                           
 16920                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.nT1SYNC == 1)
 16921  0800  0020               	movlb	0	; select bank0
 16922  0801  1D18               	btfss	24,2	;volatile
 16923  0802  2804               	goto	u376_21
 16924  0803  2805               	goto	u376_20
 16925  0804                     u376_21:
 16926  0804  280C               	goto	i1l4749
 16927  0805                     u376_20:
 16928  0805                     i1l4741:
 16929                           
 16930                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 16931  0805  1018               	bcf	24,0	;volatile
 16932  0806                     i1l4743:
 16933                           
 16934                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
 16935  0806  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16936  0807  0097               	movwf	23	;volatile
 16937  0808                     i1l4745:
 16938                           
 16939                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
 16940  0808  0870               	movf	TMR1_WriteTimer@timerVal,w
 16941  0809  0096               	movwf	22	;volatile
 16942  080A                     i1l4747:
 16943                           
 16944                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 16945  080A  1418               	bsf	24,0	;volatile
 16946                           
 16947                           ;mcc_generated_files/tmr1.c: 134:     }
 16948  080B  2810               	goto	i1l716
 16949  080C                     i1l4749:
 16950                           
 16951                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 16952  080C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16953  080D  0097               	movwf	23	;volatile
 16954  080E                     i1l4751:
 16955                           
 16956                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
 16957  080E  0870               	movf	TMR1_WriteTimer@timerVal,w
 16958  080F  0096               	movwf	22	;volatile
 16959  0810                     i1l716:
 16960  0810  0008               	return
 16961  0811                     __end_of_TMR1_WriteTimer:
 16962                           
 16963                           	psect	text92
 16964  1B72                     __ptext92:	
 16965 ;; *************** function _TMR1_CallBack *****************
 16966 ;; Defined at:
 16967 ;;		line 170 in file "mcc_generated_files/tmr1.c"
 16968 ;; Parameters:    Size  Location     Type
 16969 ;;		None
 16970 ;; Auto vars:     Size  Location     Type
 16971 ;;		None
 16972 ;; Return value:  Size  Location     Type
 16973 ;;                  1    wreg      void 
 16974 ;; Registers used:
 16975 ;;		wreg, status,2, status,0, pclath, cstack
 16976 ;; Tracked objects:
 16977 ;;		On entry : 0/0
 16978 ;;		On exit  : 0/0
 16979 ;;		Unchanged: 0/0
 16980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 16981 ;;      Params:         0       0       0       0       0       0       0       0
 16982 ;;      Locals:         0       0       0       0       0       0       0       0
 16983 ;;      Temps:          0       0       0       0       0       0       0       0
 16984 ;;      Totals:         0       0       0       0       0       0       0       0
 16985 ;;Total ram usage:        0 bytes
 16986 ;; Hardware stack levels used: 1
 16987 ;; Hardware stack levels required when called: 1
 16988 ;; This function calls:
 16989 ;;		Absolute function
 16990 ;;		_mbus_timer_handler
 16991 ;; This function is called by:
 16992 ;;		_TMR1_ISR
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996  1B72                     _TMR1_CallBack:	
 16997                           ;psect for function _TMR1_CallBack
 16998                           
 16999  1B72                     i1l4753:	
 17000                           ;incstack = 0
 17001                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17002                           
 17003                           
 17004                           ;mcc_generated_files/tmr1.c: 173:     if(TMR1_InterruptHandler)
 17005  1B72  0020               	movlb	0	; select bank0
 17006  1B73  085E               	movf	_TMR1_InterruptHandler,w
 17007  1B74  045F               	iorwf	_TMR1_InterruptHandler+1,w
 17008  1B75  1903               	btfsc	3,2
 17009  1B76  2B78               	goto	u377_21
 17010  1B77  2B79               	goto	u377_20
 17011  1B78                     u377_21:
 17012  1B78  2B7E               	goto	i1l732
 17013  1B79                     u377_20:
 17014  1B79                     i1l4755:
 17015                           
 17016                           ;mcc_generated_files/tmr1.c: 174:     {;mcc_generated_files/tmr1.c: 175:         TMR1_In
      +                          terruptHandler();
 17017  1B79  085F               	movf	_TMR1_InterruptHandler+1,w
 17018  1B7A  008A               	movwf	10
 17019  1B7B  085E               	movf	_TMR1_InterruptHandler,w
 17020  1B7C  000A               	callw
 17021  1B7D  319B               	pagesel	$
 17022  1B7E                     i1l732:
 17023  1B7E  0008               	return
 17024  1B7F                     __end_of_TMR1_CallBack:
 17025                           
 17026                           	psect	text93
 17027  1B59                     __ptext93:	
 17028 ;; *************** function _mbus_timer_handler *****************
 17029 ;; Defined at:
 17030 ;;		line 82 in file "modbus_slave.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;		None
 17033 ;; Auto vars:     Size  Location     Type
 17034 ;;		None
 17035 ;; Return value:  Size  Location     Type
 17036 ;;                  1    wreg      void 
 17037 ;; Registers used:
 17038 ;;		wreg, status,2
 17039 ;; Tracked objects:
 17040 ;;		On entry : 0/0
 17041 ;;		On exit  : 0/0
 17042 ;;		Unchanged: 0/0
 17043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 17044 ;;      Params:         0       0       0       0       0       0       0       0
 17045 ;;      Locals:         0       0       0       0       0       0       0       0
 17046 ;;      Temps:          1       0       0       0       0       0       0       0
 17047 ;;      Totals:         1       0       0       0       0       0       0       0
 17048 ;;Total ram usage:        1 bytes
 17049 ;; Hardware stack levels used: 1
 17050 ;; This function calls:
 17051 ;;		Nothing
 17052 ;; This function is called by:
 17053 ;;		_TMR1_Initialize
 17054 ;;		_TMR1_CallBack
 17055 ;; This function uses a non-reentrant model
 17056 ;;
 17057                           
 17058  1B59                     _mbus_timer_handler:	
 17059                           ;psect for function _mbus_timer_handler
 17060                           
 17061  1B59                     i1l4307:	
 17062                           ;incstack = 0
 17063                           ; Regs used in _mbus_timer_handler: [wreg+status,2]
 17064                           
 17065                           
 17066                           ;modbus_slave.c: 84:     TMR1L = 0x00; TMR1H = 0xE0; PIR1bits.TMR1IF = 0;;
 17067  1B59  0020               	movlb	0	; select bank0
 17068  1B5A  0196               	clrf	22	;volatile
 17069  1B5B                     i1l4309:
 17070  1B5B  30E0               	movlw	224
 17071  1B5C  0097               	movwf	23	;volatile
 17072  1B5D                     i1l4311:
 17073  1B5D  1011               	bcf	17,0	;volatile
 17074  1B5E                     i1l4313:
 17075                           
 17076                           ;modbus_slave.c: 85:     modbusSlaveData.RxPointer = 0; modbusSlaveData.TotalRxValue = 8
      +                          ;;
 17077  1B5E  0023               	movlb	3	; select bank3
 17078  1B5F  01C7               	clrf	(_modbusSlaveData^(0+384)+39)	;volatile
 17079  1B60  3008               	movlw	8
 17080  1B61  00F0               	movwf	??_mbus_timer_handler
 17081  1B62  0870               	movf	??_mbus_timer_handler,w
 17082  1B63  00C9               	movwf	(_modbusSlaveData^(0+384)+41)	;volatile
 17083  1B64                     i1l959:
 17084  1B64  0008               	return
 17085  1B65                     __end_of_mbus_timer_handler:
 17086                           
 17087                           	psect	text94
 17088  1B09                     __ptext94:	
 17089 ;; *************** function _TMR0_ISR *****************
 17090 ;; Defined at:
 17091 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;		None
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  1    wreg      void 
 17098 ;; Registers used:
 17099 ;;		wreg, status,2, status,0, pclath, cstack
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/0
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 17105 ;;      Params:         0       0       0       0       0       0       0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0
 17107 ;;      Temps:          0       0       0       0       0       0       0       0
 17108 ;;      Totals:         0       0       0       0       0       0       0       0
 17109 ;;Total ram usage:        0 bytes
 17110 ;; Hardware stack levels used: 1
 17111 ;; Hardware stack levels required when called: 2
 17112 ;; This function calls:
 17113 ;;		_TMR0_CallBack
 17114 ;; This function is called by:
 17115 ;;		_INTERRUPT_InterruptManager
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119  1B09                     _TMR0_ISR:	
 17120                           ;psect for function _TMR0_ISR
 17121                           
 17122  1B09                     i1l5013:	
 17123                           ;incstack = 0
 17124                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17125                           
 17126                           
 17127                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 17128  1B09  110B               	bcf	11,2	;volatile
 17129  1B0A                     i1l5015:
 17130                           
 17131                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 17132  1B0A  0020               	movlb	0	; select bank0
 17133  1B0B  0862               	movf	_timer0ReloadVal,w	;volatile
 17134  1B0C  0095               	movwf	21	;volatile
 17135  1B0D                     i1l5017:
 17136                           
 17137                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
 17138  1B0D  319B  2365  319B   	fcall	_TMR0_CallBack
 17139  1B10                     i1l769:
 17140  1B10  0008               	return
 17141  1B11                     __end_of_TMR0_ISR:
 17142                           
 17143                           	psect	text95
 17144  1B65                     __ptext95:	
 17145 ;; *************** function _TMR0_CallBack *****************
 17146 ;; Defined at:
 17147 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;		None
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;		None
 17152 ;; Return value:  Size  Location     Type
 17153 ;;                  1    wreg      void 
 17154 ;; Registers used:
 17155 ;;		wreg, status,2, status,0, pclath, cstack
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 17161 ;;      Params:         0       0       0       0       0       0       0       0
 17162 ;;      Locals:         0       0       0       0       0       0       0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0
 17164 ;;      Totals:         0       0       0       0       0       0       0       0
 17165 ;;Total ram usage:        0 bytes
 17166 ;; Hardware stack levels used: 1
 17167 ;; Hardware stack levels required when called: 1
 17168 ;; This function calls:
 17169 ;;		Absolute function
 17170 ;;		_TMR0_DefaultInterruptHandler
 17171 ;; This function is called by:
 17172 ;;		_TMR0_ISR
 17173 ;; This function uses a non-reentrant model
 17174 ;;
 17175                           
 17176  1B65                     _TMR0_CallBack:	
 17177                           ;psect for function _TMR0_CallBack
 17178                           
 17179  1B65                     i1l4757:	
 17180                           ;incstack = 0
 17181                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17182                           
 17183                           
 17184                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 17185  1B65  0020               	movlb	0	; select bank0
 17186  1B66  085C               	movf	_TMR0_InterruptHandler,w
 17187  1B67  045D               	iorwf	_TMR0_InterruptHandler+1,w
 17188  1B68  1903               	btfsc	3,2
 17189  1B69  2B6B               	goto	u378_21
 17190  1B6A  2B6C               	goto	u378_20
 17191  1B6B                     u378_21:
 17192  1B6B  2B71               	goto	i1l773
 17193  1B6C                     u378_20:
 17194  1B6C                     i1l4759:
 17195                           
 17196                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 17197  1B6C  085D               	movf	_TMR0_InterruptHandler+1,w
 17198  1B6D  008A               	movwf	10
 17199  1B6E  085C               	movf	_TMR0_InterruptHandler,w
 17200  1B6F  000A               	callw
 17201  1B70  319B               	pagesel	$
 17202  1B71                     i1l773:
 17203  1B71  0008               	return
 17204  1B72                     __end_of_TMR0_CallBack:
 17205                           
 17206                           	psect	text96
 17207  1A77                     __ptext96:	
 17208 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17209 ;; Defined at:
 17210 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;		None
 17213 ;; Auto vars:     Size  Location     Type
 17214 ;;		None
 17215 ;; Return value:  Size  Location     Type
 17216 ;;                  1    wreg      void 
 17217 ;; Registers used:
 17218 ;;		None
 17219 ;; Tracked objects:
 17220 ;;		On entry : 0/0
 17221 ;;		On exit  : 0/0
 17222 ;;		Unchanged: 0/0
 17223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 17224 ;;      Params:         0       0       0       0       0       0       0       0
 17225 ;;      Locals:         0       0       0       0       0       0       0       0
 17226 ;;      Temps:          0       0       0       0       0       0       0       0
 17227 ;;      Totals:         0       0       0       0       0       0       0       0
 17228 ;;Total ram usage:        0 bytes
 17229 ;; Hardware stack levels used: 1
 17230 ;; This function calls:
 17231 ;;		Nothing
 17232 ;; This function is called by:
 17233 ;;		_TMR0_Initialize
 17234 ;;		_TMR0_CallBack
 17235 ;; This function uses a non-reentrant model
 17236 ;;
 17237                           
 17238  1A77                     _TMR0_DefaultInterruptHandler:	
 17239                           ;psect for function _TMR0_DefaultInterruptHandler
 17240                           
 17241  1A77                     i1l779:	
 17242                           ;incstack = 0
 17243                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17244                           
 17245  1A77  0008               	return
 17246  1A78                     __end_of_TMR0_DefaultInterruptHandler:
 17247  007E                     btemp	set	126	;btemp
 17248  007E                     int$flags	set	126
 17249  007E                     wtemp0	set	126
 17250                           
 17251                           	psect	idloc
 17252                           
 17253                           ;Config register IDLOC0 @ 0x8000
 17254                           ;	unspecified, using default values
 17255  8000                     	org	32768
 17256  8000  3FFF               	dw	16383
 17257                           
 17258                           ;Config register IDLOC1 @ 0x8001
 17259                           ;	unspecified, using default values
 17260  8001                     	org	32769
 17261  8001  3FFF               	dw	16383
 17262                           
 17263                           ;Config register IDLOC2 @ 0x8002
 17264                           ;	unspecified, using default values
 17265  8002                     	org	32770
 17266  8002  3FFF               	dw	16383
 17267                           
 17268                           ;Config register IDLOC3 @ 0x8003
 17269                           ;	unspecified, using default values
 17270  8003                     	org	32771
 17271  8003  3FFF               	dw	16383
 17272                           
 17273                           	psect	config
 17274                           
 17275                           ;Config register CONFIG1 @ 0x8007
 17276                           ;	Oscillator Selection Bits
 17277                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 17278                           ;	Watchdog Timer Enable
 17279                           ;	WDTE = ON, WDT enabled
 17280                           ;	Power-up Timer Enable
 17281                           ;	PWRTE = OFF, PWRT disabled
 17282                           ;	MCLR Pin Function Select
 17283                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 17284                           ;	Flash Program Memory Code Protection
 17285                           ;	CP = OFF, Program memory code protection is disabled
 17286                           ;	Brown-out Reset Enable
 17287                           ;	BOREN = ON, Brown-out Reset enabled
 17288                           ;	Clock Out Enable
 17289                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 17290                           ;	Internal/External Switchover Mode
 17291                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 17292                           ;	Fail-Safe Clock Monitor Enable
 17293                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 17294  8007                     	org	32775
 17295  8007  3FFA               	dw	16378
 17296                           
 17297                           ;Config register CONFIG2 @ 0x8008
 17298                           ;	Flash Memory Self-Write Protection
 17299                           ;	WRT = OFF, Write protection off
 17300                           ;	Stack Overflow/Underflow Reset Enable
 17301                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 17302                           ;	Brown-out Reset Voltage Selection
 17303                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 17304                           ;	Low-Power Brown Out Reset
 17305                           ;	LPBOR = OFF, Low-Power BOR is disabled
 17306                           ;	Low-Voltage Programming Enable
 17307                           ;	LVP = ON, Low-voltage programming enabled
 17308  8008                     	org	32776
 17309  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    56
    Data        2
    BSS         206
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     49      70
    BANK1            80     79      79
    BANK2            80     78      80
    BANK3            80     26      80
    BANK4            80      0      67
    BANK5            80      0      80
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2283$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2288	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2283	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2282	const PTR FTN()enum E3885 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    MCP3422_Read@data	PTR unsigned char  size(1) Largest target is 3
		 -> MCP3422_ReadVoltage@data(BANK1[3]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 16
		 -> main@u16CalBuffer(BANK3[16]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_timer_handler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_timer_handler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_rx_handler(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_tx_handler(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> MCP3422_ReadVoltage@data(BANK1[3]), MCP3422_Write@data(BANK0[1]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S447$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3885[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_rx_handler(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mbus_tx_handler(), Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 3
		 -> MCP3422_ReadVoltage@data(BANK1[3]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> MCP3422_Write@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mbus_rx_handler->_ModbusSlaveProcessReceivedQuery
    _ModbusSlaveProcessReceivedQuery->_calculate_crc
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->_mbus_timer_handler

Critical Paths under _main in BANK0

    _main->___flmul
    _map->___flmul
    ___fltol->___flmul
    _logf->___flmul
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fldiv->___flmul
    ___flge->___xxtofl
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MCP3422_ReadVoltage->___flmul
    ___flmul->___fladd
    _MCP3422_Write->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _MCP3422_Read->_I2C_ReadNBytes
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_mbus_rx_handler
    _mbus_rx_handler->_ModbusSlaveProcessReceivedQuery

Critical Paths under _main in BANK1

    _main->_map
    _map->___fltol
    ___fltol->___fldiv
    _get_ntc_temperature->_logf
    _logf->___fldiv
    ___fldiv->___flmul
    _MCP3422_ReadVoltage->___flmul
    ___flmul->___flsub

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_get_ntc_temperature
    _get_ntc_temperature->_logf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  246345
                                             78 BANK1      1     1      0
                                              0 BANK3     26    26      0
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                    _InitModbusSlave
                _MCP3422_ReadVoltage
                  _SYSTEM_Initialize
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                _get_ntc_temperature
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 32    12     20   24289
                                             66 BANK1     12    12      0
                                              0 BANK2     20     0     20
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4    1147
                                             55 BANK1     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_ntc_temperature                                 16    12      4   39427
                                             67 BANK1      4     0      4
                                             66 BANK2     12    12      0
                            ___fladd
                            ___fldiv
                            ___flsub
                               _logf
 ---------------------------------------------------------------------------------
 (2) _logf                                                78    74      4   24168
                                             55 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                          __Umul8_16 (ARG)
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    5282
                                             24 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    3483
                                             29 BANK1     26    18      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     790
                                             24 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     686
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      98
                                             12 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                             12 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP3422_ReadVoltage                                 16    12      4  169759
                                             29 BANK1     16    12      4
                       _MCP3422_Read
                      _MCP3422_Write
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1376
                                             10 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    6233
                                             44 BANK0      5     5      0
                                              8 BANK1     21    13      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                             10 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _MCP3422_Write                                        2     2      0   81835
                                             33 BANK0      2     2      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      4     1      3   81810
                                             29 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3    1870
                                             15 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (2) _MCP3422_Read                                         5     4      1   80093
                                             33 BANK0      5     4      1
                     _I2C_ReadNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       4     1      3   79940
                                             29 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      46
                                             10 BANK0      3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0   78300
                                             26 BANK0      3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   78254
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0   78254
                                             23 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   19569
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   19547
                                             20 BANK0      3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3852
                                             19 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                             15 BANK0      4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3     914
                                             10 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    1352
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                             19 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     265
                                             19 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      24
                                             10 BANK0      2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitModbusSlave                                      2     2      0      22
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _FLASH_WriteBlock                                    10     7      3     760
                                             13 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_EraseBlock                                     3     1      2     143
                                             10 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _FLASH_ReadWord                                       3     1      2     447
                                             10 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          0     0      0     978
                   Absolute function *
                           _TMR0_ISR
                           _TMR1_ISR
                    _mbus_rx_handler *
                    _mbus_tx_handler *
 ---------------------------------------------------------------------------------
 (13) _mbus_tx_handler                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _mbus_rx_handler                                     1     1      0     738
                                              9 BANK0      1     1      0
    _ModbusSlaveProcessReceivedQuery
 ---------------------------------------------------------------------------------
 (14) _ModbusSlaveProcessReceivedQuery                    15    15      0     738
                                              6 COMMON     6     6      0
                                              0 BANK0      9     9      0
                      _calculate_crc
 ---------------------------------------------------------------------------------
 (15) _calculate_crc                                       6     6      0      92
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
                 _mbus_timer_handler *
 ---------------------------------------------------------------------------------
 (15) _mbus_timer_handler                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FLASH_ReadWord
   _FLASH_WriteBlock
     _FLASH_EraseBlock
   _InitModbusSlave
   _MCP3422_ReadVoltage
     _MCP3422_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
     _MCP3422_Write
       _I2C_WriteNBytes
         _I2C_Close
         _I2C_MasterWrite
           _I2C_MasterOperation
         _I2C_Open
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___flmul
       __Umul8_16
       ___fladd (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         __Umul8_16 (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   ___flge
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fladd (ARG)
     ___fldiv (ARG)
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _get_ntc_temperature
     ___fladd
     ___fldiv
     ___flsub
     _logf
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
       ___xxtofl
   _map
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _TMR0_ISR *
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     _TMR1_CallBack
       Absolute function(Fake) *
       _mbus_timer_handler *
     _TMR1_WriteTimer
   _mbus_rx_handler *
     _ModbusSlaveProcessReceivedQuery
       _calculate_crc
   _mbus_tx_handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1D6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     31      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4F      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     4E      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     1A      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      43      14       83.8%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     1D6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 06 16:53:38 2023

                ?_EUSART_SetRxInterruptHandler 002A                         ??_I2C_DO_SEND_ADR_READ 002A  
                                 ___fldiv@aexp 00D6                                   ___fldiv@bexp 00D5  
                                 ___fldiv@sign 00CE                        ??_I2C_DO_SEND_ADR_WRITE 002B  
                                           l90 1BFA                                             l93 1C0D  
                                           l69 1DB6                                             l78 1D46  
                                           l96 1C20                                             l99 1BE7  
                              _timer0ReloadVal 0062                          ??_I2C_DO_SEND_RESTART 002A  
                          __Umul8_16@word_mpld 0030                                   main@u16TdVal 01D2  
                                          l102 1CC4                                            l302 1F4D  
                                          l303 1F4F                                            l160 1C91  
                                          l313 1D69                                            l402 1EA4  
                                          l307 1D25                                            l420 1AAA  
                                          l316 1AD2                                            l501 1A98  
                                          l326 1C78                                            l423 1AAF  
                                          l319 1AD7                                            l335 1BC2  
                                          l432 1ABE                                            l352 1B98  
                                          l192 1AA0                                            l329 1BA6  
                                          l441 1ACD                                            l346 07FD  
                                          l522 1A94                                            l362 1B21  
                                          l426 1AB4                                            l186 1C61  
                                          l371 1067                                            l435 1AC3  
                                          l516 1A82                                            l356 1E12  
                                          l604 1F93                                            l365 1B18  
                                          l429 1AB9                                            l525 1AE4  
                                          l189 1AEF                                            l438 1AC8  
                                          l702 1CAA                                            l519 1A7C  
                                          l471 1A7F                                            l455 1A79  
                                          l359 1AA5                                            l447 1E72  
                                          l480 1A88                                            l368 104A  
                                          l384 1FB4                                            l385 1FDF  
                                          l529 1AE9                                            l802 1CE4  
                                          l810 107E                                            l458 0003  
                                          l474 1A91                                            l811 10D5  
                                          l299 1B58                                            l492 1A8B  
                                          l396 1B08                                            l468 1BB4  
                                          l813 10CD                                            l477 1ADD  
                                          l661 1B33                                            l486 1A8E  
                                          l670 1B4E                                            l495 1AE3  
                                          l735 1AFB                                            l664 1B3C  
                                          l817 1D04                                            l489 1A85  
                                          l673 1B45                                            l498 1A9C  
                                          l851 100E                                            l667 1B2A  
                                          l933 1C35                                            l757 1C4B  
                                          l854 1BD4                                            l862 09A3  
                                          l776 1AF5                                            l848 1417  
                                          l881 0D58                                            l859 11C6  
                                          l886 0DE4                                            l887 0E40  
                                          l897 0F4B                                            _Lg1 182C  
                                          _Lg2 1828                                            _Lg3 1824  
                                          _Lg4 1820                                _timer1ReloadVal 0060  
                                          _map 12FF                         _I2C_MasterWaitForEvent 1AE4  
               ?_EUSART_SetFramingErrorHandler 002A                            _MCP3422_ReadVoltage 114B  
                            ??_InitModbusSlave 002A                                            wreg 0009  
                                 ___flmul@aexp 00B1                                   ___flmul@bexp 00B6  
                 ??_I2C_SetAddressNackCallback 0032                                   ___flmul@sign 00B0  
                                 ___flmul@temp 00BB                                   ___flmul@prod 00B7  
               FLASH_WriteBlock@flashWordArray 002F                       ??_I2C_CallbackReturnStop 0034  
                                 _I2C_DO_RESET 1AC9                                   ___fltol@exp1 00E1  
                      ??_rd2RegCompleteHandler 0034                                           l1231 11E4  
                                         l1400 1F0E                                           l1234 1238  
                                         l1410 0676                                           l1500 12B0  
                                         l1412 07D2                                           l1254 1135  
                                         l1239 1251                                           l1431 07A0  
                                         l1247 114A                                           l1432 07BA  
                                         l1360 16A3                                           l4001 1F40  
                                         l1257 114A                                           l1450 0C9C  
                                         l1434 07C9                                           l1426 0754  
                                         l1354 1626                                           l4003 1F45  
                                         l4011 1BB5                                           l1507 12CA  
                                         l1508 12D6                                           l1532 061E  
                                         l4021 1D0E                                           l4005 1F48  
                                         l4013 1AD3                                           l1462 0C8E  
                                         l1358 16C7                                           l4023 1D14  
                                         l4031 1D23                                           l4007 1F4B  
                                         l1471 1D8D                                           l1375 1759  
                                         l1367 17FF                                           l1456 0BFF  
                                         l4025 1D17                                           l4017 1D05  
                                         l1385 179D                                           l4027 1D1A  
                                         l4019 1D0D                                           l4035 1ACE  
                                         l1379 177B                                           l1396 17F6  
                                         l1388 17D4                                           l5101 10C7  
                                         l4029 1D1D                                           l1469 1D7D  
                                         l1397 17FF                                           l1494 1275  
                                         l5103 10CF                                           l1496 12FE  
                                         l5041 1CCE                                           l5201 124E  
                                         l6001 0709                                           l5051 1CD6  
                                         l5043 1CD2                                           l5035 1CC5  
                                         l4251 1D9A                                           l5203 1250  
                                         l6011 0724                                           l6003 070D  
                                         l5053 1CDC                                           l5045 1CD3  
                                         l5037 1CCA                                           l5061 1073  
                                         l5141 1C33                                           l3701 1CC3  
                                         l4261 1D28                                           l4253 1DA3  
                                         l6101 0A0B                                           l6021 0738  
                                         l6013 0728                                           l6005 0713  
                                         l5047 1CD4                                           l5039 1CCB  
                                         l5071 1089                                           l5135 1C23  
                                         l3711 1AA6                                           l4263 1D32  
                                         l4255 1DAB                                           l4247 1D90  
                                         l6111 0A62                                           l4271 1B46  
                                         l6031 0759                                           l6023 0739  
                                         l6015 0729                                           l6007 071B  
                                         l5049 1CD5                                           l5081 108F  
                                         l5073 108A                                           l5065 107F  
                                         l5057 1068                                           l5137 1C26  
                                         l3705 1ADE                                           l3713 1AA9  
                                         l4265 1D3B                                           l4257 1DAE  
                                         l4249 1D90                                           l6121 0ACF  
                                         l6113 0A77                                           l6105 0A14  
                                         l6201 1254                                           l4273 1B2B  
                                         l4281 1AF0                                           l6033 075E  
                                         l6041 0786                                           l6025 073D  
                                         l6017 0730                                           l6009 071D  
                                         l5091 10B6                                           l5083 1093  
                                         l5067 1086                                           l5059 106F  
                                         l5139 1C2C                                           l3651 07EE  
                                         l3811 104C                                           l3803 1020  
                                         l3723 1AB5                                           l4267 1D3E  
                                         l4259 1D28                                           l6131 0B1A  
                                         l6123 0AE1                                           l6115 0A9E  
                                         l6107 0A26                                           l6203 1259  
                                         l4275 1B34                                           l6051 07BF  
                                         l6043 0793                                           l6035 0766  
                                         l6027 0751                                           l6019 0734  
                                         l5093 10BB                                           l5085 109E  
                                         l5069 1088                                           l3661 1A86  
                                         l3653 1B99                                           l3733 1A99  
                                         l3709 1ADA                                           l3813 1059  
                                         l3717 1AAB                                           l3725 1AB8  
                                         l3741 1ABF                                           l3901 1E42  
                                         l6141 0B84                                           l6133 0B21  
                                         l6125 0AE8                                           l6117 0AB3  
                                         l6109 0A3B                                           l6061 09A4  
                                         l6221 12A1                                           l6213 1286  
                                         l6205 125D                                           l4277 1B22  
                                         l4269 1B3D                                           l4701 1C42  
                                         l6053 07C3                                           l6045 07AE  
                                         l6037 076A                                           l6301 0178  
                                         ?_map 0120                                           l5095 10BC  
                                         l5087 10AD                                           l5079 108C  
                                         l3663 1A89                                           l3655 1C64  
                                         l3647 07D5                                           l3671 1BF9  
                                         l3815 1064                                           l3831 1FAF  
                                         l3719 1AAE                                           l3751 1AB3  
                                         l3743 1AC2                                           l3735 1AC4  
                                         l3903 1E44                                           l6151 0BCB  
                                         l6143 0BA9                                           l6135 0B3A  
                                         l6127 0AFA                                           l6119 0AC8  
                                         l6071 09BC                                           l6063 09AC  
                                         l6231 12CE                                           l6223 12A9  
                                         l6215 128B                                           l6207 126D  
                                         l4703 1C43                                           l4279 1AF6  
                                         l5191 11F8                                           l6055 07C5  
                                         l6047 07B1                                           l6039 0782  
                                         l6303 0195                                           l5097 10BD  
                                         l5089 10B4                                           l3657 1C69  
                                         l3649 07DB                                           l3761 0002  
                                         l3665 1A95                                           l3729 1A8F  
                                         l3817 1066                                           l3809 1024  
                                         l3833 1FB2                                           l3825 1F94  
                                         l3737 1AC7                                           l3905 1E4B  
                                         l6161 0BDC                                           l6153 0BCC  
                                         l6145 0BB0                                           l6137 0B4C  
                                         l6129 0B01                                           l6081 09DA  
                                         l6073 09C1                                           l6065 09B2  
                                         l6241 12F6                                           l6233 12D8  
                                         l6225 12B7                                           l6217 1296  
                                         l6209 127D                                           l4705 1C44  
                                         l5193 1200                                           l6049 07B9  
                                         l6321 01D6                                           l6313 01B7  
                                         l6305 01A4                                           l5099 10C3  
                                         l3659 1C77                                           l3691 1BD5  
                                         l3667 1BE8                                           l3675 1BFB  
                                         l3683 1C0E                                           l3747 1A8C  
                                         l3755 1A92                                           l3771 1AA4  
                                         l3843 1FBA                                           l3827 1FA0  
                                         l3915 1E53                                           l3931 1DFB  
                                         l3923 1DE5                                           l6171 0C0A  
                                         l6163 0BE0                                           l6155 0BD3  
                                         l6147 0BC0                                           l6139 0B65  
                                         l6091 09EF                                           l6083 09E0  
                                         l6075 09C9                                           l6067 09B6  
                                         l6235 12EC                                           l6227 12C0  
                                         l6219 129D                                           l6251 1F64  
                                         l4651 1C82                                           l5195 1204  
                                         l5187 11C7                                           l6331 0270  
                                         l6323 01F9                                           l6315 01C3  
                                         l6307 01AD                                           l3765 1A7A  
                                         l3933 1A83                                           l3693 1BDE  
                                         l3669 1BF1                                           l3677 1C04  
                                         l3685 1C17                                           l3757 1A78  
                                         l3829 1FA5                                           l3749 1AB0  
                                         l3909 1E4F                                           l3925 1DE8  
                                         l3941 1B93                                           l6181 0C4F  
                                         l6173 0C12                                           l6165 0BFB  
                                         l6149 0BC7                                           l6157 0BD7  
                                         l6093 09F7                                           l6085 09E4  
                                         l6077 09CB                                           l6069 09B7  
                                         l6237 12F1                                           l6229 12C4  
                                         l6261 1F6E                                           l6253 1F67  
                                         l6245 1F50                                           l4661 1C8D  
                                         l4653 1C84                                           l4645 1C79  
                                         l6501 1C4C                                           l5197 121C  
                                         l5189 11DC                                           l6341 039D  
                                         l6333 02BF                                           l6325 022D  
                                         l6309 01B6                                           l3695 1BE6  
                                         l3679 1C0C                                           l3687 1C1F  
                                         l3871 1E7D                                           l3863 1E73  
                                         l3767 1AA1                                           l3775 1B19  
                                         l3783 1B11                                           l3791 100F  
                                         l3839 1FB6                                           l3855 1B02  
                                         l3927 1DED                                           l3935 1B8C  
                                         l3951 1BB3                                           l3943 1BA7  
                                         l6191 0C83                                           l6183 0C59  
                                         l6175 0C16                                           l6159 0BDB  
                                         l6095 09F9                                           l6087 09E5  
                                         l6079 09D3                                           l6239 12F5  
                                         l6511 1158                                           l6271 1F8F  
                                         l6263 1F76                                           l6255 1F69  
                                         l6247 1F52                                           l4671 1B57  
                                         l4663 1C8F                                           l4655 1C88  
                                         l4647 1C7D                                           l5199 1220  
                                         l5711 15D2                                           l6351 04A7  
                                         l6343 03E5                                           l6335 02F1  
                                         l6327 0235                                           l6319 01CD  
                                         l6503 12FF                                           l4761 1CE5  
                                         l3865 1E76                                           l3881 1E83  
                                         l3769 1AA3                                           l3777 1B1B  
                                         l3785 1B13                                           l3849 1FBE  
                                         l3857 1B04                                           l3929 1DF5  
                                         l3937 1B8D                                           l3961 1D50  
                                         l3945 1BAC                                           l6193 0C87  
                                         l6185 0C69                                           l6177 0C3C  
                                         l6169 0C05                                           l6097 0A01  
                                         l6089 09EA                                           l6521 118D  
                                         l6513 116F                                           l6273 1F90  
                                         l6265 1F7E                                           l6257 1F6B  
                                         l6249 1F5A                                           l4665 1B4F  
                                         l4673 1AEA                                           l4657 1C8A  
                                         l4649 1C80                                           l4681 1C94  
                                         l5801 16BC                                           l5721 15E9  
                                         l5713 15D6                                           l6361 05CF  
                                         l6353 04C7                                           l6345 0417  
                                         l6337 0323                                           l6329 0244  
                                         l6281 00A5                                           l6601 0D23  
                                         l4771 1CF3                                           l4763 1CEA  
                                         l3955 1A80                                           l3699 1CAB  
                                         l3875 1E7F                                           l3779 1B20  
                                         l3787 1B17                                           l3795 1018  
                                         l3859 1B07                                           l3939 1B90  
                                         l3971 1D61                                           l3963 1D51  
                                         l3947 1BB0                                           l6195 0C88  
                                         l6187 0C72                                           l6179 0C40  
                                         l6099 0A06                                           l6523 118F  
                                         l6515 117D                                           l6507 114D  
                                         l6275 1F91                                           l6267 1F8A  
                                         l6259 1F6D                                           l4667 1B54  
                                         l4675 1AED                                           l4659 1C8C  
                                         l4691 1C9F                                           l4683 1C96  
                                         l5811 16D9                                           l5803 16C0  
                                         l5731 15FF                                           l5723 15EA  
                                         l5715 15D7                                           l5707 15C8  
                                         l6355 051C                                           l6347 0449  
                                         l6339 036B                                           l6291 011D  
                                         l6283 00AE                                           l6611 0D45  
                                         l6603 0D2B                                           l4781 1CFC  
                                         l4773 1CF4                                           l4765 1CEB  
                                         l3957 1A7D                                           l3869 1E7A  
                                         l3893 1AC9                                           l3973 1D64  
                                         l3965 1D53                                           l3949 1BB1  
                                         l3981 1F18                                           l5901 1D6C  
                                         l6197 0C94                                           l6189 0C74  
                                         l6517 1184                                           l6509 1153  
                                         l6269 1F8E                                           l4669 1B55  
                                         l4693 1CA7                                           l4685 1C98  
                                         l4677 1A9D                                           l5821 16F1  
                                         l5813 16E1                                           l5805 16CB  
                                         l5741 160E                                           l5733 1600  
                                         l5717 15DC                                           l5725 15EC  
                                         l5709 15CE                                           l6357 056B  
                                         l6349 0475                                           l6293 013C  
                                         l6285 00CD                                           l6277 007B  
                                         l6621 0D59                                           l6613 0D49  
                                         l6605 0D32                                           l4783 1CFE  
                                         l4775 1CF9                                           l4767 1CEE  
                                         l3799 101C                                           l3887 1ABA  
                                         l3895 1ACB                                           l3967 1D58  
                                         l3975 1D67                                           l3959 1D49  
                                         l3991 1F30                                           l3983 1F1E  
                                         l5911 1D89                                           l5903 1D6E  
                                         l6519 1186                                           l4695 1C36  
                                         l4687 1C99                                           l4679 1C92  
                                         l5831 1719                                           l5823 16F5  
                                         l5815 16E5                                           l5807 16D0  
                                         l5751 162C                                           l5743 1613  
                                         l5735 1604                                           l5727 15F4  
                                         l5719 15E1                                           l6359 059D  
                                         l6295 0141                                           l6287 00EC  
                                         l6279 00A3                                           l6527 0811  
                                         l6471 10EB                                           l6631 0DAA  
                                         l6623 0D6D                                           l6615 0D4D  
                                         l6607 0D36                                           l4777 1CFA  
                                         l4769 1CF2                                           l3889 1ABD  
                                         l3897 1ACC                                           l3969 1D5C  
                                         l3993 1F31                                           l3985 1F1F  
                                         l4785 1002                                           l5905 1D75  
                                         l4697 1C3B                                           l4689 1C9D  
                                         l5921 061F                                           l5841 1761  
                                         l5833 173D                                           l5825 16F6  
                                         l5817 16E9                                           l5761 1640  
                                         l5753 1630                                           l5745 161B  
                                         l5737 1608                                           l5729 15F9  
                                         l6529 0994                                           l6481 110D  
                                         l6473 10FE                                           l6465 10D6  
                                         l6641 0DC6                                           l6633 0DAF  
                                         l6625 0D81                                           l6617 0D56  
                                         l6609 0D3E                                           l4779 1CFB  
                                         l3995 1F36                                           l3987 1F20  
                                         l3979 1F11                                           l4787 1BC5  
                                         l5907 1D79                                           l4699 1C3E  
                                         l5931 0633                                           l5923 0625  
                                         l5851 177A                                           l5843 1766  
                                         l5835 1743                                           l5827 16FE  
                                         l5819 16EF                                           l5771 1654  
                                         l5763 1644                                           l5755 1634  
                                         l5747 161C                                           l5739 1609  
                                         l5915 1ED9                                           l6299 0173  
                                         l6475 10FF                                           l6467 10E2  
                                         l6651 0DE0                                           l6643 0DC7  
                                         l6635 0DB6                                           l6627 0D8D  
                                         l6619 0D57                                           l6571 0C9D  
                                         l3997 1F3A                                           l3989 1F2B  
                                         l5909 1D84                                           l5941 064B  
                                         l5933 0638                                           l5925 0629  
                                         l5853 177F                                           l5861 178B  
                                         l5837 1748                                           l5829 1703  
                                         l5781 1668                                           l5773 1658  
                                         l5765 1648                                           l5757 1638  
                                         l5749 161E                                           l5917 1EDC  
                                         l6477 1107                                           l6661 0DF2  
                                         l6653 0DE1                                           l6645 0DC8  
                                         l6637 0DBF                                           l6629 0DA0  
                                         l6581 0CBF                                           l6573 0CA6  
                                         l3999 1F3F                                           l5951 065E  
                                         l5943 0650                                           l5935 0640  
                                         l5927 062D                                           l5855 1782  
                                         l5847 176F                                           l5839 1751  
                                         l5863 178F                                           l5791 16A7  
                                         l5783 166C                                           l5775 165C  
                                         l5767 164C                                           l5759 163C  
                                         l6495 112C                                           l6487 1115  
                                         l6479 1109                                           l6663 0E0D  
                                         l6671 0E39                                           l6655 0DE8  
                                         l6647 0DD6                                           l6639 0DC4  
                                         l6591 0D07                                           l6583 0CCF  
                                         l6575 0CA8                                           l6841 1E6A  
                                         l5961 067E                                           l5953 0663  
                                         l5945 0654                                           l5937 0641  
                                         l5929 062E                                           l5881 17D0  
                                         l5873 17A2                                           l5865 1790  
                                         l5857 1784                                           l5849 1776  
                                         l5793 16AD                                           l5777 1660  
                                         l5769 1650                                           l5785 1670  
                                         l6497 113A                                           l6489 1125  
                                         l6681 0EE4                                           l6665 0E11  
                                         l6649 0DDF                                           l6673 0E40  
                                         l6593 0D0E                                           l6585 0CDF  
                                         l6577 0CB3                                           l6843 1FD1  
                                         l5971 069C                                           l5963 068A  
                                         l5955 066B                                           l5947 0658  
                                         l5939 0643                                           l5891 17EC  
                                         l5883 17D9                                           l5875 17A7  
                                         l5867 1794                                           l5859 1789  
                                         l5795 16AF                                           l5787 1671  
                                         l5779 1664                                           l6499 113F  
                                         l6691 0F6A                                           l6683 0F12  
                                         l6675 0E45                                           l6659 0DEE  
                                         l6595 0D10                                           l6587 0CEF  
                                         l6579 0CB6                                           l6845 103C  
                                         l5981 06C5                                           l5965 068E  
                                         l5957 066C                                           l5949 0659  
                                         l5893 17F0                                           l5885 17DE  
                                         l5877 17AF                                           l5869 179A  
                                         l5797 16B3                                           l5789 1688  
                                         l6693 0F98                                           l6685 0F18  
                                         l6677 0E72                                           l6669 0E2C  
                                         l6597 0D18                                           l6589 0CFF  
                                         l6847 1E96                                           l5991 06E6  
                                         l5983 06CD                                           l5975 06A5  
                                         l5959 066E                                           l5895 17F2  
                                         l5887 17E6                                           l5879 17B3  
                                         l5799 16B4                                           l6687 0F46  
                                         l6679 0EA0                                           l6695 0FB3  
                                         l6839 0E31                                           l6599 0D1F  
                                         l5993 06E7                                           l5985 06CF  
                                         l5977 06B5                                           l5969 0697  
                                         l5897 17FA                                           l5889 17EB  
                                         l6697 0FB5                                           l6689 0F50  
                                         l5987 06D4                                           l5995 06EE  
                                         l5979 06BD                                           l5899 17FE  
                                         l6699 0FCF                                           l5997 0700  
                                         l5989 06E2                                           l5999 0701  
                                         u3000 1DB6                                           u3001 1DB5  
                                         u3010 1D32                                           u3011 1D31  
                                         u3020 1D46                                           u3021 1D45  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u2400 1C69  
                                         u2401 1C68                                           u2410 1017  
                                         u2411 1016                                           u4100 10B4  
                                         u2420 1064                                           u2500 1D58  
                                         u4101 10B3                                           u2421 1063  
                                         u2501 1D57                                           u4110 10CD  
                                         u2430 1FAF                                           u2510 1F18  
                                         u4111 10CC                                           u2431 1FAE  
                                         u2511 1F17                                           u2520 1D0D  
                                         u2440 1AE9                                           u4200 11DC  
                                         u5000 1748                                           u2521 1D0C  
                                         u2441 1AE8                                           u4201 11DB  
                                         u5001 1747                                           u2450 1DED  
                                         u4210 11F8                                           u5010 1761  
                                         u2451 1DEC                                           u4211 11F7  
                                         u5011 1760                                           u2460 1DF5  
                                         u4220 1204                                           u5100 17A1  
                                         u5020 1766                                           u2461 1DF4  
                                         u4221 1203                                           u5101 17A0  
                                         u5021 1765                                           u2390 07DB  
                                         u2470 1B98                                           u4230 1220  
                                         u5110 17A7                                           u2391 07DA  
                                         u2471 1B97                                           u4231 121F  
                                         u5111 17A6                                           u2480 1BAC  
                                         u5200 1D79                                           u4240 124E  
                                         u5120 17B3                                           u5040 177A  
                                         u6000 01C3                                           u2481 1BAB  
                                         u5201 1D78                                           u4241 124D  
                                         u5121 17B2                                           u5041 1779  
                                         u6001 01C2                                           u4090 107D  
                                         u2490 1D50                                           u5130 17C1  
                                         u5050 177F                                           u6010 01EA  
                                         u4091 107C                                           u2491 1D4F  
                                         u5051 177E                                           u5035 1770  
                                         u5220 1D89                                           u5300 069C  
                                         u5140 17D0                                           u5060 1789  
                                         u5221 1D88                                           u4245 124A  
                                         u5301 069B                                           u5141 17CF  
                                         u5061 1788                                           u5310 06D4  
                                         u5230 062D                                           u5150 17D9  
                                         u5070 178F                                           u6110 10E2  
                                         u4095 1079                                           u5215 1D7E  
                                         u5311 06D3                                           u5231 062C  
                                         u5151 17D8                                           u5135 17BD  
                                         u5071 178E                                           u6015 01E6  
                                         u6111 10E1                                           u5400 0728  
                                         u5240 0633                                           u5160 17DE  
                                         u5080 1794                                           u6200 113F  
                                         u6120 10F8                                           u5401 0727  
                                         u5241 0632                                           u5161 17DD  
                                         u5081 1793                                           u6201 113E  
                                         u5250 0638                                           u5170 17EB  
                                         u5090 179A                                           u6130 110D  
                                         u5251 0637                                           u5171 17EA  
                                         u5091 1799                                           u6131 110C  
                                         u5500 07AE                                           u5420 0738  
                                         u5340 06E6                                           u5260 0658  
                                         u5180 17F0                                           u6140 1114  
                                         u5501 07AD                                           u5421 0737  
                                         u5341 06E5                                           u5325 06D5  
                                         u5261 0657                                           u5181 17EF  
                                         u6141 1113                                           u6125 10F4  
                                         u5510 07C3                                           u5430 073D  
                                         u5270 065E                                           u5190 17FE  
                                         u6215 117E                                           u5511 07C2  
                                         u5431 073C                                           u5415 072A  
                                         u5335 06DC                                           u5271 065D  
                                         u5191 17FD                                           u5520 09B6  
                                         u5440 0751                                           u5360 0700  
                                         u5280 0663                                           u4800 15FF  
                                         u6160 1124                                           u6400 0D2B  
                                         u5521 09B5                                           u6225 1187  
                                         u5505 07AA                                           u5441 0750  
                                         u5361 06FF                                           u5281 0662  
                                         u4801 15FE                                           u6161 1123  
                                         u6401 0D2A                                           u5530 09BC  
                                         u5450 0758                                           u5370 0713  
                                         u5290 067E                                           u4810 1608  
                                         u6170 112B                                           u6410 0D32  
                                         u5531 09BB                                           u5451 0757  
                                         u5371 0712                                           u5355 06E8  
                                         u5291 067D                                           u4811 1607  
                                         u6171 112A                                           u6155 1116  
                                         u6411 0D31                                           u5700 0BFB  
                                         u5620 0B73                                           u5540 09C1  
                                         u5460 075E                                           u5380 071B  
                                         u4900 16B3                                           u4820 160E  
                                         u6500 0DED                                           u6420 0D3E  
                                         u5701 0BFA                                           u5605 0AC9  
                                         u5541 09C0                                           u5461 075D  
                                         u5381 071A                                           u5365 06FC  
                                         u4901 16B2                                           u4821 160D  
                                         u6501 0DEC                                           u6421 0D3D  
                                         u2990 1D9A                                           u5710 0C04  
                                         u5630 0B98                                           u5550 09E4  
                                         u5470 076A                                           u4830 1613  
                                         u6190 113A                                           u6510 0E45  
                                         u6430 0D45                                           u6350 0CB0  
                                         u2991 1D99                                           u5711 0C03  
                                         u5615 0B02                                           u5551 09E3  
                                         u5471 0769                                           u4831 1612  
                                         u6191 1139                                           u6511 0E44  
                                         u6431 0D44                                           u5720 0C0A  
                                         u5560 09EA                                           u5800 127D  
                                         u5480 0778                                           u4920 16C7  
                                         u4840 162C                                           u6520 0E72  
                                         u6440 0D8B                                           u6360 0D07  
                                         u5721 0C09                                           u5625 0B6F  
                                         u5561 09E9                                           u5801 127C  
                                         u4921 16C6                                           u4841 162B  
                                         u6185 112D                                           u6521 0E71  
                                         u6441 0D88                                           u6361 0D06  
                                         u5730 0C16                                           u5570 09EF  
                                         u5490 0793                                           u4930 16CB  
                                         u4850 1630                                           u4770 15D6  
                                         u6530 0EA0                                           u6370 0D0E  
                                         u5731 0C15                                           u5635 0B94  
                                         u5571 09EE                                           u5491 0792  
                                         u5395 071E                                           u4931 16CA  
                                         u4915 16B6                                           u4851 162F  
                                         u4771 15D5                                           u6531 0E9F  
                                         u6371 0D0D                                           u5740 0C2B  
                                         u5660 0BCB                                           u5580 0A06  
                                         u5900 12F1                                           u5820 129C  
                                         u4940 16D0                                           u4860 1688  
                                         u4780 15DC                                           u6540 0F12  
                                         u6460 0DAA                                           u6380 0D18  
                                         u5661 0BCA                                           u5645 0BAA  
                                         u5581 0A05                                           u5901 12F0  
                                         u5821 129B                                           u5485 0774  
                                         u4941 16CF                                           u4861 1687  
                                         u4781 15DB                                           u6541 0F11  
                                         u6461 0DA9                                           u6381 0D17  
                                         u5750 0C4F                                           u5590 0A0B  
                                         u5910 12F5                                           u4950 16E5  
                                         u4870 1692                                           u4790 15E1  
                                         u6550 0F46                                           u6470 0DAF  
                                         u6454 0D8D                                           u6390 0D1F  
                                         u5751 0C4E                                           u5655 0BC1  
                                         u5591 0A0A                                           u5911 12F4  
                                         u5815 1290                                           u5495 078F  
                                         u4951 16E4                                           u4871 1690  
                                         u4791 15E0                                           u6551 0F45  
                                         u6471 0DAE                                           u6391 0D1E  
                                         u5760 0C69                                           u5680 0BDB  
                                         u5840 12B6                                           u4960 16E9  
                                         u4880 1693                                           u5920 00AE  
                                         u6480 0DBF                                           u5761 0C68  
                                         u5745 0C27                                           u5681 0BDA  
                                         u5841 12B5                                           u4961 16E8  
                                         u4865 1684                                           u5921 00AD  
                                         u6481 0DBE                                           u5770 0C87  
                                         u5690 0BE0                                           u4970 16F5  
                                         u4890 16A7                                           u5930 00C3  
                                         u6490 0DC4                                           u5771 0C86  
                                         u5755 0C4B                                           u5691 0BDF  
                                         u5675 0BCD                                           u5835 12AA  
                                         u4971 16F4                                           u4891 16A6  
                                         u6491 0DC3                                           u5860 12C4  
                                         u5780 1259                                           u5940 00CD  
                                         u5765 0C65                                           u5861 12C3  
                                         u5781 1258                                           u5941 00CC  
                                         u5870 12CA                                           u5790 125D  
                                         u4990 1719                                           u5950 00E2  
                                         u5871 12C9                                           u5855 12BA  
                                         u5791 125C                                           u4991 1718  
                                         u5935 00BF                                           u6567 0CBA  
                                         u5880 12CE                                           u5960 00EC  
                                         u5881 12CD                                           u4993 1715  
                                         u4985 16F8                                           u5961 00EB  
                                         u6577 0D51                                           u5890 12E2  
                                         u5970 0132                                           u5955 00DE  
                                         u6587 0DDA                                           u5980 013C  
                                         u6597 115E                                           u5981 013B  
                                         u5990 01B6                                           u5895 12DE  
                                         u5991 01B5                                           u5975 012E  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                        ??_wr2RegCompleteHandler 0034  
                                         _main 0C9D                       ?_I2C_CallbackReturnReset 0033  
                                         _logf 007B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           map@x 0120  
                             __end_of_I2C_Open 1F50                                           btemp 007E  
                            ?_FLASH_WriteBlock 002D                                           start 0048  
                         ?_MCP3422_ReadVoltage 00BD                                ___fldiv@new_exp 00CF  
                           ??_FLASH_WriteBlock 0030                     ??_TMR1_SetInterruptHandler 002C  
                         __end_of_MCP3422_Read 1BD5                                          ??_map 00E2  
                             ?_I2C_MasterClose 0070                        __end_of_TMR0_Initialize 1C4C  
                              _I2C_WriteNBytes 1D8E                 ??_TMR0_DefaultInterruptHandler 0070  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 1ABA  
                             ?_I2C_MasterWrite 0070                  __end_of_OSCILLATOR_Initialize 1AF0  
                                ___fltol@sign1 00E0                                __end_of___fladd 1800  
                                        ?_main 0070                                          ?_logf 00D7  
                              __end_of___fldiv 07D3                                __end_of___flmul 0C9D  
                              __end_of___flsub 1F0F                                __end_of___fltol 114B  
                                        _T1CON 0018                                          i1l121 0012  
                                        i1l131 0046                                          i1l124 0027  
                                        i1l125 0046                                          i1l126 0038  
                                        i1l732 1B7E                                          i1l716 0810  
                                        i1l728 1B8B                                          i1l940 1DE4  
                                        i1l773 1B71                                          i1l951 1E30  
                                        i1l769 1B10                                          i1l953 1E34  
                                        i1l946 1ED8                                          i1l779 1A77  
                                        i1l956 1E41                                          i1l966 15C7  
                                        i1l959 1B64                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0034  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TXREG 019A  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 002A  
                             __end_of_TMR0_ISR 1B11                               __end_of_TMR1_ISR 1B8C  
                            __end_of_I2C_DO_RX 1FE0                              __end_of_I2C_DO_TX 1068  
                               _WDT_Initialize 1A9D                                          _errno 016E  
                            __end_of_I2C_Close 1D26                 I2C_MasterOperation@returnValue 003C  
                      _I2C_MasterEnableRestart 1A86                                          logf@R 0120  
                      __end_of_TMR1_Initialize 1CAB                                          logf@f 015A  
                                        logf@k 013C                                          logf@s 0146  
                                        logf@u 0156                                          logf@w 014E  
                                        logf@x 00D7                                          logf@z 014A  
                                        pclath 000A                               ?_I2C_SetCallback 002A  
                 I2C_SetAddressNackCallback@cb 002F                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                        ??_MCP3422_ReadVoltage 00C1                   MCP3422_ReadVoltage@adc_value 00C9  
                              _TMR1_WriteTimer 0800                     __end_of_mbus_timer_handler 1B65  
                           ??_I2C_DO_SEND_STOP 002A                                __initialization 004A  
                                 __end_of_main 1000                                   __end_of_logf 061F  
                    ?_I2C_DO_SEND_RESTART_READ 0070                          __end_of_MCP3422_Write 100F  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 002C                                         ??_main 00EE  
                                       ??_logf 00DB                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 002A  
                            __end_of_HEFregion 2020                         __end_of_WDT_Initialize 1AA1  
                           ??_I2C_MasterSetIrq 002A              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 025F                      FLASH_WriteBlock@writeAddr 002D  
              __end_of_I2C_CallbackReturnReset 0004                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 002F                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _T1GCON 0019  
                                 ??_I2C_Poller 003A                        TMR1_WriteTimer@timerVal 0070  
                                       i1l5013 1B09                                         i1l5021 1B81  
                                       i1l4301 1DD6                                         i1l5015 1B0A  
                                       i1l4311 1B5D                                         i1l4303 1DDA  
                                       i1l5017 1B0D                                         i1l4313 1B5E  
                                       i1l4305 1DDE                                         i1l4307 1B59  
                                       i1l5019 1B7F                                         i1l4309 1B5B  
                                       i1l4291 1DC1                                         i1l4283 1DB8  
                                       i1l5171 1E1F                                         i1l5163 1E13  
                                       i1l4293 1DC3                                         i1l4285 1DC0  
                                       i1l5181 1E39                                         i1l5173 1E26  
                                       i1l5165 1E15                                         i1l4295 1DC7  
                                       i1l5183 1E3D                                         i1l5175 1E2A  
                                       i1l5167 1E17                                         i1l4297 1DCB  
                                       i1l6401 14BD                                         i1l5185 1E3F  
                                       i1l5169 1E18                                         i1l4299 1DD0  
                                       i1l6411 1519                                         i1l6403 14C1  
                                       i1l5179 1E38                                         i1l4741 0805  
                                       i1l6421 153B                                         i1l6413 1522  
                                       i1l6405 14D5                                         i1l4751 080E  
                                       i1l4743 0806                                         i1l6423 154C  
                                       i1l6415 1528                                         i1l6407 14DA  
                                       i1l4753 1B72                                         i1l4745 0808  
                                       i1l6441 158C                                         i1l6425 1550  
                                       i1l6417 1532                                         i1l6409 14EC  
                                       i1l6433 1568                                         i1l4755 1B79  
                                       i1l4747 080A                                         i1l4739 0800  
                                       i1l6451 15BD                                         i1l6443 1591  
                                       i1l6427 1554                                         i1l6419 1536  
                                       i1l6435 157B                                         i1l6371 1429  
                                       i1l6531 1EA5                                         i1l4757 1B65  
                                       i1l4749 080C                                         i1l6453 15BF  
                                       i1l6445 15A0                                         i1l6437 1580  
                                       i1l6373 142E                                         i1l6365 1418  
                                       i1l6541 1EBC                                         i1l6533 1EA7  
                                       i1l4759 1B6C                                         i1l6455 15C1  
                                       i1l6447 15AA                                         i1l6439 1583  
                                       i1l6391 1492                                         i1l6383 147D  
                                       i1l6375 1441                                         i1l6367 141D  
                                       i1l6543 1EC2                                         i1l6535 1EA9  
                                       i1l6551 0006                                         i1l6457 15C3  
                                       i1l6449 15AE                                         i1l6393 149C  
                                       i1l6377 1460                                         i1l6369 1420  
                                       i1l6545 1EC8                                         i1l6537 1EAA  
                                       i1l6561 0020                                         i1l6553 000A  
                                       i1l6459 15C5                                         i1l6395 14A0  
                                       i1l6387 1485                                         i1l6379 1463  
                                       i1l6547 1ECF                                         i1l6539 1EB7  
                                       i1l6563 002C                                         i1l6555 000E  
                                       i1l6397 14A5                                         i1l6389 1487  
                                       i1l6549 1ED5                                         i1l6565 0031  
                                       i1l6557 0016                                         i1l6399 14AA  
                                       i1l6567 003D                                         i1l6559 001B  
                                       u303_20 1DC7                                         u303_21 1DC6  
                                       i1l6569 0042                                         i1l6849 1570  
                                       u304_25 1DCC                                         u305_20 1DD6  
                                       u305_21 1DD5                                         u306_20 1DE4  
                                       u306_21 1DE3                                         _PMADRH 0192  
                                       u417_20 1E1F                                         _PMADRL 0191  
                                       u417_21 1E1E                                         u610_20 15A0  
                                       u602_20 1441                                         u418_20 1E30  
                                       u610_21 159F                                         u602_21 1440  
                                       u418_21 1E2F                                         _PMDATH 0194  
                                       u610_25 159C                                         u602_25 143D  
                                       u603_20 1460                                         u419_20 1E34  
                                       _PMDATL 0193                                         u603_21 145F  
                                       u419_21 1E33                                         u603_25 145C  
                                       u604_20 147C                                         u604_21 147B  
                                       _PMCON2 0196                                         u604_25 1478  
                                       u605_20 1484                                         u605_21 1483  
                                       u606_20 14EB                                         u630_20 0020  
                                       u606_21 14EA                                         u630_21 001F  
                                       u606_25 14E7                                         u623_20 1EC2  
                                       u631_20 002C                                         u623_21 1EC1  
                                       u631_21 002B                                         u607_25 14F5  
                                       u376_20 0805                                         u624_20 1EC8  
                                       u632_20 0031                                         u376_21 0804  
                                       u624_21 1EC7                                         u632_21 0030  
                                       u608_25 150C                                         u377_20 1B79  
                                       u609_20 1567                                         u625_20 1ED5  
                                       u633_20 003D                                         u377_21 1B78  
                                       u609_21 1566                                         u625_21 1ED4  
                                       u633_21 003C                                         u609_25 1563  
                                       u378_20 1B6C                                         u634_20 0042  
                                       u626_20 000A                                         _OSCCON 0099  
                                       u378_21 1B6B                                         u634_21 0041  
                                       u626_21 0009                                         u627_20 000E  
                                       u627_21 000D                                         u628_20 0016  
                                       u628_21 0015                                         u629_20 001B  
                                       u629_21 001A                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 12FF       ModbusSlaveProcessReceivedQuery@u8ReadReg 0020  
                          _I2C_MasterGetRxData 1A8F                        __end_of_I2C_WriteNBytes 1DB7  
                                       ___flge 11C7                                      ??___fladd 0040  
                                       _ln2_hi 1834                                      ??___fldiv 00C5  
                                _I2C_MasterFsm 1DE5                                         _ln2_lo 1830  
                                    ??___flmul 004C                                      ??___flsub 004C  
                                    ??___fltol 00DB                                 main@fTdVoltage 01E8  
                             ?_TMR0_Initialize 0070                              I2C_SetCallback@cb 002A  
                                _I2C_SetBuffer 1C62                             __end_of_I2C_Poller 1B99  
                 __end_of_I2C_MasterDisableIrq 1A83                                         logf@t1 0124  
                                       logf@t2 0128                                         logf@dk 0142  
                                       logf@ix 015E                            _I2C_DO_ADDRESS_NACK 1E42  
                      FLASH_ReadWord@flashAddr 002A                           ?_I2C_MasterGetRxData 0070  
                                    ?_I2C_Open 0070             __end_of_I2C_SetAddressNackCallback 1BC3  
                   _I2C_SetAddressNackCallback 1BB5                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 002A                          __end_of_TMR0_CallBack 1B72  
     TMR0_SetInterruptHandler@InterruptHandler 002A       TMR1_SetInterruptHandler@InterruptHandler 002A  
                      __end_of_TMR1_WriteTimer 0811                               main@u16CalBuffer 01D8  
             ModbusSlaveProcessReceivedQuery@i 0027               ModbusSlaveProcessReceivedQuery@j 0025  
             ModbusSlaveProcessReceivedQuery@k 0021                          __end_of_TMR1_CallBack 1B7F  
                                   ___flge@ff1 0038                                     ___flge@ff2 003C  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0034  
                                 ___xxtofl@exp 0033                              _SYSTEM_Initialize 1C4C  
                                 ___xxtofl@val 002A                    __end_of_get_ntc_temperature 09A4  
                      __end_of__initialization 0077                        get_ntc_temperature@temp 016A  
                      get_ntc_temperature@rntc 0162                            _I2C_MasterOperation 1D47  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                                   ___fltol@f1 00D7           __end_of_EUSART_SetTxInterruptHandler 1B4F  
                 _EUSART_SetTxInterruptHandler 1B46                        _rdBlkRegCompleteHandler 1CAB  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                              ??_I2C_DO_RX_ACK 002A                                   __pidataBANK0 07FE  
                       _I2C_CallbackReturnStop 1A78                                _InitModbusSlave 1C21  
                          ??_SYSTEM_Initialize 002D                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                 ?_I2C_SetBuffer 002A  
                      ?_I2C_MasterWaitForEvent 0070                  __end_of_I2C_DO_SEND_ADR_WRITE 1B19  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                           ?_I2C_MasterOperation 0070  
                        ??_I2C_MasterGetRxData 002A                                 _OPTION_REGbits 0095  
                        I2C_ReadNBytes@address 0040                                     ??_I2C_Open 002A  
                         _eusartRxStatusBuffer 023D                     __end_of_I2C_MasterClearIrq 1A7D  
                  FLASH_WriteBlock@GIEBitValue 0035                ??_EUSART_SetOverrunErrorHandler 002C  
                                 _MCP3422_Read 1BC3                      __end_of_SYSTEM_Initialize 1C62  
                            _I2C_MasterSendAck 1A99                                     __pbssBANK0 0051  
                                   __pbssBANK2 016E                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                                     __pbssBANK5 02A0  
                               _crcModbusSlave 0064                                  ??_I2C_DO_IDLE 002A  
                                ??_I2C_DO_RCEN 002A                  __end_of_rd2RegCompleteHandler 1C0E  
                 __end_of_I2C_MasterSendTxData 1ADE                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 1A8C                          ??_I2C_DO_ADDRESS_NACK 0034  
                __end_of_wr2RegCompleteHandler 1BE8                              ??_mbus_rx_handler 0029  
                          _I2C_DO_RX_NACK_STOP 1ABF                          _rd1RegCompleteHandler 1BE8  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 1A99  
                            __end_of__Umul8_16 1D8E                               ?_I2C_WriteNBytes 003D  
                       I2C_WriteNBytes@address 0040                          _wr1RegCompleteHandler 1C0E  
                                   __pmaintext 0C9D                            ??_I2C_MasterSendAck 002A  
                     rd1RegCompleteHandler@ptr 0033                                        ?___flge 0038  
                ?_EUSART_SetTxInterruptHandler 002A               _EUSART_TxDefaultInterruptHandler 01EE  
                  __end_of_I2C_DO_SEND_RESTART 1AB5                                _I2C_DO_TX_EMPTY 1E73  
             __end_of_TMR0_SetInterruptHandler 1AF6                            I2C_SetBuffer@buffer 002D  
                                   ??_TMR0_ISR 0070                                     ??_TMR1_ISR 0072  
                            ??_mbus_tx_handler 0070                                     __pintentry 0004  
               __end_of_I2C_MasterWaitForEvent 1AEA                            ??_I2C_MasterStartRx 002A  
                                      _BAUDCON 019F                          ??_I2C_MasterOperation 003A  
               I2C_SetDataCompleteCallback@ptr 0031                       ??_I2C_DO_RX_NACK_RESTART 002A  
                               _FLASH_ReadWord 1CC5              __end_of_I2C_DO_SEND_RESTART_WRITE 1AB0  
                         ?_I2C_DO_RX_NACK_STOP 0070                  get_ntc_temperature@adcVoltage 00E3  
                                _eusartRxCount 007C                                      ?___xxtofl 002A  
                    __end_of_I2C_MasterSendAck 1A9D                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                       ??_EUSART_SetErrorHandler 002C  
                               calculate_crc@i 0075                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 1A8F                           I2C_Close@returnValue 002B  
                 ?_I2C_SetDataCompleteCallback 002F                                      _I2C_DO_RX 1F94  
                                    _I2C_DO_TX 100F               __end_of_I2C_DO_SEND_RESTART_READ 1AAB  
                             _FLASH_EraseBlock 1CE5                                      _I2C_Close 1D05  
                    ??_rdBlkRegCompleteHandler 0034                        __end_of_InitModbusSlave 1C36  
                         _I2C_MasterDisableIrq 1A80                                ??_I2C_MasterFsm 0037  
                               _I2C_ReadNBytes 1D26                            __end_of_I2C_DO_IDLE 1AA6  
                          __end_of_I2C_DO_RCEN 1B09                                        ___fladd 15C8  
                                      ___fldiv 061F                                        ___flmul 09A4  
                                      ___flsub 1ED9                                        ___fltol 10D6  
                              ??_I2C_SetBuffer 002C                        I2C_SetBuffer@bufferSize 002A  
                           I2C_ReadNBytes@data 003D        __end_of_ModbusSlaveProcessReceivedQuery 15C8  
            ??_ModbusSlaveProcessReceivedQuery 0076               ?_ModbusSlaveProcessReceivedQuery 0070  
              _ModbusSlaveProcessReceivedQuery 1418                                 _I2C_MasterRead 1ACE  
                               _I2C_MasterOpen 1BA7                         __end_of_FLASH_ReadWord 1CE5  
                               _I2C_MasterStop 1A89                                 _I2C_Initialize 1B4F  
                                      __ptext1 12FF                                        __ptext2 10D6  
                                      __ptext3 0811                                        __ptext4 007B  
                                      __ptext5 1ED9                                        __ptext6 15C8  
                                      __ptext7 061F                                        __ptext8 11C7  
                                      __ptext9 1C4C                          ??_I2C_DO_RX_NACK_STOP 002A  
                           _mbus_timer_handler 1B59                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 1AEA                                     ??___xxtofl 002E  
                           I2C_SetCallback@idx 002E                       ??_PIN_MANAGER_Initialize 002A  
                I2C_CallbackReturnReset@funPtr 0033                      ?_TMR1_SetInterruptHandler 002A  
                           I2C_SetCallback@ptr 002C                                        _tempNTC 01CD  
                     wr1RegCompleteHandler@ptr 0033                            ?_mbus_timer_handler 0070  
                                      clrloop0 1AFD                    __end_of_MCP3422_ReadVoltage 11C7  
                              main@fNtcVoltage 01D4                                      _HEFregion 1FE0  
                         end_of_initialization 0077                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 1B3D  
                _EUSART_SetOverrunErrorHandler 1B34                        MCP3422_ReadVoltage@data 00C6  
                                   ?_I2C_Close 0070                         ?_rd1RegCompleteHandler 0033  
                      __end_of_I2C_DO_TX_EMPTY 1EA5                          ?_I2C_MasterDisableIrq 0070  
                       __end_of_I2C_ReadNBytes 1D47                                  _calculate_crc 1DB7  
                            _EUSART_Initialize 1F50                         ?_wr1RegCompleteHandler 0033  
                           ?_EUSART_Initialize 0070                           ??_mbus_timer_handler 0070  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterRead 1AD3  
                       __end_of_I2C_MasterOpen 1BB5                         __end_of_I2C_MasterStop 1A8C  
                       __end_of_I2C_Initialize 1B59                      FLASH_ReadWord@GIEBitValue 002C  
                              ?_FLASH_ReadWord 002A                            ??_EUSART_Initialize 002C  
                             ??_WDT_Initialize 002A                 ??_EUSART_SetTxInterruptHandler 002C  
                     _TMR0_SetInterruptHandler 1AF0                __end_of_rdBlkRegCompleteHandler 1CC5  
                         _I2C_MasterSendTxData 1AD8                                    ___fladd@grs 004B  
                                ___xxtofl@sign 0032                    ?_I2C_SetAddressNackCallback 002F  
                                  ___fldiv@grs 00D1                                    ___fldiv@rem 00CA  
                                   map@out_max 0130                                     map@out_min 012C  
                                  ___flmul@grs 00B2                      __end_of_EUSART_Initialize 1F94  
                                  _I2C_DO_IDLE 1AA1                                    _I2C_DO_RCEN 1B02  
                   rdBlkRegCompleteHandler@ptr 0033                                 ?_calculate_crc 0070  
                                    _TXSTAbits 019E                               ?_InitModbusSlave 0070  
                              ?_I2C_ReadNBytes 003D                        ?_I2C_CallbackReturnStop 0033  
                     _I2C_DO_SEND_RESTART_READ 1AA6                              FLASH_WriteBlock@i 0036  
                            _HEFregion_absaddr 1FE0                   I2C_CallbackReturnStop@funPtr 0033  
                              ?_I2C_MasterRead 0070                                ?_I2C_MasterOpen 0070  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 0002                                 __end_of___flge 1252  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of_ln2_hi 1838  
                               __end_of_ln2_lo 1834                               _FLASH_WriteBlock 1068  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 002A                            start_initialization 004A  
                                  __end_of_Lg1 1830                                    __end_of_Lg2 182C  
                                  __end_of_Lg3 1828                                    __end_of_Lg4 1824  
                     InitModbusSlave@u8SlaveId 002B                                _mbus_rx_handler 1EA5  
                                  __end_of_map 1418                                  ?_I2C_DO_RESET 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 002A   EUSART_SetTxInterruptHandler@interruptHandler 002A  
                                  ??_I2C_DO_RX 0034                                    ??_I2C_DO_TX 0034  
                            ??_I2C_MasterClose 002A                                _mbus_tx_handler 1E13  
                       ??_I2C_MasterDisableIrq 002A                                    ??_I2C_Close 002A  
                            ??_I2C_MasterStart 002A                              ??_I2C_MasterWrite 003D  
               __end_of_I2C_CallbackReturnStop 1A7A                         _I2C_DO_RX_NACK_RESTART 1AC4  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 1A7A  
               ?_EUSART_SetOverrunErrorHandler 002A                     _EUSART_FramingErrorHandler 0261  
                                     ??___flge 0040                         _EUSART_SetErrorHandler 1B22  
                          ?_I2C_MasterClearIrq 0070                                      __Umul8_16 1D6A  
                  __end_of_I2C_MasterGetRxData 1A92                                    __pdataBANK0 0064  
                        __end_of_I2C_DO_RX_ACK 1ABF                    FLASH_EraseBlock@GIEBitValue 002C  
                                _MCP3422_Write 1000                       __end_of_FLASH_EraseBlock 1D05  
                             _I2C_DO_SEND_STOP 1AB5                              ??_I2C_SetCallback 002D  
                          I2C_Open@returnValue 002C                             _I2C_MasterSendNack 1A95  
                     ?_I2C_MasterEnableRestart 0070                              __p_HEFregion_text 1FE0  
                                    ___fladd@a 003C                                      ___fladd@b 0038  
                            _i2c_fsmStateTable 1800                                      ___fldiv@a 00BD  
                                    ___fldiv@b 00C1                          _I2C_DO_SEND_ADR_WRITE 1B11  
                                    ___flmul@a 00AC                                      ___flmul@b 00A8  
                                  __pbssCOMMON 007C                                      ___flsub@a 00A0  
                                    ___flsub@b 00A4                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                                  __pcstackBANK3 01D2  
                               ??_I2C_DO_RESET 002A                            ?_I2C_MasterSendNack 0070  
                 __end_of_I2C_DO_SEND_ADR_READ 1B22                           ??_I2C_MasterClearIrq 002A  
                  __end_of_I2C_DO_ADDRESS_NACK 1E73                                ??_calculate_crc 0070  
                             _I2C_MasterIsNack 1ADE                      _I2C_DO_SEND_RESTART_WRITE 1AAB  
             _EUSART_RxDefaultInterruptHandler 01EC                               _I2C_MasterSetIrq 1A92  
                        _TMR0_InterruptHandler 005C                                      __pnvBANK0 005C  
                                    __pnvBANK3 01EC                                      __pnvBANK4 025D  
                        _rd2RegCompleteHandler 1BFB                         _PIN_MANAGER_Initialize 1C79  
                        _wr2RegCompleteHandler 1BD5                      ??_I2C_CallbackReturnReset 0034  
                     _get_ntc_temperature$2276 0166                    __end_of_I2C_MasterOperation 1D6A  
                         ??_I2C_MasterSendNack 002A                       rd2RegCompleteHandler@ptr 0033  
             __end_of_TMR1_SetInterruptHandler 1AFC                                       ?___fladd 0038  
                                     ?___fldiv 00BD                                       ?___flmul 00A8  
                                     ?___flsub 00A0                                       ?___fltol 00D7  
                                   ?__Umul8_16 002A                                 ?_MCP3422_Write 0070  
                                 _eusartRxHead 0059                                   _eusartTxHead 005B  
                                 _eusartRxTail 007D                         ??_I2C_MasterSendTxData 002A  
                                 _eusartTxTail 005A                      __end_of_i2c_fsmStateTable 1820  
                                    _logf$2280 0134                                      _logf$2281 0138  
                                    _logf$2277 0152                                      _logf$2278 012C  
                                    _logf$2279 0130                   ??_INTERRUPT_InterruptManager 007C  
                      __end_of_mbus_rx_handler 1ED9                        _eusartTxBufferRemaining 0063  
                      I2C_MasterOperation@read 003B                                       _I2C_Open 1F0F  
                      __end_of_mbus_tx_handler 1E42                              I2C_ReadNBytes@len 003E  
                                _TMR0_CallBack 1B65                        ??_rd1RegCompleteHandler 0034  
               FLASH_WriteBlock@blockStartAddr 0033                                 _eusartRxBuffer 024D  
                      ??_wr1RegCompleteHandler 0034                                  _TMR1_CallBack 1B72  
                            ??_TMR0_Initialize 002C                                 _eusartTxBuffer 02A0  
       EUSART_SetErrorHandler@interruptHandler 002A                                       _LATCbits 010E  
                                    clear_ram0 1AFC                                       _PIE1bits 0091  
                            _eusartRxLastError 0058                     ??_TMR0_SetInterruptHandler 002C  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 002C  
                                     _PIR2bits 0012                      FLASH_EraseBlock@startAddr 002A  
                             ??_FLASH_ReadWord 002C                          __end_of_I2C_MasterFsm 1E13  
                                    main@F4512 02E0                    __end_of_I2C_DO_RX_NACK_STOP 1AC4  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
                                     _TMR0_ISR 1B09              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 1B7F                __end_of_I2C_MasterEnableRestart 1A89  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 1C79  
                                    map@in_max 0128                                      map@in_min 0124  
                            ??_TMR1_Initialize 002C                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 002A                       wr2RegCompleteHandler@ptr 0033  
                               ?_TMR0_CallBack 0070                     ??_I2C_DO_SEND_RESTART_READ 002A  
                     ?_rdBlkRegCompleteHandler 0033                               ??_I2C_ReadNBytes 0040  
                               ?_TMR1_CallBack 0070                                     _I2C_Poller 1B8C  
                                   _I2C_Status 0220                                   ?_I2C_DO_IDLE 0070  
                                     _bCalMode 01D1                                   ?_I2C_DO_RCEN 0070  
                   MCP3422_ReadVoltage@channel 00C5                       __end_of_FLASH_WriteBlock 10D6  
                       ?_rd2RegCompleteHandler 0033                               ??_I2C_MasterRead 003D  
                          I2C_WriteNBytes@data 003D                               ??_I2C_MasterOpen 002A  
                       ?_wr2RegCompleteHandler 0033                               ??_I2C_MasterStop 002A  
                     ??_I2C_MasterWaitForEvent 002A                               ??_I2C_Initialize 002A  
                              ??_MCP3422_Write 0041                           __end_of_I2C_DO_RESET 1ACE  
                      ??_OSCILLATOR_Initialize 002A                                    ??__Umul8_16 002C  
                          _EUSART_ErrorHandler 025D                           _I2C_DO_SEND_ADR_READ 1B19  
                                     _map$2275 00EA                       _TMR1_SetInterruptHandler 1AF6  
                             ?_mbus_rx_handler 0070                              MCP3422_Read@count 0041  
                        _TMR1_InterruptHandler 005E                                _I2C_MasterClose 1A7D  
                I2C_SetAddressNackCallback@ptr 0031                                I2C_Open@address 002B  
                                     ___xxtofl 1252                                _I2C_MasterStart 1A83  
                              _I2C_MasterWrite 1AD3                            _get_ntc_temperature 0811  
                            ??_I2C_WriteNBytes 0040                                  ?_MCP3422_Read 0041  
                             ?_mbus_tx_handler 0070                                       __ptext10 1A9D  
                                     __ptext11 1C92                                       __ptext20 1B3D  
                                     __ptext12 1AF6                                       __ptext21 1B34  
                                     __ptext13 1C36                                     _T1GCONbits 0019  
                                     __ptext30 1BB5                                       __ptext22 1B2B  
                                     __ptext14 1AF0                                       __ptext31 1AD3  
                                     __ptext23 1B22                                       __ptext15 1C79  
                                     __ptext40 1DE5                                       __ptext32 1BC3  
                                     __ptext24 114B                                       __ptext16 1AEA  
                                     __ptext41 1E42                                       __ptext33 1D26  
                                     __ptext25 1252                                       __ptext17 1B4F  
                                     __ptext50 1B02                                       __ptext42 1AC9  
                                     __ptext34 1F0F                                       __ptext26 09A4  
                                     __ptext18 1F50                                       __ptext51 1F94  
                                     __ptext43 1AC4                                       __ptext35 1BA7  
                                     __ptext27 1D6A                                       __ptext19 1B46  
                                     __ptext60 1A99                                       __ptext52 100F  
                                     __ptext44 1ABF                                       __ptext36 1ACE  
                                     __ptext28 1000                                       __ptext61 1A8F  
                                     __ptext53 1B11                                       __ptext45 1ABA  
                                     __ptext37 1D47                                       __ptext29 1D8E  
                                     __ptext70 1BD5                                       __ptext62 1A95  
                                     __ptext54 1B19                                       __ptext46 1AB5  
                                     __ptext38 1B8C                                       __ptext71 1B99  
                                     __ptext63 1A8C                                       __ptext55 1AA1  
                                     __ptext47 1AB0                                       __ptext39 1AE4  
                                     __ptext80 1A7A                                       __ptext72 07D3  
                                     __ptext64 0002                                       __ptext56 1E73  
                                     __ptext48 1AAB                                       __ptext81 1C21  
                                     __ptext73 1C62                                       __ptext65 1A78  
                                     __ptext57 1A92                                       __ptext49 1AA6  
                                     __ptext90 1B7F                                       __ptext82 1068  
                                     __ptext74 1A89                                       __ptext66 1CAB  
                                     __ptext58 1ADE                                       __ptext91 0800  
                                     __ptext83 1CE5                                       __ptext75 1A86  
                                     __ptext67 1C0E                                       __ptext59 1AD8  
                                     __ptext92 1B72                                       __ptext84 1CC5  
                                     __ptext76 1A83                                       __ptext68 1BFB  
                                     __ptext93 1B59                                       __ptext77 1D05  
                                     __ptext69 1BE8                                       __ptext94 1B09  
                                     __ptext86 1E13                                       __ptext78 1A80  
                                     __ptext95 1B65                                       __ptext87 1EA5  
                                     __ptext79 1A7D                                       __ptext96 1A77  
                                     __ptext88 1418                                       __ptext89 1DB7  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
          __end_of_I2C_SetDataCompleteCallback 1BA7                    _I2C_SetDataCompleteCallback 1B99  
                      ?_I2C_DO_RX_NACK_RESTART 0070                                _modbusSlaveData 01A0  
                     __end_of_I2C_DO_SEND_STOP 1ABA           __end_of_TMR0_DefaultInterruptHandler 1A78  
                 _TMR0_DefaultInterruptHandler 1A77                        ?_EUSART_SetErrorHandler 002A  
                              _I2C_SetCallback 07D3                  ??_I2C_SetDataCompleteCallback 0032  
                         ?_get_ntc_temperature 00E3  EUSART_SetOverrunErrorHandler@interruptHandler 002A  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0048                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 1B34                  _EUSART_SetFramingErrorHandler 1B2B  
                                 _SSP1STATbits 0214                              ??_TMR1_WriteTimer 0072  
                     MCP3422_ReadVoltage@F4502 0055                       __end_of_I2C_MasterIsNack 1AE4  
       ModbusSlaveProcessReceivedQuery@u16Data 0023                              ?_FLASH_EraseBlock 002A  
                                     logf@F472 0051                       __end_of_I2C_MasterSetIrq 1A95  
                           ??_FLASH_EraseBlock 002C                                     _INTCONbits 000B  
                           I2C_WriteNBytes@len 003E                                ??_TMR0_CallBack 0070  
                               ??_MCP3422_Read 0042                                       logf@hfsq 013E  
               __end_of_I2C_DO_RX_NACK_RESTART 1AC9                                ??_TMR1_CallBack 0071  
                             MCP3422_Read@data 0045                                       intlevel1 0000  
                                  ?_I2C_Poller 0070                                     _PMCON1bits 0195  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 1B2B  
                          _I2C_DO_SEND_RESTART 1AB0           __end_of_EUSART_SetRxInterruptHandler 1B46  
                 _EUSART_SetRxInterruptHandler 1B3D                          ??_get_ntc_temperature 0051  
                ?_TMR0_DefaultInterruptHandler 0070  EUSART_SetFramingErrorHandler@interruptHandler 002A  
                      __end_of_I2C_MasterClose 1A80                        __end_of_I2C_MasterStart 1A86  
                      __end_of_I2C_MasterWrite 1AD8                                  __pstringtext1 1800  
                                __pstringtext2 1820                                  __pstringtext3 1824  
                                __pstringtext4 1828                                  __pstringtext5 182C  
                                __pstringtext6 1830                                  __pstringtext7 1834  
                       __Umul8_16@multiplicand 002A                           ?_I2C_DO_SEND_RESTART 0070  
                                   _OPTION_REG 0095                              MCP3422_Write@data 0042  
                              _TMR0_Initialize 1C36                                  ___fladd@signs 0048  
                      __end_of_I2C_SetCallback 07FE                 __end_of_PIN_MANAGER_Initialize 1C92  
                          calculate_crc@crcbit 0073                            calculate_crc@crcreg 0072  
                __end_of_rd1RegCompleteHandler 1BFB                                   ___fladd@aexp 0049  
                                 ___fladd@bexp 004A                          __end_of_calculate_crc 1DE5  
                         __Umul8_16@multiplier 0032                  __end_of_wr1RegCompleteHandler 1C21  
                              _TMR1_Initialize 1C92                              __Umul8_16@product 002E  
